{"id":"bddc59479331ebb8b1da1a422f3079a8","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@opengsn/contracts/src/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\nimport \"./utils/GsnTypes.sol\";\nimport \"./interfaces/IPaymaster.sol\";\nimport \"./interfaces/IRelayHub.sol\";\nimport \"./utils/GsnEip712Library.sol\";\nimport \"./forwarder/IForwarder.sol\";\n\n/**\n * @notice An abstract base class to be inherited by a concrete Paymaster.\n * A subclass must implement:\n *  - preRelayedCall\n *  - postRelayedCall\n */\nabstract contract BasePaymaster is IPaymaster, Ownable, ERC165 {\n    using ERC165Checker for address;\n\n    IRelayHub internal relayHub;\n    address private _trustedForwarder;\n\n    /// @inheritdoc IPaymaster\n    function getRelayHub() public override view returns (address) {\n        return address(relayHub);\n    }\n\n    //overhead of forwarder verify+signature, plus hub overhead.\n    uint256 constant public FORWARDER_HUB_OVERHEAD = 50000;\n\n    //These parameters are documented in IPaymaster.GasAndDataLimits\n    uint256 constant public PRE_RELAYED_CALL_GAS_LIMIT = 100000;\n    uint256 constant public POST_RELAYED_CALL_GAS_LIMIT = 110000;\n    uint256 constant public PAYMASTER_ACCEPTANCE_BUDGET = PRE_RELAYED_CALL_GAS_LIMIT + FORWARDER_HUB_OVERHEAD;\n    uint256 constant public CALLDATA_SIZE_LIMIT = 10500;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IPaymaster).interfaceId ||\n            interfaceId == type(Ownable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IPaymaster\n    function getGasAndDataLimits()\n    public\n    override\n    virtual\n    view\n    returns (\n        IPaymaster.GasAndDataLimits memory limits\n    ) {\n        return IPaymaster.GasAndDataLimits(\n            PAYMASTER_ACCEPTANCE_BUDGET,\n            PRE_RELAYED_CALL_GAS_LIMIT,\n            POST_RELAYED_CALL_GAS_LIMIT,\n            CALLDATA_SIZE_LIMIT\n        );\n    }\n\n    /**\n     * @notice this method must be called from preRelayedCall to validate that the forwarder\n     * is approved by the paymaster as well as by the recipient contract.\n     */\n    function _verifyForwarder(GsnTypes.RelayRequest calldata relayRequest)\n    internal\n    virtual\n    view\n    {\n        require(getTrustedForwarder() == relayRequest.relayData.forwarder, \"Forwarder is not trusted\");\n        GsnEip712Library.verifyForwarderTrusted(relayRequest);\n    }\n\n    function _verifyRelayHubOnly() internal virtual view {\n        require(msg.sender == getRelayHub(), \"can only be called by RelayHub\");\n    }\n\n    function _verifyValue(GsnTypes.RelayRequest calldata relayRequest) internal virtual view{\n        require(relayRequest.request.value == 0, \"value transfer not supported\");\n    }\n\n    function _verifyPaymasterData(GsnTypes.RelayRequest calldata relayRequest) internal virtual view {\n        require(relayRequest.relayData.paymasterData.length == 0, \"should have no paymasterData\");\n    }\n\n    function _verifyApprovalData(bytes calldata approvalData) internal virtual view{\n        require(approvalData.length == 0, \"should have no approvalData\");\n    }\n\n    /**\n     * @notice The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with.\n     * :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first.\n     */\n    function setRelayHub(IRelayHub hub) public onlyOwner {\n        require(address(hub).supportsInterface(type(IRelayHub).interfaceId), \"target is not a valid IRelayHub\");\n        relayHub = hub;\n    }\n\n    /**\n     * @notice The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.\n     * @notice the Recipients must trust this Forwarder as well in order for the configuration to remain functional.\n     */\n    function setTrustedForwarder(address forwarder) public virtual onlyOwner {\n        require(forwarder.supportsInterface(type(IForwarder).interfaceId), \"target is not a valid IForwarder\");\n        _trustedForwarder = forwarder;\n    }\n\n    function getTrustedForwarder() public virtual view override returns (address){\n        return _trustedForwarder;\n    }\n\n    /**\n     * @notice Any native Ether transferred into the paymaster is transferred as a deposit to the RelayHub.\n     * This way, we don't need to understand the RelayHub API in order to replenish the paymaster.\n     */\n    receive() external virtual payable {\n        require(address(relayHub) != address(0), \"relay hub address not set\");\n        relayHub.depositFor{value:msg.value}(address(this));\n    }\n\n    /**\n     * @notice Withdraw deposit from the RelayHub.\n     * @param amount The amount to be subtracted from the sender.\n     * @param target The target to which the amount will be transferred.\n     */\n    function withdrawRelayHubDepositTo(uint256 amount, address payable target) public onlyOwner {\n        relayHub.withdraw(target, amount);\n    }\n\n    /// @inheritdoc IPaymaster\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    override\n    returns (bytes memory, bool) {\n        _verifyRelayHubOnly();\n        _verifyForwarder(relayRequest);\n        _verifyValue(relayRequest);\n        _verifyPaymasterData(relayRequest);\n        _verifyApprovalData(approvalData);\n        return _preRelayedCall(relayRequest, signature, approvalData, maxPossibleGas);\n    }\n\n\n    /**\n     * @notice internal logic the paymasters need to provide to select which transactions they are willing to pay for\n     * @notice see the documentation for `IPaymaster::preRelayedCall` for details\n     */\n    function _preRelayedCall(\n        GsnTypes.RelayRequest calldata,\n        bytes calldata,\n        bytes calldata,\n        uint256\n    )\n    internal\n    virtual\n    returns (bytes memory, bool);\n\n    /// @inheritdoc IPaymaster\n    function postRelayedCall(\n        bytes calldata context,\n        bool success,\n        uint256 gasUseWithoutPost,\n        GsnTypes.RelayData calldata relayData\n    )\n    external\n    override\n    {\n        _verifyRelayHubOnly();\n        _postRelayedCall(context, success, gasUseWithoutPost, relayData);\n    }\n\n    /**\n     * @notice internal logic the paymasters need to provide if they need to take some action after the transaction\n     * @notice see the documentation for `IPaymaster::postRelayedCall` for details\n     */\n    function _postRelayedCall(\n        bytes calldata,\n        bool,\n        uint256,\n        GsnTypes.RelayData calldata\n    )\n    internal\n    virtual;\n}\n"},"@opengsn/contracts/src/ERC2771Recipient.sol":{"content":"// SPDX-License-Identifier: MIT\n// solhint-disable no-inline-assembly\npragma solidity >=0.6.9;\n\nimport \"./interfaces/IERC2771Recipient.sol\";\n\n/**\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\n *\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\n *\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\n *\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\n */\nabstract contract ERC2771Recipient is IERC2771Recipient {\n\n    /*\n     * Forwarder singleton we accept calls from\n     */\n    address private _trustedForwarder;\n\n    /**\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\n     * @return forwarder The address of the Forwarder contract that is being used.\n     */\n    function getTrustedForwarder() public virtual view returns (address forwarder){\n        return _trustedForwarder;\n    }\n\n    function _setTrustedForwarder(address _forwarder) internal {\n        _trustedForwarder = _forwarder;\n    }\n\n    /// @inheritdoc IERC2771Recipient\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\n        return forwarder == _trustedForwarder;\n    }\n\n    /// @inheritdoc IERC2771Recipient\n    function _msgSender() internal override virtual view returns (address ret) {\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\n            // At this point we know that the sender is a trusted forwarder,\n            // so we trust that the last bytes of msg.data are the verified sender address.\n            // extract sender address from the end of msg.data\n            assembly {\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\n            }\n        } else {\n            ret = msg.sender;\n        }\n    }\n\n    /// @inheritdoc IERC2771Recipient\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\n            return msg.data[0:msg.data.length-20];\n        } else {\n            return msg.data;\n        }\n    }\n}\n"},"@opengsn/contracts/src/forwarder/IForwarder.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\n/**\n * @title The Forwarder Interface\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\n *\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\n *\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\n * Recipient contracts should only trust forwarders that passed through security audit,\n * otherwise they are susceptible to identity theft.\n */\ninterface IForwarder is IERC165 {\n\n    /**\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\n     */\n    struct ForwardRequest {\n        address from;\n        address to;\n        uint256 value;\n        uint256 gas;\n        uint256 nonce;\n        bytes data;\n        uint256 validUntilTime;\n    }\n\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\n\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\n\n    /**\n     * @param from The address of a sender.\n     * @return The nonce for this address.\n     */\n    function getNonce(address from)\n    external view\n    returns(uint256);\n\n    /**\n     * @notice Verify the transaction is valid and can be executed.\n     * Implementations must validate the signature and the nonce of the request are correct.\n     * Does not revert and returns successfully if the input is valid.\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\n     */\n    function verify(\n        ForwardRequest calldata forwardRequest,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata signature\n    ) external view;\n\n    /**\n     * @notice Executes a transaction specified by the `ForwardRequest`.\n     * The transaction is first verified and then executed.\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\n     *\n     * This method would revert only in case of a verification error.\n     *\n     * All the target errors are reported using the returned success flag and returned bytes array.\n     *\n     * @param forwardRequest All requested transaction parameters.\n     * @param domainSeparator The domain used when signing this request.\n     * @param requestTypeHash The request type used when signing this request.\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\n     * @param signature The client signature to be validated.\n     *\n     * @return success The success flag of the underlying `CALL` to the target address.\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\n     */\n    function execute(\n        ForwardRequest calldata forwardRequest,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata signature\n    )\n    external payable\n    returns (bool success, bytes memory ret);\n\n    /**\n     * @notice Register a new Request typehash.\n     *\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\n     *\n     * @param typeName The name of the request type.\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\n     * The generic ForwardRequest type is always registered by the constructor.\n     */\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\n\n    /**\n     * @notice Register a new domain separator.\n     *\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\n     *\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\n     * This method accepts the domain name and version to create and register the domain separator value.\n     * @param name The domain's display name.\n     * @param version The domain/protocol version.\n     */\n    function registerDomainSeparator(string calldata name, string calldata version) external;\n}\n"},"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\n/**\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\n *\n * @notice A contract must implement this interface in order to support relayed transaction.\n *\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\n */\nabstract contract IERC2771Recipient {\n\n    /**\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n     * @param forwarder The address of the Forwarder contract that is being used.\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\n     */\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\n\n    /**\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\n     * @return sender The real sender of this call.\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\n     * Otherwise simply returns `msg.sender`.\n     */\n    function _msgSender() internal virtual view returns (address);\n\n    /**\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\n     * @return data The real `msg.data` of this call.\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\n     * of the `msg.data` - so this method will strip those 20 bytes off.\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\n     */\n    function _msgData() internal virtual view returns (bytes calldata);\n}\n"},"@opengsn/contracts/src/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\nimport \"../utils/GsnTypes.sol\";\n\n/**\n * @title The Paymaster Interface\n * @notice Contracts implementing this interface exist to make decision about paying the transaction fee to the relay.\n *\n * @notice There are two callbacks here that are executed by the RelayHub: `preRelayedCall` and `postRelayedCall`.\n *\n * @notice It is recommended that your implementation inherits from the abstract BasePaymaster contract.\n*/\ninterface IPaymaster is IERC165 {\n    /**\n     * @notice The limits this Paymaster wants to be imposed by the RelayHub on user input. See `getGasAndDataLimits`.\n     */\n    struct GasAndDataLimits {\n        uint256 acceptanceBudget;\n        uint256 preRelayedCallGasLimit;\n        uint256 postRelayedCallGasLimit;\n        uint256 calldataSizeLimit;\n    }\n\n    /**\n     * @notice Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster.\n     * This function allows different paymasters to have different properties without changes to the RelayHub.\n     * @return limits An instance of the `GasAndDataLimits` struct\n     *\n     * ##### `acceptanceBudget`\n     * If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what.\n     * Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense.\n     *\n     * Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request.\n     * This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract.\n     *\n     * :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit`\n     * (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions.\n     * If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \"griefing\" attack.\n     *\n     * The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated.\n     * From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay,\n     * since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts.\n     * Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config).\n     *\n     * ##### `preRelayedCallGasLimit`\n     * The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster.\n     * As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster.\n     *\n     * ##### `postRelayedCallGasLimit`\n     * The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas.\n     * Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway.\n     */\n    function getGasAndDataLimits()\n    external\n    view\n    returns (\n        GasAndDataLimits memory limits\n    );\n\n    /**\n     * @notice :warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\n     * @return trustedForwarder The address of the `Forwarder` that is trusted by this Paymaster to execute the requests.\n     */\n    function getTrustedForwarder() external view returns (address trustedForwarder);\n\n    /**\n     * @return relayHub The address of the `RelayHub` that is trusted by this Paymaster to execute the requests.\n     */\n    function getRelayHub() external view returns (address relayHub);\n\n    /**\n     * @notice Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that\n     * the Paymaster agrees to pay for this call.\n     *\n     * The request is considered to be rejected by the Paymaster in one of the following conditions:\n     *  - `preRelayedCall()` method reverts\n     *  - the `Forwarder` reverts because of nonce or signature error\n     *  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted\n     *    (and all that did not consume more than `acceptanceBudget` gas).\n     *\n     * In any of the above cases, all Paymaster calls and the recipient call are reverted.\n     * In any other case the Paymaster will pay for the gas cost of the transaction.\n     * Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\n     *\n\n     * @param relayRequest - the full relay request structure\n     * @param signature - user's EIP712-compatible signature of the `relayRequest`.\n     * Note that in most cases the paymaster shouldn't try use it at all. It is always checked\n     * by the forwarder immediately after preRelayedCall returns.\n     * @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\n     * @param maxPossibleGas - based on values returned from `getGasAndDataLimits`\n     * the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\n     * In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"\n     *\n     * @return context\n     * A byte array to be passed to postRelayedCall.\n     * Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\n     * @return rejectOnRecipientRevert\n     * The flag that allows a Paymaster to \"delegate\" the rejection to the recipient code.\n     * It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\n     * forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget,\n     * otherwise the TX is paid by the Paymaster.\n     * `true` if the Paymaster wants to reject the TX if the recipient reverts.\n     * `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster.\n     */\n    function preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    external\n    returns (bytes memory context, bool rejectOnRecipientRevert);\n\n    /**\n     * @notice This method is called after the actual relayed function call.\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\n     *\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\n     * is still committed to pay the relay for the entire transaction.\n     *\n     * @param context The call context, as returned by the preRelayedCall\n     * @param success `true` if the relayed call succeeded, false if it reverted\n     * @param gasUseWithoutPost The actual amount of gas used by the entire transaction, EXCEPT\n     *        the gas used by the postRelayedCall itself.\n     * @param relayData The relay params of the request. can be used by relayHub.calculateCharge()\n     *\n     */\n    function postRelayedCall(\n        bytes calldata context,\n        bool success,\n        uint256 gasUseWithoutPost,\n        GsnTypes.RelayData calldata relayData\n    ) external;\n\n    /**\n     * @return version The SemVer string of this Paymaster's version.\n     */\n    function versionPaymaster() external view returns (string memory);\n}\n"},"@opengsn/contracts/src/interfaces/IRelayHub.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\nimport \"../utils/GsnTypes.sol\";\nimport \"./IStakeManager.sol\";\n\n/**\n * @title The RelayHub interface\n * @notice The implementation of this interface provides all the information the GSN client needs to\n * create a valid `RelayRequest` and also serves as an entry point for such requests.\n *\n * @notice The RelayHub also handles all the related financial records and hold the balances of participants.\n * The Paymasters keep their Ether deposited in the `RelayHub` in order to pay for the `RelayRequest`s that thay choose\n * to pay for, and Relay Servers keep their earned Ether in the `RelayHub` until they choose to `withdraw()`\n *\n * @notice The RelayHub on each supported network only needs a single instance and there is usually no need for dApp\n * developers or Relay Server operators to redeploy, reimplement, modify or override the `RelayHub`.\n */\ninterface IRelayHub is IERC165 {\n    /**\n     * @notice A struct that contains all the parameters of the `RelayHub` that can be modified after the deployment.\n     */\n    struct RelayHubConfig {\n        // maximum number of worker accounts allowed per manager\n        uint256 maxWorkerCount;\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\n        uint256 gasReserve;\n        // Gas overhead to calculate gasUseWithoutPost\n        uint256 postOverhead;\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\n        uint256 gasOverhead;\n        // Minimum unstake delay seconds of a relay manager's stake on the StakeManager\n        uint256 minimumUnstakeDelay;\n        // Developers address\n        address devAddress;\n        // 0 < fee < 100, as percentage of total charge from paymaster to relayer\n        uint8 devFee;\n        // baseRelayFee The base fee the Relay Server charges for a single transaction in Ether, in wei.\n        uint80 baseRelayFee;\n        // pctRelayFee The percent of the total charge to add as a Relay Server fee to the total charge.\n        uint16 pctRelayFee;\n    }\n\n    /// @notice Emitted when a configuration of the `RelayHub` is changed\n    event RelayHubConfigured(RelayHubConfig config);\n\n    /// @notice Emitted when relays are added by a relayManager\n    event RelayWorkersAdded(\n        address indexed relayManager,\n        address[] newRelayWorkers,\n        uint256 workersCount\n    );\n\n    /// @notice Emitted when an account withdraws funds from the `RelayHub`.\n    event Withdrawn(\n        address indexed account,\n        address indexed dest,\n        uint256 amount\n    );\n\n    /// @notice Emitted when `depositFor` is called, including the amount and account that was funded.\n    event Deposited(\n        address indexed paymaster,\n        address indexed from,\n        uint256 amount\n    );\n\n    /// @notice Emitted for each token configured for staking in setMinimumStakes\n    event StakingTokenDataChanged(\n        address token,\n        uint256 minimumStake\n    );\n\n    /**\n     * @notice Emitted when an attempt to relay a call fails and the `Paymaster` does not accept the transaction.\n     * The actual relayed call was not executed, and the recipient not charged.\n     * @param reason contains a revert reason returned from preRelayedCall or forwarder.\n     */\n    event TransactionRejectedByPaymaster(\n        address indexed relayManager,\n        address indexed paymaster,\n        bytes32 indexed relayRequestID,\n        address from,\n        address to,\n        address relayWorker,\n        bytes4 selector,\n        uint256 innerGasUsed,\n        bytes reason\n    );\n\n    /**\n     * @notice Emitted when a transaction is relayed. Note that the actual internal function call might be reverted.\n     * The reason for a revert will be indicated in the `status` field of a corresponding `RelayCallStatus` value.\n     * @notice `charge` is the Ether value deducted from the `Paymaster` balance.\n     * The amount added to the `relayManager` balance will be lower if there is an activated `devFee` in the `config`.\n     */\n    event TransactionRelayed(\n        address indexed relayManager,\n        address indexed relayWorker,\n        bytes32 indexed relayRequestID,\n        address from,\n        address to,\n        address paymaster,\n        bytes4 selector,\n        RelayCallStatus status,\n        uint256 charge\n    );\n\n    /// @notice This event is emitted in case the internal function returns a value or reverts with a revert string.\n    event TransactionResult(\n        RelayCallStatus status,\n        bytes returnValue\n    );\n\n    /// @notice This event is emitted in case this `RelayHub` is deprecated and will stop serving transactions soon.\n    event HubDeprecated(uint256 deprecationTime);\n\n    /**\n     * @notice This event is emitted in case a `relayManager` has been deemed \"abandoned\" for being\n     * unresponsive for a prolonged period of time.\n     * @notice This event means the entire balance of the relay has been transferred to the `devAddress`.\n     */\n    event AbandonedRelayManagerBalanceEscheated(\n        address indexed relayManager,\n        uint256 balance\n    );\n\n    /**\n     * Error codes that describe all possible failure reasons reported in the `TransactionRelayed` event `status` field.\n     *  @param OK The transaction was successfully relayed and execution successful - never included in the event.\n     *  @param RelayedCallFailed The transaction was relayed, but the relayed call failed.\n     *  @param RejectedByPreRelayed The transaction was not relayed due to preRelatedCall reverting.\n     *  @param RejectedByForwarder The transaction was not relayed due to forwarder check (signature,nonce).\n     *  @param PostRelayedFailed The transaction was relayed and reverted due to postRelatedCall reverting.\n     *  @param PaymasterBalanceChanged The transaction was relayed and reverted due to the paymaster balance change.\n     */\n    enum RelayCallStatus {\n        OK,\n        RelayedCallFailed,\n        RejectedByPreRelayed,\n        RejectedByForwarder,\n        RejectedByRecipientRevert,\n        PostRelayedFailed,\n        PaymasterBalanceChanged\n    }\n\n    /**\n     * @notice Add new worker addresses controlled by the sender who must be a staked Relay Manager address.\n     * Emits a `RelayWorkersAdded` event.\n     * This function can be called multiple times, emitting new events.\n     */\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\n\n    /**\n     * @notice The `RelayRegistrar` callback to notify the `RelayHub` that this `relayManager` has updated registration.\n     */\n    function onRelayServerRegistered(address relayManager) external;\n\n    // Balance management\n\n    /**\n     * @notice Deposits ether for a `Paymaster`, so that it can and pay for relayed transactions.\n     * :warning: **Warning** :warning: Unused balance can only be withdrawn by the holder itself, by calling `withdraw`.\n     * Emits a `Deposited` event.\n     */\n    function depositFor(address target) external payable;\n\n    /**\n     * @notice Withdraws from an account's balance, sending it back to the caller.\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\n     * Emits a `Withdrawn` event.\n     */\n    function withdraw(address payable dest, uint256 amount) external;\n\n    /**\n     * @notice Withdraws from an account's balance, sending funds to multiple provided addresses.\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\n     * Emits a `Withdrawn` event for each destination.\n     */\n    function withdrawMultiple(address payable[] memory dest, uint256[] memory amount) external;\n\n    // Relaying\n\n\n    /**\n     * @notice Relays a transaction. For this to succeed, multiple conditions must be met:\n     *  - `Paymaster`'s `preRelayCall` method must succeed and not revert.\n     *  - the `msg.sender` must be a registered Relay Worker that the user signed to use.\n     *  - the transaction's gas fees must be equal or larger than the ones that were signed by the sender.\n     *  - the transaction must have enough gas to run all internal transactions if they use all gas available to them.\n     *  - the `Paymaster` must have enough balance to pay the Relay Worker if all gas is spent.\n     *\n     * @notice If all conditions are met, the call will be relayed and the `Paymaster` charged.\n     *\n     * @param domainSeparatorName The name of the Domain Separator used to verify the EIP-712 signature\n     * @param maxAcceptanceBudget The maximum valid value for `paymaster.getGasLimits().acceptanceBudget` to return.\n     * @param relayRequest All details of the requested relayed call.\n     * @param signature The client's EIP-712 signature over the `relayRequest` struct.\n     * @param approvalData The dapp-specific data forwarded to the `Paymaster`'s `preRelayedCall` method.\n     * This value is **not** verified by the `RelayHub` in any way.\n     * As an example, it can be used to pass some kind of a third-party signature to the `Paymaster` for verification.\n     *\n     * Emits a `TransactionRelayed` event regardless of whether the transaction succeeded or failed.\n     */\n    function relayCall(\n        string calldata domainSeparatorName,\n        uint256 maxAcceptanceBudget,\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData\n    )\n    external\n    returns (\n        bool paymasterAccepted,\n        uint256 charge,\n        IRelayHub.RelayCallStatus status,\n        bytes memory returnValue\n    );\n\n    /**\n     * @notice In case the Relay Worker has been found to be in violation of some rules by the `Penalizer` contract,\n     * the `Penalizer` will call this method to execute a penalization.\n     * The `RelayHub` will look up the Relay Manager of the given Relay Worker and will forward the call to\n     * the `StakeManager` contract. The `RelayHub` does not perform the actual penalization either.\n     * @param relayWorker The address of the Relay Worker that committed a penalizable offense.\n     * @param beneficiary The address that called the `Penalizer` and will receive a reward for it.\n     */\n    function penalize(address relayWorker, address payable beneficiary) external;\n\n    /**\n     * @notice Sets or changes the configuration of this `RelayHub`.\n     * @param _config The new configuration.\n     */\n    function setConfiguration(RelayHubConfig memory _config) external;\n\n    /**\n     * @notice Sets or changes the minimum amount of a given `token` that needs to be staked so that the Relay Manager\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\n     * @param token An array of addresses of ERC-20 compatible tokens.\n     * @param minimumStake An array of minimal amounts necessary for a corresponding token, in wei.\n     */\n    function setMinimumStakes(IERC20[] memory token, uint256[] memory minimumStake) external;\n\n    /**\n     * @notice Deprecate hub by reverting all incoming `relayCall()` calls starting from a given timestamp\n     * @param _deprecationTime The timestamp in seconds after which the `RelayHub` stops serving transactions.\n     */\n    function deprecateHub(uint256 _deprecationTime) external;\n\n    /**\n     * @notice\n     * @param relayManager\n     */\n    function escheatAbandonedRelayBalance(address relayManager) external;\n\n    /**\n     * @notice The fee is expressed as a base fee in wei plus percentage of the actual charge.\n     * For example, a value '40' stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\n     * @param gasUsed An amount of gas used by the transaction.\n     * @param relayData The details of a transaction signed by the sender.\n     * @return The calculated charge, in wei.\n     */\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\n\n    /**\n     * @notice The fee is expressed as a  percentage of the actual charge.\n     * For example, a value '40' stands for a 40% fee, so the Relay Manager will only get 60% of the `charge`.\n     * @param charge The amount of Ether in wei the Paymaster will be charged for this transaction.\n     * @return The calculated devFee, in wei.\n     */\n    function calculateDevCharge(uint256 charge) external view returns (uint256);\n    /* getters */\n\n    /// @return config The configuration of the `RelayHub`.\n    function getConfiguration() external view returns (RelayHubConfig memory config);\n\n    /**\n     * @param token An address of an ERC-20 compatible tokens.\n     * @return The minimum amount of a given `token` that needs to be staked so that the Relay Manager\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\n     */\n    function getMinimumStakePerToken(IERC20 token) external view returns (uint256);\n\n    /**\n     * @param worker An address of the Relay Worker.\n     * @return The address of its Relay Manager.\n     */\n    function getWorkerManager(address worker) external view returns (address);\n\n    /**\n     * @param manager An address of the Relay Manager.\n     * @return The count of Relay Workers associated with this Relay Manager.\n     */\n    function getWorkerCount(address manager) external view returns (uint256);\n\n    /// @return An account's balance. It can be either a deposit of a `Paymaster`, or a revenue of a Relay Manager.\n    function balanceOf(address target) external view returns (uint256);\n\n    /// @return The `StakeManager` address for this `RelayHub`.\n    function getStakeManager() external view returns (IStakeManager);\n\n    /// @return The `Penalizer` address for this `RelayHub`.\n    function getPenalizer() external view returns (address);\n\n    /// @return The `RelayRegistrar` address for this `RelayHub`.\n    function getRelayRegistrar() external view returns (address);\n\n    /// @return The `BatchGateway` address for this `RelayHub`.\n    function getBatchGateway() external view returns (address);\n\n    /**\n     * @notice Uses `StakeManager` to decide if the Relay Manager can be considered staked or not.\n     * Returns if the stake's token, amount and delay satisfy all requirements, reverts otherwise.\n     */\n    function verifyRelayManagerStaked(address relayManager) external view;\n\n    /**\n     * @notice Uses `StakeManager` to check if the Relay Manager can be considered abandoned or not.\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\n     */\n    function isRelayEscheatable(address relayManager) external view returns (bool);\n\n    /// @return `true` if the `RelayHub` is deprecated, `false` it it is not deprecated and can serve transactions.\n    function isDeprecated() external view returns (bool);\n\n    /// @return The timestamp from which the hub no longer allows relaying calls.\n    function getDeprecationTime() external view returns (uint256);\n\n    /// @return The block number in which the contract has been deployed.\n    function getCreationBlock() external view returns (uint256);\n\n    /// @return a SemVer-compliant version of the `RelayHub` contract.\n    function versionHub() external view returns (string memory);\n\n    /// @return A total measurable amount of gas left to current execution. Same as 'gasleft()' for pure EVMs.\n    function aggregateGasleft() external view returns (uint256);\n}\n\n"},"@opengsn/contracts/src/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @title The StakeManager Interface\n * @notice In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires\n * the Relay Server to maintain a permanently locked stake in the system before being able to register.\n *\n * @notice Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract.\n * In such case, the stake will never be returned to the Relay Server operator and will be slashed.\n *\n * @notice An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token.\n * Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed.\n */\ninterface IStakeManager is IERC165 {\n\n    /// @notice Emitted when a `stake` or `unstakeDelay` are initialized or increased.\n    event StakeAdded(\n        address indexed relayManager,\n        address indexed owner,\n        IERC20 token,\n        uint256 stake,\n        uint256 unstakeDelay\n    );\n\n    /// @notice Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(\n        address indexed relayManager,\n        address indexed owner,\n        uint256 withdrawTime\n    );\n\n    /// @notice Emitted when owner withdraws `relayManager` funds.\n    event StakeWithdrawn(\n        address indexed relayManager,\n        address indexed owner,\n        IERC20 token,\n        uint256 amount\n    );\n\n    /// @notice Emitted when an authorized `RelayHub` penalizes a `relayManager`.\n    event StakePenalized(\n        address indexed relayManager,\n        address indexed beneficiary,\n        IERC20 token,\n        uint256 reward\n    );\n\n    /// @notice Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized.\n    event HubAuthorized(\n        address indexed relayManager,\n        address indexed relayHub\n    );\n\n    /// @notice Emitted when a `relayManager` removes a `RelayHub` from a list of authorized.\n    event HubUnauthorized(\n        address indexed relayManager,\n        address indexed relayHub,\n        uint256 removalTime\n    );\n\n    /// @notice Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking.\n    event OwnerSet(\n        address indexed relayManager,\n        address indexed owner\n    );\n\n    /// @notice Emitted when a `burnAddress` is changed.\n    event BurnAddressSet(\n        address indexed burnAddress\n    );\n\n    /// @notice Emitted when a `devAddress` is changed.\n    event DevAddressSet(\n        address indexed devAddress\n    );\n\n    /// @notice Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal.\n    event RelayServerAbandoned(\n        address indexed relayManager,\n        uint256 abandonedTime\n    );\n\n    /// @notice Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned.\n    event RelayServerKeepalive(\n        address indexed relayManager,\n        uint256 keepaliveTime\n    );\n\n    /// @notice Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`.\n    event AbandonedRelayManagerStakeEscheated(\n        address indexed relayManager,\n        address indexed owner,\n        IERC20 token,\n        uint256 amount\n    );\n\n    /**\n     * @param stake - amount of ether staked for this relay\n     * @param unstakeDelay - number of seconds to elapse before the owner can retrieve the stake after calling 'unlock'\n     * @param withdrawTime - timestamp in seconds when 'withdraw' will be callable, or zero if the unlock has not been called\n     * @param owner - address that receives revenue and manages relayManager's stake\n     */\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelay;\n        uint256 withdrawTime;\n        uint256 abandonedTime;\n        uint256 keepaliveTime;\n        IERC20 token;\n        address owner;\n    }\n\n    struct RelayHubInfo {\n        uint256 removalTime;\n    }\n\n    /**\n     * @param devAddress - the address that will receive the 'abandoned' stake\n     * @param abandonmentDelay - the amount of time after which the relay can be marked as 'abandoned'\n     * @param escheatmentDelay - the amount of time after which the abandoned relay's stake and balance may be withdrawn to the `devAddress`\n     */\n    struct AbandonedRelayServerConfig {\n        address devAddress;\n        uint256 abandonmentDelay;\n        uint256 escheatmentDelay;\n    }\n\n    /**\n     * @notice Set the owner of a Relay Manager. Called only by the RelayManager itself.\n     * Note that owners cannot transfer ownership - if the entry already exists, reverts.\n     * @param owner - owner of the relay (as configured off-chain)\n     */\n    function setRelayManagerOwner(address owner) external;\n\n    /**\n     * @notice Put a stake for a relayManager and set its unstake delay.\n     * Only the owner can call this function. If the entry does not exist, reverts.\n     * The owner must give allowance of the ERC-20 token to the StakeManager before calling this method.\n     * It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.\n     * @param token The address of an ERC-20 token that is used by the relayManager as a stake\n     * @param relayManager The address that represents a stake entry and controls relay registrations on relay hubs\n     * @param unstakeDelay The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`\n     * @param amount The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake\n     */\n    function stakeForRelayManager(IERC20 token, address relayManager, uint256 unstakeDelay, uint256 amount) external;\n\n    /**\n     * @notice Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.\n     * @param relayManager The address of a Relay Manager whose stake is to be unlocked.\n     */\n    function unlockStake(address relayManager) external;\n    /**\n     * @notice Withdraw the unlocked stake.\n     * @param relayManager The address of a Relay Manager whose stake is to be withdrawn.\n     */\n    function withdrawStake(address relayManager) external;\n\n    /**\n     * @notice Add the `RelayHub` to a list of authorized by this Relay Manager.\n     * This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.\n     * @param relayManager The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.\n     * @param relayHub The address of a `RelayHub` to be authorized.\n     */\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\n\n    /**\n     * @notice Same as `authorizeHubByOwner` but can be called by the RelayManager itself.\n     */\n    function authorizeHubByManager(address relayHub) external;\n\n    /**\n     * @notice Remove the `RelayHub` from a list of authorized by this Relay Manager.\n     * @param relayManager The address of a Relay Manager.\n     * @param relayHub The address of a `RelayHub` to be unauthorized.\n     */\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\n\n    /**\n     * @notice Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself.\n     */\n    function unauthorizeHubByManager(address relayHub) external;\n\n    /**\n     * Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.\n     * @param relayManager The address of a Relay Manager to be penalized.\n     * @param beneficiary The address that receives part of the penalty amount.\n     * @param amount A total amount of penalty to be withdrawn from stake.\n     */\n    function penalizeRelayManager(address relayManager, address beneficiary, uint256 amount) external;\n\n    /**\n     * @notice Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay.\n     * Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned.\n     */\n    function markRelayAbandoned(address relayManager) external;\n\n    /**\n     * @notice If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager\n     * has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and\n     * balance will be taken from this relay.\n     */\n    function escheatAbandonedRelayStake(address relayManager) external;\n\n    /**\n     * @notice Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned.\n     * Can be called by an authorized `RelayHub` or by the `relayOwner` address.\n     */\n    function updateRelayKeepaliveTime(address relayManager) external;\n\n    /**\n     * @notice Check if the Relay Manager can be considered abandoned or not.\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\n     */\n    function isRelayEscheatable(address relayManager) external view returns(bool);\n\n    /**\n     * @notice Get the stake details information for the given Relay Manager.\n     * @param relayManager The address of a Relay Manager.\n     * @return stakeInfo The `StakeInfo` structure.\n     * @return isSenderAuthorizedHub `true` if the `msg.sender` for this call was a `RelayHub` that is authorized now.\n     * `false` if the `msg.sender` for this call is not authorized.\n     */\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo, bool isSenderAuthorizedHub);\n\n    /**\n     * @return The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake.\n     */\n    function getMaxUnstakeDelay() external view returns (uint256);\n\n    /**\n     * @notice Change the address that will receive the 'burned' part of the penalized stake.\n     * This is done to prevent malicious Relay Server from penalizing itself and breaking even.\n     */\n    function setBurnAddress(address _burnAddress) external;\n\n    /**\n     * @return The address that will receive the 'burned' part of the penalized stake.\n     */\n    function getBurnAddress() external view returns (address);\n\n    /**\n     * @notice Change the address that will receive the 'abandoned' stake.\n     * This is done to prevent Relay Servers that lost their keys from losing access to funds.\n     */\n    function setDevAddress(address _burnAddress) external;\n\n    /**\n     * @return The structure that contains all configuration values for the 'abandoned' stake.\n     */\n    function getAbandonedRelayServerConfig() external view returns (AbandonedRelayServerConfig memory);\n\n    /**\n     * @return the block number in which the contract has been deployed.\n     */\n    function getCreationBlock() external view returns (uint256);\n\n    /**\n     * @return a SemVer-compliant version of the `StakeManager` contract.\n     */\n    function versionSM() external view returns (string memory);\n}\n"},"@opengsn/contracts/src/utils/GsnEip712Library.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport \"../utils/GsnTypes.sol\";\nimport \"../interfaces/IERC2771Recipient.sol\";\nimport \"../forwarder/IForwarder.sol\";\n\nimport \"./GsnUtils.sol\";\n\n/**\n * @title The ERC-712 Library for GSN\n * @notice Bridge Library to convert a GSN RelayRequest into a valid `ForwardRequest` for a `Forwarder`.\n */\nlibrary GsnEip712Library {\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\n    uint256 private constant MAX_RETURN_SIZE = 1024;\n\n    //copied from Forwarder (can't reference string constants even from another library)\n    string public constant GENERIC_PARAMS = \"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntilTime\";\n\n    bytes public constant RELAYDATA_TYPE = \"RelayData(uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 transactionCalldataGasUsed,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\";\n\n    string public constant RELAY_REQUEST_NAME = \"RelayRequest\";\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\"RelayData relayData)\", RELAYDATA_TYPE));\n\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\n        RELAY_REQUEST_NAME,\"(\",GENERIC_PARAMS,\",\", RELAY_REQUEST_SUFFIX);\n\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\n\n\n    struct EIP712Domain {\n        string name;\n        string version;\n        uint256 chainId;\n        address verifyingContract;\n    }\n\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\n        \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n    );\n\n    function splitRequest(\n        GsnTypes.RelayRequest calldata req\n    )\n    internal\n    pure\n    returns (\n        bytes memory suffixData\n    ) {\n        suffixData = abi.encode(\n            hashRelayData(req.relayData));\n    }\n\n    //verify that the recipient trusts the given forwarder\n    // MUST be called by paymaster\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\n            abi.encodeWithSelector(\n                IERC2771Recipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\n            )\n        );\n        require(success, \"isTrustedForwarder: reverted\");\n        require(ret.length == 32, \"isTrustedForwarder: bad response\");\n        require(abi.decode(ret, (bool)), \"invalid forwarder for recipient\");\n    }\n\n    function verifySignature(\n        string memory domainSeparatorName,\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature\n    ) internal view {\n        (bytes memory suffixData) = splitRequest(relayRequest);\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\n    }\n\n    function verify(\n        string memory domainSeparatorName,\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature\n    ) internal view {\n        verifyForwarderTrusted(relayRequest);\n        verifySignature(domainSeparatorName, relayRequest, signature);\n    }\n\n    function execute(\n        string memory domainSeparatorName,\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature\n    ) internal returns (\n        bool forwarderSuccess,\n        bool callSuccess,\n        bytes memory ret\n    ) {\n        (bytes memory suffixData) = splitRequest(relayRequest);\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\n        /* solhint-disable-next-line avoid-low-level-calls */\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\n            abi.encodeWithSelector(IForwarder.execute.selector,\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\n        ));\n        if ( forwarderSuccess ) {\n\n          //decode return value of execute:\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\n        }\n        truncateInPlace(ret);\n    }\n\n    //truncate the given parameter (in-place) if its length is above the given maximum length\n    // do nothing otherwise.\n    //NOTE: solidity warns unless the method is marked \"pure\", but it DOES modify its parameter.\n    function truncateInPlace(bytes memory data) internal pure {\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\n    }\n\n    function domainSeparator(string memory name, address forwarder) internal view returns (bytes32) {\n        return hashDomain(EIP712Domain({\n            name : name,\n            version : \"3\",\n            chainId : getChainID(),\n            verifyingContract : forwarder\n            }));\n    }\n\n    function getChainID() internal view returns (uint256 id) {\n        /* solhint-disable no-inline-assembly */\n        assembly {\n            id := chainid()\n        }\n    }\n\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n                EIP712DOMAIN_TYPEHASH,\n                keccak256(bytes(req.name)),\n                keccak256(bytes(req.version)),\n                req.chainId,\n                req.verifyingContract));\n    }\n\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n                RELAYDATA_TYPEHASH,\n                req.maxFeePerGas,\n                req.maxPriorityFeePerGas,\n                req.transactionCalldataGasUsed,\n                req.relayWorker,\n                req.paymaster,\n                req.forwarder,\n                keccak256(req.paymasterData),\n                req.clientId\n            ));\n    }\n}\n"},"@opengsn/contracts/src/utils/GsnTypes.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../forwarder/IForwarder.sol\";\n\ninterface GsnTypes {\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\n    struct RelayData {\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        uint256 transactionCalldataGasUsed;\n        address relayWorker;\n        address paymaster;\n        address forwarder;\n        bytes paymasterData;\n        uint256 clientId;\n    }\n\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\n    struct RelayRequest {\n        IForwarder.ForwardRequest request;\n        RelayData relayData;\n    }\n}\n"},"@opengsn/contracts/src/utils/GsnUtils.sol":{"content":"/* solhint-disable no-inline-assembly */\n// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../utils/MinLibBytes.sol\";\nimport \"./GsnTypes.sol\";\n\n/**\n * @title The GSN Solidity Utils Library\n * @notice Some library functions used throughout the GSN Solidity codebase.\n */\nlibrary GsnUtils {\n\n    bytes32 constant private RELAY_REQUEST_ID_MASK = 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n\n    /**\n     * @notice Calculate an identifier for the meta-transaction in a format similar to a transaction hash.\n     * Note that uniqueness relies on signature and may not be enforced if meta-transactions are verified\n     * with a different algorithm, e.g. when batching.\n     * @param relayRequest The `RelayRequest` for which an ID is being calculated.\n     * @param signature The signature for the `RelayRequest`. It is not validated here and may even remain empty.\n     */\n    function getRelayRequestID(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature)\n    internal\n    pure\n    returns (bytes32) {\n        return keccak256(abi.encode(relayRequest.request.from, relayRequest.request.nonce, signature)) & RELAY_REQUEST_ID_MASK;\n    }\n\n    /**\n     * @notice Extract the method identifier signature from the encoded function call.\n     */\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\n        return MinLibBytes.readBytes4(msgData, 0);\n    }\n\n    /**\n     * @notice Extract a parameter from encoded-function block.\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\n     * The return value should be casted to the right type (`uintXXX`/`bytesXXX`/`address`/`bool`/`enum`).\n     * @param msgData Byte array containing a uint256 value.\n     * @param index Index in byte array of uint256 value.\n     * @return result uint256 value from byte array.\n     */\n    function getParam(bytes memory msgData, uint256 index) internal pure returns (uint256 result) {\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\n    }\n\n    /// @notice Re-throw revert with the same revert data.\n    function revertWithData(bytes memory data) internal pure {\n        assembly {\n            revert(add(data,32), mload(data))\n        }\n    }\n\n}\n"},"@opengsn/contracts/src/utils/MinLibBytes.sol":{"content":"// SPDX-License-Identifier: MIT\n// minimal bytes manipulation required by GSN\n// a minimal subset from 0x/LibBytes\n/* solhint-disable no-inline-assembly */\npragma solidity ^0.8.0;\n\nlibrary MinLibBytes {\n\n    //truncate the given parameter (in-place) if its length is above the given maximum length\n    // do nothing otherwise.\n    //NOTE: solidity warns unless the method is marked \"pure\", but it DOES modify its parameter.\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\n        if (data.length > maxlen) {\n            assembly { mstore(data, maxlen) }\n        }\n    }\n\n    /// @dev Reads an address from a position in a byte array.\n    /// @param b Byte array containing an address.\n    /// @param index Index in byte array of address.\n    /// @return result address from byte array.\n    function readAddress(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (address result)\n    {\n        require (b.length >= index + 20, \"readAddress: data too short\");\n\n        // Add offset to index:\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\n        index += 20;\n\n        // Read address from array memory\n        assembly {\n            // 1. Add index to address of bytes array\n            // 2. Load 32-byte word from memory\n            // 3. Apply 20-byte mask to obtain address\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n        return result;\n    }\n\n    function readBytes32(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes32 result)\n    {\n        require(b.length >= index + 32, \"readBytes32: data too short\" );\n\n        // Read the bytes32 from array memory\n        assembly {\n            result := mload(add(b, add(index,32)))\n        }\n        return result;\n    }\n\n    /// @dev Reads a uint256 value from a position in a byte array.\n    /// @param b Byte array containing a uint256 value.\n    /// @param index Index in byte array of uint256 value.\n    /// @return result uint256 value from byte array.\n    function readUint256(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (uint256 result)\n    {\n        result = uint256(readBytes32(b, index));\n        return result;\n    }\n\n    function readBytes4(\n        bytes memory b,\n        uint256 index\n    )\n        internal\n        pure\n        returns (bytes4 result)\n    {\n        require(b.length >= index + 4, \"readBytes4: data too short\");\n\n        // Read the bytes4 from array memory\n        assembly {\n            result := mload(add(b, add(index,32)))\n            // Solidity does not require us to clean the trailing bytes.\n            // We do it anyway\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\n        }\n        return result;\n    }\n}\n"},"@opengsn/paymasters/contracts/WhitelistPaymaster.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@opengsn/contracts/src/BasePaymaster.sol\";\n\n/// A sample paymaster that has whitelists for senders, targets and methods.\n/// - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed.\n/// - if at least one target is whitelisted, then ONLY whitelisted targets are allowed.\ncontract WhitelistPaymaster is BasePaymaster {\n\n    bool public useSenderWhitelist;\n    bool public useTargetWhitelist;\n    bool public useMethodWhitelist;\n    bool public useRejectOnRecipientRevert;\n    mapping(address => bool) public senderWhitelist;\n    mapping(address => bool) public targetWhitelist;\n    mapping(address => mapping(bytes4 => bool)) public methodWhitelist;\n\n    function versionPaymaster() external view override virtual returns (string memory){\n        return \"3.0.0-beta.3+opengsn.whitelist.ipaymaster\";\n    }\n\n    function whitelistSender(address sender, bool isAllowed) public onlyOwner {\n        senderWhitelist[sender] = isAllowed;\n    }\n\n    function whitelistTarget(address target, bool isAllowed) public onlyOwner {\n        targetWhitelist[target] = isAllowed;\n    }\n\n    function whitelistMethod(address target, bytes4 method, bool isAllowed) public onlyOwner {\n        methodWhitelist[target][method] = isAllowed;\n    }\n\n    function setConfiguration(\n        bool _useSenderWhitelist,\n        bool _useTargetWhitelist,\n        bool _useMethodWhitelist,\n        bool _useRejectOnRecipientRevert\n    ) public onlyOwner {\n        useSenderWhitelist = _useSenderWhitelist;\n        useTargetWhitelist = _useTargetWhitelist;\n        useMethodWhitelist = _useMethodWhitelist;\n        useRejectOnRecipientRevert = _useRejectOnRecipientRevert;\n    }\n\n    function _preRelayedCall(\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        bytes calldata approvalData,\n        uint256 maxPossibleGas\n    )\n    internal\n    override\n    virtual\n    returns (bytes memory context, bool revertOnRecipientRevert) {\n        (signature, maxPossibleGas);\n        require(approvalData.length == 0, \"approvalData: invalid length\");\n        require(relayRequest.relayData.paymasterData.length == 0, \"paymasterData: invalid length\");\n\n        if (useSenderWhitelist) {\n            address sender = relayRequest.request.from;\n            require(senderWhitelist[sender], \"sender not whitelisted\");\n        }\n\n        if (useTargetWhitelist) {\n            address target = relayRequest.request.to;\n            require(targetWhitelist[target], \"target not whitelisted\");\n        }\n\n        if (useMethodWhitelist) {\n            address target = relayRequest.request.to;\n            bytes4 method = GsnUtils.getMethodSig(relayRequest.request.data);\n            require(methodWhitelist[target][method], \"method not whitelisted\");\n        }\n\n        return (\"\", useRejectOnRecipientRevert);\n    }\n\n    function _postRelayedCall(\n        bytes calldata context,\n        bool success,\n        uint256 gasUseWithoutPost,\n        GsnTypes.RelayData calldata relayData\n    )\n    internal\n    override\n    virtual {\n        (context, success, gasUseWithoutPost, relayData);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds)\n        internal\n        view\n        returns (bool[] memory)\n    {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/EnergyToken.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Energy_Token is ERC20 {\n    /*\n        Initial Supply is 50 ,- 50 WEI\n        Initial supply 50e18\n        or, 50*10**18\n    */\n    constructor() ERC20(\"Enery Token\", \"UNIT\") {}\n}\n"},"contracts/EnergyTrade.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.7;\r\n\r\nimport \"./EnergyToken.sol\";\r\nimport \"./PriceConverter.sol\";\r\nimport \"./MultiSig.sol\";\r\n\r\ncontract EnergyTrade is Energy_Token, PriceConverter, MultiSig {\r\n    /*************Global Variables************/\r\n\r\n    address escrowAccount; //Address of the Deployed Smart Contract\r\n    uint256 EnergyUnitPrice_usd;\r\n    uint256 EnergyUnitPrice_matic;\r\n\r\n    /****************Constructor************/\r\n\r\n    constructor(\r\n        address forwarder,\r\n        address[] memory _owners,\r\n        uint256 _required\r\n    ) MultiSig(forwarder, _owners, _required) {\r\n        escrowAccount = address(this);\r\n    }\r\n\r\n    /****************Events**************************************/\r\n\r\n    event EnergyListed(\r\n        uint256 indexed sellerID,\r\n        uint256 unitEnergyPriceUSD,\r\n        uint256 unitEnergyPriceMatic,\r\n        uint256 listedEnergyToken\r\n    );\r\n\r\n    event EnergyBought(\r\n        uint256 indexed sellerID,\r\n        uint256 indexed buyerID,\r\n        uint256 indexed unitEnergyPriceUSD,\r\n        uint256 unitEnergyPriceMatic,\r\n        uint256 boughtEnergyToken\r\n    );\r\n\r\n    function _msgSender() internal view override(Context, ERC2771Recipient) returns (address) {\r\n        return ERC2771Recipient._msgSender();\r\n    }\r\n\r\n    function _msgData() internal view override(Context, ERC2771Recipient) returns (bytes calldata) {\r\n        return ERC2771Recipient._msgData();\r\n    }\r\n\r\n    /***************General View Functions***********************/\r\n\r\n    function viewEscrowBalance() public view returns (uint256, uint256) {\r\n        return (address(this).balance, balanceOf(escrowAccount));\r\n    }\r\n\r\n    function viewMaticBalance() public view returns (uint256) {\r\n        return msg.sender.balance;\r\n    }\r\n\r\n    function viewEnergyBalance() public view returns (uint256) {\r\n        return balanceOf(msg.sender);\r\n    }\r\n\r\n    /********************TRADING FUNCTION FOR PROSUMERS**********************************/\r\n\r\n    /*-------------------Producer--------------------------------------------------------------*/\r\n\r\n    //--> 1. Set Energy Unit Price for 1 Unit of Energy\r\n    function setUnitPrice(uint256 price) private onlyProsumer returns (uint256) {\r\n        /* Take Price input as 1e16 */\r\n\r\n        EnergyUnitPrice_usd = price;\r\n        uint256 latestMaticPrice = uint(getLatestPrice());\r\n        EnergyUnitPrice_matic = (price / latestMaticPrice) * 1e10;\r\n        /*------- 1e16/1e8 * 1e10 = 1e18 ----- ------------------*/\r\n\r\n        return EnergyUnitPrice_matic;\r\n    }\r\n\r\n    //--> 2. List Energy for Sale\r\n    function listEnergy(\r\n        uint256 unitEnergyPrice,\r\n        uint256 excessEnergyToken\r\n    ) public onlyProsumer isNotSuspended returns (uint256) {\r\n        require(\r\n            ApprovedProsumers[prosumerID[msg.sender] - 1]._stakedEnergyBalance == 0,\r\n            \"You have Already Staked Energy\"\r\n        );\r\n\r\n        uint256 ad_placerID = prosumerID[msg.sender];\r\n\r\n        ApprovedProsumers[ad_placerID - 1]._energyUnitPriceUSD = unitEnergyPrice;\r\n        ApprovedProsumers[ad_placerID - 1]._energyUnitPriceMatic = (setUnitPrice(unitEnergyPrice));\r\n        ApprovedProsumers[ad_placerID - 1]._stakedEnergyBalance = excessEnergyToken;\r\n\r\n        transfer(escrowAccount, excessEnergyToken);\r\n\r\n        emit EnergyListed(\r\n            ad_placerID,\r\n            ApprovedProsumers[ad_placerID - 1]._energyUnitPriceUSD,\r\n            ApprovedProsumers[ad_placerID - 1]._energyUnitPriceMatic,\r\n            excessEnergyToken\r\n        );\r\n\r\n        return ad_placerID;\r\n    }\r\n\r\n    //--> 3. Set Unit Price for 1 Unit of Energy in Matic\r\n    function mySetUnitPrice_Matic() public view onlyProsumer returns (uint256) {\r\n        return ApprovedProsumers[prosumerID[msg.sender] - 1]._energyUnitPriceMatic;\r\n    }\r\n\r\n    //--> 4. Set Unit Price for 1 Unit of Energy in USD\r\n    function mySetUnitPrice_USD() public view onlyProsumer returns (uint256) {\r\n        return ApprovedProsumers[prosumerID[msg.sender] - 1]._energyUnitPriceUSD;\r\n    }\r\n\r\n    //--> 5. Mint Energy Token\r\n    function produceEnergy(uint256 energyProduced) public onlyProsumer isNotSuspended {\r\n        _mint(msg.sender, energyProduced);\r\n    }\r\n\r\n    //--> 6. Burn Energy Token\r\n    function burnEnergy(uint256 energyBurned) public onlyProsumer isNotSuspended {\r\n        _burn(msg.sender, energyBurned);\r\n    }\r\n\r\n    /*-------------------Consumer--------------------------------------------------------------*/\r\n\r\n    //--> 1. Buy Energy\r\n    function buyEnergy(\r\n        uint256 producerID,\r\n        uint256 energy_need\r\n    ) public payable onlyProsumer isNotSuspended {\r\n        uint256 MinPayableAmount = ApprovedProsumers[producerID - 1]._energyUnitPriceMatic *\r\n            energy_need;\r\n        require(msg.value >= MinPayableAmount, \"Didn't send enough Matic!\");\r\n        require(\r\n            energy_need <= ApprovedProsumers[producerID - 1]._stakedEnergyBalance,\r\n            \"Selected Producer do have enough Enough Energy Balance\"\r\n        );\r\n\r\n        // State Change Before Transfer to avoid Re-entrancy Attack\r\n        ApprovedProsumers[producerID - 1]._stakedEnergyBalance =\r\n            ApprovedProsumers[producerID - 1]._stakedEnergyBalance -\r\n            energy_need;\r\n\r\n        //Transfer Energy to Consumer\r\n        _transfer(escrowAccount, msg.sender, energy_need);\r\n\r\n        //Transfer Matic to Producer\r\n        (bool callSuccess, ) = payable(prosumerAddress[producerID]).call{value: MinPayableAmount}(\r\n            \"\"\r\n        );\r\n\r\n        require(callSuccess, \"call failed\");\r\n\r\n        emit EnergyBought(\r\n            producerID,\r\n            prosumerID[msg.sender],\r\n            ApprovedProsumers[producerID - 1]._energyUnitPriceUSD,\r\n            ApprovedProsumers[producerID - 1]._energyUnitPriceMatic,\r\n            energy_need\r\n        );\r\n    }\r\n\r\n    /****************Modifiers************/\r\n\r\n    modifier onlyProsumer() {\r\n        require(isProsumer[msg.sender], \"Not Prosumer\");\r\n        _;\r\n    }\r\n\r\n    modifier isNotSuspended() {\r\n        require(!ApprovedProsumers[prosumerID[msg.sender] - 1]._suspended, \"You are Suspended\");\r\n        _;\r\n    }\r\n}\r\n"},"contracts/import.sol":{"content":"/**\n * SPDX-License-Identifier:MIT\n */\n\npragma solidity ^0.8.7;\n\nimport \"@opengsn/paymasters/contracts/WhitelistPaymaster.sol\";\n// import \"@opengsn/contracts/src/RelayHub.sol\";\n"},"contracts/MultiSig.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.7;\nimport \"@opengsn/contracts/src/ERC2771Recipient.sol\";\n\n//GSN ENABLED CONTRACT\n\ncontract MultiSig is ERC2771Recipient {\n    /*************Global Variables************/\n\n    uint256 public required;\n    uint256 public regFee;\n\n    address[] public owners;\n\n    mapping(address => bool) public isOwner;\n    mapping(address => mapping(address => bool)) public approved; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\n    mapping(address => mapping(address => bool)) public disapproved; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\n    mapping(address => mapping(address => bool)) public suspended; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\n    mapping(address => mapping(address => bool)) public unSuspended; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\n\n    /*-------Prosumer Variables-------------------------*/\n    struct prosumer {\n        uint256 _prosumerID;\n        address _address;\n        uint256 _aadharId;\n        bool _approved;\n        bool _suspended;\n        uint256 _energyUnitPriceUSD;\n        uint256 _energyUnitPriceMatic;\n        uint256 _stakedEnergyBalance;\n    }\n\n    prosumer[] public ApprovedProsumers;\n    prosumer[] public unApprovedProsumers;\n\n    mapping(address => bool) public isProsumer;\n    mapping(uint256 => address) public prosumerAddress;\n    mapping(address => uint256) public prosumerID;\n\n    //Prosumer Stats\n    mapping(address => uint256) public approvalCount;\n    mapping(address => uint256) public disapprovalCount;\n    mapping(address => uint256) public suspensionCount;\n    mapping(address => uint256) public unSuspensionCount;\n\n    /****************Complain**************************************/\n    struct Complain {\n        uint256 _complainID;\n        uint256 _complainant;\n        uint256 _accused;\n        string _complain;\n        bool _resolved;\n    }\n\n    uint256 public complainCount;\n    uint256 public maxComplains = 10;\n    Complain[] public complains;\n\n    /****************Constructor************/\n    constructor(address forwarder, address[] memory _owners, uint _required) {\n        //Set the trusted forwarder\n        _setTrustedForwarder(forwarder);\n\n        //We will pass multiple owners & set a particular requirement number of apporvals needed\n        require(_owners.length > 0, \"Owners Required\");\n        require(_required > 0 && _required <= _owners.length, \"Invalid required number of owners\");\n\n        for (uint i; i < _owners.length; i++) {\n            address owner = _owners[i];\n            require(owner != address(0), \"invalid owner\");\n            require(!isOwner[owner], \"Owner is not unique\");\n\n            isOwner[owner] = true;\n            owners.push(owner);\n        }\n\n        required = _required;\n    }\n\n    string public versionRecipient = \"3.0.0\";\n\n    // Request for Registration as Prosumer\n\n    /**Unverified User Function***/\n\n    //Internal Function\n    function isRequested() private view returns (bool) {\n        for (uint256 i = 0; i < unApprovedProsumers.length; i++) {\n            if (msg.sender == unApprovedProsumers[i]._address) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //-->1. Register as Prosumer\n    function req_Registration(uint256 _aadharNo) public payable {\n        require(!isOwner[msg.sender], \"You are an Owner\");\n        require(msg.value >= regFee, \"Registration Failed, Insufficient Fee\");\n        require(!isProsumer[msg.sender], \"You are already a Prosumer in the Network\");\n        require(!isRequested(), \"You have already requested for Registration\");\n\n        uint256 digitCheck = _aadharNo;\n        uint256 digits = 0;\n\n        while (digitCheck != 0) {\n            digitCheck /= 10;\n            digits++;\n        }\n\n        require(digits == 12, \"Enter a 12 digit Aadhar No.\");\n\n        //Create a prosumer object\n        prosumer memory _prosumer = prosumer({\n            _prosumerID: 0,\n            _address: msg.sender,\n            _aadharId: _aadharNo,\n            _approved: false,\n            _suspended: false,\n            _energyUnitPriceUSD: 0,\n            _energyUnitPriceMatic: 0,\n            _stakedEnergyBalance: 0\n        });\n\n        //Push the prosumer object to unApprovedProsumerArray\n        unApprovedProsumers.push(_prosumer);\n    }\n\n    function raiseComplain(uint256 _prosumerId, string memory _complainBody) public {\n        require(isProsumer[_msgSender()], \"You not a Prosumer\");\n        require(isProsumer[prosumerAddress[_prosumerId]], \"Accused not a Prosumer\");\n        require(\n            !suspended[prosumerAddress[_prosumerId]][_msgSender()],\n            \"Accused Prosumer is Suspended\"\n        );\n        require(!suspended[_msgSender()][prosumerAddress[_prosumerId]], \"You are Suspended\");\n        require(\n            !disapproved[prosumerAddress[_prosumerId]][_msgSender()],\n            \"Prosumer is Disapproved\"\n        );\n        require(!disapproved[_msgSender()][prosumerAddress[_prosumerId]], \"You are Disapproved\");\n\n        Complain memory _complain = Complain({\n            _complainID: complains.length + 1,\n            _complainant: prosumerID[_msgSender()],\n            _accused: _prosumerId,\n            _complain: _complainBody,\n            _resolved: false\n        });\n\n        if (complains.length < maxComplains) {\n            complains.push(_complain);\n        } else {\n            complains[complainCount % maxComplains] = _complain;\n        }\n\n        if (complainCount < maxComplains) {\n            complainCount++;\n        }\n    }\n\n    /***************Owner Functions***********************/\n\n    //--> 1. Set Registration Fee\n\n    function setRegFee(uint256 _regFee) public onlyOwner {\n        regFee = _regFee;\n    }\n\n    //--> 2. Verify Details of Unapproved Prosumer\n\n    //-->2.1 Internal Function\n\n    function deleteElementFrom_UnApprovedProsumers(\n        uint256 _unApprovedProsumerID\n    ) private onlyOwner {\n        require(\n            _unApprovedProsumerID < unApprovedProsumers.length,\n            \"Invalid unapprovedProsumer Index\"\n        );\n\n        for (uint256 i = _unApprovedProsumerID; i < unApprovedProsumers.length - 1; i++) {\n            unApprovedProsumers[i] = unApprovedProsumers[i + 1];\n        }\n        unApprovedProsumers.pop();\n    }\n\n    /*-----------------------------------------------------------------------------------------------*/\n\n    //-->2.2 Show all Approved or Unapproved Prosumer\n\n    function show_Unapproved_Prosumers() public view onlyOwner returns (prosumer[] memory) {\n        return unApprovedProsumers;\n    }\n\n    function show_Approved_Prosumers() public view returns (prosumer[] memory) {\n        //Public Function anybody can call\n        return ApprovedProsumers;\n    }\n\n    //-->2.3 Approval Status [Owner Specific]\n\n    function showApprovalStatus_OwnerSpecific(\n        address _unapprovedProsumerAddress\n    ) public view onlyOwner returns (string memory) {\n        if (approved[_unapprovedProsumerAddress][_msgSender()]) {\n            return (\"Prosumer Approved\");\n        } else if (disapproved[_unapprovedProsumerAddress][_msgSender()]) {\n            return (\"Prosumer Disapproved\");\n        } else {\n            return (\"Prosumer Not Verified Yet\");\n        }\n    }\n\n    /*** Admission of Prosumer ***/\n\n    //--> 3. Approve Prosumer\n\n    function approveProsumer_OwnerSpecific(uint256 _unApprovedProsumerID) public onlyOwner {\n        require(\n            _unApprovedProsumerID < unApprovedProsumers.length,\n            \"Invalid Unapproved Prosumer ID\"\n        );\n        require(\n            approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] == false,\n            \"Prosumer Already approved by you\"\n        );\n\n        approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = true;\n\n        //If disapproved earlier then wants to approve\n        if (disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()]) {\n            disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = false;\n            disapprovalCount[unApprovedProsumers[_unApprovedProsumerID]._address]--;\n        }\n\n        uint256 getApprovalCount = approvalCount[\n            unApprovedProsumers[_unApprovedProsumerID]._address\n        ]++;\n\n        //check if approval > required\n        if (getApprovalCount > required) {\n            //if yes then remove him from unapprove array and add him to approved prosumer array\n            unApprovedProsumers[_unApprovedProsumerID]._approved = true; //Set approved Flag = true\n            unApprovedProsumers[_unApprovedProsumerID]._prosumerID = ApprovedProsumers.length + 1; //Set Prosumer ID\n            isProsumer[unApprovedProsumers[_unApprovedProsumerID]._address] = true;\n            ApprovedProsumers.push(unApprovedProsumers[_unApprovedProsumerID]);\n            deleteElementFrom_UnApprovedProsumers(_unApprovedProsumerID);\n\n            /*Store the prosumers in the Maps*/\n            prosumerAddress[ApprovedProsumers.length] = ApprovedProsumers[\n                ApprovedProsumers.length - 1\n            ]._address;\n            prosumerID[ApprovedProsumers[ApprovedProsumers.length - 1]._address] = ApprovedProsumers\n                .length;\n        }\n    }\n\n    //--> 4. Disapprove Prosumer\n    function DisApproveProsumer_OwnerSpecific(uint256 _unApprovedProsumerID) public onlyOwner {\n        require(\n            _unApprovedProsumerID < unApprovedProsumers.length,\n            \"Invalid Unapproved Prosumer ID\"\n        );\n        require(\n            disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] == false,\n            \"Prosumer Already disapproved by you\"\n        );\n\n        disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = true;\n\n        //If approved earlier then disapprove\n        if (disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()]) {\n            approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = false;\n            approvalCount[unApprovedProsumers[_unApprovedProsumerID]._address]--;\n        }\n\n        uint256 getDisApprovalCount = disapprovalCount[\n            unApprovedProsumers[_unApprovedProsumerID]._address\n        ]++;\n\n        //check if disapproval > required\n        if (getDisApprovalCount > required) {\n            //if yes then remove him from unapprove array & don't store in approved array\n            deleteElementFrom_UnApprovedProsumers(_unApprovedProsumerID);\n            delete disapprovalCount[unApprovedProsumers[_unApprovedProsumerID]._address];\n            delete approvalCount[unApprovedProsumers[_unApprovedProsumerID]._address];\n        }\n    }\n\n    /*** Suspension of Prosumer ***/\n\n    //--> 5. Suspend Prosumer\n    function suspendProsumer(uint256 _prosumerId, uint256 _complainId) public onlyOwner {\n        address getProsumerAddress = prosumerAddress[_prosumerId];\n        require(isProsumer[getProsumerAddress], \"Not a Prosumer\");\n        require(!suspended[getProsumerAddress][_msgSender()], \"Already Suspended\");\n\n        suspended[getProsumerAddress][_msgSender()] = true;\n\n        //If unsuspended earlier then suspend\n        if (unSuspended[getProsumerAddress][_msgSender()]) {\n            unSuspended[getProsumerAddress][_msgSender()] = false;\n            unSuspensionCount[getProsumerAddress]--;\n        }\n\n        uint256 getSuspensionCount = suspensionCount[getProsumerAddress]++;\n\n        //check if suspension > required\n        if (getSuspensionCount > required) {\n            //if yes then remove him from unapprove array & don't store in approved array\n            delete suspensionCount[getProsumerAddress];\n            ApprovedProsumers[_prosumerId - 1]._suspended = true;\n            complains[_complainId - 1]._resolved = true;\n        }\n    }\n\n    //--> 6. Unsuspend Prosumer\n    function unSuspendProsumer(uint256 _prosumerId, uint256 _complainId) public onlyOwner {\n        require(isProsumer[prosumerAddress[_prosumerId]], \"Not a Prosumer\");\n        require(!unSuspended[prosumerAddress[_prosumerId]][_msgSender()], \"Already Unsuspended\");\n\n        address prosumerToUnsuspend = prosumerAddress[_prosumerId];\n\n        unSuspended[prosumerToUnsuspend][_msgSender()] = true;\n\n        // If suspended earlier then unsuspend\n        if (suspended[prosumerToUnsuspend][_msgSender()]) {\n            suspended[prosumerToUnsuspend][_msgSender()] = false;\n            suspensionCount[prosumerToUnsuspend]--;\n        }\n\n        uint256 getUnSuspensionCount = unSuspensionCount[prosumerToUnsuspend]++;\n\n        // Check if unsuspension > required\n        if (getUnSuspensionCount > required) {\n            // If yes, then remove him from unapprove array & don't store in the approved array\n            delete unSuspensionCount[prosumerToUnsuspend];\n            delete suspensionCount[prosumerToUnsuspend];\n            ApprovedProsumers[_prosumerId - 1]._suspended = false;\n            complains[_complainId - 1]._resolved = true;\n        }\n    }\n\n    //-->6.3. Witdhraw Funds (Pending , send funds equally to all prosumer)  //Can only be called when Transaction array will be zero.\n    function withdrawFees() public onlyOwner {\n        uint256 euqiBalance = address(this).balance / owners.length;\n\n        for (uint256 i = 0; i < owners.length; i++) {\n            (bool callSuccess, ) = payable(owners[i]).call{value: euqiBalance}(\"\");\n            require(callSuccess, \"Call Failed\");\n        }\n    }\n\n    //6.4. Transfer Ownership\n    function transferOwnership(address newOwner) public onlyOwner {\n        for (uint256 i = 0; i < owners.length; i++) {\n            if (owners[i] == _msgSender()) {\n                owners[i] = newOwner;\n                break;\n            }\n        }\n    }\n\n    modifier onlyOwner() {\n        require(isOwner[_msgSender()], \"Not Owner\");\n        _;\n    }\n}\n"},"contracts/PriceConverter.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\ncontract PriceConverter {\r\n    AggregatorV3Interface internal priceFeed;\r\n\r\n    /**\r\n     * Network: Polygon Mumbai\r\n     * Aggregator: MATIC/USD\r\n     * Address: 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada\r\n     */\r\n    constructor() {\r\n        priceFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);\r\n    }\r\n\r\n    /**\r\n     * Returns the latest price\r\n     */\r\n    function getLatestPrice() public view returns (int) {\r\n        (\r\n            ,\r\n            /*uint80 roundID*/ int price /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/,\r\n            ,\r\n            ,\r\n\r\n        ) = priceFeed.latestRoundData();\r\n        return price;\r\n    }\r\n}\r\n\r\n// $ 1.14973259\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"67:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:0","nodeType":"VariableDeclaration","scope":31,"src":"289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"355:7:0","nodeType":"VariableDeclaration","scope":31,"src":"348:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"377:6:0","nodeType":"VariableDeclaration","scope":31,"src":"370:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:0","nodeType":"VariableDeclaration","scope":31,"src":"391:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:0","nodeType":"VariableDeclaration","scope":31,"src":"416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:0","nodeType":"VariableDeclaration","scope":31,"src":"441:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:0"},"scope":45,"src":"267:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"498:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"550:7:0","nodeType":"VariableDeclaration","scope":44,"src":"543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"572:6:0","nodeType":"VariableDeclaration","scope":44,"src":"565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:0","nodeType":"VariableDeclaration","scope":44,"src":"586:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:0","nodeType":"VariableDeclaration","scope":44,"src":"611:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:0","nodeType":"VariableDeclaration","scope":44,"src":"636:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:0"},"scope":45,"src":"474:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:610:0","usedErrors":[]}],"src":"32:636:0"},"id":0},"@opengsn/contracts/src/BasePaymaster.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[443],"Context":[3076],"ERC165":[3100],"ERC165Checker":[3294],"GsnEip712Library":[1781],"GsnTypes":[1809],"GsnUtils":[1889],"IERC165":[3306],"IERC20":[3029],"IERC2771Recipient":[663],"IForwarder":[639],"IPaymaster":[736],"IRelayHub":[1104],"IStakeManager":[1394],"MinLibBytes":[2004],"Ownable":[2361]},"id":444,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"41:24:1"},{"id":48,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"66:19:1"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":49,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":2362,"src":"87:52:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":3101,"src":"140:64:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":51,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":3295,"src":"205:71:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/utils/GsnTypes.sol","file":"./utils/GsnTypes.sol","id":52,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":1810,"src":"278:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/interfaces/IPaymaster.sol","file":"./interfaces/IPaymaster.sol","id":53,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":737,"src":"309:37:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/interfaces/IRelayHub.sol","file":"./interfaces/IRelayHub.sol","id":54,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":1105,"src":"347:36:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/utils/GsnEip712Library.sol","file":"./utils/GsnEip712Library.sol","id":55,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":1782,"src":"384:38:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/forwarder/IForwarder.sol","file":"./forwarder/IForwarder.sol","id":56,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":444,"sourceUnit":640,"src":"423:36:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":58,"name":"IPaymaster","nodeType":"IdentifierPath","referencedDeclaration":736,"src":"652:10:1"},"id":59,"nodeType":"InheritanceSpecifier","src":"652:10:1"},{"baseName":{"id":60,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":2361,"src":"664:7:1"},"id":61,"nodeType":"InheritanceSpecifier","src":"664:7:1"},{"baseName":{"id":62,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":3100,"src":"673:6:1"},"id":63,"nodeType":"InheritanceSpecifier","src":"673:6:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"461:155:1","text":" @notice An abstract base class to be inherited by a concrete Paymaster.\n A subclass must implement:\n  - preRelayedCall\n  - postRelayedCall"},"fullyImplemented":false,"id":443,"linearizedBaseContracts":[443,3100,2361,3076,736,3306],"name":"BasePaymaster","nameLocation":"635:13:1","nodeType":"ContractDefinition","nodes":[{"id":66,"libraryName":{"id":64,"name":"ERC165Checker","nodeType":"IdentifierPath","referencedDeclaration":3294,"src":"692:13:1"},"nodeType":"UsingForDirective","src":"686:32:1","typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"710:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":69,"mutability":"mutable","name":"relayHub","nameLocation":"743:8:1","nodeType":"VariableDeclaration","scope":443,"src":"724:27:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"},"typeName":{"id":68,"nodeType":"UserDefinedTypeName","pathNode":{"id":67,"name":"IRelayHub","nodeType":"IdentifierPath","referencedDeclaration":1104,"src":"724:9:1"},"referencedDeclaration":1104,"src":"724:9:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"_trustedForwarder","nameLocation":"773:17:1","nodeType":"VariableDeclaration","scope":443,"src":"757:33:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"baseFunctions":[699],"body":{"id":83,"nodeType":"Block","src":"890:41:1","statements":[{"expression":{"arguments":[{"id":80,"name":"relayHub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"915:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"907:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:1","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"907:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":77,"id":82,"nodeType":"Return","src":"900:24:1"}]},"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"797:26:1","text":"@inheritdoc IPaymaster"},"functionSelector":"7bdf2ec7","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"getRelayHub","nameLocation":"837:11:1","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"858:8:1"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"848:2:1"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"881:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"881:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"880:9:1"},"scope":443,"src":"828:103:1","stateMutability":"view","virtual":false,"visibility":"public"},{"constant":true,"functionSelector":"b90b41cf","id":87,"mutability":"constant","name":"FORWARDER_HUB_OVERHEAD","nameLocation":"1026:22:1","nodeType":"VariableDeclaration","scope":443,"src":"1002:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530303030","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1051:5:1","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50000"},"visibility":"public"},{"constant":true,"functionSelector":"f9c002f7","id":90,"mutability":"constant","name":"PRE_RELAYED_CALL_GAS_LIMIT","nameLocation":"1156:26:1","nodeType":"VariableDeclaration","scope":443,"src":"1132:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030303030","id":89,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1185:6:1","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"visibility":"public"},{"constant":true,"functionSelector":"bbdaa3c9","id":93,"mutability":"constant","name":"POST_RELAYED_CALL_GAS_LIMIT","nameLocation":"1221:27:1","nodeType":"VariableDeclaration","scope":443,"src":"1197:60:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313130303030","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1251:6:1","typeDescriptions":{"typeIdentifier":"t_rational_110000_by_1","typeString":"int_const 110000"},"value":"110000"},"visibility":"public"},{"constant":true,"functionSelector":"df463a66","id":98,"mutability":"constant","name":"PAYMASTER_ACCEPTANCE_BUDGET","nameLocation":"1287:27:1","nodeType":"VariableDeclaration","scope":443,"src":"1263:105:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":97,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":95,"name":"PRE_RELAYED_CALL_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"1317:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":96,"name":"FORWARDER_HUB_OVERHEAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1346:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1317:51:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"5c5e3db1","id":101,"mutability":"constant","name":"CALLDATA_SIZE_LIMIT","nameLocation":"1398:19:1","nodeType":"VariableDeclaration","scope":443,"src":"1374:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130353030","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10500_by_1","typeString":"int_const 10500"},"value":"10500"},"visibility":"public"},{"baseFunctions":[3099,3305],"body":{"id":131,"nodeType":"Block","src":"1568:175:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":112,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1585:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":114,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1605:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$736_$","typeString":"type(contract IPaymaster)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$736_$","typeString":"type(contract IPaymaster)"}],"id":113,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1600:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1600:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IPaymaster_$736","typeString":"type(contract IPaymaster)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1600:28:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1585:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":118,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1644:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":120,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$2361_$","typeString":"type(contract Ownable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Ownable_$2361_$","typeString":"type(contract Ownable)"}],"id":119,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1659:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1659:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Ownable_$2361","typeString":"type(contract Ownable)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1659:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1644:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1585:99:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":127,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1724:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":125,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1700:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BasePaymaster_$443_$","typeString":"type(contract super BasePaymaster)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3099,"src":"1700:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1700:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1585:151:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":111,"id":130,"nodeType":"Return","src":"1578:158:1"}]},"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"1432:23:1","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":132,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1469:17:1","nodeType":"FunctionDefinition","overrides":{"id":108,"nodeType":"OverrideSpecifier","overrides":[{"id":106,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3306,"src":"1536:7:1"},{"id":107,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":3100,"src":"1545:6:1"}],"src":"1527:25:1"},"parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"interfaceId","nameLocation":"1494:11:1","nodeType":"VariableDeclaration","scope":132,"src":"1487:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":103,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1487:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1486:20:1"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":132,"src":"1562:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":109,"name":"bool","nodeType":"ElementaryTypeName","src":"1562:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1561:6:1"},"scope":443,"src":"1460:283:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[687],"body":{"id":148,"nodeType":"Block","src":"1926:216:1","statements":[{"expression":{"arguments":[{"id":142,"name":"PAYMASTER_ACCEPTANCE_BUDGET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1984:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":143,"name":"PRE_RELAYED_CALL_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2025:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":144,"name":"POST_RELAYED_CALL_GAS_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2065:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":145,"name":"CALLDATA_SIZE_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2106:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":140,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1943:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$736_$","typeString":"type(contract IPaymaster)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GasAndDataLimits","nodeType":"MemberAccess","referencedDeclaration":680,"src":"1943:27:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GasAndDataLimits_$680_storage_ptr_$","typeString":"type(struct IPaymaster.GasAndDataLimits storage pointer)"}},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1943:192:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GasAndDataLimits_$680_memory_ptr","typeString":"struct IPaymaster.GasAndDataLimits memory"}},"functionReturnParameters":139,"id":147,"nodeType":"Return","src":"1936:199:1"}]},"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"1749:26:1","text":"@inheritdoc IPaymaster"},"functionSelector":"b039a88f","id":149,"implemented":true,"kind":"function","modifiers":[],"name":"getGasAndDataLimits","nameLocation":"1789:19:1","nodeType":"FunctionDefinition","overrides":{"id":135,"nodeType":"OverrideSpecifier","overrides":[],"src":"1826:8:1"},"parameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"limits","nameLocation":"1913:6:1","nodeType":"VariableDeclaration","scope":149,"src":"1878:41:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GasAndDataLimits_$680_memory_ptr","typeString":"struct IPaymaster.GasAndDataLimits"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"IPaymaster.GasAndDataLimits","nodeType":"IdentifierPath","referencedDeclaration":680,"src":"1878:27:1"},"referencedDeclaration":680,"src":"1878:27:1","typeDescriptions":{"typeIdentifier":"t_struct$_GasAndDataLimits_$680_storage_ptr","typeString":"struct IPaymaster.GasAndDataLimits"}},"visibility":"internal"}],"src":"1868:57:1"},"scope":443,"src":"1780:362:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":172,"nodeType":"Block","src":"2440:174:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":157,"name":"getTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2458:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2458:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":159,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2483:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"2483:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forwarder","nodeType":"MemberAccess","referencedDeclaration":1796,"src":"2483:32:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2458:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466f72776172646572206973206e6f742074727573746564","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2517:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429","typeString":"literal_string \"Forwarder is not trusted\""},"value":"Forwarder is not trusted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429","typeString":"literal_string \"Forwarder is not trusted\""}],"id":156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2450:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2450:94:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"2450:94:1"},{"expression":{"arguments":[{"id":169,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2594:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}],"expression":{"id":166,"name":"GsnEip712Library","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2554:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GsnEip712Library_$1781_$","typeString":"type(library GsnEip712Library)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyForwarderTrusted","nodeType":"MemberAccess","referencedDeclaration":1527,"src":"2554:39:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_RelayRequest_$1808_calldata_ptr_$returns$__$","typeString":"function (struct GsnTypes.RelayRequest calldata) view"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2554:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"2554:53:1"}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"2148:178:1","text":" @notice this method must be called from preRelayedCall to validate that the forwarder\n is approved by the paymaster as well as by the recipient contract."},"id":173,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyForwarder","nameLocation":"2340:16:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"relayRequest","nameLocation":"2388:12:1","nodeType":"VariableDeclaration","scope":173,"src":"2357:43:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":152,"nodeType":"UserDefinedTypeName","pathNode":{"id":151,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"2357:21:1"},"referencedDeclaration":1808,"src":"2357:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"}],"src":"2356:45:1"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"2440:0:1"},"scope":443,"src":"2331:283:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":185,"nodeType":"Block","src":"2673:87:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2691:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2691:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"getRelayHub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"2705:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2705:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2691:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e206f6e6c792062652063616c6c65642062792052656c6179487562","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2720:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb","typeString":"literal_string \"can only be called by RelayHub\""},"value":"can only be called by RelayHub"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb","typeString":"literal_string \"can only be called by RelayHub\""}],"id":176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2683:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2683:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"2683:70:1"}]},"id":186,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyRelayHubOnly","nameLocation":"2629:19:1","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"2648:2:1"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[],"src":"2673:0:1"},"scope":443,"src":"2620:140:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":201,"nodeType":"Block","src":"2854:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":193,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2872:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2872:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":559,"src":"2872:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2872:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565207472616e73666572206e6f7420737570706f72746564","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2905:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e16e7b15b3ab333edb68f7b1a990600092795acc5fc3b3a41ef443557f01e8e8","typeString":"literal_string \"value transfer not supported\""},"value":"value transfer not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e16e7b15b3ab333edb68f7b1a990600092795acc5fc3b3a41ef443557f01e8e8","typeString":"literal_string \"value transfer not supported\""}],"id":192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2864:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2864:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":200,"nodeType":"ExpressionStatement","src":"2864:72:1"}]},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyValue","nameLocation":"2775:12:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"relayRequest","nameLocation":"2819:12:1","nodeType":"VariableDeclaration","scope":202,"src":"2788:43:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":188,"nodeType":"UserDefinedTypeName","pathNode":{"id":187,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"2788:21:1"},"referencedDeclaration":1808,"src":"2788:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"}],"src":"2787:45:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"2854:0:1"},"scope":443,"src":"2766:177:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"3046:106:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":209,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"3064:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"3064:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"paymasterData","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"3064:36:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3064:43:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3111:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3064:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73686f756c642068617665206e6f207061796d617374657244617461","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3114:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_182b40eb1561ed39a86edc754bf2a5f045daef24c145773d4b18340a470251b6","typeString":"literal_string \"should have no paymasterData\""},"value":"should have no paymasterData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_182b40eb1561ed39a86edc754bf2a5f045daef24c145773d4b18340a470251b6","typeString":"literal_string \"should have no paymasterData\""}],"id":208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3056:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3056:89:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"3056:89:1"}]},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyPaymasterData","nameLocation":"2958:20:1","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"relayRequest","nameLocation":"3010:12:1","nodeType":"VariableDeclaration","scope":219,"src":"2979:43:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":204,"nodeType":"UserDefinedTypeName","pathNode":{"id":203,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"2979:21:1"},"referencedDeclaration":1808,"src":"2979:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"}],"src":"2978:45:1"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[],"src":"3046:0:1"},"scope":443,"src":"2949:203:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"3237:81:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":225,"name":"approvalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"3255:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3255:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3278:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3255:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73686f756c642068617665206e6f20617070726f76616c44617461","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3281:29:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fccc4b6995a94cdc6e6e9a1b088f6ad31bd641a326f5e5ddcc3773886206aa37","typeString":"literal_string \"should have no approvalData\""},"value":"should have no approvalData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fccc4b6995a94cdc6e6e9a1b088f6ad31bd641a326f5e5ddcc3773886206aa37","typeString":"literal_string \"should have no approvalData\""}],"id":224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3247:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3247:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"ExpressionStatement","src":"3247:64:1"}]},"id":233,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyApprovalData","nameLocation":"3167:19:1","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"approvalData","nameLocation":"3202:12:1","nodeType":"VariableDeclaration","scope":233,"src":"3187:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"3187:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3186:29:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"3237:0:1"},"scope":443,"src":"3158:160:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"3603:144:1","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":249,"name":"IRelayHub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3657:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRelayHub_$1104_$","typeString":"type(contract IRelayHub)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IRelayHub_$1104_$","typeString":"type(contract IRelayHub)"}],"id":248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3652:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3652:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IRelayHub_$1104","typeString":"type(contract IRelayHub)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"3652:27:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"id":245,"name":"hub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3629:3:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}],"id":244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3621:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:1","typeDescriptions":{}}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3621:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3150,"src":"3621:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3621:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746172676574206973206e6f7420612076616c6964204952656c6179487562","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3682:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b62b61dba941996cba530085b5313ea27667d0ee2b85e1209b8aedd3e5e9398e","typeString":"literal_string \"target is not a valid IRelayHub\""},"value":"target is not a valid IRelayHub"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b62b61dba941996cba530085b5313ea27667d0ee2b85e1209b8aedd3e5e9398e","typeString":"literal_string \"target is not a valid IRelayHub\""}],"id":242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3613:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3613:103:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"ExpressionStatement","src":"3613:103:1"},{"expression":{"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":256,"name":"relayHub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"3726:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":257,"name":"hub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3737:3:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}},"src":"3726:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}},"id":259,"nodeType":"ExpressionStatement","src":"3726:14:1"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"3324:221:1","text":" @notice The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with.\n :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first."},"functionSelector":"7bb05264","id":261,"implemented":true,"kind":"function","modifiers":[{"id":240,"kind":"modifierInvocation","modifierName":{"id":239,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"3593:9:1"},"nodeType":"ModifierInvocation","src":"3593:9:1"}],"name":"setRelayHub","nameLocation":"3559:11:1","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"hub","nameLocation":"3581:3:1","nodeType":"VariableDeclaration","scope":261,"src":"3571:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"},"typeName":{"id":236,"nodeType":"UserDefinedTypeName","pathNode":{"id":235,"name":"IRelayHub","nodeType":"IdentifierPath","referencedDeclaration":1104,"src":"3571:9:1"},"referencedDeclaration":1104,"src":"3571:9:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}},"visibility":"internal"}],"src":"3570:15:1"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"3603:0:1"},"scope":443,"src":"3550:197:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":284,"nodeType":"Block","src":"4069:158:1","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":273,"name":"IForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4120:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IForwarder_$639_$","typeString":"type(contract IForwarder)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IForwarder_$639_$","typeString":"type(contract IForwarder)"}],"id":272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4115:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4115:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IForwarder_$639","typeString":"type(contract IForwarder)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"4115:28:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":270,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4087:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3150,"src":"4087:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4087:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746172676574206973206e6f7420612076616c69642049466f72776172646572","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4146:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f35ce95c64a40a715e95a1b7d3fe84cf613d64347e430eb5f35903ecdb7e24d","typeString":"literal_string \"target is not a valid IForwarder\""},"value":"target is not a valid IForwarder"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f35ce95c64a40a715e95a1b7d3fe84cf613d64347e430eb5f35903ecdb7e24d","typeString":"literal_string \"target is not a valid IForwarder\""}],"id":269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4079:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4079:102:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"ExpressionStatement","src":"4079:102:1"},{"expression":{"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":280,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"4191:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":281,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4211:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4191:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":283,"nodeType":"ExpressionStatement","src":"4191:29:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3753:238:1","text":" @notice The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.\n @notice the Recipients must trust this Forwarder as well in order for the configuration to remain functional."},"functionSelector":"da742228","id":285,"implemented":true,"kind":"function","modifiers":[{"id":267,"kind":"modifierInvocation","modifierName":{"id":266,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"4059:9:1"},"nodeType":"ModifierInvocation","src":"4059:9:1"}],"name":"setTrustedForwarder","nameLocation":"4005:19:1","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"forwarder","nameLocation":"4033:9:1","nodeType":"VariableDeclaration","scope":285,"src":"4025:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"4025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4024:19:1"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"4069:0:1"},"scope":443,"src":"3996:231:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[693],"body":{"id":293,"nodeType":"Block","src":"4310:41:1","statements":[{"expression":{"id":291,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"4327:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":290,"id":292,"nodeType":"Return","src":"4320:24:1"}]},"functionSelector":"ce1b815f","id":294,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedForwarder","nameLocation":"4242:19:1","nodeType":"FunctionDefinition","overrides":{"id":287,"nodeType":"OverrideSpecifier","overrides":[],"src":"4284:8:1"},"parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"4261:2:1"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"4302:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4301:9:1"},"scope":443,"src":"4233:118:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":323,"nodeType":"Block","src":"4615:147:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":301,"name":"relayHub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"4641:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}],"id":300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4633:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"4633:7:1","typeDescriptions":{}}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4633:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4662:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4654:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"4654:7:1","typeDescriptions":{}}},"id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4654:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4633:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72656c6179206875622061646472657373206e6f7420736574","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4666:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e4bcc216326d2d371e2433ec8e1af9c54827701515af7cd10f9acc79120d313","typeString":"literal_string \"relay hub address not set\""},"value":"relay hub address not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e4bcc216326d2d371e2433ec8e1af9c54827701515af7cd10f9acc79120d313","typeString":"literal_string \"relay hub address not set\""}],"id":298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4625:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4625:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"4625:69:1"},{"expression":{"arguments":[{"arguments":[{"id":319,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4749:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$443","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$443","typeString":"contract BasePaymaster"}],"id":318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4741:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"4741:7:1","typeDescriptions":{}}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4741:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":311,"name":"relayHub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"4704:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositFor","nodeType":"MemberAccess","referencedDeclaration":895,"src":"4704:19:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":314,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4730:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4730:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4704:36:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4704:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"4704:51:1"}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"4357:218:1","text":" @notice Any native Ether transferred into the paymaster is transferred as a deposit to the RelayHub.\n This way, we don't need to understand the RelayHub API in order to replenish the paymaster."},"id":324,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"4587:2:1"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"4615:0:1"},"scope":443,"src":"4580:182:1","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":341,"nodeType":"Block","src":"5066:50:1","statements":[{"expression":{"arguments":[{"id":337,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"5094:6:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":338,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"5102:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":334,"name":"relayHub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"5076:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_IRelayHub_$1104","typeString":"contract IRelayHub"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":903,"src":"5076:17:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5076:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":340,"nodeType":"ExpressionStatement","src":"5076:33:1"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"4768:201:1","text":" @notice Withdraw deposit from the RelayHub.\n @param amount The amount to be subtracted from the sender.\n @param target The target to which the amount will be transferred."},"functionSelector":"2d14c4b7","id":342,"implemented":true,"kind":"function","modifiers":[{"id":332,"kind":"modifierInvocation","modifierName":{"id":331,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"5056:9:1"},"nodeType":"ModifierInvocation","src":"5056:9:1"}],"name":"withdrawRelayHubDepositTo","nameLocation":"4983:25:1","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"amount","nameLocation":"5017:6:1","nodeType":"VariableDeclaration","scope":342,"src":"5009:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5009:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"target","nameLocation":"5041:6:1","nodeType":"VariableDeclaration","scope":342,"src":"5025:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"5025:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5008:40:1"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"5066:0:1"},"scope":443,"src":"4974:142:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[716],"body":{"id":386,"nodeType":"Block","src":"5398:288:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":360,"name":"_verifyRelayHubOnly","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5408:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5408:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5408:21:1"},{"expression":{"arguments":[{"id":364,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5456:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}],"id":363,"name":"_verifyForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5439:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_RelayRequest_$1808_calldata_ptr_$returns$__$","typeString":"function (struct GsnTypes.RelayRequest calldata) view"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5439:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"5439:30:1"},{"expression":{"arguments":[{"id":368,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5492:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}],"id":367,"name":"_verifyValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"5479:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_RelayRequest_$1808_calldata_ptr_$returns$__$","typeString":"function (struct GsnTypes.RelayRequest calldata) view"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5479:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"5479:26:1"},{"expression":{"arguments":[{"id":372,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5536:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}],"id":371,"name":"_verifyPaymasterData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5515:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_RelayRequest_$1808_calldata_ptr_$returns$__$","typeString":"function (struct GsnTypes.RelayRequest calldata) view"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5515:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"ExpressionStatement","src":"5515:34:1"},{"expression":{"arguments":[{"id":376,"name":"approvalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"5579:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":375,"name":"_verifyApprovalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"5559:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes calldata) view"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5559:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"5559:33:1"},{"expression":{"arguments":[{"id":380,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5625:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},{"id":381,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"5639:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":382,"name":"approvalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"5650:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":383,"name":"maxPossibleGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5664:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":379,"name":"_preRelayedCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5609:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_RelayRequest_$1808_calldata_ptr_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_bool_$","typeString":"function (struct GsnTypes.RelayRequest calldata,bytes calldata,bytes calldata,uint256) returns (bytes memory,bool)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5609:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bool_$","typeString":"tuple(bytes memory,bool)"}},"functionReturnParameters":359,"id":385,"nodeType":"Return","src":"5602:77:1"}]},"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"5122:26:1","text":"@inheritdoc IPaymaster"},"functionSelector":"00be5dd4","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"preRelayedCall","nameLocation":"5162:14:1","nodeType":"FunctionDefinition","overrides":{"id":354,"nodeType":"OverrideSpecifier","overrides":[],"src":"5356:8:1"},"parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"relayRequest","nameLocation":"5217:12:1","nodeType":"VariableDeclaration","scope":387,"src":"5186:43:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":345,"nodeType":"UserDefinedTypeName","pathNode":{"id":344,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"5186:21:1"},"referencedDeclaration":1808,"src":"5186:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"signature","nameLocation":"5254:9:1","nodeType":"VariableDeclaration","scope":387,"src":"5239:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":347,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"approvalData","nameLocation":"5288:12:1","nodeType":"VariableDeclaration","scope":387,"src":"5273:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":349,"name":"bytes","nodeType":"ElementaryTypeName","src":"5273:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"maxPossibleGas","nameLocation":"5318:14:1","nodeType":"VariableDeclaration","scope":387,"src":"5310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5310:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5176:162:1"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"5378:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5378:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"5392:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":357,"name":"bool","nodeType":"ElementaryTypeName","src":"5392:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5377:20:1"},"scope":443,"src":"5153:533:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"5693:211:1","text":" @notice internal logic the paymasters need to provide to select which transactions they are willing to pay for\n @notice see the documentation for `IPaymaster::preRelayedCall` for details"},"id":404,"implemented":false,"kind":"function","modifiers":[],"name":"_preRelayedCall","nameLocation":"5918:15:1","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"5943:30:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":390,"nodeType":"UserDefinedTypeName","pathNode":{"id":389,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"5943:21:1"},"referencedDeclaration":1808,"src":"5943:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"5983:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":392,"name":"bytes","nodeType":"ElementaryTypeName","src":"5983:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"6007:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"6007:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"6031:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"6031:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5933:111:1"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"6083:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":399,"name":"bytes","nodeType":"ElementaryTypeName","src":"6083:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"6097:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"6097:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6082:20:1"},"scope":443,"src":"5909:194:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[729],"body":{"id":428,"nodeType":"Block","src":"6337:112:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":418,"name":"_verifyRelayHubOnly","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"6347:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6347:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"6347:21:1"},{"expression":{"arguments":[{"id":422,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"6395:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":423,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6404:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":424,"name":"gasUseWithoutPost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6413:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":425,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"6432:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}],"id":421,"name":"_postRelayedCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6378:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bool_$_t_uint256_$_t_struct$_RelayData_$1801_calldata_ptr_$returns$__$","typeString":"function (bytes calldata,bool,uint256,struct GsnTypes.RelayData calldata)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6378:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"6378:64:1"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"6109:26:1","text":"@inheritdoc IPaymaster"},"functionSelector":"76fa01c3","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"postRelayedCall","nameLocation":"6149:15:1","nodeType":"FunctionDefinition","overrides":{"id":416,"nodeType":"OverrideSpecifier","overrides":[],"src":"6324:8:1"},"parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"context","nameLocation":"6189:7:1","nodeType":"VariableDeclaration","scope":429,"src":"6174:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"6174:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"success","nameLocation":"6211:7:1","nodeType":"VariableDeclaration","scope":429,"src":"6206:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":408,"name":"bool","nodeType":"ElementaryTypeName","src":"6206:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"gasUseWithoutPost","nameLocation":"6236:17:1","nodeType":"VariableDeclaration","scope":429,"src":"6228:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"6228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"relayData","nameLocation":"6291:9:1","nodeType":"VariableDeclaration","scope":429,"src":"6263:37:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData"},"typeName":{"id":413,"nodeType":"UserDefinedTypeName","pathNode":{"id":412,"name":"GsnTypes.RelayData","nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"6263:18:1"},"referencedDeclaration":1801,"src":"6263:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"}},"visibility":"internal"}],"src":"6164:142:1"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[],"src":"6337:0:1"},"scope":443,"src":"6140:309:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"6455:210:1","text":" @notice internal logic the paymasters need to provide if they need to take some action after the transaction\n @notice see the documentation for `IPaymaster::postRelayedCall` for details"},"id":442,"implemented":false,"kind":"function","modifiers":[],"name":"_postRelayedCall","nameLocation":"6679:16:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"6705:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"6705:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"6729:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"6729:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"6743:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"6743:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"6760:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData"},"typeName":{"id":438,"nodeType":"UserDefinedTypeName","pathNode":{"id":437,"name":"GsnTypes.RelayData","nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"6760:18:1"},"referencedDeclaration":1801,"src":"6760:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"}},"visibility":"internal"}],"src":"6695:98:1"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"6818:0:1"},"scope":443,"src":"6670:149:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":444,"src":"617:6204:1","usedErrors":[]}],"src":"41:6781:1"},"id":1},"@opengsn/contracts/src/ERC2771Recipient.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/ERC2771Recipient.sol","exportedSymbols":{"ERC2771Recipient":[546],"IERC2771Recipient":[663]},"id":547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":445,"literals":["solidity",">=","0.6",".9"],"nodeType":"PragmaDirective","src":"70:24:2"},{"absolutePath":"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol","file":"./interfaces/IERC2771Recipient.sol","id":446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":547,"sourceUnit":664,"src":"96:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":448,"name":"IERC2771Recipient","nodeType":"IdentifierPath","referencedDeclaration":663,"src":"544:17:2"},"id":449,"nodeType":"InheritanceSpecifier","src":"544:17:2"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"142:363:2","text":" @title The ERC-2771 Recipient Base Abstract Class - Implementation\n @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\n @notice A base contract to be inherited by any contract that want to receive relayed transactions.\n @notice A subclass must use `_msgSender()` instead of `msg.sender`."},"fullyImplemented":true,"id":546,"linearizedBaseContracts":[546,663],"name":"ERC2771Recipient","nameLocation":"524:16:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":451,"mutability":"mutable","name":"_trustedForwarder","nameLocation":"648:17:2","nodeType":"VariableDeclaration","scope":546,"src":"632:33:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":459,"nodeType":"Block","src":"1096:41:2","statements":[{"expression":{"id":457,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1113:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":456,"id":458,"nodeType":"Return","src":"1106:24:2"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"672:341:2","text":" :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\n @return forwarder The address of the Forwarder contract that is being used."},"functionSelector":"ce1b815f","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedForwarder","nameLocation":"1027:19:2","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1046:2:2"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"forwarder","nameLocation":"1086:9:2","nodeType":"VariableDeclaration","scope":460,"src":"1078:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1077:19:2"},"scope":546,"src":"1018:119:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":469,"nodeType":"Block","src":"1202:47:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":465,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1212:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":466,"name":"_forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1232:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1212:30:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":468,"nodeType":"ExpressionStatement","src":"1212:30:2"}]},"id":470,"implemented":true,"kind":"function","modifiers":[],"name":"_setTrustedForwarder","nameLocation":"1152:20:2","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"_forwarder","nameLocation":"1181:10:2","nodeType":"VariableDeclaration","scope":470,"src":"1173:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1172:20:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"1202:0:2"},"scope":546,"src":"1143:106:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[650],"body":{"id":483,"nodeType":"Block","src":"1383:54:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"1400:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":480,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"1413:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1400:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":478,"id":482,"nodeType":"Return","src":"1393:37:2"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"1255:33:2","text":"@inheritdoc IERC2771Recipient"},"functionSelector":"572b6c05","id":484,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"1302:18:2","nodeType":"FunctionDefinition","overrides":{"id":475,"nodeType":"OverrideSpecifier","overrides":[],"src":"1355:8:2"},"parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"forwarder","nameLocation":"1329:9:2","nodeType":"VariableDeclaration","scope":484,"src":"1321:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1320:19:2"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":484,"src":"1377:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":476,"name":"bool","nodeType":"ElementaryTypeName","src":"1377:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1376:6:2"},"scope":546,"src":"1293:144:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[656],"body":{"id":510,"nodeType":"Block","src":"1556:472:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1570:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1570:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1570:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1589:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1570:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1614:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1614:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":496,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[484],"referencedDeclaration":484,"src":"1595:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1595:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1570:55:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":508,"nodeType":"Block","src":"1981:41:2","statements":[{"expression":{"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":503,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1995:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2001:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2001:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1995:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":507,"nodeType":"ExpressionStatement","src":"1995:16:2"}]},"id":509,"nodeType":"IfStatement","src":"1566:456:2","trueBody":{"id":502,"nodeType":"Block","src":"1627:348:2","statements":[{"AST":{"nodeType":"YulBlock","src":"1882:83:2","statements":[{"nodeType":"YulAssignment","src":"1900:51:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1911:2:2","type":"","value":"96"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1931:12:2"},"nodeType":"YulFunctionCall","src":"1931:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"1946:2:2","type":"","value":"20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1927:3:2"},"nodeType":"YulFunctionCall","src":"1927:22:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1914:12:2"},"nodeType":"YulFunctionCall","src":"1914:36:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1907:3:2"},"nodeType":"YulFunctionCall","src":"1907:44:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1900:3:2"}]}]},"evmVersion":"london","externalReferences":[{"declaration":489,"isOffset":false,"isSlot":false,"src":"1900:3:2","valueSize":1}],"id":501,"nodeType":"InlineAssembly","src":"1873:92:2"}]}}]},"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"1443:33:2","text":"@inheritdoc IERC2771Recipient"},"id":511,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"1490:10:2","nodeType":"FunctionDefinition","overrides":{"id":487,"nodeType":"OverrideSpecifier","overrides":[],"src":"1512:8:2"},"parameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"1500:2:2"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"ret","nameLocation":"1551:3:2","nodeType":"VariableDeclaration","scope":511,"src":"1543:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"1543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1542:13:2"},"scope":546,"src":"1481:547:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[662],"body":{"id":544,"nodeType":"Block","src":"2152:185:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2166:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"2166:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2166:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2185:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"2166:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"id":524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2210:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2210:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[484],"referencedDeclaration":484,"src":"2191:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2191:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2166:55:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":542,"nodeType":"Block","src":"2291:40:2","statements":[{"expression":{"expression":{"id":539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2312:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"2312:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":517,"id":541,"nodeType":"Return","src":"2305:15:2"}]},"id":543,"nodeType":"IfStatement","src":"2162:169:2","trueBody":{"id":538,"nodeType":"Block","src":"2223:62:2","statements":[{"expression":{"baseExpression":{"expression":{"id":528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2244:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"2244:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2255:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"2255:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2255:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2271:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"2255:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2244:30:2","startExpression":{"hexValue":"30","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2253:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":517,"id":537,"nodeType":"Return","src":"2237:37:2"}]}}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"2034:33:2","text":"@inheritdoc IERC2771Recipient"},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2081:8:2","nodeType":"FunctionDefinition","overrides":{"id":514,"nodeType":"OverrideSpecifier","overrides":[],"src":"2101:8:2"},"parameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"2089:2:2"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"ret","nameLocation":"2147:3:2","nodeType":"VariableDeclaration","scope":545,"src":"2132:18:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"2132:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2131:20:2"},"scope":546,"src":"2072:265:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":547,"src":"506:1833:2","usedErrors":[]}],"src":"70:2270:2"},"id":2},"@opengsn/contracts/src/forwarder/IForwarder.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/forwarder/IForwarder.sol","exportedSymbols":{"IERC165":[3306],"IForwarder":[639]},"id":640,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":548,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"41:24:3"},{"id":549,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"66:19:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":640,"sourceUnit":2365,"src":"87:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":552,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3306,"src":"1050:7:3"},"id":553,"nodeType":"InheritanceSpecifier","src":"1050:7:3"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"145:880:3","text":" @title The Forwarder Interface\n @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\n for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\n @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\n represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\n :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\n Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\n Recipient contracts should only trust forwarders that passed through security audit,\n otherwise they are susceptible to identity theft."},"fullyImplemented":false,"id":639,"linearizedBaseContracts":[639,3306],"name":"IForwarder","nameLocation":"1036:10:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IForwarder.ForwardRequest","id":568,"members":[{"constant":false,"id":555,"mutability":"mutable","name":"from","nameLocation":"1241:4:3","nodeType":"VariableDeclaration","scope":568,"src":"1233:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"to","nameLocation":"1263:2:3","nodeType":"VariableDeclaration","scope":568,"src":"1255:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"value","nameLocation":"1283:5:3","nodeType":"VariableDeclaration","scope":568,"src":"1275:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"gas","nameLocation":"1306:3:3","nodeType":"VariableDeclaration","scope":568,"src":"1298:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"nonce","nameLocation":"1327:5:3","nodeType":"VariableDeclaration","scope":568,"src":"1319:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"data","nameLocation":"1348:4:3","nodeType":"VariableDeclaration","scope":568,"src":"1342:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":564,"name":"bytes","nodeType":"ElementaryTypeName","src":"1342:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"validUntilTime","nameLocation":"1370:14:3","nodeType":"VariableDeclaration","scope":568,"src":"1362:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ForwardRequest","nameLocation":"1208:14:3","nodeType":"StructDefinition","scope":639,"src":"1201:190:3","visibility":"public"},{"anonymous":false,"id":574,"name":"DomainRegistered","nameLocation":"1403:16:3","nodeType":"EventDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"indexed":true,"mutability":"mutable","name":"domainSeparator","nameLocation":"1436:15:3","nodeType":"VariableDeclaration","scope":574,"src":"1420:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1420:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":572,"indexed":false,"mutability":"mutable","name":"domainValue","nameLocation":"1459:11:3","nodeType":"VariableDeclaration","scope":574,"src":"1453:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":571,"name":"bytes","nodeType":"ElementaryTypeName","src":"1453:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1419:52:3"},"src":"1397:75:3"},{"anonymous":false,"id":580,"name":"RequestTypeRegistered","nameLocation":"1484:21:3","nodeType":"EventDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"indexed":true,"mutability":"mutable","name":"typeHash","nameLocation":"1522:8:3","nodeType":"VariableDeclaration","scope":580,"src":"1506:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1506:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":578,"indexed":false,"mutability":"mutable","name":"typeStr","nameLocation":"1539:7:3","nodeType":"VariableDeclaration","scope":580,"src":"1532:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":577,"name":"string","nodeType":"ElementaryTypeName","src":"1532:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1505:42:3"},"src":"1478:70:3"},{"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"1554:98:3","text":" @param from The address of a sender.\n @return The nonce for this address."},"functionSelector":"2d0335ab","id":588,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"1666:8:3","nodeType":"FunctionDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"from","nameLocation":"1683:4:3","nodeType":"VariableDeclaration","scope":588,"src":"1675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"1675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1674:14:3"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":588,"src":"1719:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1718:9:3"},"scope":639,"src":"1657:71:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1734:431:3","text":" @notice Verify the transaction is valid and can be executed.\n Implementations must validate the signature and the nonce of the request are correct.\n Does not revert and returns successfully if the input is valid.\n Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\n Reverts if `domainSeparator` or `requestTypeHash` are not registered as well."},"functionSelector":"ad9f99c7","id":603,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"2179:6:3","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"forwardRequest","nameLocation":"2219:14:3","nodeType":"VariableDeclaration","scope":603,"src":"2195:38:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest"},"typeName":{"id":591,"nodeType":"UserDefinedTypeName","pathNode":{"id":590,"name":"ForwardRequest","nodeType":"IdentifierPath","referencedDeclaration":568,"src":"2195:14:3"},"referencedDeclaration":568,"src":"2195:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_storage_ptr","typeString":"struct IForwarder.ForwardRequest"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"domainSeparator","nameLocation":"2251:15:3","nodeType":"VariableDeclaration","scope":603,"src":"2243:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2243:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"requestTypeHash","nameLocation":"2284:15:3","nodeType":"VariableDeclaration","scope":603,"src":"2276:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2276:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"suffixData","nameLocation":"2324:10:3","nodeType":"VariableDeclaration","scope":603,"src":"2309:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":597,"name":"bytes","nodeType":"ElementaryTypeName","src":"2309:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"signature","nameLocation":"2359:9:3","nodeType":"VariableDeclaration","scope":603,"src":"2344:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":599,"name":"bytes","nodeType":"ElementaryTypeName","src":"2344:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2185:189:3"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"2388:0:3"},"scope":639,"src":"2170:219:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"2395:1003:3","text":" @notice Executes a transaction specified by the `ForwardRequest`.\n The transaction is first verified and then executed.\n The success flag and returned bytes array of the `CALL` are returned as-is.\n This method would revert only in case of a verification error.\n All the target errors are reported using the returned success flag and returned bytes array.\n @param forwardRequest All requested transaction parameters.\n @param domainSeparator The domain used when signing this request.\n @param requestTypeHash The request type used when signing this request.\n @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\n @param signature The client signature to be validated.\n @return success The success flag of the underlying `CALL` to the target address.\n @return ret The byte array returned by the underlying `CALL` to the target address."},"functionSelector":"e024dc7f","id":622,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3412:7:3","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"forwardRequest","nameLocation":"3453:14:3","nodeType":"VariableDeclaration","scope":622,"src":"3429:38:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest"},"typeName":{"id":606,"nodeType":"UserDefinedTypeName","pathNode":{"id":605,"name":"ForwardRequest","nodeType":"IdentifierPath","referencedDeclaration":568,"src":"3429:14:3"},"referencedDeclaration":568,"src":"3429:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_storage_ptr","typeString":"struct IForwarder.ForwardRequest"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"domainSeparator","nameLocation":"3485:15:3","nodeType":"VariableDeclaration","scope":622,"src":"3477:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3477:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"requestTypeHash","nameLocation":"3518:15:3","nodeType":"VariableDeclaration","scope":622,"src":"3510:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3510:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"suffixData","nameLocation":"3558:10:3","nodeType":"VariableDeclaration","scope":622,"src":"3543:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":612,"name":"bytes","nodeType":"ElementaryTypeName","src":"3543:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"signature","nameLocation":"3593:9:3","nodeType":"VariableDeclaration","scope":622,"src":"3578:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":614,"name":"bytes","nodeType":"ElementaryTypeName","src":"3578:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3419:189:3"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"success","nameLocation":"3648:7:3","nodeType":"VariableDeclaration","scope":622,"src":"3643:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"3643:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"ret","nameLocation":"3670:3:3","nodeType":"VariableDeclaration","scope":622,"src":"3657:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":619,"name":"bytes","nodeType":"ElementaryTypeName","src":"3657:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3642:32:3"},"scope":639,"src":"3403:272:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"3681:423:3","text":" @notice Register a new Request typehash.\n @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\n @param typeName The name of the request type.\n @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\n The generic ForwardRequest type is always registered by the constructor."},"functionSelector":"d9210be5","id":630,"implemented":false,"kind":"function","modifiers":[],"name":"registerRequestType","nameLocation":"4118:19:3","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"typeName","nameLocation":"4154:8:3","nodeType":"VariableDeclaration","scope":630,"src":"4138:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":624,"name":"string","nodeType":"ElementaryTypeName","src":"4138:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"typeSuffix","nameLocation":"4180:10:3","nodeType":"VariableDeclaration","scope":630,"src":"4164:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":626,"name":"string","nodeType":"ElementaryTypeName","src":"4164:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4137:54:3"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[],"src":"4200:0:3"},"scope":639,"src":"4109:92:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"4207:623:3","text":" @notice Register a new domain separator.\n @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\n @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\n The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\n This method accepts the domain name and version to create and register the domain separator value.\n @param name The domain's display name.\n @param version The domain/protocol version."},"functionSelector":"9c7b4592","id":638,"implemented":false,"kind":"function","modifiers":[],"name":"registerDomainSeparator","nameLocation":"4844:23:3","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"name","nameLocation":"4884:4:3","nodeType":"VariableDeclaration","scope":638,"src":"4868:20:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":632,"name":"string","nodeType":"ElementaryTypeName","src":"4868:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"version","nameLocation":"4906:7:3","nodeType":"VariableDeclaration","scope":638,"src":"4890:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":634,"name":"string","nodeType":"ElementaryTypeName","src":"4890:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4867:47:3"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"4923:0:3"},"scope":639,"src":"4835:89:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":640,"src":"1026:3900:3","usedErrors":[]}],"src":"41:4886:3"},"id":3},"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol","exportedSymbols":{"IERC2771Recipient":[663]},"id":664,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":641,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"32:24:4"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"58:267:4","text":" @title The ERC-2771 Recipient Base Abstract Class - Declarations\n @notice A contract must implement this interface in order to support relayed transaction.\n @notice It is recommended that your contract inherits from the ERC2771Recipient contract."},"fullyImplemented":false,"id":663,"linearizedBaseContracts":[663],"name":"IERC2771Recipient","nameLocation":"344:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"369:342:4","text":" :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n @param forwarder The address of the Forwarder contract that is being used.\n @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."},"functionSelector":"572b6c05","id":650,"implemented":false,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"725:18:4","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"forwarder","nameLocation":"752:9:4","nodeType":"VariableDeclaration","scope":650,"src":"744:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"743:19:4"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":650,"src":"791:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":647,"name":"bool","nodeType":"ElementaryTypeName","src":"791:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"790:6:4"},"scope":663,"src":"716:81:4","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"803:338:4","text":" @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\n @return sender The real sender of this call.\n For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\n Otherwise simply returns `msg.sender`."},"id":656,"implemented":false,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"1155:10:4","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"1165:2:4"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"1199:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"1199:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1198:9:4"},"scope":663,"src":"1146:62:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"1214:473:4","text":" @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\n @return data The real `msg.data` of this call.\n For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\n of the `msg.data` - so this method will strip those 20 bytes off.\n Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`."},"id":662,"implemented":false,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"1701:8:4","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"1709:2:4"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"1743:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1742:16:4"},"scope":663,"src":"1692:67:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":664,"src":"326:1435:4","usedErrors":[]}],"src":"32:1730:4"},"id":4},"@opengsn/contracts/src/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/interfaces/IPaymaster.sol","exportedSymbols":{"GsnTypes":[1809],"IERC165":[3306],"IForwarder":[639],"IPaymaster":[736]},"id":737,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":665,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"41:24:5"},{"id":666,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"66:19:5"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":737,"sourceUnit":2365,"src":"87:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/utils/GsnTypes.sol","file":"../utils/GsnTypes.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":737,"sourceUnit":1810,"src":"145:31:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":670,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3306,"src":"588:7:5"},"id":671,"nodeType":"InheritanceSpecifier","src":"588:7:5"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"178:385:5","text":" @title The Paymaster Interface\n @notice Contracts implementing this interface exist to make decision about paying the transaction fee to the relay.\n @notice There are two callbacks here that are executed by the RelayHub: `preRelayedCall` and `postRelayedCall`.\n @notice It is recommended that your implementation inherits from the abstract BasePaymaster contract."},"fullyImplemented":false,"id":736,"linearizedBaseContracts":[736,3306],"name":"IPaymaster","nameLocation":"574:10:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.GasAndDataLimits","id":680,"members":[{"constant":false,"id":673,"mutability":"mutable","name":"acceptanceBudget","nameLocation":"779:16:5","nodeType":"VariableDeclaration","scope":680,"src":"771:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"preRelayedCallGasLimit","nameLocation":"813:22:5","nodeType":"VariableDeclaration","scope":680,"src":"805:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"postRelayedCallGasLimit","nameLocation":"853:23:5","nodeType":"VariableDeclaration","scope":680,"src":"845:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"calldataSizeLimit","nameLocation":"894:17:5","nodeType":"VariableDeclaration","scope":680,"src":"886:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"GasAndDataLimits","nameLocation":"744:16:5","nodeType":"StructDefinition","scope":736,"src":"737:181:5","visibility":"public"},{"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"924:2173:5","text":" @notice Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster.\n This function allows different paymasters to have different properties without changes to the RelayHub.\n @return limits An instance of the `GasAndDataLimits` struct\n ##### `acceptanceBudget`\n If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what.\n Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense.\n Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request.\n This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract.\n :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit`\n (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions.\n If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \"griefing\" attack.\n The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated.\n From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay,\n since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts.\n Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config).\n ##### `preRelayedCallGasLimit`\n The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster.\n As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster.\n ##### `postRelayedCallGasLimit`\n The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas.\n Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway."},"functionSelector":"b039a88f","id":687,"implemented":false,"kind":"function","modifiers":[],"name":"getGasAndDataLimits","nameLocation":"3111:19:5","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"3130:2:5"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"limits","nameLocation":"3201:6:5","nodeType":"VariableDeclaration","scope":687,"src":"3177:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GasAndDataLimits_$680_memory_ptr","typeString":"struct IPaymaster.GasAndDataLimits"},"typeName":{"id":684,"nodeType":"UserDefinedTypeName","pathNode":{"id":683,"name":"GasAndDataLimits","nodeType":"IdentifierPath","referencedDeclaration":680,"src":"3177:16:5"},"referencedDeclaration":680,"src":"3177:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_GasAndDataLimits_$680_storage_ptr","typeString":"struct IPaymaster.GasAndDataLimits"}},"visibility":"internal"}],"src":"3167:46:5"},"scope":736,"src":"3102:112:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"3220:275:5","text":" @notice :warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\n @return trustedForwarder The address of the `Forwarder` that is trusted by this Paymaster to execute the requests."},"functionSelector":"ce1b815f","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"getTrustedForwarder","nameLocation":"3509:19:5","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"3528:2:5"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"trustedForwarder","nameLocation":"3562:16:5","nodeType":"VariableDeclaration","scope":693,"src":"3554:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3553:26:5"},"scope":736,"src":"3500:80:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"3586:124:5","text":" @return relayHub The address of the `RelayHub` that is trusted by this Paymaster to execute the requests."},"functionSelector":"7bdf2ec7","id":699,"implemented":false,"kind":"function","modifiers":[],"name":"getRelayHub","nameLocation":"3724:11:5","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"3735:2:5"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"relayHub","nameLocation":"3769:8:5","nodeType":"VariableDeclaration","scope":699,"src":"3761:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3760:18:5"},"scope":736,"src":"3715:64:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"3785:2265:5","text":" @notice Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that\n the Paymaster agrees to pay for this call.\n The request is considered to be rejected by the Paymaster in one of the following conditions:\n  - `preRelayedCall()` method reverts\n  - the `Forwarder` reverts because of nonce or signature error\n  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted\n    (and all that did not consume more than `acceptanceBudget` gas).\n In any of the above cases, all Paymaster calls and the recipient call are reverted.\n In any other case the Paymaster will pay for the gas cost of the transaction.\n Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\n @param relayRequest - the full relay request structure\n @param signature - user's EIP712-compatible signature of the `relayRequest`.\n Note that in most cases the paymaster shouldn't try use it at all. It is always checked\n by the forwarder immediately after preRelayedCall returns.\n @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\n @param maxPossibleGas - based on values returned from `getGasAndDataLimits`\n the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\n In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"\n @return context\n A byte array to be passed to postRelayedCall.\n Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\n @return rejectOnRecipientRevert\n The flag that allows a Paymaster to \"delegate\" the rejection to the recipient code.\n It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\n forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget,\n otherwise the TX is paid by the Paymaster.\n `true` if the Paymaster wants to reject the TX if the recipient reverts.\n `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster."},"functionSelector":"00be5dd4","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"preRelayedCall","nameLocation":"6064:14:5","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"relayRequest","nameLocation":"6119:12:5","nodeType":"VariableDeclaration","scope":716,"src":"6088:43:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":702,"nodeType":"UserDefinedTypeName","pathNode":{"id":701,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"6088:21:5"},"referencedDeclaration":1808,"src":"6088:21:5","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"signature","nameLocation":"6156:9:5","nodeType":"VariableDeclaration","scope":716,"src":"6141:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":704,"name":"bytes","nodeType":"ElementaryTypeName","src":"6141:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"approvalData","nameLocation":"6190:12:5","nodeType":"VariableDeclaration","scope":716,"src":"6175:27:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"6175:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"maxPossibleGas","nameLocation":"6220:14:5","nodeType":"VariableDeclaration","scope":716,"src":"6212:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"6212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6078:162:5"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"context","nameLocation":"6280:7:5","nodeType":"VariableDeclaration","scope":716,"src":"6267:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6267:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"rejectOnRecipientRevert","nameLocation":"6294:23:5","nodeType":"VariableDeclaration","scope":716,"src":"6289:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"6289:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6266:52:5"},"scope":736,"src":"6055:264:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"6325:817:5","text":" @notice This method is called after the actual relayed function call.\n It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\n Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\n is still committed to pay the relay for the entire transaction.\n @param context The call context, as returned by the preRelayedCall\n @param success `true` if the relayed call succeeded, false if it reverted\n @param gasUseWithoutPost The actual amount of gas used by the entire transaction, EXCEPT\n        the gas used by the postRelayedCall itself.\n @param relayData The relay params of the request. can be used by relayHub.calculateCharge()"},"functionSelector":"76fa01c3","id":729,"implemented":false,"kind":"function","modifiers":[],"name":"postRelayedCall","nameLocation":"7156:15:5","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"context","nameLocation":"7196:7:5","nodeType":"VariableDeclaration","scope":729,"src":"7181:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":718,"name":"bytes","nodeType":"ElementaryTypeName","src":"7181:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"success","nameLocation":"7218:7:5","nodeType":"VariableDeclaration","scope":729,"src":"7213:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":720,"name":"bool","nodeType":"ElementaryTypeName","src":"7213:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"gasUseWithoutPost","nameLocation":"7243:17:5","nodeType":"VariableDeclaration","scope":729,"src":"7235:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"7235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"relayData","nameLocation":"7298:9:5","nodeType":"VariableDeclaration","scope":729,"src":"7270:37:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"GsnTypes.RelayData","nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"7270:18:5"},"referencedDeclaration":1801,"src":"7270:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"}},"visibility":"internal"}],"src":"7171:142:5"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"7322:0:5"},"scope":736,"src":"7147:176:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"7329:81:5","text":" @return version The SemVer string of this Paymaster's version."},"functionSelector":"921276ea","id":735,"implemented":false,"kind":"function","modifiers":[],"name":"versionPaymaster","nameLocation":"7424:16:5","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"7440:2:5"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":735,"src":"7466:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":732,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:15:5"},"scope":736,"src":"7415:66:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":737,"src":"564:6919:5","usedErrors":[]}],"src":"41:7443:5"},"id":5},"@opengsn/contracts/src/interfaces/IRelayHub.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/interfaces/IRelayHub.sol","exportedSymbols":{"ERC165":[3100],"GsnTypes":[1809],"IERC165":[3306],"IERC20":[3029],"IForwarder":[639],"IRelayHub":[1104],"IStakeManager":[1394]},"id":1105,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":738,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"41:24:6"},{"id":739,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"66:19:6"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1105,"sourceUnit":2365,"src":"87:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/utils/GsnTypes.sol","file":"../utils/GsnTypes.sol","id":741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1105,"sourceUnit":1810,"src":"145:31:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1105,"sourceUnit":1395,"src":"177:29:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":744,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3306,"src":"1022:7:6"},"id":745,"nodeType":"InheritanceSpecifier","src":"1022:7:6"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"208:790:6","text":" @title The RelayHub interface\n @notice The implementation of this interface provides all the information the GSN client needs to\n create a valid `RelayRequest` and also serves as an entry point for such requests.\n @notice The RelayHub also handles all the related financial records and hold the balances of participants.\n The Paymasters keep their Ether deposited in the `RelayHub` in order to pay for the `RelayRequest`s that thay choose\n to pay for, and Relay Servers keep their earned Ether in the `RelayHub` until they choose to `withdraw()`\n @notice The RelayHub on each supported network only needs a single instance and there is usually no need for dApp\n developers or Relay Server operators to redeploy, reimplement, modify or override the `RelayHub`."},"fullyImplemented":false,"id":1104,"linearizedBaseContracts":[1104,3306],"name":"IRelayHub","nameLocation":"1009:9:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRelayHub.RelayHubConfig","id":764,"members":[{"constant":false,"id":747,"mutability":"mutable","name":"maxWorkerCount","nameLocation":"1275:14:6","nodeType":"VariableDeclaration","scope":764,"src":"1267:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"gasReserve","nameLocation":"1409:10:6","nodeType":"VariableDeclaration","scope":764,"src":"1401:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"postOverhead","nameLocation":"1492:12:6","nodeType":"VariableDeclaration","scope":764,"src":"1484:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"gasOverhead","nameLocation":"1688:11:6","nodeType":"VariableDeclaration","scope":764,"src":"1680:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1680:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"minimumUnstakeDelay","nameLocation":"1805:19:6","nodeType":"VariableDeclaration","scope":764,"src":"1797:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"devAddress","nameLocation":"1872:10:6","nodeType":"VariableDeclaration","scope":764,"src":"1864:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"1864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"devFee","nameLocation":"1980:6:6","nodeType":"VariableDeclaration","scope":764,"src":"1974:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":758,"name":"uint8","nodeType":"ElementaryTypeName","src":"1974:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"baseRelayFee","nameLocation":"2108:12:6","nodeType":"VariableDeclaration","scope":764,"src":"2101:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":760,"name":"uint80","nodeType":"ElementaryTypeName","src":"2101:6:6","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"pctRelayFee","nameLocation":"2242:11:6","nodeType":"VariableDeclaration","scope":764,"src":"2235:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":762,"name":"uint16","nodeType":"ElementaryTypeName","src":"2235:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"RelayHubConfig","nameLocation":"1177:14:6","nodeType":"StructDefinition","scope":1104,"src":"1170:1090:6","visibility":"public"},{"anonymous":false,"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2266:69:6","text":"@notice Emitted when a configuration of the `RelayHub` is changed"},"id":770,"name":"RelayHubConfigured","nameLocation":"2346:18:6","nodeType":"EventDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"indexed":false,"mutability":"mutable","name":"config","nameLocation":"2380:6:6","nodeType":"VariableDeclaration","scope":770,"src":"2365:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayHubConfig_$764_memory_ptr","typeString":"struct IRelayHub.RelayHubConfig"},"typeName":{"id":767,"nodeType":"UserDefinedTypeName","pathNode":{"id":766,"name":"RelayHubConfig","nodeType":"IdentifierPath","referencedDeclaration":764,"src":"2365:14:6"},"referencedDeclaration":764,"src":"2365:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_RelayHubConfig_$764_storage_ptr","typeString":"struct IRelayHub.RelayHubConfig"}},"visibility":"internal"}],"src":"2364:23:6"},"src":"2340:48:6"},{"anonymous":false,"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"2394:59:6","text":"@notice Emitted when relays are added by a relayManager"},"id":780,"name":"RelayWorkersAdded","nameLocation":"2464:17:6","nodeType":"EventDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"2507:12:6","nodeType":"VariableDeclaration","scope":780,"src":"2491:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"2491:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"indexed":false,"mutability":"mutable","name":"newRelayWorkers","nameLocation":"2539:15:6","nodeType":"VariableDeclaration","scope":780,"src":"2529:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":775,"nodeType":"ArrayTypeName","src":"2529:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":778,"indexed":false,"mutability":"mutable","name":"workersCount","nameLocation":"2572:12:6","nodeType":"VariableDeclaration","scope":780,"src":"2564:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2481:109:6"},"src":"2458:133:6"},{"anonymous":false,"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"2597:72:6","text":"@notice Emitted when an account withdraws funds from the `RelayHub`."},"id":789,"name":"Withdrawn","nameLocation":"2680:9:6","nodeType":"EventDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2715:7:6","nodeType":"VariableDeclaration","scope":789,"src":"2699:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"indexed":true,"mutability":"mutable","name":"dest","nameLocation":"2748:4:6","nodeType":"VariableDeclaration","scope":789,"src":"2732:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2770:6:6","nodeType":"VariableDeclaration","scope":789,"src":"2762:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2689:93:6"},"src":"2674:109:6"},{"anonymous":false,"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"2789:98:6","text":"@notice Emitted when `depositFor` is called, including the amount and account that was funded."},"id":798,"name":"Deposited","nameLocation":"2898:9:6","nodeType":"EventDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"2933:9:6","nodeType":"VariableDeclaration","scope":798,"src":"2917:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2968:4:6","nodeType":"VariableDeclaration","scope":798,"src":"2952:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2990:6:6","nodeType":"VariableDeclaration","scope":798,"src":"2982:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2907:95:6"},"src":"2892:111:6"},{"anonymous":false,"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"3009:77:6","text":"@notice Emitted for each token configured for staking in setMinimumStakes"},"id":805,"name":"StakingTokenDataChanged","nameLocation":"3097:23:6","nodeType":"EventDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"3138:5:6","nodeType":"VariableDeclaration","scope":805,"src":"3130:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"indexed":false,"mutability":"mutable","name":"minimumStake","nameLocation":"3161:12:6","nodeType":"VariableDeclaration","scope":805,"src":"3153:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"3153:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3120:59:6"},"src":"3091:89:6"},{"anonymous":false,"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"3186:294:6","text":" @notice Emitted when an attempt to relay a call fails and the `Paymaster` does not accept the transaction.\n The actual relayed call was not executed, and the recipient not charged.\n @param reason contains a revert reason returned from preRelayedCall or forwarder."},"id":826,"name":"TransactionRejectedByPaymaster","nameLocation":"3491:30:6","nodeType":"EventDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"3547:12:6","nodeType":"VariableDeclaration","scope":826,"src":"3531:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"3531:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"3585:9:6","nodeType":"VariableDeclaration","scope":826,"src":"3569:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"3569:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"indexed":true,"mutability":"mutable","name":"relayRequestID","nameLocation":"3620:14:6","nodeType":"VariableDeclaration","scope":826,"src":"3604:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3604:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":814,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"3652:4:6","nodeType":"VariableDeclaration","scope":826,"src":"3644:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"3644:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"3674:2:6","nodeType":"VariableDeclaration","scope":826,"src":"3666:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"3666:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"relayWorker","nameLocation":"3694:11:6","nodeType":"VariableDeclaration","scope":826,"src":"3686:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"3686:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":820,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"3722:8:6","nodeType":"VariableDeclaration","scope":826,"src":"3715:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":819,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3715:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":822,"indexed":false,"mutability":"mutable","name":"innerGasUsed","nameLocation":"3748:12:6","nodeType":"VariableDeclaration","scope":826,"src":"3740:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3740:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":824,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"3776:6:6","nodeType":"VariableDeclaration","scope":826,"src":"3770:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":823,"name":"bytes","nodeType":"ElementaryTypeName","src":"3770:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3521:267:6"},"src":"3485:304:6"},{"anonymous":false,"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"3795:444:6","text":" @notice Emitted when a transaction is relayed. Note that the actual internal function call might be reverted.\n The reason for a revert will be indicated in the `status` field of a corresponding `RelayCallStatus` value.\n @notice `charge` is the Ether value deducted from the `Paymaster` balance.\n The amount added to the `relayManager` balance will be lower if there is an activated `devFee` in the `config`."},"id":848,"name":"TransactionRelayed","nameLocation":"4250:18:6","nodeType":"EventDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"4294:12:6","nodeType":"VariableDeclaration","scope":848,"src":"4278:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"4278:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"indexed":true,"mutability":"mutable","name":"relayWorker","nameLocation":"4332:11:6","nodeType":"VariableDeclaration","scope":848,"src":"4316:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"4316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"indexed":true,"mutability":"mutable","name":"relayRequestID","nameLocation":"4369:14:6","nodeType":"VariableDeclaration","scope":848,"src":"4353:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4353:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":835,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"4401:4:6","nodeType":"VariableDeclaration","scope":848,"src":"4393:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"4393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"4423:2:6","nodeType":"VariableDeclaration","scope":848,"src":"4415:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"4443:9:6","nodeType":"VariableDeclaration","scope":848,"src":"4435:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"4435:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"4469:8:6","nodeType":"VariableDeclaration","scope":848,"src":"4462:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":840,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4462:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":844,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"4503:6:6","nodeType":"VariableDeclaration","scope":848,"src":"4487:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RelayCallStatus_$876","typeString":"enum IRelayHub.RelayCallStatus"},"typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"RelayCallStatus","nodeType":"IdentifierPath","referencedDeclaration":876,"src":"4487:15:6"},"referencedDeclaration":876,"src":"4487:15:6","typeDescriptions":{"typeIdentifier":"t_enum$_RelayCallStatus_$876","typeString":"enum IRelayHub.RelayCallStatus"}},"visibility":"internal"},{"constant":false,"id":846,"indexed":false,"mutability":"mutable","name":"charge","nameLocation":"4527:6:6","nodeType":"VariableDeclaration","scope":848,"src":"4519:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4268:271:6"},"src":"4244:296:6"},{"anonymous":false,"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"4546:112:6","text":"@notice This event is emitted in case the internal function returns a value or reverts with a revert string."},"id":856,"name":"TransactionResult","nameLocation":"4669:17:6","nodeType":"EventDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"4712:6:6","nodeType":"VariableDeclaration","scope":856,"src":"4696:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RelayCallStatus_$876","typeString":"enum IRelayHub.RelayCallStatus"},"typeName":{"id":851,"nodeType":"UserDefinedTypeName","pathNode":{"id":850,"name":"RelayCallStatus","nodeType":"IdentifierPath","referencedDeclaration":876,"src":"4696:15:6"},"referencedDeclaration":876,"src":"4696:15:6","typeDescriptions":{"typeIdentifier":"t_enum$_RelayCallStatus_$876","typeString":"enum IRelayHub.RelayCallStatus"}},"visibility":"internal"},{"constant":false,"id":854,"indexed":false,"mutability":"mutable","name":"returnValue","nameLocation":"4734:11:6","nodeType":"VariableDeclaration","scope":856,"src":"4728:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":853,"name":"bytes","nodeType":"ElementaryTypeName","src":"4728:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4686:65:6"},"src":"4663:89:6"},{"anonymous":false,"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"4758:112:6","text":"@notice This event is emitted in case this `RelayHub` is deprecated and will stop serving transactions soon."},"id":861,"name":"HubDeprecated","nameLocation":"4881:13:6","nodeType":"EventDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"indexed":false,"mutability":"mutable","name":"deprecationTime","nameLocation":"4903:15:6","nodeType":"VariableDeclaration","scope":861,"src":"4895:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4894:25:6"},"src":"4875:45:6"},{"anonymous":false,"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"4926:269:6","text":" @notice This event is emitted in case a `relayManager` has been deemed \"abandoned\" for being\n unresponsive for a prolonged period of time.\n @notice This event means the entire balance of the relay has been transferred to the `devAddress`."},"id":868,"name":"AbandonedRelayManagerBalanceEscheated","nameLocation":"5206:37:6","nodeType":"EventDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"5269:12:6","nodeType":"VariableDeclaration","scope":868,"src":"5253:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"5253:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"indexed":false,"mutability":"mutable","name":"balance","nameLocation":"5299:7:6","nodeType":"VariableDeclaration","scope":868,"src":"5291:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5243:69:6"},"src":"5200:113:6"},{"canonicalName":"IRelayHub.RelayCallStatus","id":876,"members":[{"id":869,"name":"OK","nameLocation":"6128:2:6","nodeType":"EnumValue","src":"6128:2:6"},{"id":870,"name":"RelayedCallFailed","nameLocation":"6140:17:6","nodeType":"EnumValue","src":"6140:17:6"},{"id":871,"name":"RejectedByPreRelayed","nameLocation":"6167:20:6","nodeType":"EnumValue","src":"6167:20:6"},{"id":872,"name":"RejectedByForwarder","nameLocation":"6197:19:6","nodeType":"EnumValue","src":"6197:19:6"},{"id":873,"name":"RejectedByRecipientRevert","nameLocation":"6226:25:6","nodeType":"EnumValue","src":"6226:25:6"},{"id":874,"name":"PostRelayedFailed","nameLocation":"6261:17:6","nodeType":"EnumValue","src":"6261:17:6"},{"id":875,"name":"PaymasterBalanceChanged","nameLocation":"6288:23:6","nodeType":"EnumValue","src":"6288:23:6"}],"name":"RelayCallStatus","nameLocation":"6102:15:6","nodeType":"EnumDefinition","src":"6097:220:6"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"6323:234:6","text":" @notice Add new worker addresses controlled by the sender who must be a staked Relay Manager address.\n Emits a `RelayWorkersAdded` event.\n This function can be called multiple times, emitting new events."},"functionSelector":"c2da0786","id":883,"implemented":false,"kind":"function","modifiers":[],"name":"addRelayWorkers","nameLocation":"6571:15:6","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"newRelayWorkers","nameLocation":"6606:15:6","nodeType":"VariableDeclaration","scope":883,"src":"6587:34:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"6587:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":879,"nodeType":"ArrayTypeName","src":"6587:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6586:36:6"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"6631:0:6"},"scope":1104,"src":"6562:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"6638:132:6","text":" @notice The `RelayRegistrar` callback to notify the `RelayHub` that this `relayManager` has updated registration."},"functionSelector":"4f7de031","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"onRelayServerRegistered","nameLocation":"6784:23:6","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"relayManager","nameLocation":"6816:12:6","nodeType":"VariableDeclaration","scope":889,"src":"6808:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"6808:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6807:22:6"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"6838:0:6"},"scope":1104,"src":"6775:64:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"6872:264:6","text":" @notice Deposits ether for a `Paymaster`, so that it can and pay for relayed transactions.\n :warning: **Warning** :warning: Unused balance can only be withdrawn by the holder itself, by calling `withdraw`.\n Emits a `Deposited` event."},"functionSelector":"aa67c919","id":895,"implemented":false,"kind":"function","modifiers":[],"name":"depositFor","nameLocation":"7150:10:6","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"target","nameLocation":"7169:6:6","nodeType":"VariableDeclaration","scope":895,"src":"7161:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"7161:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7160:16:6"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"7193:0:6"},"scope":1104,"src":"7141:53:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"7200:245:6","text":" @notice Withdraws from an account's balance, sending it back to the caller.\n Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\n Emits a `Withdrawn` event."},"functionSelector":"f3fef3a3","id":903,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"7459:8:6","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"dest","nameLocation":"7484:4:6","nodeType":"VariableDeclaration","scope":903,"src":"7468:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"7468:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"amount","nameLocation":"7498:6:6","nodeType":"VariableDeclaration","scope":903,"src":"7490:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7467:38:6"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"7514:0:6"},"scope":1104,"src":"7450:65:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"7521:281:6","text":" @notice Withdraws from an account's balance, sending funds to multiple provided addresses.\n Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\n Emits a `Withdrawn` event for each destination."},"functionSelector":"72c1ab0c","id":913,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawMultiple","nameLocation":"7816:16:6","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"dest","nameLocation":"7858:4:6","nodeType":"VariableDeclaration","scope":913,"src":"7833:29:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"7833:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":906,"nodeType":"ArrayTypeName","src":"7833:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"amount","nameLocation":"7881:6:6","nodeType":"VariableDeclaration","scope":913,"src":"7864:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"7864:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":909,"nodeType":"ArrayTypeName","src":"7864:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7832:56:6"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"7897:0:6"},"scope":1104,"src":"7807:91:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"7922:1478:6","text":" @notice Relays a transaction. For this to succeed, multiple conditions must be met:\n  - `Paymaster`'s `preRelayCall` method must succeed and not revert.\n  - the `msg.sender` must be a registered Relay Worker that the user signed to use.\n  - the transaction's gas fees must be equal or larger than the ones that were signed by the sender.\n  - the transaction must have enough gas to run all internal transactions if they use all gas available to them.\n  - the `Paymaster` must have enough balance to pay the Relay Worker if all gas is spent.\n @notice If all conditions are met, the call will be relayed and the `Paymaster` charged.\n @param domainSeparatorName The name of the Domain Separator used to verify the EIP-712 signature\n @param maxAcceptanceBudget The maximum valid value for `paymaster.getGasLimits().acceptanceBudget` to return.\n @param relayRequest All details of the requested relayed call.\n @param signature The client's EIP-712 signature over the `relayRequest` struct.\n @param approvalData The dapp-specific data forwarded to the `Paymaster`'s `preRelayedCall` method.\n This value is **not** verified by the `RelayHub` in any way.\n As an example, it can be used to pass some kind of a third-party signature to the `Paymaster` for verification.\n Emits a `TransactionRelayed` event regardless of whether the transaction succeeded or failed."},"functionSelector":"6ca862e2","id":937,"implemented":false,"kind":"function","modifiers":[],"name":"relayCall","nameLocation":"9414:9:6","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"domainSeparatorName","nameLocation":"9449:19:6","nodeType":"VariableDeclaration","scope":937,"src":"9433:35:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":915,"name":"string","nodeType":"ElementaryTypeName","src":"9433:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"maxAcceptanceBudget","nameLocation":"9486:19:6","nodeType":"VariableDeclaration","scope":937,"src":"9478:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"9478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"relayRequest","nameLocation":"9546:12:6","nodeType":"VariableDeclaration","scope":937,"src":"9515:43:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":920,"nodeType":"UserDefinedTypeName","pathNode":{"id":919,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"9515:21:6"},"referencedDeclaration":1808,"src":"9515:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":923,"mutability":"mutable","name":"signature","nameLocation":"9583:9:6","nodeType":"VariableDeclaration","scope":937,"src":"9568:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":922,"name":"bytes","nodeType":"ElementaryTypeName","src":"9568:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"approvalData","nameLocation":"9617:12:6","nodeType":"VariableDeclaration","scope":937,"src":"9602:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":924,"name":"bytes","nodeType":"ElementaryTypeName","src":"9602:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9423:212:6"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"paymasterAccepted","nameLocation":"9676:17:6","nodeType":"VariableDeclaration","scope":937,"src":"9671:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":927,"name":"bool","nodeType":"ElementaryTypeName","src":"9671:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"charge","nameLocation":"9711:6:6","nodeType":"VariableDeclaration","scope":937,"src":"9703:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"9703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"status","nameLocation":"9753:6:6","nodeType":"VariableDeclaration","scope":937,"src":"9727:32:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RelayCallStatus_$876","typeString":"enum IRelayHub.RelayCallStatus"},"typeName":{"id":932,"nodeType":"UserDefinedTypeName","pathNode":{"id":931,"name":"IRelayHub.RelayCallStatus","nodeType":"IdentifierPath","referencedDeclaration":876,"src":"9727:25:6"},"referencedDeclaration":876,"src":"9727:25:6","typeDescriptions":{"typeIdentifier":"t_enum$_RelayCallStatus_$876","typeString":"enum IRelayHub.RelayCallStatus"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"returnValue","nameLocation":"9782:11:6","nodeType":"VariableDeclaration","scope":937,"src":"9769:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":934,"name":"bytes","nodeType":"ElementaryTypeName","src":"9769:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9661:138:6"},"scope":1104,"src":"9405:395:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"9806:604:6","text":" @notice In case the Relay Worker has been found to be in violation of some rules by the `Penalizer` contract,\n the `Penalizer` will call this method to execute a penalization.\n The `RelayHub` will look up the Relay Manager of the given Relay Worker and will forward the call to\n the `StakeManager` contract. The `RelayHub` does not perform the actual penalization either.\n @param relayWorker The address of the Relay Worker that committed a penalizable offense.\n @param beneficiary The address that called the `Penalizer` and will receive a reward for it."},"functionSelector":"ebcd31ac","id":945,"implemented":false,"kind":"function","modifiers":[],"name":"penalize","nameLocation":"10424:8:6","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"relayWorker","nameLocation":"10441:11:6","nodeType":"VariableDeclaration","scope":945,"src":"10433:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"10433:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"beneficiary","nameLocation":"10470:11:6","nodeType":"VariableDeclaration","scope":945,"src":"10454:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"10454:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"10432:50:6"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"10491:0:6"},"scope":1104,"src":"10415:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"10498:125:6","text":" @notice Sets or changes the configuration of this `RelayHub`.\n @param _config The new configuration."},"functionSelector":"9bcde3f3","id":952,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nameLocation":"10637:16:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"_config","nameLocation":"10676:7:6","nodeType":"VariableDeclaration","scope":952,"src":"10654:29:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayHubConfig_$764_memory_ptr","typeString":"struct IRelayHub.RelayHubConfig"},"typeName":{"id":948,"nodeType":"UserDefinedTypeName","pathNode":{"id":947,"name":"RelayHubConfig","nodeType":"IdentifierPath","referencedDeclaration":764,"src":"10654:14:6"},"referencedDeclaration":764,"src":"10654:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_RelayHubConfig_$764_storage_ptr","typeString":"struct IRelayHub.RelayHubConfig"}},"visibility":"internal"}],"src":"10653:31:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"10693:0:6"},"scope":1104,"src":"10628:66:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"10700:413:6","text":" @notice Sets or changes the minimum amount of a given `token` that needs to be staked so that the Relay Manager\n is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\n @param token An array of addresses of ERC-20 compatible tokens.\n @param minimumStake An array of minimal amounts necessary for a corresponding token, in wei."},"functionSelector":"8a09fb56","id":963,"implemented":false,"kind":"function","modifiers":[],"name":"setMinimumStakes","nameLocation":"11127:16:6","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"token","nameLocation":"11160:5:6","nodeType":"VariableDeclaration","scope":963,"src":"11144:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$3029_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":955,"nodeType":"UserDefinedTypeName","pathNode":{"id":954,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"11144:6:6"},"referencedDeclaration":3029,"src":"11144:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"id":956,"nodeType":"ArrayTypeName","src":"11144:8:6","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$3029_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"minimumStake","nameLocation":"11184:12:6","nodeType":"VariableDeclaration","scope":963,"src":"11167:29:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"11167:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ArrayTypeName","src":"11167:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11143:54:6"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"11206:0:6"},"scope":1104,"src":"11118:89:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"11213:229:6","text":" @notice Deprecate hub by reverting all incoming `relayCall()` calls starting from a given timestamp\n @param _deprecationTime The timestamp in seconds after which the `RelayHub` stops serving transactions."},"functionSelector":"af595dfc","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"deprecateHub","nameLocation":"11456:12:6","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"_deprecationTime","nameLocation":"11477:16:6","nodeType":"VariableDeclaration","scope":969,"src":"11469:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"11469:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11468:26:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"11503:0:6"},"scope":1104,"src":"11447:57:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"11510:53:6","text":" @notice\n @param relayManager"},"functionSelector":"d26152f9","id":975,"implemented":false,"kind":"function","modifiers":[],"name":"escheatAbandonedRelayBalance","nameLocation":"11577:28:6","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"relayManager","nameLocation":"11614:12:6","nodeType":"VariableDeclaration","scope":975,"src":"11606:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"11606:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11605:22:6"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"11636:0:6"},"scope":1104,"src":"11568:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"11643:411:6","text":" @notice The fee is expressed as a base fee in wei plus percentage of the actual charge.\n For example, a value '40' stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\n @param gasUsed An amount of gas used by the transaction.\n @param relayData The details of a transaction signed by the sender.\n @return The calculated charge, in wei."},"functionSelector":"8e53548b","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"calculateCharge","nameLocation":"12068:15:6","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"gasUsed","nameLocation":"12092:7:6","nodeType":"VariableDeclaration","scope":986,"src":"12084:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"12084:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"relayData","nameLocation":"12129:9:6","nodeType":"VariableDeclaration","scope":986,"src":"12101:37:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData"},"typeName":{"id":980,"nodeType":"UserDefinedTypeName","pathNode":{"id":979,"name":"GsnTypes.RelayData","nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"12101:18:6"},"referencedDeclaration":1801,"src":"12101:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"}},"visibility":"internal"}],"src":"12083:56:6"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"12163:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"12163:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12162:9:6"},"scope":1104,"src":"12059:113:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"12178:343:6","text":" @notice The fee is expressed as a  percentage of the actual charge.\n For example, a value '40' stands for a 40% fee, so the Relay Manager will only get 60% of the `charge`.\n @param charge The amount of Ether in wei the Paymaster will be charged for this transaction.\n @return The calculated devFee, in wei."},"functionSelector":"8ac3b845","id":994,"implemented":false,"kind":"function","modifiers":[],"name":"calculateDevCharge","nameLocation":"12535:18:6","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"charge","nameLocation":"12562:6:6","nodeType":"VariableDeclaration","scope":994,"src":"12554:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"12554:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12553:16:6"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":994,"src":"12593:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"12593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12592:9:6"},"scope":1104,"src":"12526:76:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"12626:55:6","text":"@return config The configuration of the `RelayHub`."},"functionSelector":"6bd50cef","id":1001,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nameLocation":"12695:16:6","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"12711:2:6"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"config","nameLocation":"12759:6:6","nodeType":"VariableDeclaration","scope":1001,"src":"12737:28:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayHubConfig_$764_memory_ptr","typeString":"struct IRelayHub.RelayHubConfig"},"typeName":{"id":998,"nodeType":"UserDefinedTypeName","pathNode":{"id":997,"name":"RelayHubConfig","nodeType":"IdentifierPath","referencedDeclaration":764,"src":"12737:14:6"},"referencedDeclaration":764,"src":"12737:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_RelayHubConfig_$764_storage_ptr","typeString":"struct IRelayHub.RelayHubConfig"}},"visibility":"internal"}],"src":"12736:30:6"},"scope":1104,"src":"12686:81:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"12773:289:6","text":" @param token An address of an ERC-20 compatible tokens.\n @return The minimum amount of a given `token` that needs to be staked so that the Relay Manager\n is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking."},"functionSelector":"ddf73789","id":1010,"implemented":false,"kind":"function","modifiers":[],"name":"getMinimumStakePerToken","nameLocation":"13076:23:6","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"token","nameLocation":"13107:5:6","nodeType":"VariableDeclaration","scope":1010,"src":"13100:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"},"typeName":{"id":1004,"nodeType":"UserDefinedTypeName","pathNode":{"id":1003,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"13100:6:6"},"referencedDeclaration":3029,"src":"13100:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"13099:14:6"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"13137:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"13137:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13136:9:6"},"scope":1104,"src":"13067:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"13152:113:6","text":" @param worker An address of the Relay Worker.\n @return The address of its Relay Manager."},"functionSelector":"be7c76ad","id":1018,"implemented":false,"kind":"function","modifiers":[],"name":"getWorkerManager","nameLocation":"13279:16:6","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"worker","nameLocation":"13304:6:6","nodeType":"VariableDeclaration","scope":1018,"src":"13296:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"13296:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13295:16:6"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"13335:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"13335:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13334:9:6"},"scope":1104,"src":"13270:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"13350:144:6","text":" @param manager An address of the Relay Manager.\n @return The count of Relay Workers associated with this Relay Manager."},"functionSelector":"59c4afc0","id":1026,"implemented":false,"kind":"function","modifiers":[],"name":"getWorkerCount","nameLocation":"13508:14:6","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"manager","nameLocation":"13531:7:6","nodeType":"VariableDeclaration","scope":1026,"src":"13523:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"13523:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13522:17:6"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"13563:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"13563:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13562:9:6"},"scope":1104,"src":"13499:73:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"13578:111:6","text":"@return An account's balance. It can be either a deposit of a `Paymaster`, or a revenue of a Relay Manager."},"functionSelector":"70a08231","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"13703:9:6","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"target","nameLocation":"13721:6:6","nodeType":"VariableDeclaration","scope":1034,"src":"13713:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"13713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13712:16:6"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"13752:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"13752:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13751:9:6"},"scope":1104,"src":"13694:67:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"13767:59:6","text":"@return The `StakeManager` address for this `RelayHub`."},"functionSelector":"ca64f9e7","id":1041,"implemented":false,"kind":"function","modifiers":[],"name":"getStakeManager","nameLocation":"13840:15:6","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"13855:2:6"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1041,"src":"13881:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStakeManager_$1394","typeString":"contract IStakeManager"},"typeName":{"id":1038,"nodeType":"UserDefinedTypeName","pathNode":{"id":1037,"name":"IStakeManager","nodeType":"IdentifierPath","referencedDeclaration":1394,"src":"13881:13:6"},"referencedDeclaration":1394,"src":"13881:13:6","typeDescriptions":{"typeIdentifier":"t_contract$_IStakeManager_$1394","typeString":"contract IStakeManager"}},"visibility":"internal"}],"src":"13880:15:6"},"scope":1104,"src":"13831:65:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"13902:56:6","text":"@return The `Penalizer` address for this `RelayHub`."},"functionSelector":"75dc7b4e","id":1047,"implemented":false,"kind":"function","modifiers":[],"name":"getPenalizer","nameLocation":"13972:12:6","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"13984:2:6"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1047,"src":"14010:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"14010:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14009:9:6"},"scope":1104,"src":"13963:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"14025:61:6","text":"@return The `RelayRegistrar` address for this `RelayHub`."},"functionSelector":"51d85156","id":1053,"implemented":false,"kind":"function","modifiers":[],"name":"getRelayRegistrar","nameLocation":"14100:17:6","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[],"src":"14117:2:6"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"14143:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"14143:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14142:9:6"},"scope":1104,"src":"14091:61:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"14158:59:6","text":"@return The `BatchGateway` address for this `RelayHub`."},"functionSelector":"f7908a74","id":1059,"implemented":false,"kind":"function","modifiers":[],"name":"getBatchGateway","nameLocation":"14231:15:6","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"14246:2:6"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"14272:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"14272:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14271:9:6"},"scope":1104,"src":"14222:59:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"14287:209:6","text":" @notice Uses `StakeManager` to decide if the Relay Manager can be considered staked or not.\n Returns if the stake's token, amount and delay satisfy all requirements, reverts otherwise."},"functionSelector":"e6e22e12","id":1065,"implemented":false,"kind":"function","modifiers":[],"name":"verifyRelayManagerStaked","nameLocation":"14510:24:6","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"relayManager","nameLocation":"14543:12:6","nodeType":"VariableDeclaration","scope":1065,"src":"14535:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"14535:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14534:22:6"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"14570:0:6"},"scope":1104,"src":"14501:70:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"14577:229:6","text":" @notice Uses `StakeManager` to check if the Relay Manager can be considered abandoned or not.\n Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise."},"functionSelector":"39622167","id":1073,"implemented":false,"kind":"function","modifiers":[],"name":"isRelayEscheatable","nameLocation":"14820:18:6","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"relayManager","nameLocation":"14847:12:6","nodeType":"VariableDeclaration","scope":1073,"src":"14839:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"14839:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14838:22:6"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"14884:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1070,"name":"bool","nodeType":"ElementaryTypeName","src":"14884:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14883:6:6"},"scope":1104,"src":"14811:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"14896:111:6","text":"@return `true` if the `RelayHub` is deprecated, `false` it it is not deprecated and can serve transactions."},"functionSelector":"c7178230","id":1079,"implemented":false,"kind":"function","modifiers":[],"name":"isDeprecated","nameLocation":"15021:12:6","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[],"src":"15033:2:6"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1079,"src":"15059:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1076,"name":"bool","nodeType":"ElementaryTypeName","src":"15059:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15058:6:6"},"scope":1104,"src":"15012:53:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"15071:77:6","text":"@return The timestamp from which the hub no longer allows relaying calls."},"functionSelector":"3c16e59a","id":1085,"implemented":false,"kind":"function","modifiers":[],"name":"getDeprecationTime","nameLocation":"15162:18:6","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"15180:2:6"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"15206:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"15206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15205:9:6"},"scope":1104,"src":"15153:62:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"15221:69:6","text":"@return The block number in which the contract has been deployed."},"functionSelector":"20ffd56d","id":1091,"implemented":false,"kind":"function","modifiers":[],"name":"getCreationBlock","nameLocation":"15304:16:6","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"15320:2:6"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"15346:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"15346:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15345:9:6"},"scope":1104,"src":"15295:60:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"15361:66:6","text":"@return a SemVer-compliant version of the `RelayHub` contract."},"functionSelector":"d904c732","id":1097,"implemented":false,"kind":"function","modifiers":[],"name":"versionHub","nameLocation":"15441:10:6","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"15451:2:6"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1097,"src":"15477:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1094,"name":"string","nodeType":"ElementaryTypeName","src":"15477:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15476:15:6"},"scope":1104,"src":"15432:60:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"15498:106:6","text":"@return A total measurable amount of gas left to current execution. Same as 'gasleft()' for pure EVMs."},"functionSelector":"45bdade7","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateGasleft","nameLocation":"15618:16:6","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"15634:2:6"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"15660:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"15660:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15659:9:6"},"scope":1104,"src":"15609:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1105,"src":"999:14672:6","usedErrors":[]}],"src":"41:15632:6"},"id":6},"@opengsn/contracts/src/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/interfaces/IStakeManager.sol","exportedSymbols":{"ERC165":[3100],"IERC165":[3306],"IERC20":[3029],"IStakeManager":[1394]},"id":1395,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1106,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"41:24:7"},{"id":1107,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"66:19:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1395,"sourceUnit":3030,"src":"87:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":1109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1395,"sourceUnit":3101,"src":"144:64:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1111,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3306,"src":"940:7:7"},"id":1112,"nodeType":"InheritanceSpecifier","src":"940:7:7"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"210:702:7","text":" @title The StakeManager Interface\n @notice In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires\n the Relay Server to maintain a permanently locked stake in the system before being able to register.\n @notice Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract.\n In such case, the stake will never be returned to the Relay Server operator and will be slashed.\n @notice An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token.\n Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed."},"fullyImplemented":false,"id":1394,"linearizedBaseContracts":[1394,3306],"name":"IStakeManager","nameLocation":"923:13:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"955:82:7","text":"@notice Emitted when a `stake` or `unstakeDelay` are initialized or increased."},"id":1126,"name":"StakeAdded","nameLocation":"1048:10:7","nodeType":"EventDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"1084:12:7","nodeType":"VariableDeclaration","scope":1126,"src":"1068:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1122:5:7","nodeType":"VariableDeclaration","scope":1126,"src":"1106:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1120,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1144:5:7","nodeType":"VariableDeclaration","scope":1126,"src":"1137:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"},"typeName":{"id":1119,"nodeType":"UserDefinedTypeName","pathNode":{"id":1118,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"1137:6:7"},"referencedDeclaration":3029,"src":"1137:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1122,"indexed":false,"mutability":"mutable","name":"stake","nameLocation":"1167:5:7","nodeType":"VariableDeclaration","scope":1126,"src":"1159:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1159:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1124,"indexed":false,"mutability":"mutable","name":"unstakeDelay","nameLocation":"1190:12:7","nodeType":"VariableDeclaration","scope":1126,"src":"1182:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1182:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1058:150:7"},"src":"1042:167:7"},{"anonymous":false,"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1215:61:7","text":"@notice Emitted once a stake is scheduled for withdrawal."},"id":1135,"name":"StakeUnlocked","nameLocation":"1287:13:7","nodeType":"EventDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"1326:12:7","nodeType":"VariableDeclaration","scope":1135,"src":"1310:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1131,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1364:5:7","nodeType":"VariableDeclaration","scope":1135,"src":"1348:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"1348:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"1387:12:7","nodeType":"VariableDeclaration","scope":1135,"src":"1379:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:105:7"},"src":"1281:125:7"},{"anonymous":false,"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"1412:62:7","text":"@notice Emitted when owner withdraws `relayManager` funds."},"id":1147,"name":"StakeWithdrawn","nameLocation":"1485:14:7","nodeType":"EventDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"1525:12:7","nodeType":"VariableDeclaration","scope":1147,"src":"1509:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1563:5:7","nodeType":"VariableDeclaration","scope":1147,"src":"1547:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"1547:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1585:5:7","nodeType":"VariableDeclaration","scope":1147,"src":"1578:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"},"typeName":{"id":1142,"nodeType":"UserDefinedTypeName","pathNode":{"id":1141,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"1578:6:7"},"referencedDeclaration":3029,"src":"1578:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1145,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1608:6:7","nodeType":"VariableDeclaration","scope":1147,"src":"1600:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1499:121:7"},"src":"1479:142:7"},{"anonymous":false,"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"1627:77:7","text":"@notice Emitted when an authorized `RelayHub` penalizes a `relayManager`."},"id":1159,"name":"StakePenalized","nameLocation":"1715:14:7","nodeType":"EventDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"1755:12:7","nodeType":"VariableDeclaration","scope":1159,"src":"1739:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"1793:11:7","nodeType":"VariableDeclaration","scope":1159,"src":"1777:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"1777:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1821:5:7","nodeType":"VariableDeclaration","scope":1159,"src":"1814:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"1814:6:7"},"referencedDeclaration":3029,"src":"1814:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1157,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"1844:6:7","nodeType":"VariableDeclaration","scope":1159,"src":"1836:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1729:127:7"},"src":"1709:148:7"},{"anonymous":false,"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"1863:88:7","text":"@notice Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized."},"id":1166,"name":"HubAuthorized","nameLocation":"1962:13:7","nodeType":"EventDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"2001:12:7","nodeType":"VariableDeclaration","scope":1166,"src":"1985:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1985:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"indexed":true,"mutability":"mutable","name":"relayHub","nameLocation":"2039:8:7","nodeType":"VariableDeclaration","scope":1166,"src":"2023:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1975:78:7"},"src":"1956:98:7"},{"anonymous":false,"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"2060:89:7","text":"@notice Emitted when a `relayManager` removes a `RelayHub` from a list of authorized."},"id":1175,"name":"HubUnauthorized","nameLocation":"2160:15:7","nodeType":"EventDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"2201:12:7","nodeType":"VariableDeclaration","scope":1175,"src":"2185:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"2185:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"indexed":true,"mutability":"mutable","name":"relayHub","nameLocation":"2239:8:7","nodeType":"VariableDeclaration","scope":1175,"src":"2223:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"2223:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"indexed":false,"mutability":"mutable","name":"removalTime","nameLocation":"2265:11:7","nodeType":"VariableDeclaration","scope":1175,"src":"2257:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2257:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2175:107:7"},"src":"2154:129:7"},{"anonymous":false,"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"2289:105:7","text":"@notice Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking."},"id":1182,"name":"OwnerSet","nameLocation":"2405:8:7","nodeType":"EventDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"2439:12:7","nodeType":"VariableDeclaration","scope":1182,"src":"2423:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"2423:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2477:5:7","nodeType":"VariableDeclaration","scope":1182,"src":"2461:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2413:75:7"},"src":"2399:90:7"},{"anonymous":false,"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"2495:52:7","text":"@notice Emitted when a `burnAddress` is changed."},"id":1187,"name":"BurnAddressSet","nameLocation":"2558:14:7","nodeType":"EventDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"indexed":true,"mutability":"mutable","name":"burnAddress","nameLocation":"2598:11:7","nodeType":"VariableDeclaration","scope":1187,"src":"2582:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"2582:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2572:43:7"},"src":"2552:64:7"},{"anonymous":false,"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"2622:51:7","text":"@notice Emitted when a `devAddress` is changed."},"id":1192,"name":"DevAddressSet","nameLocation":"2684:13:7","nodeType":"EventDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"indexed":true,"mutability":"mutable","name":"devAddress","nameLocation":"2723:10:7","nodeType":"VariableDeclaration","scope":1192,"src":"2707:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"2707:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2697:42:7"},"src":"2678:62:7"},{"anonymous":false,"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"2746:115:7","text":"@notice Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal."},"id":1199,"name":"RelayServerAbandoned","nameLocation":"2872:20:7","nodeType":"EventDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"2918:12:7","nodeType":"VariableDeclaration","scope":1199,"src":"2902:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"indexed":false,"mutability":"mutable","name":"abandonedTime","nameLocation":"2948:13:7","nodeType":"VariableDeclaration","scope":1199,"src":"2940:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2892:75:7"},"src":"2866:102:7"},{"anonymous":false,"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"2974:115:7","text":"@notice Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned."},"id":1206,"name":"RelayServerKeepalive","nameLocation":"3100:20:7","nodeType":"EventDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"3146:12:7","nodeType":"VariableDeclaration","scope":1206,"src":"3130:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"indexed":false,"mutability":"mutable","name":"keepaliveTime","nameLocation":"3176:13:7","nodeType":"VariableDeclaration","scope":1206,"src":"3168:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3168:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3120:75:7"},"src":"3094:102:7"},{"anonymous":false,"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"3202:116:7","text":"@notice Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`."},"id":1218,"name":"AbandonedRelayManagerStakeEscheated","nameLocation":"3329:35:7","nodeType":"EventDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"indexed":true,"mutability":"mutable","name":"relayManager","nameLocation":"3390:12:7","nodeType":"VariableDeclaration","scope":1218,"src":"3374:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"3374:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3428:5:7","nodeType":"VariableDeclaration","scope":1218,"src":"3412:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"3450:5:7","nodeType":"VariableDeclaration","scope":1218,"src":"3443:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"},"typeName":{"id":1213,"nodeType":"UserDefinedTypeName","pathNode":{"id":1212,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"3443:6:7"},"referencedDeclaration":3029,"src":"3443:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1216,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3473:6:7","nodeType":"VariableDeclaration","scope":1218,"src":"3465:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3364:121:7"},"src":"3323:163:7"},{"canonicalName":"IStakeManager.StakeInfo","id":1234,"members":[{"constant":false,"id":1220,"mutability":"mutable","name":"stake","nameLocation":"3934:5:7","nodeType":"VariableDeclaration","scope":1234,"src":"3926:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"unstakeDelay","nameLocation":"3957:12:7","nodeType":"VariableDeclaration","scope":1234,"src":"3949:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3949:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"withdrawTime","nameLocation":"3987:12:7","nodeType":"VariableDeclaration","scope":1234,"src":"3979:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3979:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1226,"mutability":"mutable","name":"abandonedTime","nameLocation":"4017:13:7","nodeType":"VariableDeclaration","scope":1234,"src":"4009:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"keepaliveTime","nameLocation":"4048:13:7","nodeType":"VariableDeclaration","scope":1234,"src":"4040:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4040:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"token","nameLocation":"4078:5:7","nodeType":"VariableDeclaration","scope":1234,"src":"4071:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"},"typeName":{"id":1230,"nodeType":"UserDefinedTypeName","pathNode":{"id":1229,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"4071:6:7"},"referencedDeclaration":3029,"src":"4071:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"owner","nameLocation":"4101:5:7","nodeType":"VariableDeclaration","scope":1234,"src":"4093:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"4093:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"3906:9:7","nodeType":"StructDefinition","scope":1394,"src":"3899:214:7","visibility":"public"},{"canonicalName":"IStakeManager.RelayHubInfo","id":1237,"members":[{"constant":false,"id":1236,"mutability":"mutable","name":"removalTime","nameLocation":"4157:11:7","nodeType":"VariableDeclaration","scope":1237,"src":"4149:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"4149:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RelayHubInfo","nameLocation":"4126:12:7","nodeType":"StructDefinition","scope":1394,"src":"4119:56:7","visibility":"public"},{"canonicalName":"IStakeManager.AbandonedRelayServerConfig","id":1244,"members":[{"constant":false,"id":1239,"mutability":"mutable","name":"devAddress","nameLocation":"4572:10:7","nodeType":"VariableDeclaration","scope":1244,"src":"4564:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"4564:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"abandonmentDelay","nameLocation":"4600:16:7","nodeType":"VariableDeclaration","scope":1244,"src":"4592:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4592:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"escheatmentDelay","nameLocation":"4634:16:7","nodeType":"VariableDeclaration","scope":1244,"src":"4626:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4626:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AbandonedRelayServerConfig","nameLocation":"4527:26:7","nodeType":"StructDefinition","scope":1394,"src":"4520:137:7","visibility":"public"},{"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"4663:257:7","text":" @notice Set the owner of a Relay Manager. Called only by the RelayManager itself.\n Note that owners cannot transfer ownership - if the entry already exists, reverts.\n @param owner - owner of the relay (as configured off-chain)"},"functionSelector":"fece3dd4","id":1250,"implemented":false,"kind":"function","modifiers":[],"name":"setRelayManagerOwner","nameLocation":"4934:20:7","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"owner","nameLocation":"4963:5:7","nodeType":"VariableDeclaration","scope":1250,"src":"4955:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"4955:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4954:15:7"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"4978:0:7"},"scope":1394,"src":"4925:54:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"4985:837:7","text":" @notice Put a stake for a relayManager and set its unstake delay.\n Only the owner can call this function. If the entry does not exist, reverts.\n The owner must give allowance of the ERC-20 token to the StakeManager before calling this method.\n It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.\n @param token The address of an ERC-20 token that is used by the relayManager as a stake\n @param relayManager The address that represents a stake entry and controls relay registrations on relay hubs\n @param unstakeDelay The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`\n @param amount The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake"},"functionSelector":"14080fac","id":1263,"implemented":false,"kind":"function","modifiers":[],"name":"stakeForRelayManager","nameLocation":"5836:20:7","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"token","nameLocation":"5864:5:7","nodeType":"VariableDeclaration","scope":1263,"src":"5857:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"},"typeName":{"id":1253,"nodeType":"UserDefinedTypeName","pathNode":{"id":1252,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"5857:6:7"},"referencedDeclaration":3029,"src":"5857:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3029","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"relayManager","nameLocation":"5879:12:7","nodeType":"VariableDeclaration","scope":1263,"src":"5871:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"5871:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"unstakeDelay","nameLocation":"5901:12:7","nodeType":"VariableDeclaration","scope":1263,"src":"5893:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"5893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"amount","nameLocation":"5923:6:7","nodeType":"VariableDeclaration","scope":1263,"src":"5915:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5856:74:7"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[],"src":"5939:0:7"},"scope":1394,"src":"5827:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"5946:220:7","text":" @notice Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.\n @param relayManager The address of a Relay Manager whose stake is to be unlocked."},"functionSelector":"4a1ce599","id":1269,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"6180:11:7","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"relayManager","nameLocation":"6200:12:7","nodeType":"VariableDeclaration","scope":1269,"src":"6192:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"6192:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6191:22:7"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"6222:0:7"},"scope":1394,"src":"6171:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"6228:145:7","text":" @notice Withdraw the unlocked stake.\n @param relayManager The address of a Relay Manager whose stake is to be withdrawn."},"functionSelector":"c23a5cea","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"6387:13:7","nodeType":"FunctionDefinition","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"relayManager","nameLocation":"6409:12:7","nodeType":"VariableDeclaration","scope":1275,"src":"6401:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"6401:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6400:22:7"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[],"src":"6431:0:7"},"scope":1394,"src":"6378:54:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"6438:395:7","text":" @notice Add the `RelayHub` to a list of authorized by this Relay Manager.\n This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.\n @param relayManager The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.\n @param relayHub The address of a `RelayHub` to be authorized."},"functionSelector":"7835d296","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeHubByOwner","nameLocation":"6847:19:7","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"relayManager","nameLocation":"6875:12:7","nodeType":"VariableDeclaration","scope":1283,"src":"6867:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"6867:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"relayHub","nameLocation":"6897:8:7","nodeType":"VariableDeclaration","scope":1283,"src":"6889:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"6889:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6866:40:7"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"6915:0:7"},"scope":1394,"src":"6838:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"6922:102:7","text":" @notice Same as `authorizeHubByOwner` but can be called by the RelayManager itself."},"functionSelector":"d48a9d43","id":1289,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeHubByManager","nameLocation":"7038:21:7","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"relayHub","nameLocation":"7068:8:7","nodeType":"VariableDeclaration","scope":1289,"src":"7060:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"7060:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7059:18:7"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[],"src":"7086:0:7"},"scope":1394,"src":"7029:58:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"7093:227:7","text":" @notice Remove the `RelayHub` from a list of authorized by this Relay Manager.\n @param relayManager The address of a Relay Manager.\n @param relayHub The address of a `RelayHub` to be unauthorized."},"functionSelector":"f48f8ac7","id":1297,"implemented":false,"kind":"function","modifiers":[],"name":"unauthorizeHubByOwner","nameLocation":"7334:21:7","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"relayManager","nameLocation":"7364:12:7","nodeType":"VariableDeclaration","scope":1297,"src":"7356:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"7356:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"relayHub","nameLocation":"7386:8:7","nodeType":"VariableDeclaration","scope":1297,"src":"7378:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"7378:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7355:40:7"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"7404:0:7"},"scope":1394,"src":"7325:80:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"7411:104:7","text":" @notice Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself."},"functionSelector":"f9bce311","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"unauthorizeHubByManager","nameLocation":"7529:23:7","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"relayHub","nameLocation":"7561:8:7","nodeType":"VariableDeclaration","scope":1303,"src":"7553:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"7553:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7552:18:7"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"7579:0:7"},"scope":1394,"src":"7520:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"7586:361:7","text":" Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.\n @param relayManager The address of a Relay Manager to be penalized.\n @param beneficiary The address that receives part of the penalty amount.\n @param amount A total amount of penalty to be withdrawn from stake."},"functionSelector":"09a08af4","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"penalizeRelayManager","nameLocation":"7961:20:7","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"relayManager","nameLocation":"7990:12:7","nodeType":"VariableDeclaration","scope":1313,"src":"7982:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"7982:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"beneficiary","nameLocation":"8012:11:7","nodeType":"VariableDeclaration","scope":1313,"src":"8004:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"8004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"amount","nameLocation":"8033:6:7","nodeType":"VariableDeclaration","scope":1313,"src":"8025:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"8025:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7981:59:7"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"8049:0:7"},"scope":1394,"src":"7952:98:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"8056:241:7","text":" @notice Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay.\n Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned."},"functionSelector":"71fa1faf","id":1319,"implemented":false,"kind":"function","modifiers":[],"name":"markRelayAbandoned","nameLocation":"8311:18:7","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"relayManager","nameLocation":"8338:12:7","nodeType":"VariableDeclaration","scope":1319,"src":"8330:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"8330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8329:22:7"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[],"src":"8360:0:7"},"scope":1394,"src":"8302:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"8367:282:7","text":" @notice If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager\n has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and\n balance will be taken from this relay."},"functionSelector":"a9aadcd7","id":1325,"implemented":false,"kind":"function","modifiers":[],"name":"escheatAbandonedRelayStake","nameLocation":"8663:26:7","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"relayManager","nameLocation":"8698:12:7","nodeType":"VariableDeclaration","scope":1325,"src":"8690:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"8690:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8689:22:7"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"8720:0:7"},"scope":1394,"src":"8654:67:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"8727:210:7","text":" @notice Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned.\n Can be called by an authorized `RelayHub` or by the `relayOwner` address."},"functionSelector":"46dcbf0b","id":1331,"implemented":false,"kind":"function","modifiers":[],"name":"updateRelayKeepaliveTime","nameLocation":"8951:24:7","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"relayManager","nameLocation":"8984:12:7","nodeType":"VariableDeclaration","scope":1331,"src":"8976:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8975:22:7"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"9006:0:7"},"scope":1394,"src":"8942:65:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"9013:206:7","text":" @notice Check if the Relay Manager can be considered abandoned or not.\n Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise."},"functionSelector":"39622167","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"isRelayEscheatable","nameLocation":"9233:18:7","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"relayManager","nameLocation":"9260:12:7","nodeType":"VariableDeclaration","scope":1339,"src":"9252:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"9252:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9251:22:7"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"9296:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1336,"name":"bool","nodeType":"ElementaryTypeName","src":"9296:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9295:6:7"},"scope":1394,"src":"9224:78:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"9308:387:7","text":" @notice Get the stake details information for the given Relay Manager.\n @param relayManager The address of a Relay Manager.\n @return stakeInfo The `StakeInfo` structure.\n @return isSenderAuthorizedHub `true` if the `msg.sender` for this call was a `RelayHub` that is authorized now.\n `false` if the `msg.sender` for this call is not authorized."},"functionSelector":"c3453153","id":1350,"implemented":false,"kind":"function","modifiers":[],"name":"getStakeInfo","nameLocation":"9709:12:7","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"relayManager","nameLocation":"9730:12:7","nodeType":"VariableDeclaration","scope":1350,"src":"9722:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"9722:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9721:22:7"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"stakeInfo","nameLocation":"9784:9:7","nodeType":"VariableDeclaration","scope":1350,"src":"9767:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$1234_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":1345,"nodeType":"UserDefinedTypeName","pathNode":{"id":1344,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"9767:9:7"},"referencedDeclaration":1234,"src":"9767:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$1234_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"isSenderAuthorizedHub","nameLocation":"9800:21:7","nodeType":"VariableDeclaration","scope":1350,"src":"9795:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1347,"name":"bool","nodeType":"ElementaryTypeName","src":"9795:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9766:56:7"},"scope":1394,"src":"9700:123:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"9829:132:7","text":" @return The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake."},"functionSelector":"afcb7752","id":1356,"implemented":false,"kind":"function","modifiers":[],"name":"getMaxUnstakeDelay","nameLocation":"9975:18:7","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[],"src":"9993:2:7"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"10019:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"10019:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10018:9:7"},"scope":1394,"src":"9966:62:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"10034:201:7","text":" @notice Change the address that will receive the 'burned' part of the penalized stake.\n This is done to prevent malicious Relay Server from penalizing itself and breaking even."},"functionSelector":"4b0e7216","id":1362,"implemented":false,"kind":"function","modifiers":[],"name":"setBurnAddress","nameLocation":"10249:14:7","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"_burnAddress","nameLocation":"10272:12:7","nodeType":"VariableDeclaration","scope":1362,"src":"10264:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"10264:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10263:22:7"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[],"src":"10294:0:7"},"scope":1394,"src":"10240:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"10301:98:7","text":" @return The address that will receive the 'burned' part of the penalized stake."},"functionSelector":"38b39d29","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"getBurnAddress","nameLocation":"10413:14:7","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"10427:2:7"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"10453:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"10453:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10452:9:7"},"scope":1394,"src":"10404:58:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"10468:181:7","text":" @notice Change the address that will receive the 'abandoned' stake.\n This is done to prevent Relay Servers that lost their keys from losing access to funds."},"functionSelector":"d0d41fe1","id":1374,"implemented":false,"kind":"function","modifiers":[],"name":"setDevAddress","nameLocation":"10663:13:7","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"_burnAddress","nameLocation":"10685:12:7","nodeType":"VariableDeclaration","scope":1374,"src":"10677:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"10677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10676:22:7"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"10707:0:7"},"scope":1394,"src":"10654:54:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"10714:106:7","text":" @return The structure that contains all configuration values for the 'abandoned' stake."},"functionSelector":"c5f06743","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"getAbandonedRelayServerConfig","nameLocation":"10834:29:7","nodeType":"FunctionDefinition","parameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"10863:2:7"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"10889:33:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AbandonedRelayServerConfig_$1244_memory_ptr","typeString":"struct IStakeManager.AbandonedRelayServerConfig"},"typeName":{"id":1378,"nodeType":"UserDefinedTypeName","pathNode":{"id":1377,"name":"AbandonedRelayServerConfig","nodeType":"IdentifierPath","referencedDeclaration":1244,"src":"10889:26:7"},"referencedDeclaration":1244,"src":"10889:26:7","typeDescriptions":{"typeIdentifier":"t_struct$_AbandonedRelayServerConfig_$1244_storage_ptr","typeString":"struct IStakeManager.AbandonedRelayServerConfig"}},"visibility":"internal"}],"src":"10888:35:7"},"scope":1394,"src":"10825:99:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"10930:84:7","text":" @return the block number in which the contract has been deployed."},"functionSelector":"20ffd56d","id":1387,"implemented":false,"kind":"function","modifiers":[],"name":"getCreationBlock","nameLocation":"11028:16:7","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"11044:2:7"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1387,"src":"11070:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11069:9:7"},"scope":1394,"src":"11019:60:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"11085:85:7","text":" @return a SemVer-compliant version of the `StakeManager` contract."},"functionSelector":"47116c6e","id":1393,"implemented":false,"kind":"function","modifiers":[],"name":"versionSM","nameLocation":"11184:9:7","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"11193:2:7"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1393,"src":"11219:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1390,"name":"string","nodeType":"ElementaryTypeName","src":"11219:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11218:15:7"},"scope":1394,"src":"11175:59:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1395,"src":"913:10323:7","usedErrors":[]}],"src":"41:11196:7"},"id":7},"@opengsn/contracts/src/utils/GsnEip712Library.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/utils/GsnEip712Library.sol","exportedSymbols":{"GsnEip712Library":[1781],"GsnTypes":[1809],"GsnUtils":[1889],"IERC165":[3306],"IERC2771Recipient":[663],"IForwarder":[639],"MinLibBytes":[2004]},"id":1782,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1396,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"41:23:8"},{"id":1397,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"65:19:8"},{"absolutePath":"@opengsn/contracts/src/utils/GsnTypes.sol","file":"../utils/GsnTypes.sol","id":1398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1782,"sourceUnit":1810,"src":"86:31:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol","file":"../interfaces/IERC2771Recipient.sol","id":1399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1782,"sourceUnit":664,"src":"118:45:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/forwarder/IForwarder.sol","file":"../forwarder/IForwarder.sol","id":1400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1782,"sourceUnit":640,"src":"164:37:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/utils/GsnUtils.sol","file":"./GsnUtils.sol","id":1401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1782,"sourceUnit":1890,"src":"203:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"229:150:8","text":" @title The ERC-712 Library for GSN\n @notice Bridge Library to convert a GSN RelayRequest into a valid `ForwardRequest` for a `Forwarder`."},"fullyImplemented":true,"id":1781,"linearizedBaseContracts":[1781],"name":"GsnEip712Library","nameLocation":"388:16:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1405,"mutability":"constant","name":"MAX_RETURN_SIZE","nameLocation":"544:15:8","nodeType":"VariableDeclaration","scope":1781,"src":"519:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303234","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"562:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"1024"},"visibility":"private"},{"constant":true,"functionSelector":"066a310c","id":1408,"mutability":"constant","name":"GENERIC_PARAMS","nameLocation":"685:14:8","nodeType":"VariableDeclaration","scope":1781,"src":"662:139:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"662:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c627974657320646174612c75696e743235362076616c6964556e74696c54696d65","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"702:99:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_33f12fe95872be7be9c474c0e99a56a1b0cad386a14d26df2bb11622e5368f9b","typeString":"literal_string \"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntilTime\""},"value":"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntilTime"},"visibility":"public"},{"constant":true,"functionSelector":"c46cf83f","id":1411,"mutability":"constant","name":"RELAYDATA_TYPE","nameLocation":"830:14:8","nodeType":"VariableDeclaration","scope":1781,"src":"808:229:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"52656c6179446174612875696e74323536206d61784665655065724761732c75696e74323536206d61785072696f726974794665655065724761732c75696e74323536207472616e73616374696f6e43616c6c64617461476173557365642c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"847:190:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5ea90dda9219120f9d08877180c718e673bc3e452715c45f7d7c9bd6548dacf","typeString":"literal_string \"RelayData(uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 transactionCalldataGasUsed,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\""},"value":"RelayData(uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 transactionCalldataGasUsed,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)"},"visibility":"public"},{"constant":true,"functionSelector":"987673f7","id":1414,"mutability":"constant","name":"RELAY_REQUEST_NAME","nameLocation":"1067:18:8","nodeType":"VariableDeclaration","scope":1781,"src":"1044:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1412,"name":"string","nodeType":"ElementaryTypeName","src":"1044:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"52656c617952657175657374","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1088:14:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9474f9de570f8c3456d0ad4af045975f85d14cb683a1e7b73535cecf52ff41f8","typeString":"literal_string \"RelayRequest\""},"value":"RelayRequest"},"visibility":"public"},{"constant":true,"functionSelector":"931cd38f","id":1424,"mutability":"constant","name":"RELAY_REQUEST_SUFFIX","nameLocation":"1131:20:8","nodeType":"VariableDeclaration","scope":1781,"src":"1108:110:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1415,"name":"string","nodeType":"ElementaryTypeName","src":"1108:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"arguments":[{"arguments":[{"hexValue":"52656c6179446174612072656c61794461746129","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1178:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f","typeString":"literal_string \"RelayData relayData)\""},"value":"RelayData relayData)"},{"id":1421,"name":"RELAYDATA_TYPE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1202:14:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f","typeString":"literal_string \"RelayData relayData)\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1418,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1161:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1161:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1161:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1154:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1416,"name":"string","nodeType":"ElementaryTypeName","src":"1154:6:8","typeDescriptions":{}}},"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1154:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"visibility":"public"},{"constant":true,"functionSelector":"6225e61b","id":1434,"mutability":"constant","name":"RELAY_REQUEST_TYPE","nameLocation":"1247:18:8","nodeType":"VariableDeclaration","scope":1781,"src":"1225:133:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1425,"name":"bytes","nodeType":"ElementaryTypeName","src":"1225:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"arguments":[{"id":1428,"name":"RELAY_REQUEST_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1294:18:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"28","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1313:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a","typeString":"literal_string \"(\""},"value":"("},{"id":1430,"name":"GENERIC_PARAMS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"1317:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1332:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"id":1432,"name":"RELAY_REQUEST_SUFFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1337:20:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a","typeString":"literal_string \"(\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1426,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1268:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1268:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1268:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"visibility":"public"},{"constant":true,"functionSelector":"cc0c62b2","id":1439,"mutability":"constant","name":"RELAYDATA_TYPEHASH","nameLocation":"1389:18:8","nodeType":"VariableDeclaration","scope":1781,"src":"1365:70:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"id":1437,"name":"RELAYDATA_TYPE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"1420:14:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1436,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1410:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1410:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"abf0d3f4","id":1444,"mutability":"constant","name":"RELAY_REQUEST_TYPEHASH","nameLocation":"1465:22:8","nodeType":"VariableDeclaration","scope":1781,"src":"1441:78:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1441:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"id":1442,"name":"RELAY_REQUEST_TYPE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"1500:18:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1441,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1490:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1490:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"GsnEip712Library.EIP712Domain","id":1453,"members":[{"constant":false,"id":1446,"mutability":"mutable","name":"name","nameLocation":"1564:4:8","nodeType":"VariableDeclaration","scope":1453,"src":"1557:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1445,"name":"string","nodeType":"ElementaryTypeName","src":"1557:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"version","nameLocation":"1585:7:8","nodeType":"VariableDeclaration","scope":1453,"src":"1578:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1447,"name":"string","nodeType":"ElementaryTypeName","src":"1578:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"chainId","nameLocation":"1610:7:8","nodeType":"VariableDeclaration","scope":1453,"src":"1602:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"verifyingContract","nameLocation":"1635:17:8","nodeType":"VariableDeclaration","scope":1453,"src":"1627:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"EIP712Domain","nameLocation":"1534:12:8","nodeType":"StructDefinition","scope":1781,"src":"1527:132:8","visibility":"public"},{"constant":true,"functionSelector":"c49f91d3","id":1458,"mutability":"constant","name":"EIP712DOMAIN_TYPEHASH","nameLocation":"1689:21:8","nodeType":"VariableDeclaration","scope":1781,"src":"1665:157:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1665:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1732:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1455,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1713:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1713:109:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":1476,"nodeType":"Block","src":"1975:83:8","statements":[{"expression":{"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1466,"name":"suffixData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1985:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":1470,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2036:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"2036:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}],"id":1469,"name":"hashRelayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2022:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RelayData_$1801_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct GsnTypes.RelayData calldata) pure returns (bytes32)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2022:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1467,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1998:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1998:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1998:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1985:66:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1475,"nodeType":"ExpressionStatement","src":"1985:66:8"}]},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"splitRequest","nameLocation":"1838:12:8","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"req","nameLocation":"1891:3:8","nodeType":"VariableDeclaration","scope":1477,"src":"1860:34:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":1460,"nodeType":"UserDefinedTypeName","pathNode":{"id":1459,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"1860:21:8"},"referencedDeclaration":1808,"src":"1860:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"}],"src":"1850:50:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"suffixData","nameLocation":"1958:10:8","nodeType":"VariableDeclaration","scope":1477,"src":"1945:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1463,"name":"bytes","nodeType":"ElementaryTypeName","src":"1945:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1935:39:8"},"scope":1781,"src":"1829:229:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"2249:449:8","statements":[{"assignments":[1484,1486],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"success","nameLocation":"2265:7:8","nodeType":"VariableDeclaration","scope":1526,"src":"2260:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1483,"name":"bool","nodeType":"ElementaryTypeName","src":"2260:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"ret","nameLocation":"2287:3:8","nodeType":"VariableDeclaration","scope":1526,"src":"2274:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1485,"name":"bytes","nodeType":"ElementaryTypeName","src":"2274:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1501,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":1493,"name":"IERC2771Recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2382:17:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2771Recipient_$663_$","typeString":"type(contract IERC2771Recipient)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"isTrustedForwarder","nodeType":"MemberAccess","referencedDeclaration":650,"src":"2382:36:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_bool_$","typeString":"function IERC2771Recipient.isTrustedForwarder(address) view returns (bool)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2382:45:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"expression":{"id":1496,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2429:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"2429:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forwarder","nodeType":"MemberAccess","referencedDeclaration":1796,"src":"2429:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1491,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2342:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2342:22:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2342:133:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"expression":{"id":1487,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"2294:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2294:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":557,"src":"2294:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"2294:34:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:191:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2259:226:8"},{"expression":{"arguments":[{"id":1503,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"2503:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"697354727573746564466f727761726465723a207265766572746564","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2512:30:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e","typeString":"literal_string \"isTrustedForwarder: reverted\""},"value":"isTrustedForwarder: reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e","typeString":"literal_string \"isTrustedForwarder: reverted\""}],"id":1502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2495:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2495:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"2495:48:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1508,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2561:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2561:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2575:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2561:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"697354727573746564466f727761726465723a2062616420726573706f6e7365","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2579:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325","typeString":"literal_string \"isTrustedForwarder: bad response\""},"value":"isTrustedForwarder: bad response"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325","typeString":"literal_string \"isTrustedForwarder: bad response\""}],"id":1507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2553:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2553:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"ExpressionStatement","src":"2553:61:8"},{"expression":{"arguments":[{"arguments":[{"id":1518,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"2643:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1519,"name":"bool","nodeType":"ElementaryTypeName","src":"2649:4:8","typeDescriptions":{}}}],"id":1521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2648:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1516,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2632:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"2632:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2632:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420666f7277617264657220666f7220726563697069656e74","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4","typeString":"literal_string \"invalid forwarder for recipient\""},"value":"invalid forwarder for recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4","typeString":"literal_string \"invalid forwarder for recipient\""}],"id":1515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2624:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2624:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"ExpressionStatement","src":"2624:67:8"}]},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"verifyForwarderTrusted","nameLocation":"2167:22:8","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"relayRequest","nameLocation":"2221:12:8","nodeType":"VariableDeclaration","scope":1527,"src":"2190:43:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":1479,"nodeType":"UserDefinedTypeName","pathNode":{"id":1478,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"2190:21:8"},"referencedDeclaration":1808,"src":"2190:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"}],"src":"2189:45:8"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"2249:0:8"},"scope":1781,"src":"2158:540:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"2879:377:8","statements":[{"assignments":[1538],"declarations":[{"constant":false,"id":1538,"mutability":"mutable","name":"suffixData","nameLocation":"2903:10:8","nodeType":"VariableDeclaration","scope":1575,"src":"2890:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1537,"name":"bytes","nodeType":"ElementaryTypeName","src":"2890:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1542,"initialValue":{"arguments":[{"id":1540,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2930:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}],"id":1539,"name":"splitRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"2917:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RelayRequest_$1808_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct GsnTypes.RelayRequest calldata) pure returns (bytes memory)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2917:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2889:54:8"},{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"_domainSeparator","nameLocation":"2961:16:8","nodeType":"VariableDeclaration","scope":1575,"src":"2953:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2953:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1551,"initialValue":{"arguments":[{"id":1546,"name":"domainSeparatorName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2996:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"expression":{"id":1547,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"3017:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"3017:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forwarder","nodeType":"MemberAccess","referencedDeclaration":1796,"src":"3017:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1545,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"2980:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bytes32_$","typeString":"function (string memory,address) view returns (bytes32)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2980:70:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2953:97:8"},{"assignments":[1554],"declarations":[{"constant":false,"id":1554,"mutability":"mutable","name":"forwarder","nameLocation":"3071:9:8","nodeType":"VariableDeclaration","scope":1575,"src":"3060:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarder_$639","typeString":"contract IForwarder"},"typeName":{"id":1553,"nodeType":"UserDefinedTypeName","pathNode":{"id":1552,"name":"IForwarder","nodeType":"IdentifierPath","referencedDeclaration":639,"src":"3060:10:8"},"referencedDeclaration":639,"src":"3060:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarder_$639","typeString":"contract IForwarder"}},"visibility":"internal"}],"id":1563,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":1558,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"3102:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"3102:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forwarder","nodeType":"MemberAccess","referencedDeclaration":1796,"src":"3102:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3094:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"3094:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3094:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":1555,"name":"IForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3083:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IForwarder_$639_$","typeString":"type(contract IForwarder)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3083:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IForwarder_$639","typeString":"contract IForwarder"}},"nodeType":"VariableDeclarationStatement","src":"3060:76:8"},{"expression":{"arguments":[{"expression":{"id":1567,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"3163:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"3163:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},{"id":1569,"name":"_domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3185:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1570,"name":"RELAY_REQUEST_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"3203:22:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1571,"name":"suffixData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"3227:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1572,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"3239:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1564,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3146:9:8","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarder_$639","typeString":"contract IForwarder"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":603,"src":"3146:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_ForwardRequest_$568_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IForwarder.ForwardRequest memory,bytes32,bytes32,bytes memory,bytes memory) view external"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3146:103:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1574,"nodeType":"ExpressionStatement","src":"3146:103:8"}]},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignature","nameLocation":"2713:15:8","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"domainSeparatorName","nameLocation":"2752:19:8","nodeType":"VariableDeclaration","scope":1576,"src":"2738:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1528,"name":"string","nodeType":"ElementaryTypeName","src":"2738:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"relayRequest","nameLocation":"2812:12:8","nodeType":"VariableDeclaration","scope":1576,"src":"2781:43:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":1531,"nodeType":"UserDefinedTypeName","pathNode":{"id":1530,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"2781:21:8"},"referencedDeclaration":1808,"src":"2781:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"signature","nameLocation":"2849:9:8","nodeType":"VariableDeclaration","scope":1576,"src":"2834:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1533,"name":"bytes","nodeType":"ElementaryTypeName","src":"2834:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2728:136:8"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"2879:0:8"},"scope":1781,"src":"2704:552:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"3428:124:8","statements":[{"expression":{"arguments":[{"id":1587,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"3461:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}],"id":1586,"name":"verifyForwarderTrusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3438:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_RelayRequest_$1808_calldata_ptr_$returns$__$","typeString":"function (struct GsnTypes.RelayRequest calldata) view"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3438:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1589,"nodeType":"ExpressionStatement","src":"3438:36:8"},{"expression":{"arguments":[{"id":1591,"name":"domainSeparatorName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"3500:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1592,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"3521:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},{"id":1593,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3535:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1590,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"3484:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_struct$_RelayRequest_$1808_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (string memory,struct GsnTypes.RelayRequest calldata,bytes calldata) view"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3484:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"ExpressionStatement","src":"3484:61:8"}]},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3271:6:8","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"domainSeparatorName","nameLocation":"3301:19:8","nodeType":"VariableDeclaration","scope":1597,"src":"3287:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1577,"name":"string","nodeType":"ElementaryTypeName","src":"3287:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"relayRequest","nameLocation":"3361:12:8","nodeType":"VariableDeclaration","scope":1597,"src":"3330:43:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":1580,"nodeType":"UserDefinedTypeName","pathNode":{"id":1579,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"3330:21:8"},"referencedDeclaration":1808,"src":"3330:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"signature","nameLocation":"3398:9:8","nodeType":"VariableDeclaration","scope":1597,"src":"3383:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1582,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3277:136:8"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"3428:0:8"},"scope":1781,"src":"3262:290:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1671,"nodeType":"Block","src":"3818:669:8","statements":[{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"suffixData","nameLocation":"3842:10:8","nodeType":"VariableDeclaration","scope":1671,"src":"3829:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1613,"name":"bytes","nodeType":"ElementaryTypeName","src":"3829:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1616,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"3869:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}],"id":1615,"name":"splitRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"3856:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RelayRequest_$1808_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct GsnTypes.RelayRequest calldata) pure returns (bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3856:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3828:54:8"},{"assignments":[1620],"declarations":[{"constant":false,"id":1620,"mutability":"mutable","name":"_domainSeparator","nameLocation":"3900:16:8","nodeType":"VariableDeclaration","scope":1671,"src":"3892:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3892:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1627,"initialValue":{"arguments":[{"id":1622,"name":"domainSeparatorName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"3935:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"expression":{"id":1623,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"3956:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"3956:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forwarder","nodeType":"MemberAccess","referencedDeclaration":1796,"src":"3956:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1621,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"3919:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$_t_bytes32_$","typeString":"function (string memory,address) view returns (bytes32)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3919:70:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3892:97:8"},{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1628,"name":"forwarderSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"4062:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1629,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4080:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1630,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4061:23:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"expression":{"id":1637,"name":"IForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4161:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IForwarder_$639_$","typeString":"type(contract IForwarder)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":622,"src":"4161:18:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_payable$_t_struct$_ForwardRequest_$568_calldata_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function IForwarder.execute(struct IForwarder.ForwardRequest calldata,bytes32,bytes32,bytes calldata,bytes calldata) payable returns (bool,bytes memory)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4161:27:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"id":1640,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"4202:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"4202:20:8","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},{"id":1642,"name":"_domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"4224:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1643,"name":"RELAY_REQUEST_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4242:22:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1644,"name":"suffixData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"4266:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1645,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"4278:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1635,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4138:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4138:22:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4138:159:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"expression":{"id":1631,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"4087:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"4087:22:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forwarder","nodeType":"MemberAccess","referencedDeclaration":1796,"src":"4087:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4087:37:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4087:211:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"4061:237:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1649,"nodeType":"ExpressionStatement","src":"4061:237:8"},{"condition":{"id":1650,"name":"forwarderSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"4313:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"IfStatement","src":"4308:143:8","trueBody":{"id":1665,"nodeType":"Block","src":"4332:119:8","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1651,"name":"callSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4390:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1652,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4403:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1653,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4389:18:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1656,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4421:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4427:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"4427:4:8","typeDescriptions":{}}},{"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4433:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1659,"name":"bytes","nodeType":"ElementaryTypeName","src":"4433:5:8","typeDescriptions":{}}}],"id":1661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4426:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bool),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bool),type(bytes storage pointer))"}],"expression":{"id":1654,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4410:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4410:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4410:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"4389:51:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1664,"nodeType":"ExpressionStatement","src":"4389:51:8"}]}},{"expression":{"arguments":[{"id":1668,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4476:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1667,"name":"truncateInPlace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"4460:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4460:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"ExpressionStatement","src":"4460:20:8"}]},"id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3567:7:8","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"domainSeparatorName","nameLocation":"3598:19:8","nodeType":"VariableDeclaration","scope":1672,"src":"3584:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1598,"name":"string","nodeType":"ElementaryTypeName","src":"3584:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"relayRequest","nameLocation":"3658:12:8","nodeType":"VariableDeclaration","scope":1672,"src":"3627:43:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":1601,"nodeType":"UserDefinedTypeName","pathNode":{"id":1600,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"3627:21:8"},"referencedDeclaration":1808,"src":"3627:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"signature","nameLocation":"3695:9:8","nodeType":"VariableDeclaration","scope":1672,"src":"3680:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1603,"name":"bytes","nodeType":"ElementaryTypeName","src":"3680:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3574:136:8"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"forwarderSuccess","nameLocation":"3743:16:8","nodeType":"VariableDeclaration","scope":1672,"src":"3738:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1606,"name":"bool","nodeType":"ElementaryTypeName","src":"3738:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"callSuccess","nameLocation":"3774:11:8","nodeType":"VariableDeclaration","scope":1672,"src":"3769:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1608,"name":"bool","nodeType":"ElementaryTypeName","src":"3769:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"ret","nameLocation":"3808:3:8","nodeType":"VariableDeclaration","scope":1672,"src":"3795:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1610,"name":"bytes","nodeType":"ElementaryTypeName","src":"3795:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3728:89:8"},"scope":1781,"src":"3558:929:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1684,"nodeType":"Block","src":"4771:67:8","statements":[{"expression":{"arguments":[{"id":1680,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"4809:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1681,"name":"MAX_RETURN_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"4815:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1677,"name":"MinLibBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"4781:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinLibBytes_$2004_$","typeString":"type(library MinLibBytes)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"truncateInPlace","nodeType":"MemberAccess","referencedDeclaration":1906,"src":"4781:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes memory,uint256) pure"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4781:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"ExpressionStatement","src":"4781:50:8"}]},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"truncateInPlace","nameLocation":"4722:15:8","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"data","nameLocation":"4751:4:8","nodeType":"VariableDeclaration","scope":1685,"src":"4738:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"4738:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4737:19:8"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"4771:0:8"},"scope":1781,"src":"4713:125:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"4940:195:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1696,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"5002:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"33","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5030:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de","typeString":"literal_string \"3\""},"value":"3"},{"arguments":[],"expression":{"argumentTypes":[],"id":1698,"name":"getChainID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"5057:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5057:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1700,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"5103:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de","typeString":"literal_string \"3\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1695,"name":"EIP712Domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"4968:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EIP712Domain_$1453_storage_ptr_$","typeString":"type(struct GsnEip712Library.EIP712Domain storage pointer)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["name","version","chainId","verifyingContract"],"nodeType":"FunctionCall","src":"4968:159:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Domain_$1453_memory_ptr","typeString":"struct GsnEip712Library.EIP712Domain memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_EIP712Domain_$1453_memory_ptr","typeString":"struct GsnEip712Library.EIP712Domain memory"}],"id":1694,"name":"hashDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4957:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_EIP712Domain_$1453_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct GsnEip712Library.EIP712Domain memory) pure returns (bytes32)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4957:171:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1693,"id":1703,"nodeType":"Return","src":"4950:178:8"}]},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"4853:15:8","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"name","nameLocation":"4883:4:8","nodeType":"VariableDeclaration","scope":1705,"src":"4869:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1686,"name":"string","nodeType":"ElementaryTypeName","src":"4869:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"forwarder","nameLocation":"4897:9:8","nodeType":"VariableDeclaration","scope":1705,"src":"4889:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"4889:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4868:39:8"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"4931:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4931:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4930:9:8"},"scope":1781,"src":"4844:291:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1711,"nodeType":"Block","src":"5198:113:8","statements":[{"AST":{"nodeType":"YulBlock","src":"5266:39:8","statements":[{"nodeType":"YulAssignment","src":"5280:15:8","value":{"arguments":[],"functionName":{"name":"chainid","nodeType":"YulIdentifier","src":"5286:7:8"},"nodeType":"YulFunctionCall","src":"5286:9:8"},"variableNames":[{"name":"id","nodeType":"YulIdentifier","src":"5280:2:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1708,"isOffset":false,"isSlot":false,"src":"5280:2:8","valueSize":1}],"id":1710,"nodeType":"InlineAssembly","src":"5257:48:8"}]},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"getChainID","nameLocation":"5150:10:8","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[],"src":"5160:2:8"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"id","nameLocation":"5194:2:8","nodeType":"VariableDeclaration","scope":1712,"src":"5186:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"5186:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5185:12:8"},"scope":1781,"src":"5141:170:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"5394:244:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1723,"name":"EIP712DOMAIN_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5449:21:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":1727,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5504:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Domain_$1453_memory_ptr","typeString":"struct GsnEip712Library.EIP712Domain memory"}},"id":1728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"name","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"5504:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5498:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1725,"name":"bytes","nodeType":"ElementaryTypeName","src":"5498:5:8","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5498:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1724,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5488:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5488:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"id":1734,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5548:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Domain_$1453_memory_ptr","typeString":"struct GsnEip712Library.EIP712Domain memory"}},"id":1735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"version","nodeType":"MemberAccess","referencedDeclaration":1448,"src":"5548:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5542:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1732,"name":"bytes","nodeType":"ElementaryTypeName","src":"5542:5:8","typeDescriptions":{}}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1731,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5532:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5532:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1738,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5579:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Domain_$1453_memory_ptr","typeString":"struct GsnEip712Library.EIP712Domain memory"}},"id":1739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"chainId","nodeType":"MemberAccess","referencedDeclaration":1450,"src":"5579:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1740,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"5608:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Domain_$1453_memory_ptr","typeString":"struct GsnEip712Library.EIP712Domain memory"}},"id":1741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"verifyingContract","nodeType":"MemberAccess","referencedDeclaration":1452,"src":"5608:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1721,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5421:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5421:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5421:209:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1720,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5411:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5411:220:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1719,"id":1744,"nodeType":"Return","src":"5404:227:8"}]},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"hashDomain","nameLocation":"5326:10:8","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"req","nameLocation":"5357:3:8","nodeType":"VariableDeclaration","scope":1746,"src":"5337:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Domain_$1453_memory_ptr","typeString":"struct GsnEip712Library.EIP712Domain"},"typeName":{"id":1714,"nodeType":"UserDefinedTypeName","pathNode":{"id":1713,"name":"EIP712Domain","nodeType":"IdentifierPath","referencedDeclaration":1453,"src":"5337:12:8"},"referencedDeclaration":1453,"src":"5337:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Domain_$1453_storage_ptr","typeString":"struct GsnEip712Library.EIP712Domain"}},"visibility":"internal"}],"src":"5336:25:8"},"returnParameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"5385:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5385:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5384:9:8"},"scope":1781,"src":"5317:321:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1779,"nodeType":"Block","src":"5732:390:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1757,"name":"RELAYDATA_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"5787:18:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1758,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5823:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":1786,"src":"5823:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1760,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5857:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":1788,"src":"5857:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1762,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5899:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transactionCalldataGasUsed","nodeType":"MemberAccess","referencedDeclaration":1790,"src":"5899:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1764,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5947:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayWorker","nodeType":"MemberAccess","referencedDeclaration":1792,"src":"5947:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1766,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5980:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"5980:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1768,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"6011:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"forwarder","nodeType":"MemberAccess","referencedDeclaration":1796,"src":"6011:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":1771,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"6052:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"paymasterData","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"6052:17:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1770,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6042:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6042:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1774,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"6088:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clientId","nodeType":"MemberAccess","referencedDeclaration":1800,"src":"6088:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1755,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5759:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5759:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5759:355:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1754,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5749:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5749:366:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1753,"id":1778,"nodeType":"Return","src":"5742:373:8"}]},"id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"hashRelayData","nameLocation":"5653:13:8","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"req","nameLocation":"5695:3:8","nodeType":"VariableDeclaration","scope":1780,"src":"5667:31:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData"},"typeName":{"id":1748,"nodeType":"UserDefinedTypeName","pathNode":{"id":1747,"name":"GsnTypes.RelayData","nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"5667:18:8"},"referencedDeclaration":1801,"src":"5667:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"}},"visibility":"internal"}],"src":"5666:33:8"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"5723:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5723:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5722:9:8"},"scope":1781,"src":"5644:478:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1782,"src":"380:5744:8","usedErrors":[]}],"src":"41:6084:8"},"id":8},"@opengsn/contracts/src/utils/GsnTypes.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/utils/GsnTypes.sol","exportedSymbols":{"GsnTypes":[1809],"IERC165":[3306],"IForwarder":[639]},"id":1810,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1783,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"41:23:9"},{"absolutePath":"@opengsn/contracts/src/forwarder/IForwarder.sol","file":"../forwarder/IForwarder.sol","id":1784,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1810,"sourceUnit":640,"src":"66:37:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":1809,"linearizedBaseContracts":[1809],"name":"GsnTypes","nameLocation":"115:8:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GsnTypes.RelayData","id":1801,"members":[{"constant":false,"id":1786,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"329:12:9","nodeType":"VariableDeclaration","scope":1801,"src":"321:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"359:20:9","nodeType":"VariableDeclaration","scope":1801,"src":"351:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"transactionCalldataGasUsed","nameLocation":"397:26:9","nodeType":"VariableDeclaration","scope":1801,"src":"389:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"relayWorker","nameLocation":"441:11:9","nodeType":"VariableDeclaration","scope":1801,"src":"433:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"433:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"paymaster","nameLocation":"470:9:9","nodeType":"VariableDeclaration","scope":1801,"src":"462:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"forwarder","nameLocation":"497:9:9","nodeType":"VariableDeclaration","scope":1801,"src":"489:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"489:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"paymasterData","nameLocation":"522:13:9","nodeType":"VariableDeclaration","scope":1801,"src":"516:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1797,"name":"bytes","nodeType":"ElementaryTypeName","src":"516:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"clientId","nameLocation":"553:8:9","nodeType":"VariableDeclaration","scope":1801,"src":"545:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RelayData","nameLocation":"301:9:9","nodeType":"StructDefinition","scope":1809,"src":"294:274:9","visibility":"public"},{"canonicalName":"GsnTypes.RelayRequest","id":1808,"members":[{"constant":false,"id":1804,"mutability":"mutable","name":"request","nameLocation":"721:7:9","nodeType":"VariableDeclaration","scope":1808,"src":"695:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_storage_ptr","typeString":"struct IForwarder.ForwardRequest"},"typeName":{"id":1803,"nodeType":"UserDefinedTypeName","pathNode":{"id":1802,"name":"IForwarder.ForwardRequest","nodeType":"IdentifierPath","referencedDeclaration":568,"src":"695:25:9"},"referencedDeclaration":568,"src":"695:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_storage_ptr","typeString":"struct IForwarder.ForwardRequest"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"relayData","nameLocation":"748:9:9","nodeType":"VariableDeclaration","scope":1808,"src":"738:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"},"typeName":{"id":1806,"nodeType":"UserDefinedTypeName","pathNode":{"id":1805,"name":"RelayData","nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"738:9:9"},"referencedDeclaration":1801,"src":"738:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"}},"visibility":"internal"}],"name":"RelayRequest","nameLocation":"672:12:9","nodeType":"StructDefinition","scope":1809,"src":"665:99:9","visibility":"public"}],"scope":1810,"src":"105:661:9","usedErrors":[]}],"src":"41:726:9"},"id":9},"@opengsn/contracts/src/utils/GsnUtils.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/utils/GsnUtils.sol","exportedSymbols":{"GsnTypes":[1809],"GsnUtils":[1889],"IERC165":[3306],"IForwarder":[639],"MinLibBytes":[2004]},"id":1890,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1811,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"82:23:10"},{"absolutePath":"@opengsn/contracts/src/utils/MinLibBytes.sol","file":"../utils/MinLibBytes.sol","id":1812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1890,"sourceUnit":2005,"src":"107:34:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@opengsn/contracts/src/utils/GsnTypes.sol","file":"./GsnTypes.sol","id":1813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1890,"sourceUnit":1810,"src":"142:24:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"168:125:10","text":" @title The GSN Solidity Utils Library\n @notice Some library functions used throughout the GSN Solidity codebase."},"fullyImplemented":true,"id":1889,"linearizedBaseContracts":[1889],"name":"GsnUtils","nameLocation":"302:8:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1817,"mutability":"constant","name":"RELAY_REQUEST_ID_MASK","nameLocation":"343:21:10","nodeType":"VariableDeclaration","scope":1889,"src":"318:115:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"318:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030304646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"367:66:10","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"visibility":"private"},{"body":{"id":1843,"nodeType":"Block","src":"1063:135:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"expression":{"id":1831,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1101:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"1101:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":555,"src":"1101:25:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1834,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1128:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"1128:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":563,"src":"1128:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1837,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"1156:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1829,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1090:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1090:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1090:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1828,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1080:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1080:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1840,"name":"RELAY_REQUEST_ID_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"1170:21:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1080:111:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1827,"id":1842,"nodeType":"Return","src":"1073:118:10"}]},"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"440:476:10","text":" @notice Calculate an identifier for the meta-transaction in a format similar to a transaction hash.\n Note that uniqueness relies on signature and may not be enforced if meta-transactions are verified\n with a different algorithm, e.g. when batching.\n @param relayRequest The `RelayRequest` for which an ID is being calculated.\n @param signature The signature for the `RelayRequest`. It is not validated here and may even remain empty."},"id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"getRelayRequestID","nameLocation":"930:17:10","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"relayRequest","nameLocation":"979:12:10","nodeType":"VariableDeclaration","scope":1844,"src":"948:43:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":1820,"nodeType":"UserDefinedTypeName","pathNode":{"id":1819,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"948:21:10"},"referencedDeclaration":1808,"src":"948:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"signature","nameLocation":"1008:9:10","nodeType":"VariableDeclaration","scope":1844,"src":"993:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"993:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"947:71:10"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1844,"src":"1054:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1054:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1053:9:10"},"scope":1889,"src":"921:277:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"1382:58:10","statements":[{"expression":{"arguments":[{"id":1854,"name":"msgData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1422:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1431:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1852,"name":"MinLibBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"1399:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinLibBytes_$2004_$","typeString":"type(library MinLibBytes)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readBytes4","nodeType":"MemberAccess","referencedDeclaration":2003,"src":"1399:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes4_$","typeString":"function (bytes memory,uint256) pure returns (bytes4)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1399:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1851,"id":1857,"nodeType":"Return","src":"1392:41:10"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"1204:98:10","text":" @notice Extract the method identifier signature from the encoded function call."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"getMethodSig","nameLocation":"1316:12:10","nodeType":"FunctionDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"msgData","nameLocation":"1342:7:10","nodeType":"VariableDeclaration","scope":1859,"src":"1329:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1328:22:10"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"1374:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1849,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:10"},"scope":1889,"src":"1307:133:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1879,"nodeType":"Block","src":"2005:72:10","statements":[{"expression":{"arguments":[{"id":1871,"name":"msgData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2046:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2059:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2067:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2059:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2055:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1869,"name":"MinLibBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"2022:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MinLibBytes_$2004_$","typeString":"type(library MinLibBytes)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"2022:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes memory,uint256) pure returns (uint256)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2022:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1868,"id":1878,"nodeType":"Return","src":"2015:55:10"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"1446:460:10","text":" @notice Extract a parameter from encoded-function block.\n see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\n The return value should be casted to the right type (`uintXXX`/`bytesXXX`/`address`/`bool`/`enum`).\n @param msgData Byte array containing a uint256 value.\n @param index Index in byte array of uint256 value.\n @return result uint256 value from byte array."},"id":1880,"implemented":true,"kind":"function","modifiers":[],"name":"getParam","nameLocation":"1920:8:10","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"msgData","nameLocation":"1942:7:10","nodeType":"VariableDeclaration","scope":1880,"src":"1929:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1861,"name":"bytes","nodeType":"ElementaryTypeName","src":"1929:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"index","nameLocation":"1959:5:10","nodeType":"VariableDeclaration","scope":1880,"src":"1951:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1951:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1928:37:10"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"result","nameLocation":"1997:6:10","nodeType":"VariableDeclaration","scope":1880,"src":"1989:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1989:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1988:16:10"},"scope":1889,"src":"1911:166:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1887,"nodeType":"Block","src":"2199:82:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2218:57:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2243:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"2248:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2239:3:10"},"nodeType":"YulFunctionCall","src":"2239:12:10"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2259:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2253:5:10"},"nodeType":"YulFunctionCall","src":"2253:11:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2232:6:10"},"nodeType":"YulFunctionCall","src":"2232:33:10"},"nodeType":"YulExpressionStatement","src":"2232:33:10"}]},"evmVersion":"london","externalReferences":[{"declaration":1883,"isOffset":false,"isSlot":false,"src":"2243:4:10","valueSize":1},{"declaration":1883,"isOffset":false,"isSlot":false,"src":"2259:4:10","valueSize":1}],"id":1886,"nodeType":"InlineAssembly","src":"2209:66:10"}]},"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"2083:54:10","text":"@notice Re-throw revert with the same revert data."},"id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"revertWithData","nameLocation":"2151:14:10","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"data","nameLocation":"2179:4:10","nodeType":"VariableDeclaration","scope":1888,"src":"2166:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"2166:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2165:19:10"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"2199:0:10"},"scope":1889,"src":"2142:139:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1890,"src":"294:1990:10","usedErrors":[]}],"src":"82:2203:10"},"id":10},"@opengsn/contracts/src/utils/MinLibBytes.sol":{"ast":{"absolutePath":"@opengsn/contracts/src/utils/MinLibBytes.sol","exportedSymbols":{"MinLibBytes":[2004]},"id":2005,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1891,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"156:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2004,"linearizedBaseContracts":[2004],"name":"MinLibBytes","nameLocation":"189:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1905,"nodeType":"Block","src":"502:99:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1898,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"516:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"516:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1900,"name":"maxlen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"530:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"516:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"512:83:11","trueBody":{"id":1903,"nodeType":"Block","src":"538:57:11","statements":[{"AST":{"nodeType":"YulBlock","src":"561:24:11","statements":[{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"570:4:11"},{"name":"maxlen","nodeType":"YulIdentifier","src":"576:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"563:6:11"},"nodeType":"YulFunctionCall","src":"563:20:11"},"nodeType":"YulExpressionStatement","src":"563:20:11"}]},"evmVersion":"london","externalReferences":[{"declaration":1893,"isOffset":false,"isSlot":false,"src":"570:4:11","valueSize":1},{"declaration":1895,"isOffset":false,"isSlot":false,"src":"576:6:11","valueSize":1}],"id":1902,"nodeType":"InlineAssembly","src":"552:33:11"}]}}]},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"truncateInPlace","nameLocation":"437:15:11","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"data","nameLocation":"466:4:11","nodeType":"VariableDeclaration","scope":1906,"src":"453:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1892,"name":"bytes","nodeType":"ElementaryTypeName","src":"453:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"maxlen","nameLocation":"480:6:11","nodeType":"VariableDeclaration","scope":1906,"src":"472:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:35:11"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"502:0:11"},"scope":2004,"src":"428:173:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1933,"nodeType":"Block","src":"963:673:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1917,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"982:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"982:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"994:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1002:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"994:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"982:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72656164416464726573733a206461746120746f6f2073686f7274","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1006:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff21d28ab53e736b05938ba9d5748dcb979d78d4c19815de87213f62c5dfe9a","typeString":"literal_string \"readAddress: data too short\""},"value":"readAddress: data too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff21d28ab53e736b05938ba9d5748dcb979d78d4c19815de87213f62c5dfe9a","typeString":"literal_string \"readAddress: data too short\""}],"id":1916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"973:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"973:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"ExpressionStatement","src":"973:63:11"},{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1926,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"1274:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3230","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1283:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"1274:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"1274:11:11"},{"AST":{"nodeType":"YulBlock","src":"1347:260:11","statements":[{"nodeType":"YulAssignment","src":"1518:79:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"1542:1:11"},{"name":"index","nodeType":"YulIdentifier","src":"1545:5:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:11"},"nodeType":"YulFunctionCall","src":"1538:13:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1532:5:11"},"nodeType":"YulFunctionCall","src":"1532:20:11"},{"kind":"number","nodeType":"YulLiteral","src":"1554:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1528:3:11"},"nodeType":"YulFunctionCall","src":"1528:69:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1518:6:11"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1909,"isOffset":false,"isSlot":false,"src":"1542:1:11","valueSize":1},{"declaration":1911,"isOffset":false,"isSlot":false,"src":"1545:5:11","valueSize":1},{"declaration":1914,"isOffset":false,"isSlot":false,"src":"1518:6:11","valueSize":1}],"id":1930,"nodeType":"InlineAssembly","src":"1338:269:11"},{"expression":{"id":1931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1623:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1915,"id":1932,"nodeType":"Return","src":"1616:13:11"}]},"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"607:210:11","text":"@dev Reads an address from a position in a byte array.\n @param b Byte array containing an address.\n @param index Index in byte array of address.\n @return result address from byte array."},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"831:11:11","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"b","nameLocation":"865:1:11","nodeType":"VariableDeclaration","scope":1934,"src":"852:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"852:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"index","nameLocation":"884:5:11","nodeType":"VariableDeclaration","scope":1934,"src":"876:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"842:53:11"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"result","nameLocation":"951:6:11","nodeType":"VariableDeclaration","scope":1934,"src":"943:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"943:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"942:16:11"},"scope":2004,"src":"822:814:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"1783:230:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1944,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1801:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1801:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1813:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1821:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1813:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1801:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72656164427974657333323a206461746120746f6f2073686f7274","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1825:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_767dc5ed40d0b25ea26edf167fbb901f3024eaabad14c9340870a684e6339d57","typeString":"literal_string \"readBytes32: data too short\""},"value":"readBytes32: data too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_767dc5ed40d0b25ea26edf167fbb901f3024eaabad14c9340870a684e6339d57","typeString":"literal_string \"readBytes32: data too short\""}],"id":1943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1793:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1793:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"1793:63:11"},{"AST":{"nodeType":"YulBlock","src":"1922:62:11","statements":[{"nodeType":"YulAssignment","src":"1936:38:11","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"1956:1:11"},{"arguments":[{"name":"index","nodeType":"YulIdentifier","src":"1963:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1969:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1959:3:11"},"nodeType":"YulFunctionCall","src":"1959:13:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1952:3:11"},"nodeType":"YulFunctionCall","src":"1952:21:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1946:5:11"},"nodeType":"YulFunctionCall","src":"1946:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1936:6:11"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1936,"isOffset":false,"isSlot":false,"src":"1956:1:11","valueSize":1},{"declaration":1938,"isOffset":false,"isSlot":false,"src":"1963:5:11","valueSize":1},{"declaration":1941,"isOffset":false,"isSlot":false,"src":"1936:6:11","valueSize":1}],"id":1953,"nodeType":"InlineAssembly","src":"1913:71:11"},{"expression":{"id":1954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2000:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1942,"id":1955,"nodeType":"Return","src":"1993:13:11"}]},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"1651:11:11","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"b","nameLocation":"1685:1:11","nodeType":"VariableDeclaration","scope":1957,"src":"1672:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"1672:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"index","nameLocation":"1704:5:11","nodeType":"VariableDeclaration","scope":1957,"src":"1696:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:53:11"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"result","nameLocation":"1771:6:11","nodeType":"VariableDeclaration","scope":1957,"src":"1763:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:16:11"},"scope":2004,"src":"1642:371:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1979,"nodeType":"Block","src":"2397:79:11","statements":[{"expression":{"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2407:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2436:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1972,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"2439:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1970,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"2424:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2424:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2416:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"2416:7:11","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2416:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2407:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1976,"nodeType":"ExpressionStatement","src":"2407:39:11"},{"expression":{"id":1977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2463:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1966,"id":1978,"nodeType":"Return","src":"2456:13:11"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"2019:232:11","text":"@dev Reads a uint256 value from a position in a byte array.\n @param b Byte array containing a uint256 value.\n @param index Index in byte array of uint256 value.\n @return result uint256 value from byte array."},"id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","nameLocation":"2265:11:11","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"b","nameLocation":"2299:1:11","nodeType":"VariableDeclaration","scope":1980,"src":"2286:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1959,"name":"bytes","nodeType":"ElementaryTypeName","src":"2286:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"index","nameLocation":"2318:5:11","nodeType":"VariableDeclaration","scope":1980,"src":"2310:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2276:53:11"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"result","nameLocation":"2385:6:11","nodeType":"VariableDeclaration","scope":1980,"src":"2377:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"2377:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2376:16:11"},"scope":2004,"src":"2256:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2002,"nodeType":"Block","src":"2621:432:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"2639:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2639:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"2651:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2659:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2651:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2639:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"726561644279746573343a206461746120746f6f2073686f7274","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2662:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3fe8b8d7a4d7297198f00bec48c1f664c9a2ab21f2fa0d4a68337ee48c21898","typeString":"literal_string \"readBytes4: data too short\""},"value":"readBytes4: data too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3fe8b8d7a4d7297198f00bec48c1f664c9a2ab21f2fa0d4a68337ee48c21898","typeString":"literal_string \"readBytes4: data too short\""}],"id":1989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2631:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2631:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"ExpressionStatement","src":"2631:60:11"},{"AST":{"nodeType":"YulBlock","src":"2756:268:11","statements":[{"nodeType":"YulAssignment","src":"2770:38:11","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"2790:1:11"},{"arguments":[{"name":"index","nodeType":"YulIdentifier","src":"2797:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2803:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2793:3:11"},"nodeType":"YulFunctionCall","src":"2793:13:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2786:3:11"},"nodeType":"YulFunctionCall","src":"2786:21:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2780:5:11"},"nodeType":"YulFunctionCall","src":"2780:28:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2770:6:11"}]},{"nodeType":"YulAssignment","src":"2925:89:11","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"2939:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2947:66:11","type":"","value":"0xFFFFFFFF00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2935:3:11"},"nodeType":"YulFunctionCall","src":"2935:79:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2925:6:11"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1982,"isOffset":false,"isSlot":false,"src":"2790:1:11","valueSize":1},{"declaration":1984,"isOffset":false,"isSlot":false,"src":"2797:5:11","valueSize":1},{"declaration":1987,"isOffset":false,"isSlot":false,"src":"2770:6:11","valueSize":1},{"declaration":1987,"isOffset":false,"isSlot":false,"src":"2925:6:11","valueSize":1},{"declaration":1987,"isOffset":false,"isSlot":false,"src":"2939:6:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"2747:277:11"},{"expression":{"id":2000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"3040:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1988,"id":2001,"nodeType":"Return","src":"3033:13:11"}]},"id":2003,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes4","nameLocation":"2491:10:11","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"b","nameLocation":"2524:1:11","nodeType":"VariableDeclaration","scope":2003,"src":"2511:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"2511:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"index","nameLocation":"2543:5:11","nodeType":"VariableDeclaration","scope":2003,"src":"2535:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2501:53:11"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"result","nameLocation":"2609:6:11","nodeType":"VariableDeclaration","scope":2003,"src":"2602:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1986,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2602:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2601:15:11"},"scope":2004,"src":"2482:571:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2005,"src":"181:2874:11","usedErrors":[]}],"src":"156:2900:11"},"id":11},"@opengsn/paymasters/contracts/WhitelistPaymaster.sol":{"ast":{"absolutePath":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol","exportedSymbols":{"BasePaymaster":[443],"Context":[3076],"ERC165":[3100],"ERC165Checker":[3294],"GsnEip712Library":[1781],"GsnTypes":[1809],"GsnUtils":[1889],"IERC165":[3306],"IERC20":[3029],"IERC2771Recipient":[663],"IForwarder":[639],"IPaymaster":[736],"IRelayHub":[1104],"IStakeManager":[1394],"MinLibBytes":[2004],"Ownable":[2361],"WhitelistPaymaster":[2248]},"id":2249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2006,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"31:23:12"},{"id":2007,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"55:33:12"},{"absolutePath":"@opengsn/contracts/src/BasePaymaster.sol","file":"@opengsn/contracts/src/BasePaymaster.sol","id":2008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2249,"sourceUnit":444,"src":"90:50:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2010,"name":"BasePaymaster","nodeType":"IdentifierPath","referencedDeclaration":443,"src":"426:13:12"},"id":2011,"nodeType":"InheritanceSpecifier","src":"426:13:12"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"142:253:12","text":"A sample paymaster that has whitelists for senders, targets and methods.\n - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed.\n - if at least one target is whitelisted, then ONLY whitelisted targets are allowed."},"fullyImplemented":true,"id":2248,"linearizedBaseContracts":[2248,443,3100,2361,3076,736,3306],"name":"WhitelistPaymaster","nameLocation":"404:18:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"dd1bcaa1","id":2013,"mutability":"mutable","name":"useSenderWhitelist","nameLocation":"459:18:12","nodeType":"VariableDeclaration","scope":2248,"src":"447:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2012,"name":"bool","nodeType":"ElementaryTypeName","src":"447:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"4f28bfb9","id":2015,"mutability":"mutable","name":"useTargetWhitelist","nameLocation":"495:18:12","nodeType":"VariableDeclaration","scope":2248,"src":"483:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2014,"name":"bool","nodeType":"ElementaryTypeName","src":"483:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"0d4ca3a4","id":2017,"mutability":"mutable","name":"useMethodWhitelist","nameLocation":"531:18:12","nodeType":"VariableDeclaration","scope":2248,"src":"519:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2016,"name":"bool","nodeType":"ElementaryTypeName","src":"519:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"4f33b4dd","id":2019,"mutability":"mutable","name":"useRejectOnRecipientRevert","nameLocation":"567:26:12","nodeType":"VariableDeclaration","scope":2248,"src":"555:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2018,"name":"bool","nodeType":"ElementaryTypeName","src":"555:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"8222f07d","id":2023,"mutability":"mutable","name":"senderWhitelist","nameLocation":"631:15:12","nodeType":"VariableDeclaration","scope":2248,"src":"599:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2022,"keyType":{"id":2020,"name":"address","nodeType":"ElementaryTypeName","src":"607:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"599:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2021,"name":"bool","nodeType":"ElementaryTypeName","src":"618:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"858437b0","id":2027,"mutability":"mutable","name":"targetWhitelist","nameLocation":"684:15:12","nodeType":"VariableDeclaration","scope":2248,"src":"652:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2026,"keyType":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"652:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2025,"name":"bool","nodeType":"ElementaryTypeName","src":"671:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"3a0892e3","id":2033,"mutability":"mutable","name":"methodWhitelist","nameLocation":"756:15:12","nodeType":"VariableDeclaration","scope":2248,"src":"705:66:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"},"typeName":{"id":2032,"keyType":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"705:43:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"},"valueType":{"id":2031,"keyType":{"id":2029,"name":"bytes4","nodeType":"ElementaryTypeName","src":"732:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"724:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueType":{"id":2030,"name":"bool","nodeType":"ElementaryTypeName","src":"742:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"baseFunctions":[735],"body":{"id":2041,"nodeType":"Block","src":"860:67:12","statements":[{"expression":{"hexValue":"332e302e302d626574612e332b6f70656e67736e2e77686974656c6973742e697061796d6173746572","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"877:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_73a5daf6434e2fded33e054c1f0e17e36e3af39f5afdcf77319dbd1db8567e17","typeString":"literal_string \"3.0.0-beta.3+opengsn.whitelist.ipaymaster\""},"value":"3.0.0-beta.3+opengsn.whitelist.ipaymaster"},"functionReturnParameters":2038,"id":2040,"nodeType":"Return","src":"870:50:12"}]},"functionSelector":"921276ea","id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"versionPaymaster","nameLocation":"787:16:12","nodeType":"FunctionDefinition","overrides":{"id":2035,"nodeType":"OverrideSpecifier","overrides":[],"src":"820:8:12"},"parameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"803:2:12"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"846:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2036,"name":"string","nodeType":"ElementaryTypeName","src":"846:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"845:15:12"},"scope":2248,"src":"778:149:12","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":2057,"nodeType":"Block","src":"1007:52:12","statements":[{"expression":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2051,"name":"senderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"1017:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2053,"indexExpression":{"id":2052,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1033:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1017:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2054,"name":"isAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"1043:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1017:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2056,"nodeType":"ExpressionStatement","src":"1017:35:12"}]},"functionSelector":"0613fef8","id":2058,"implemented":true,"kind":"function","modifiers":[{"id":2049,"kind":"modifierInvocation","modifierName":{"id":2048,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"997:9:12"},"nodeType":"ModifierInvocation","src":"997:9:12"}],"name":"whitelistSender","nameLocation":"942:15:12","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"sender","nameLocation":"966:6:12","nodeType":"VariableDeclaration","scope":2058,"src":"958:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"isAllowed","nameLocation":"979:9:12","nodeType":"VariableDeclaration","scope":2058,"src":"974:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"974:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"957:32:12"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[],"src":"1007:0:12"},"scope":2248,"src":"933:126:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2073,"nodeType":"Block","src":"1139:52:12","statements":[{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2067,"name":"targetWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1149:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2069,"indexExpression":{"id":2068,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1165:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1149:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2070,"name":"isAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"1175:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1149:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2072,"nodeType":"ExpressionStatement","src":"1149:35:12"}]},"functionSelector":"12256054","id":2074,"implemented":true,"kind":"function","modifiers":[{"id":2065,"kind":"modifierInvocation","modifierName":{"id":2064,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"1129:9:12"},"nodeType":"ModifierInvocation","src":"1129:9:12"}],"name":"whitelistTarget","nameLocation":"1074:15:12","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"target","nameLocation":"1098:6:12","nodeType":"VariableDeclaration","scope":2074,"src":"1090:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"isAllowed","nameLocation":"1111:9:12","nodeType":"VariableDeclaration","scope":2074,"src":"1106:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2061,"name":"bool","nodeType":"ElementaryTypeName","src":"1106:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1089:32:12"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[],"src":"1139:0:12"},"scope":2248,"src":"1065:126:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2093,"nodeType":"Block","src":"1286:60:12","statements":[{"expression":{"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2085,"name":"methodWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1296:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"}},"id":2088,"indexExpression":{"id":2086,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1312:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1296:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":2089,"indexExpression":{"id":2087,"name":"method","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"1320:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1296:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2090,"name":"isAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"1330:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1296:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"ExpressionStatement","src":"1296:43:12"}]},"functionSelector":"e1838f8d","id":2094,"implemented":true,"kind":"function","modifiers":[{"id":2083,"kind":"modifierInvocation","modifierName":{"id":2082,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"1276:9:12"},"nodeType":"ModifierInvocation","src":"1276:9:12"}],"name":"whitelistMethod","nameLocation":"1206:15:12","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"target","nameLocation":"1230:6:12","nodeType":"VariableDeclaration","scope":2094,"src":"1222:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"method","nameLocation":"1245:6:12","nodeType":"VariableDeclaration","scope":2094,"src":"1238:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2077,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1238:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"isAllowed","nameLocation":"1258:9:12","nodeType":"VariableDeclaration","scope":2094,"src":"1253:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"1253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1221:47:12"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"1286:0:12"},"scope":2248,"src":"1197:149:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2123,"nodeType":"Block","src":"1545:223:12","statements":[{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"useSenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"1555:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2108,"name":"_useSenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1576:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1555:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"ExpressionStatement","src":"1555:40:12"},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2111,"name":"useTargetWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"1605:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2112,"name":"_useTargetWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"1626:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1605:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2114,"nodeType":"ExpressionStatement","src":"1605:40:12"},{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"useMethodWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1655:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2116,"name":"_useMethodWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1676:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1655:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2118,"nodeType":"ExpressionStatement","src":"1655:40:12"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2119,"name":"useRejectOnRecipientRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"1705:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2120,"name":"_useRejectOnRecipientRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"1734:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1705:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"nodeType":"ExpressionStatement","src":"1705:56:12"}]},"functionSelector":"86c0a9f8","id":2124,"implemented":true,"kind":"function","modifiers":[{"id":2105,"kind":"modifierInvocation","modifierName":{"id":2104,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"1535:9:12"},"nodeType":"ModifierInvocation","src":"1535:9:12"}],"name":"setConfiguration","nameLocation":"1361:16:12","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"_useSenderWhitelist","nameLocation":"1392:19:12","nodeType":"VariableDeclaration","scope":2124,"src":"1387:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2095,"name":"bool","nodeType":"ElementaryTypeName","src":"1387:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"_useTargetWhitelist","nameLocation":"1426:19:12","nodeType":"VariableDeclaration","scope":2124,"src":"1421:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2097,"name":"bool","nodeType":"ElementaryTypeName","src":"1421:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"_useMethodWhitelist","nameLocation":"1460:19:12","nodeType":"VariableDeclaration","scope":2124,"src":"1455:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2099,"name":"bool","nodeType":"ElementaryTypeName","src":"1455:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"_useRejectOnRecipientRevert","nameLocation":"1494:27:12","nodeType":"VariableDeclaration","scope":2124,"src":"1489:32:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2101,"name":"bool","nodeType":"ElementaryTypeName","src":"1489:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1377:150:12"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[],"src":"1545:0:12"},"scope":2248,"src":"1352:416:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[404],"body":{"id":2226,"nodeType":"Block","src":"2064:870:12","statements":[{"expression":{"components":[{"id":2141,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2075:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2142,"name":"maxPossibleGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2086:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2074:27:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_calldata_ptr_$_t_uint256_$","typeString":"tuple(bytes calldata,uint256)"}},"id":2144,"nodeType":"ExpressionStatement","src":"2074:27:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2146,"name":"approvalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2119:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2119:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2142:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2119:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"617070726f76616c446174613a20696e76616c6964206c656e677468","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2145:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d8c0e673c54c705986df4dd7c55d4166770d9449a60c6ca1c12bca8c8c62ee5","typeString":"literal_string \"approvalData: invalid length\""},"value":"approvalData: invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d8c0e673c54c705986df4dd7c55d4166770d9449a60c6ca1c12bca8c8c62ee5","typeString":"literal_string \"approvalData: invalid length\""}],"id":2145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2111:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"ExpressionStatement","src":"2111:65:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"expression":{"id":2154,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2194:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":1807,"src":"2194:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"paymasterData","nodeType":"MemberAccess","referencedDeclaration":1798,"src":"2194:36:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2194:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2194:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061796d6173746572446174613a20696e76616c6964206c656e677468","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2244:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54","typeString":"literal_string \"paymasterData: invalid length\""},"value":"paymasterData: invalid length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54","typeString":"literal_string \"paymasterData: invalid length\""}],"id":2153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2186:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2186:90:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2162,"nodeType":"ExpressionStatement","src":"2186:90:12"},{"condition":{"id":2163,"name":"useSenderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"2291:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2178,"nodeType":"IfStatement","src":"2287:163:12","trueBody":{"id":2177,"nodeType":"Block","src":"2311:139:12","statements":[{"assignments":[2165],"declarations":[{"constant":false,"id":2165,"mutability":"mutable","name":"sender","nameLocation":"2333:6:12","nodeType":"VariableDeclaration","scope":2177,"src":"2325:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2169,"initialValue":{"expression":{"expression":{"id":2166,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2342:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2342:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":555,"src":"2342:25:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2325:42:12"},{"expression":{"arguments":[{"baseExpression":{"id":2171,"name":"senderWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"2389:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2173,"indexExpression":{"id":2172,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2405:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2389:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73656e646572206e6f742077686974656c6973746564","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2414:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8","typeString":"literal_string \"sender not whitelisted\""},"value":"sender not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8","typeString":"literal_string \"sender not whitelisted\""}],"id":2170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2381:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2381:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2176,"nodeType":"ExpressionStatement","src":"2381:58:12"}]}},{"condition":{"id":2179,"name":"useTargetWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"2464:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2194,"nodeType":"IfStatement","src":"2460:161:12","trueBody":{"id":2193,"nodeType":"Block","src":"2484:137:12","statements":[{"assignments":[2181],"declarations":[{"constant":false,"id":2181,"mutability":"mutable","name":"target","nameLocation":"2506:6:12","nodeType":"VariableDeclaration","scope":2193,"src":"2498:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"2498:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2185,"initialValue":{"expression":{"expression":{"id":2182,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2515:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2515:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":557,"src":"2515:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2498:40:12"},{"expression":{"arguments":[{"baseExpression":{"id":2187,"name":"targetWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2560:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2189,"indexExpression":{"id":2188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"2576:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2560:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746172676574206e6f742077686974656c6973746564","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2585:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882","typeString":"literal_string \"target not whitelisted\""},"value":"target not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882","typeString":"literal_string \"target not whitelisted\""}],"id":2186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2552:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2552:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"2552:58:12"}]}},{"condition":{"id":2195,"name":"useMethodWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"2635:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"2631:247:12","trueBody":{"id":2220,"nodeType":"Block","src":"2655:223:12","statements":[{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"target","nameLocation":"2677:6:12","nodeType":"VariableDeclaration","scope":2220,"src":"2669:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"2669:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2201,"initialValue":{"expression":{"expression":{"id":2198,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2686:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2686:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":557,"src":"2686:23:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2669:40:12"},{"assignments":[2203],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"method","nameLocation":"2730:6:12","nodeType":"VariableDeclaration","scope":2220,"src":"2723:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2202,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2723:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2210,"initialValue":{"arguments":[{"expression":{"expression":{"id":2206,"name":"relayRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2761:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest calldata"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"request","nodeType":"MemberAccess","referencedDeclaration":1804,"src":"2761:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$568_calldata_ptr","typeString":"struct IForwarder.ForwardRequest calldata"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":565,"src":"2761:25:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":2204,"name":"GsnUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2739:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GsnUtils_$1889_$","typeString":"type(library GsnUtils)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getMethodSig","nodeType":"MemberAccess","referencedDeclaration":1859,"src":"2739:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes memory) pure returns (bytes4)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2739:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"2723:64:12"},{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":2212,"name":"methodWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2809:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$","typeString":"mapping(address => mapping(bytes4 => bool))"}},"id":2214,"indexExpression":{"id":2213,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"2825:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2809:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":2216,"indexExpression":{"id":2215,"name":"method","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"2833:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2809:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d6574686f64206e6f742077686974656c6973746564","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa8d30daea23bf7e1e8f319983187fd2d1c87718886df4862ba9690a35f1c97","typeString":"literal_string \"method not whitelisted\""},"value":"method not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa8d30daea23bf7e1e8f319983187fd2d1c87718886df4862ba9690a35f1c97","typeString":"literal_string \"method not whitelisted\""}],"id":2211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2801:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2801:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2219,"nodeType":"ExpressionStatement","src":"2801:66:12"}]}},{"expression":{"components":[{"hexValue":"","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2896:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"id":2223,"name":"useRejectOnRecipientRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"2900:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2895:32:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_bool_$","typeString":"tuple(literal_string \"\",bool)"}},"functionReturnParameters":2140,"id":2225,"nodeType":"Return","src":"2888:39:12"}]},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"_preRelayedCall","nameLocation":"1783:15:12","nodeType":"FunctionDefinition","overrides":{"id":2135,"nodeType":"OverrideSpecifier","overrides":[],"src":"1978:8:12"},"parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"relayRequest","nameLocation":"1839:12:12","nodeType":"VariableDeclaration","scope":2227,"src":"1808:43:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_calldata_ptr","typeString":"struct GsnTypes.RelayRequest"},"typeName":{"id":2126,"nodeType":"UserDefinedTypeName","pathNode":{"id":2125,"name":"GsnTypes.RelayRequest","nodeType":"IdentifierPath","referencedDeclaration":1808,"src":"1808:21:12"},"referencedDeclaration":1808,"src":"1808:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayRequest_$1808_storage_ptr","typeString":"struct GsnTypes.RelayRequest"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"signature","nameLocation":"1876:9:12","nodeType":"VariableDeclaration","scope":2227,"src":"1861:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2128,"name":"bytes","nodeType":"ElementaryTypeName","src":"1861:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"approvalData","nameLocation":"1910:12:12","nodeType":"VariableDeclaration","scope":2227,"src":"1895:27:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2130,"name":"bytes","nodeType":"ElementaryTypeName","src":"1895:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"maxPossibleGas","nameLocation":"1940:14:12","nodeType":"VariableDeclaration","scope":2227,"src":"1932:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:162:12"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"context","nameLocation":"2025:7:12","nodeType":"VariableDeclaration","scope":2227,"src":"2012:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2136,"name":"bytes","nodeType":"ElementaryTypeName","src":"2012:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"revertOnRecipientRevert","nameLocation":"2039:23:12","nodeType":"VariableDeclaration","scope":2227,"src":"2034:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2138,"name":"bool","nodeType":"ElementaryTypeName","src":"2034:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2011:52:12"},"scope":2248,"src":"1774:1160:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[442],"body":{"id":2246,"nodeType":"Block","src":"3146:65:12","statements":[{"expression":{"components":[{"id":2240,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3157:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2241,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3166:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2242,"name":"gasUseWithoutPost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"3175:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2243,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"3194:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData calldata"}}],"id":2244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3156:48:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_calldata_ptr_$_t_bool_$_t_uint256_$_t_struct$_RelayData_$1801_calldata_ptr_$","typeString":"tuple(bytes calldata,bool,uint256,struct GsnTypes.RelayData calldata)"}},"id":2245,"nodeType":"ExpressionStatement","src":"3156:48:12"}]},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"_postRelayedCall","nameLocation":"2949:16:12","nodeType":"FunctionDefinition","overrides":{"id":2238,"nodeType":"OverrideSpecifier","overrides":[],"src":"3125:8:12"},"parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"context","nameLocation":"2990:7:12","nodeType":"VariableDeclaration","scope":2247,"src":"2975:22:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2228,"name":"bytes","nodeType":"ElementaryTypeName","src":"2975:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"success","nameLocation":"3012:7:12","nodeType":"VariableDeclaration","scope":2247,"src":"3007:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2230,"name":"bool","nodeType":"ElementaryTypeName","src":"3007:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2233,"mutability":"mutable","name":"gasUseWithoutPost","nameLocation":"3037:17:12","nodeType":"VariableDeclaration","scope":2247,"src":"3029:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"3029:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"relayData","nameLocation":"3092:9:12","nodeType":"VariableDeclaration","scope":2247,"src":"3064:37:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_calldata_ptr","typeString":"struct GsnTypes.RelayData"},"typeName":{"id":2235,"nodeType":"UserDefinedTypeName","pathNode":{"id":2234,"name":"GsnTypes.RelayData","nodeType":"IdentifierPath","referencedDeclaration":1801,"src":"3064:18:12"},"referencedDeclaration":1801,"src":"3064:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$1801_storage_ptr","typeString":"struct GsnTypes.RelayData"}},"visibility":"internal"}],"src":"2965:142:12"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[],"src":"3146:0:12"},"scope":2248,"src":"2940:271:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2249,"src":"395:2818:12","usedErrors":[]}],"src":"31:3183:12"},"id":12},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3076],"Ownable":[2361]},"id":2362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2250,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2362,"sourceUnit":3077,"src":"127:30:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2253,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3076,"src":"683:7:13"},"id":2254,"nodeType":"InheritanceSpecifier","src":"683:7:13"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"159:494:13","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2361,"linearizedBaseContracts":[2361,3076],"name":"Ownable","nameLocation":"672:7:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2256,"mutability":"mutable","name":"_owner","nameLocation":"713:6:13","nodeType":"VariableDeclaration","scope":2361,"src":"697:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":2262,"name":"OwnershipTransferred","nameLocation":"732:20:13","nodeType":"EventDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:13","nodeType":"VariableDeclaration","scope":2262,"src":"753:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:13","nodeType":"VariableDeclaration","scope":2262,"src":"784:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:13"},"src":"726:84:13"},{"body":{"id":2271,"nodeType":"Block","src":"926:49:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"955:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2266,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"936:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"ExpressionStatement","src":"936:32:13"}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"816:91:13","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2272,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[],"src":"923:2:13"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"926:0:13"},"scope":2361,"src":"912:63:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"1084:41:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2275,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1094:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2277,"nodeType":"ExpressionStatement","src":"1094:13:13"},{"id":2278,"nodeType":"PlaceholderStatement","src":"1117:1:13"}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"981:77:13","text":" @dev Throws if called by any account other than the owner."},"id":2280,"name":"onlyOwner","nameLocation":"1072:9:13","nodeType":"ModifierDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[],"src":"1081:2:13"},"src":"1063:62:13","virtual":false,"visibility":"internal"},{"body":{"id":2288,"nodeType":"Block","src":"1256:30:13","statements":[{"expression":{"id":2286,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"1273:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2285,"id":2287,"nodeType":"Return","src":"1266:13:13"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"1131:65:13","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:13","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[],"src":"1215:2:13"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"1247:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:13"},"scope":2361,"src":"1201:85:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2302,"nodeType":"Block","src":"1404:85:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1422:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2296,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"1433:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2301,"nodeType":"ExpressionStatement","src":"1414:68:13"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"1292:62:13","text":" @dev Throws if the sender is not the owner."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:13","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[],"src":"1379:2:13"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"1404:0:13"},"scope":2361,"src":"1359:130:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"1885:47:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:13","typeDescriptions":{}}},"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2309,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"1895:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2315,"nodeType":"ExpressionStatement","src":"1895:30:13"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"1495:331:13","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2317,"implemented":true,"kind":"function","modifiers":[{"id":2307,"kind":"modifierInvocation","modifierName":{"id":2306,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"1875:9:13"},"nodeType":"ModifierInvocation","src":"1875:9:13"}],"name":"renounceOwnership","nameLocation":"1840:17:13","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"1857:2:13"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"1885:0:13"},"scope":2361,"src":"1831:101:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2339,"nodeType":"Block","src":"2151:128:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2326,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2169:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:13","typeDescriptions":{}}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2334,"nodeType":"ExpressionStatement","src":"2161:73:13"},{"expression":{"arguments":[{"id":2336,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"2263:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2335,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"2244:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2338,"nodeType":"ExpressionStatement","src":"2244:28:13"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"1938:138:13","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2340,"implemented":true,"kind":"function","modifiers":[{"id":2323,"kind":"modifierInvocation","modifierName":{"id":2322,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2280,"src":"2141:9:13"},"nodeType":"ModifierInvocation","src":"2141:9:13"}],"name":"transferOwnership","nameLocation":"2090:17:13","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:13","nodeType":"VariableDeclaration","scope":2340,"src":"2108:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:13"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[],"src":"2151:0:13"},"scope":2361,"src":"2081:198:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"2496:124:13","statements":[{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:13","nodeType":"VariableDeclaration","scope":2359,"src":"2506:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2349,"initialValue":{"id":2348,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"2525:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:13"},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2350,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"2541:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2351,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2550:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2353,"nodeType":"ExpressionStatement","src":"2541:17:13"},{"eventCall":{"arguments":[{"id":2355,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2594:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2356,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2604:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2354,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2573:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"EmitStatement","src":"2568:45:13"}]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"2285:143:13","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:13","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:13","nodeType":"VariableDeclaration","scope":2360,"src":"2461:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:13"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[],"src":"2496:0:13"},"scope":2361,"src":"2433:187:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2362,"src":"654:1968:13","usedErrors":[]}],"src":"102:2521:13"},"id":13},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3306]},"id":2365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2363,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":2364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2365,"sourceUnit":3307,"src":"116:44:14","symbolAliases":[],"unitAlias":""}],"src":"91:70:14"},"id":14},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3076],"ERC20":[2951],"IERC20":[3029],"IERC20Metadata":[3054]},"id":2952,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2366,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2952,"sourceUnit":3030,"src":"130:22:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":2368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2952,"sourceUnit":3055,"src":"153:41:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2952,"sourceUnit":3077,"src":"195:33:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2371,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3076,"src":"1419:7:15"},"id":2372,"nodeType":"InheritanceSpecifier","src":"1419:7:15"},{"baseName":{"id":2373,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"1428:6:15"},"id":2374,"nodeType":"InheritanceSpecifier","src":"1428:6:15"},{"baseName":{"id":2375,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":3054,"src":"1436:14:15"},"id":2376,"nodeType":"InheritanceSpecifier","src":"1436:14:15"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"230:1170:15","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":2951,"linearizedBaseContracts":[2951,3054,3029,3076],"name":"ERC20","nameLocation":"1410:5:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2380,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:15","nodeType":"VariableDeclaration","scope":2951,"src":"1457:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2379,"keyType":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2386,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:15","nodeType":"VariableDeclaration","scope":2951,"src":"1509:67:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2385,"keyType":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2384,"keyType":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2388,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:15","nodeType":"VariableDeclaration","scope":2951,"src":"1583:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2390,"mutability":"mutable","name":"_name","nameLocation":"1633:5:15","nodeType":"VariableDeclaration","scope":2951,"src":"1618:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2389,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2392,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:15","nodeType":"VariableDeclaration","scope":2951,"src":"1644:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2391,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2408,"nodeType":"Block","src":"2032:57:15","statements":[{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2042:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2401,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"2050:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2403,"nodeType":"ExpressionStatement","src":"2042:13:15"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"2065:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2405,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"2075:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2407,"nodeType":"ExpressionStatement","src":"2065:17:15"}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"1673:298:15","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":2409,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"name_","nameLocation":"2002:5:15","nodeType":"VariableDeclaration","scope":2409,"src":"1988:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2394,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:15","nodeType":"VariableDeclaration","scope":2409,"src":"2009:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:15"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"2032:0:15"},"scope":2951,"src":"1976:113:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3041],"body":{"id":2418,"nodeType":"Block","src":"2223:29:15","statements":[{"expression":{"id":2416,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2240:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2415,"id":2417,"nodeType":"Return","src":"2233:12:15"}]},"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"2095:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:15","nodeType":"FunctionDefinition","overrides":{"id":2412,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:15"},"parameters":{"id":2411,"nodeType":"ParameterList","parameters":[],"src":"2167:2:15"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"2208:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2413,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:15"},"scope":2951,"src":"2154:98:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3047],"body":{"id":2428,"nodeType":"Block","src":"2436:31:15","statements":[{"expression":{"id":2426,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"2453:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2425,"id":2427,"nodeType":"Return","src":"2446:14:15"}]},"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"2258:102:15","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:15","nodeType":"FunctionDefinition","overrides":{"id":2422,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:15"},"parameters":{"id":2421,"nodeType":"ParameterList","parameters":[],"src":"2380:2:15"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"2421:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:15"},"scope":2951,"src":"2365:102:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3053],"body":{"id":2438,"nodeType":"Block","src":"3156:26:15","statements":[{"expression":{"hexValue":"3138","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":2435,"id":2437,"nodeType":"Return","src":"3166:9:15"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"2473:613:15","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:15","nodeType":"FunctionDefinition","overrides":{"id":2432,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:15"},"parameters":{"id":2431,"nodeType":"ParameterList","parameters":[],"src":"3108:2:15"},"returnParameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"3149:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2433,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:15"},"scope":2951,"src":"3091:91:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2978],"body":{"id":2448,"nodeType":"Block","src":"3312:36:15","statements":[{"expression":{"id":2446,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"3329:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2445,"id":2447,"nodeType":"Return","src":"3322:19:15"}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"3188:49:15","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2449,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:15","nodeType":"FunctionDefinition","overrides":{"id":2442,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:15"},"parameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"3262:2:15"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2449,"src":"3303:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:15"},"scope":2951,"src":"3242:106:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2986],"body":{"id":2462,"nodeType":"Block","src":"3489:42:15","statements":[{"expression":{"baseExpression":{"id":2458,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3506:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2460,"indexExpression":{"id":2459,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"3516:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2457,"id":2461,"nodeType":"Return","src":"3499:25:15"}]},"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"3354:47:15","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:15","nodeType":"FunctionDefinition","overrides":{"id":2454,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:15"},"parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"account","nameLocation":"3433:7:15","nodeType":"VariableDeclaration","scope":2463,"src":"3425:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:15"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"3480:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:15"},"scope":2951,"src":"3406:125:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2996],"body":{"id":2487,"nodeType":"Block","src":"3812:104:15","statements":[{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"owner","nameLocation":"3830:5:15","nodeType":"VariableDeclaration","scope":2487,"src":"3822:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2478,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2476,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"3838:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:15"},{"expression":{"arguments":[{"id":2480,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3870:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2481,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"3877:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"3881:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2479,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"3860:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3860:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2484,"nodeType":"ExpressionStatement","src":"3860:28:15"},{"expression":{"hexValue":"74727565","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2473,"id":2486,"nodeType":"Return","src":"3898:11:15"}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"3537:185:15","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:15","nodeType":"FunctionDefinition","overrides":{"id":2470,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:15"},"parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"to","nameLocation":"3753:2:15","nodeType":"VariableDeclaration","scope":2488,"src":"3745:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"amount","nameLocation":"3765:6:15","nodeType":"VariableDeclaration","scope":2488,"src":"3757:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:15"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"3806:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2471,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:15"},"scope":2951,"src":"3727:189:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3006],"body":{"id":2505,"nodeType":"Block","src":"4072:51:15","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2499,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"4089:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2501,"indexExpression":{"id":2500,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"4101:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2503,"indexExpression":{"id":2502,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"4108:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2498,"id":2504,"nodeType":"Return","src":"4082:34:15"}]},"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"3922:47:15","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:15","nodeType":"FunctionDefinition","overrides":{"id":2495,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:15"},"parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"owner","nameLocation":"4001:5:15","nodeType":"VariableDeclaration","scope":2506,"src":"3993:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"spender","nameLocation":"4016:7:15","nodeType":"VariableDeclaration","scope":2506,"src":"4008:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:15"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2506,"src":"4063:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:15"},"scope":2951,"src":"3974:149:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3016],"body":{"id":2530,"nodeType":"Block","src":"4520:108:15","statements":[{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"owner","nameLocation":"4538:5:15","nodeType":"VariableDeclaration","scope":2530,"src":"4530:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2521,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2519,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"4546:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4546:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:15"},{"expression":{"arguments":[{"id":2523,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"4577:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2524,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"4584:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2525,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"4593:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2522,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"4568:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4568:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2527,"nodeType":"ExpressionStatement","src":"4568:32:15"},{"expression":{"hexValue":"74727565","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2516,"id":2529,"nodeType":"Return","src":"4610:11:15"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"4129:297:15","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2531,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:15","nodeType":"FunctionDefinition","overrides":{"id":2513,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:15"},"parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"spender","nameLocation":"4456:7:15","nodeType":"VariableDeclaration","scope":2531,"src":"4448:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"amount","nameLocation":"4473:6:15","nodeType":"VariableDeclaration","scope":2531,"src":"4465:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:15"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2531,"src":"4514:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2514,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:15"},"scope":2951,"src":"4431:197:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3028],"body":{"id":2563,"nodeType":"Block","src":"5323:153:15","statements":[{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"spender","nameLocation":"5341:7:15","nodeType":"VariableDeclaration","scope":2563,"src":"5333:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2548,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2546,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"5351:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5351:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:15"},{"expression":{"arguments":[{"id":2550,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"5389:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2551,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"5395:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2552,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"5404:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2549,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"5373:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2554,"nodeType":"ExpressionStatement","src":"5373:38:15"},{"expression":{"arguments":[{"id":2556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"5431:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"5437:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2558,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"5441:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"5421:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5421:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"ExpressionStatement","src":"5421:27:15"},{"expression":{"hexValue":"74727565","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2543,"id":2562,"nodeType":"Return","src":"5458:11:15"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"4634:551:15","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":2564,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:15","nodeType":"FunctionDefinition","overrides":{"id":2540,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:15"},"parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"from","nameLocation":"5229:4:15","nodeType":"VariableDeclaration","scope":2564,"src":"5221:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"to","nameLocation":"5251:2:15","nodeType":"VariableDeclaration","scope":2564,"src":"5243:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"amount","nameLocation":"5271:6:15","nodeType":"VariableDeclaration","scope":2564,"src":"5263:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:15"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2564,"src":"5317:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2541,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:15"},"scope":2951,"src":"5190:286:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2592,"nodeType":"Block","src":"5965:140:15","statements":[{"assignments":[2575],"declarations":[{"constant":false,"id":2575,"mutability":"mutable","name":"owner","nameLocation":"5983:5:15","nodeType":"VariableDeclaration","scope":2592,"src":"5975:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2578,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2576,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"5991:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5991:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:15"},{"expression":{"arguments":[{"id":2580,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"6022:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2581,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6029:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2583,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"6048:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2584,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6055:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2582,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"6038:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2586,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"6066:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"6013:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6013:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"6013:64:15"},{"expression":{"hexValue":"74727565","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2573,"id":2591,"nodeType":"Return","src":"6087:11:15"}]},"documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"5482:384:15","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":2593,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:15","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"spender","nameLocation":"5906:7:15","nodeType":"VariableDeclaration","scope":2593,"src":"5898:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:15","nodeType":"VariableDeclaration","scope":2593,"src":"5915:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:15"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2593,"src":"5959:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2571,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:15"},"scope":2951,"src":"5871:234:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2633,"nodeType":"Block","src":"6691:328:15","statements":[{"assignments":[2604],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"owner","nameLocation":"6709:5:15","nodeType":"VariableDeclaration","scope":2633,"src":"6701:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2607,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2605,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"6717:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:15"},{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:15","nodeType":"VariableDeclaration","scope":2633,"src":"6739:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2614,"initialValue":{"arguments":[{"id":2611,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6776:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2612,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"6783:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2610,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"6766:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6766:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6809:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2617,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6829:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":2615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6801:85:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2621,"nodeType":"ExpressionStatement","src":"6801:85:15"},{"id":2630,"nodeType":"UncheckedBlock","src":"6896:95:15","statements":[{"expression":{"arguments":[{"id":2623,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6929:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2624,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"6936:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6945:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2626,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6964:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2622,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"6920:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6920:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"ExpressionStatement","src":"6920:60:15"}]},{"expression":{"hexValue":"74727565","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2602,"id":2632,"nodeType":"Return","src":"7001:11:15"}]},"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"6111:476:15","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:15","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"spender","nameLocation":"6627:7:15","nodeType":"VariableDeclaration","scope":2634,"src":"6619:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:15","nodeType":"VariableDeclaration","scope":2634,"src":"6636:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:15"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"6685:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2600,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:15"},"scope":2951,"src":"6592:427:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2710,"nodeType":"Block","src":"7581:710:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2645,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7599:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:15","typeDescriptions":{}}},"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7607:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":2644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2653,"nodeType":"ExpressionStatement","src":"7591:68:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"7677:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2656,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:15","typeDescriptions":{}}},"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7669:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"ExpressionStatement","src":"7669:64:15"},{"expression":{"arguments":[{"id":2665,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7765:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"7771:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2667,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"7775:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2664,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"7744:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7744:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2669,"nodeType":"ExpressionStatement","src":"7744:38:15"},{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:15","nodeType":"VariableDeclaration","scope":2710,"src":"7793:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2675,"initialValue":{"baseExpression":{"id":2672,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7815:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2674,"indexExpression":{"id":2673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7825:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2677,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"7848:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2678,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"7863:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":2676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7840:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"ExpressionStatement","src":"7840:72:15"},{"id":2697,"nodeType":"UncheckedBlock","src":"7922:273:15","statements":[{"expression":{"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2683,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"7946:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2685,"indexExpression":{"id":2684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"7956:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"7964:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2687,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"7978:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2690,"nodeType":"ExpressionStatement","src":"7946:38:15"},{"expression":{"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2691,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"8161:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2693,"indexExpression":{"id":2692,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8171:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8178:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2696,"nodeType":"ExpressionStatement","src":"8161:23:15"}]},{"eventCall":{"arguments":[{"id":2699,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"8219:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2700,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8225:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8229:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2698,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"8210:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8210:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2703,"nodeType":"EmitStatement","src":"8205:31:15"},{"expression":{"arguments":[{"id":2705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"8267:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8273:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2707,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"8277:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8247:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2709,"nodeType":"ExpressionStatement","src":"8247:37:15"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"7025:443:15","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":2711,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:15","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"from","nameLocation":"7509:4:15","nodeType":"VariableDeclaration","scope":2711,"src":"7501:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"to","nameLocation":"7531:2:15","nodeType":"VariableDeclaration","scope":2711,"src":"7523:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"amount","nameLocation":"7551:6:15","nodeType":"VariableDeclaration","scope":2711,"src":"7543:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:15"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"7581:0:15"},"scope":2951,"src":"7473:818:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2767,"nodeType":"Block","src":"8632:470:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"8650:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2721,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:15","typeDescriptions":{}}},"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8661:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":2719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2728,"nodeType":"ExpressionStatement","src":"8642:65:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:15","typeDescriptions":{}}},"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2734,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"8751:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2735,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8760:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2729,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"8718:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2737,"nodeType":"ExpressionStatement","src":"8718:49:15"},{"expression":{"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2738,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"8778:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2739,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8794:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2741,"nodeType":"ExpressionStatement","src":"8778:22:15"},{"id":2748,"nodeType":"UncheckedBlock","src":"8810:175:15","statements":[{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2742,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"8946:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2744,"indexExpression":{"id":2743,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"8956:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2745,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"8968:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"8946:28:15"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:15","typeDescriptions":{}}},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9008:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2754,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"9020:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"9029:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2749,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"8999:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2757,"nodeType":"EmitStatement","src":"8994:42:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:15","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2763,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"9079:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"9088:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2758,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"9047:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9047:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2766,"nodeType":"ExpressionStatement","src":"9047:48:15"}]},"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"8297:265:15","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":2768,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:15","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2714,"mutability":"mutable","name":"account","nameLocation":"8590:7:15","nodeType":"VariableDeclaration","scope":2768,"src":"8582:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"amount","nameLocation":"8607:6:15","nodeType":"VariableDeclaration","scope":2768,"src":"8599:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:15"},"returnParameters":{"id":2718,"nodeType":"ParameterList","parameters":[],"src":"8632:0:15"},"scope":2951,"src":"8567:535:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2839,"nodeType":"Block","src":"9487:594:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9505:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:15","typeDescriptions":{}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9516:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":2776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9497:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2785,"nodeType":"ExpressionStatement","src":"9497:67:15"},{"expression":{"arguments":[{"id":2787,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9596:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:15","typeDescriptions":{}}},"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2792,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9617:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2786,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"9575:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9575:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2794,"nodeType":"ExpressionStatement","src":"9575:49:15"},{"assignments":[2796],"declarations":[{"constant":false,"id":2796,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:15","nodeType":"VariableDeclaration","scope":2839,"src":"9635:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2800,"initialValue":{"baseExpression":{"id":2797,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"9660:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2799,"indexExpression":{"id":2798,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9670:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2802,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9696:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9714:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":2801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9688:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2807,"nodeType":"ExpressionStatement","src":"9688:71:15"},{"id":2820,"nodeType":"UncheckedBlock","src":"9769:194:15","statements":[{"expression":{"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2808,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"9793:9:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2810,"indexExpression":{"id":2809,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9803:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9814:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2812,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9831:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2815,"nodeType":"ExpressionStatement","src":"9793:44:15"},{"expression":{"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2816,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"9930:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2817,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"9946:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2819,"nodeType":"ExpressionStatement","src":"9930:22:15"}]},{"eventCall":{"arguments":[{"id":2822,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"9987:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:15","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9996:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2827,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"10008:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2821,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9978:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9978:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2829,"nodeType":"EmitStatement","src":"9973:42:15"},{"expression":{"arguments":[{"id":2831,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"10046:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:15","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10055:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"10067:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2830,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"10026:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2838,"nodeType":"ExpressionStatement","src":"10026:48:15"}]},"documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"9108:309:15","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:15","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"account","nameLocation":"9445:7:15","nodeType":"VariableDeclaration","scope":2840,"src":"9437:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"amount","nameLocation":"9462:6:15","nodeType":"VariableDeclaration","scope":2840,"src":"9454:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:15"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[],"src":"9487:0:15"},"scope":2951,"src":"9422:659:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2884,"nodeType":"Block","src":"10617:257:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10635:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:15","typeDescriptions":{}}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10644:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":2850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10627:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2859,"nodeType":"ExpressionStatement","src":"10627:68:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2861,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10713:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:15","typeDescriptions":{}}},"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10724:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":2860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10705:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2869,"nodeType":"ExpressionStatement","src":"10705:68:15"},{"expression":{"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2870,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10784:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2873,"indexExpression":{"id":2871,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10796:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2874,"indexExpression":{"id":2872,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10803:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10814:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2877,"nodeType":"ExpressionStatement","src":"10784:36:15"},{"eventCall":{"arguments":[{"id":2879,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10844:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2880,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10851:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2881,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"10860:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2878,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"10835:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10835:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2883,"nodeType":"EmitStatement","src":"10830:37:15"}]},"documentation":{"id":2841,"nodeType":"StructuredDocumentation","src":"10087:412:15","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:15","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"owner","nameLocation":"10539:5:15","nodeType":"VariableDeclaration","scope":2885,"src":"10531:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2842,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"spender","nameLocation":"10562:7:15","nodeType":"VariableDeclaration","scope":2885,"src":"10554:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"amount","nameLocation":"10587:6:15","nodeType":"VariableDeclaration","scope":2885,"src":"10579:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:15"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[],"src":"10617:0:15"},"scope":2951,"src":"10504:370:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"11275:321:15","statements":[{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:15","nodeType":"VariableDeclaration","scope":2927,"src":"11285:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2901,"initialValue":{"arguments":[{"id":2898,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"11322:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2899,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11329:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2897,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"11312:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11351:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2903,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11371:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11371:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"11347:243:15","trueBody":{"id":2925,"nodeType":"Block","src":"11390:200:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11412:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2911,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11432:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":2909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11404:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2915,"nodeType":"ExpressionStatement","src":"11404:68:15"},{"id":2924,"nodeType":"UncheckedBlock","src":"11486:94:15","statements":[{"expression":{"arguments":[{"id":2917,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"11523:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2918,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"11530:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"11539:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11558:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2916,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"11514:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11514:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2923,"nodeType":"ExpressionStatement","src":"11514:51:15"}]}]}}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"10880:270:15","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:15","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"owner","nameLocation":"11197:5:15","nodeType":"VariableDeclaration","scope":2928,"src":"11189:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2887,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"spender","nameLocation":"11220:7:15","nodeType":"VariableDeclaration","scope":2928,"src":"11212:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"amount","nameLocation":"11245:6:15","nodeType":"VariableDeclaration","scope":2928,"src":"11237:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:15"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[],"src":"11275:0:15"},"scope":2951,"src":"11155:441:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2938,"nodeType":"Block","src":"12299:2:15","statements":[]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"11602:573:15","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:15","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"from","nameLocation":"12227:4:15","nodeType":"VariableDeclaration","scope":2939,"src":"12219:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"to","nameLocation":"12249:2:15","nodeType":"VariableDeclaration","scope":2939,"src":"12241:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"amount","nameLocation":"12269:6:15","nodeType":"VariableDeclaration","scope":2939,"src":"12261:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:15"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[],"src":"12299:0:15"},"scope":2951,"src":"12180:121:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2949,"nodeType":"Block","src":"13007:2:15","statements":[]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"12307:577:15","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:15","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"from","nameLocation":"12935:4:15","nodeType":"VariableDeclaration","scope":2950,"src":"12927:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2941,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"to","nameLocation":"12957:2:15","nodeType":"VariableDeclaration","scope":2950,"src":"12949:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"amount","nameLocation":"12977:6:15","nodeType":"VariableDeclaration","scope":2950,"src":"12969:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:15"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[],"src":"13007:0:15"},"scope":2951,"src":"12889:120:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2952,"src":"1401:11610:15","usedErrors":[]}],"src":"105:12907:15"},"id":15},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3029]},"id":3030,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2953,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"131:70:16","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3029,"linearizedBaseContracts":[3029],"name":"IERC20","nameLocation":"212:6:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"225:158:16","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":2963,"name":"Transfer","nameLocation":"394:8:16","nodeType":"EventDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:16","nodeType":"VariableDeclaration","scope":2963,"src":"403:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2959,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:16","nodeType":"VariableDeclaration","scope":2963,"src":"425:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2958,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2961,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:16","nodeType":"VariableDeclaration","scope":2963,"src":"445:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:16"},"src":"388:72:16"},{"anonymous":false,"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"466:148:16","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":2972,"name":"Approval","nameLocation":"625:8:16","nodeType":"EventDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:16","nodeType":"VariableDeclaration","scope":2972,"src":"634:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:16","nodeType":"VariableDeclaration","scope":2972,"src":"657:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2970,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:16","nodeType":"VariableDeclaration","scope":2972,"src":"682:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:16"},"src":"619:78:16"},{"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"703:66:16","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:16","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[],"src":"794:2:16"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"820:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:16"},"scope":3029,"src":"774:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"835:72:16","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2986,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:16","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"account","nameLocation":"939:7:16","nodeType":"VariableDeclaration","scope":2986,"src":"931:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:16"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2986,"src":"971:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:16"},"scope":3029,"src":"912:68:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"986:202:16","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2996,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:16","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"to","nameLocation":"1219:2:16","nodeType":"VariableDeclaration","scope":2996,"src":"1211:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2988,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"amount","nameLocation":"1231:6:16","nodeType":"VariableDeclaration","scope":2996,"src":"1223:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:16"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"1257:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2993,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:16"},"scope":3029,"src":"1193:70:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"1269:264:16","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3006,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:16","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"owner","nameLocation":"1565:5:16","nodeType":"VariableDeclaration","scope":3006,"src":"1557:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2998,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"spender","nameLocation":"1580:7:16","nodeType":"VariableDeclaration","scope":3006,"src":"1572:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3000,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:16"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3006,"src":"1612:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:16"},"scope":3029,"src":"1538:83:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"1627:642:16","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3016,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:16","nodeType":"FunctionDefinition","parameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"spender","nameLocation":"2299:7:16","nodeType":"VariableDeclaration","scope":3016,"src":"2291:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"amount","nameLocation":"2316:6:16","nodeType":"VariableDeclaration","scope":3016,"src":"2308:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:16"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3016,"src":"2342:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3013,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:16"},"scope":3029,"src":"2274:74:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"2354:287:16","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3028,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:16","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"from","nameLocation":"2685:4:16","nodeType":"VariableDeclaration","scope":3028,"src":"2677:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"to","nameLocation":"2707:2:16","nodeType":"VariableDeclaration","scope":3028,"src":"2699:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"amount","nameLocation":"2727:6:16","nodeType":"VariableDeclaration","scope":3028,"src":"2719:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:16"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3028,"src":"2758:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3025,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:16"},"scope":3029,"src":"2646:118:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3030,"src":"202:2564:16","usedErrors":[]}],"src":"106:2661:16"},"id":16},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[3029],"IERC20Metadata":[3054]},"id":3055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3031,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3055,"sourceUnit":3030,"src":"135:23:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3034,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":3029,"src":"305:6:17"},"id":3035,"nodeType":"InheritanceSpecifier","src":"305:6:17"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3033,"nodeType":"StructuredDocumentation","src":"160:116:17","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":3054,"linearizedBaseContracts":[3054,3029],"name":"IERC20Metadata","nameLocation":"287:14:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"318:54:17","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3041,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:17","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[],"src":"390:2:17"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3041,"src":"416:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3038,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:17"},"scope":3054,"src":"377:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"437:56:17","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3047,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:17","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[],"src":"513:2:17"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"539:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3044,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:17"},"scope":3054,"src":"498:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"560:65:17","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3053,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:17","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"647:2:17"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3053,"src":"673:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3050,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:17"},"scope":3054,"src":"630:50:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3055,"src":"277:405:17","usedErrors":[]}],"src":"110:573:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3076]},"id":3077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3056,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:18"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3057,"nodeType":"StructuredDocumentation","src":"111:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3076,"linearizedBaseContracts":[3076],"name":"Context","nameLocation":"626:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3065,"nodeType":"Block","src":"702:34:18","statements":[{"expression":{"expression":{"id":3062,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3061,"id":3064,"nodeType":"Return","src":"712:17:18"}]},"id":3066,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:18","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[],"src":"659:2:18"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3066,"src":"693:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3059,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:18"},"scope":3076,"src":"640:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3074,"nodeType":"Block","src":"809:32:18","statements":[{"expression":{"expression":{"id":3071,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3070,"id":3073,"nodeType":"Return","src":"819:15:18"}]},"id":3075,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:18","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[],"src":"759:2:18"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3075,"src":"793:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3068,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:18"},"scope":3076,"src":"742:99:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3077,"src":"608:235:18","usedErrors":[]}],"src":"86:758:18"},"id":18},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3100],"IERC165":[3306]},"id":3101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3078,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3101,"sourceUnit":3307,"src":"124:23:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3081,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3306,"src":"754:7:19"},"id":3082,"nodeType":"InheritanceSpecifier","src":"754:7:19"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"149:576:19","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3100,"linearizedBaseContracts":[3100,3306],"name":"ERC165","nameLocation":"744:6:19","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3305],"body":{"id":3098,"nodeType":"Block","src":"920:64:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"937:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3093,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"957:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3306_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3306_$","typeString":"type(contract IERC165)"}],"id":3092,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3306","typeString":"type(contract IERC165)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3090,"id":3097,"nodeType":"Return","src":"930:47:19"}]},"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"768:56:19","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:19","nodeType":"FunctionDefinition","overrides":{"id":3087,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:19"},"parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:19","nodeType":"VariableDeclaration","scope":3099,"src":"856:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3084,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:19"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"914:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3088,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:19"},"scope":3100,"src":"829:155:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3101,"src":"726:260:19","usedErrors":[]}],"src":"99:888:19"},"id":19},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[3294],"IERC165":[3306]},"id":3295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3102,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3295,"sourceUnit":3307,"src":"146:23:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3104,"nodeType":"StructuredDocumentation","src":"171:277:20","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":3294,"linearizedBaseContracts":[3294],"name":"ERC165Checker","nameLocation":"457:13:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3107,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:20","nodeType":"VariableDeclaration","scope":3294,"src":"551:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3105,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":3129,"nodeType":"Block","src":"774:357:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3116,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"1008:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3118,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"1022:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3306_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3306_$","typeString":"type(contract IERC165)"}],"id":3117,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1017:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1017:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3306","typeString":"type(contract IERC165)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1017:25:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3115,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"975:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"975:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1059:65:20","subExpression":{"arguments":[{"id":3123,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"1093:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3124,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"1102:21:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3122,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1060:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:149:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3114,"id":3128,"nodeType":"Return","src":"956:168:20"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"616:83:20","text":" @dev Returns true if `account` supports the {IERC165} interface."},"id":3130,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:20","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"account","nameLocation":"736:7:20","nodeType":"VariableDeclaration","scope":3130,"src":"728:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:20"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"768:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3112,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:20"},"scope":3294,"src":"704:427:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3149,"nodeType":"Block","src":"1442:189:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3141,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"1558:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3140,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"1543:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1543:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"1603:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3145,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"1612:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3143,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1570:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1570:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1543:81:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3139,"id":3148,"nodeType":"Return","src":"1536:88:20"}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"1137:207:20","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":3150,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1358:17:20","nodeType":"FunctionDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"account","nameLocation":"1384:7:20","nodeType":"VariableDeclaration","scope":3150,"src":"1376:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"interfaceId","nameLocation":"1400:11:20","nodeType":"VariableDeclaration","scope":3150,"src":"1393:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3134,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1393:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1375:37:20"},"returnParameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3150,"src":"1436:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3137,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1435:6:20"},"scope":3294,"src":"1349:282:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"2161:560:20","statements":[{"assignments":[3166],"declarations":[{"constant":false,"id":3166,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2284:21:20","nodeType":"VariableDeclaration","scope":3205,"src":"2270:35:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3164,"name":"bool","nodeType":"ElementaryTypeName","src":"2270:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3165,"nodeType":"ArrayTypeName","src":"2270:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":3173,"initialValue":{"arguments":[{"expression":{"id":3170,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"2319:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2319:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2308:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3167,"name":"bool","nodeType":"ElementaryTypeName","src":"2312:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3168,"nodeType":"ArrayTypeName","src":"2312:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2308:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2270:69:20"},{"condition":{"arguments":[{"id":3175,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"2411:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3174,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"2396:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2396:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3202,"nodeType":"IfStatement","src":"2392:284:20","trueBody":{"id":3201,"nodeType":"Block","src":"2421:255:20","statements":[{"body":{"id":3199,"nodeType":"Block","src":"2548:118:20","statements":[{"expression":{"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3188,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"2566:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3190,"indexExpression":{"id":3189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"2588:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2566:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3192,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"2626:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3193,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"2635:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3195,"indexExpression":{"id":3194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"2648:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2635:15:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3191,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"2593:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2593:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2566:85:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3198,"nodeType":"ExpressionStatement","src":"2566:85:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"2518:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3182,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"2522:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2522:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2518:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3200,"initializationExpression":{"assignments":[3178],"declarations":[{"constant":false,"id":3178,"mutability":"mutable","name":"i","nameLocation":"2511:1:20","nodeType":"VariableDeclaration","scope":3200,"src":"2503:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2503:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3180,"initialValue":{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2515:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2503:13:20"},"loopExpression":{"expression":{"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2543:3:20","subExpression":{"id":3185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"2543:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3187,"nodeType":"ExpressionStatement","src":"2543:3:20"},"nodeType":"ForStatement","src":"2498:168:20"}]}},{"expression":{"id":3203,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"2693:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":3161,"id":3204,"nodeType":"Return","src":"2686:28:20"}]},"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"1637:374:20","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2025:22:20","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"account","nameLocation":"2056:7:20","nodeType":"VariableDeclaration","scope":3206,"src":"2048:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"2048:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"interfaceIds","nameLocation":"2081:12:20","nodeType":"VariableDeclaration","scope":3206,"src":"2065:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3154,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2065:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3155,"nodeType":"ArrayTypeName","src":"2065:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2047:47:20"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"2142:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3158,"name":"bool","nodeType":"ElementaryTypeName","src":"2142:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3159,"nodeType":"ArrayTypeName","src":"2142:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2141:15:20"},"scope":3294,"src":"2016:705:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3251,"nodeType":"Block","src":"3163:436:20","statements":[{"condition":{"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3219:24:20","subExpression":{"arguments":[{"id":3218,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3235:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3217,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"3220:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3224,"nodeType":"IfStatement","src":"3215:67:20","trueBody":{"id":3223,"nodeType":"Block","src":"3245:37:20","statements":[{"expression":{"hexValue":"66616c7365","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3266:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3216,"id":3222,"nodeType":"Return","src":"3259:12:20"}]}},{"body":{"id":3247,"nodeType":"Block","src":"3401:134:20","statements":[{"condition":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3419:59:20","subExpression":{"arguments":[{"id":3237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3453:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3238,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3462:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3240,"indexExpression":{"id":3239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3475:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3462:15:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3236,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"3420:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3420:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3246,"nodeType":"IfStatement","src":"3415:110:20","trueBody":{"id":3245,"nodeType":"Block","src":"3480:45:20","statements":[{"expression":{"hexValue":"66616c7365","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3505:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3216,"id":3244,"nodeType":"Return","src":"3498:12:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3371:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3230,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"3375:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3375:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3371:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3248,"initializationExpression":{"assignments":[3226],"declarations":[{"constant":false,"id":3226,"mutability":"mutable","name":"i","nameLocation":"3364:1:20","nodeType":"VariableDeclaration","scope":3248,"src":"3356:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3356:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3228,"initialValue":{"hexValue":"30","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3368:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3356:13:20"},"loopExpression":{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3396:3:20","subExpression":{"id":3233,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3396:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ExpressionStatement","src":"3396:3:20"},"nodeType":"ForStatement","src":"3351:184:20"},{"expression":{"hexValue":"74727565","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3588:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3216,"id":3250,"nodeType":"Return","src":"3581:11:20"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"2727:324:20","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":3252,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3065:21:20","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"account","nameLocation":"3095:7:20","nodeType":"VariableDeclaration","scope":3252,"src":"3087:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"3087:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"interfaceIds","nameLocation":"3120:12:20","nodeType":"VariableDeclaration","scope":3252,"src":"3104:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3210,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3104:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3211,"nodeType":"ArrayTypeName","src":"3104:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3086:47:20"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3252,"src":"3157:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3214,"name":"bool","nodeType":"ElementaryTypeName","src":"3157:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3156:6:20"},"scope":3294,"src":"3056:543:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3292,"nodeType":"Block","src":"4370:539:20","statements":[{"assignments":[3263],"declarations":[{"constant":false,"id":3263,"mutability":"mutable","name":"encodedParams","nameLocation":"4417:13:20","nodeType":"VariableDeclaration","scope":3292,"src":"4404:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3262,"name":"bytes","nodeType":"ElementaryTypeName","src":"4404:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3271,"initialValue":{"arguments":[{"expression":{"expression":{"id":3266,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"4456:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3306_$","typeString":"type(contract IERC165)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3305,"src":"4456:25:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4456:34:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3269,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"4492:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3264,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4433:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4433:22:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4433:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4404:100:20"},{"assignments":[3273],"declarations":[{"constant":false,"id":3273,"mutability":"mutable","name":"success","nameLocation":"4551:7:20","nodeType":"VariableDeclaration","scope":3292,"src":"4546:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3272,"name":"bool","nodeType":"ElementaryTypeName","src":"4546:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3274,"nodeType":"VariableDeclarationStatement","src":"4546:12:20"},{"assignments":[3276],"declarations":[{"constant":false,"id":3276,"mutability":"mutable","name":"returnSize","nameLocation":"4576:10:20","nodeType":"VariableDeclaration","scope":3292,"src":"4568:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"4568:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3277,"nodeType":"VariableDeclarationStatement","src":"4568:18:20"},{"assignments":[3279],"declarations":[{"constant":false,"id":3279,"mutability":"mutable","name":"returnValue","nameLocation":"4604:11:20","nodeType":"VariableDeclaration","scope":3292,"src":"4596:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4596:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3280,"nodeType":"VariableDeclarationStatement","src":"4596:19:20"},{"AST":{"nodeType":"YulBlock","src":"4634:203:20","statements":[{"nodeType":"YulAssignment","src":"4648:97:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4670:5:20","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4677:7:20"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4690:13:20"},{"kind":"number","nodeType":"YulLiteral","src":"4705:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4686:3:20"},"nodeType":"YulFunctionCall","src":"4686:24:20"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4718:13:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4712:5:20"},"nodeType":"YulFunctionCall","src":"4712:20:20"},{"kind":"number","nodeType":"YulLiteral","src":"4734:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4740:4:20","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4659:10:20"},"nodeType":"YulFunctionCall","src":"4659:86:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4648:7:20"}]},{"nodeType":"YulAssignment","src":"4758:30:20","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4772:14:20"},"nodeType":"YulFunctionCall","src":"4772:16:20"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4758:10:20"}]},{"nodeType":"YulAssignment","src":"4801:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4822:4:20","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4816:5:20"},"nodeType":"YulFunctionCall","src":"4816:11:20"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4801:11:20"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3255,"isOffset":false,"isSlot":false,"src":"4677:7:20","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4690:13:20","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4718:13:20","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"4758:10:20","valueSize":1},{"declaration":3279,"isOffset":false,"isSlot":false,"src":"4801:11:20","valueSize":1},{"declaration":3273,"isOffset":false,"isSlot":false,"src":"4648:7:20","valueSize":1}],"id":3281,"nodeType":"InlineAssembly","src":"4625:212:20"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"4854:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"4865:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4879:4:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4865:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4854:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"4887:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4901:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4887:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4854:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3261,"id":3291,"nodeType":"Return","src":"4847:55:20"}]},"documentation":{"id":3253,"nodeType":"StructuredDocumentation","src":"3605:652:20","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Interface identification is specified in ERC-165."},"id":3293,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165InterfaceUnchecked","nameLocation":"4271:32:20","nodeType":"FunctionDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"account","nameLocation":"4312:7:20","nodeType":"VariableDeclaration","scope":3293,"src":"4304:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"4304:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3257,"mutability":"mutable","name":"interfaceId","nameLocation":"4328:11:20","nodeType":"VariableDeclaration","scope":3293,"src":"4321:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3256,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4321:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4303:37:20"},"returnParameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3293,"src":"4364:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3259,"name":"bool","nodeType":"ElementaryTypeName","src":"4364:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4363:6:20"},"scope":3294,"src":"4262:647:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3295,"src":"449:4462:20","usedErrors":[]}],"src":"121:4791:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3306]},"id":3307,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3296,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:21"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3297,"nodeType":"StructuredDocumentation","src":"125:279:21","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3306,"linearizedBaseContracts":[3306],"name":"IERC165","nameLocation":"415:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3298,"nodeType":"StructuredDocumentation","src":"429:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3305,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:21","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:21","nodeType":"VariableDeclaration","scope":3305,"src":"801:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3299,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:21"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3305,"src":"844:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3302,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:21"},"scope":3306,"src":"774:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3307,"src":"405:447:21","usedErrors":[]}],"src":"100:753:21"},"id":21},"contracts/EnergyToken.sol":{"ast":{"absolutePath":"contracts/EnergyToken.sol","exportedSymbols":{"Context":[3076],"ERC20":[2951],"Energy_Token":[3320],"IERC20":[3029],"IERC20Metadata":[3054]},"id":3321,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3308,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"39:23:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3321,"sourceUnit":2952,"src":"64:55:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3310,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"146:5:22"},"id":3311,"nodeType":"InheritanceSpecifier","src":"146:5:22"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3320,"linearizedBaseContracts":[3320,2951,3054,3029,3076],"name":"Energy_Token","nameLocation":"130:12:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3318,"nodeType":"Block","src":"305:2:22","statements":[]},"id":3319,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"456e65727920546f6b656e","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"282:13:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_260f9468aa03e30080d292d1b8ef90501f507be053e7be16903a7eccc8127413","typeString":"literal_string \"Enery Token\""},"value":"Enery Token"},{"hexValue":"554e4954","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"297:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_08c17eca0e87ee0a14268fdd7a46d674b41ae71d220d9794f7605ab1776c1821","typeString":"literal_string \"UNIT\""},"value":"UNIT"}],"id":3316,"kind":"baseConstructorSpecifier","modifierName":{"id":3313,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":2951,"src":"276:5:22"},"nodeType":"ModifierInvocation","src":"276:28:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[],"src":"273:2:22"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[],"src":"305:0:22"},"scope":3320,"src":"262:45:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3321,"src":"121:188:22","usedErrors":[]}],"src":"39:271:22"},"id":22},"contracts/EnergyTrade.sol":{"ast":{"absolutePath":"contracts/EnergyTrade.sol","exportedSymbols":{"AggregatorV3Interface":[45],"Context":[3076],"ERC20":[2951],"ERC2771Recipient":[546],"EnergyTrade":[3775],"Energy_Token":[3320],"IERC20":[3029],"IERC20Metadata":[3054],"IERC2771Recipient":[663],"MultiSig":[4906],"PriceConverter":[4939]},"id":3776,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3322,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"40:23:23"},{"absolutePath":"contracts/EnergyToken.sol","file":"./EnergyToken.sol","id":3323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3776,"sourceUnit":3321,"src":"67:27:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/PriceConverter.sol","file":"./PriceConverter.sol","id":3324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3776,"sourceUnit":4940,"src":"96:30:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/MultiSig.sol","file":"./MultiSig.sol","id":3325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3776,"sourceUnit":4907,"src":"128:24:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3326,"name":"Energy_Token","nodeType":"IdentifierPath","referencedDeclaration":3320,"src":"180:12:23"},"id":3327,"nodeType":"InheritanceSpecifier","src":"180:12:23"},{"baseName":{"id":3328,"name":"PriceConverter","nodeType":"IdentifierPath","referencedDeclaration":4939,"src":"194:14:23"},"id":3329,"nodeType":"InheritanceSpecifier","src":"194:14:23"},{"baseName":{"id":3330,"name":"MultiSig","nodeType":"IdentifierPath","referencedDeclaration":4906,"src":"210:8:23"},"id":3331,"nodeType":"InheritanceSpecifier","src":"210:8:23"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3775,"linearizedBaseContracts":[3775,4906,546,663,4939,3320,2951,3054,3029,3076],"name":"EnergyTrade","nameLocation":"165:11:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3333,"mutability":"mutable","name":"escrowAccount","nameLocation":"285:13:23","nodeType":"VariableDeclaration","scope":3775,"src":"277:21:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3332,"name":"address","nodeType":"ElementaryTypeName","src":"277:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"EnergyUnitPrice_usd","nameLocation":"354:19:23","nodeType":"VariableDeclaration","scope":3775,"src":"346:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"346:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"EnergyUnitPrice_matic","nameLocation":"388:21:23","nodeType":"VariableDeclaration","scope":3775,"src":"380:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":3359,"nodeType":"Block","src":"617:48:23","statements":[{"expression":{"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"escrowAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"628:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3355,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"652:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EnergyTrade_$3775","typeString":"contract EnergyTrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EnergyTrade_$3775","typeString":"contract EnergyTrade"}],"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"644:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:23","typeDescriptions":{}}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"644:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"628:29:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3358,"nodeType":"ExpressionStatement","src":"628:29:23"}]},"id":3360,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3347,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"586:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3348,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"597:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3349,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"606:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3350,"kind":"baseConstructorSpecifier","modifierName":{"id":3346,"name":"MultiSig","nodeType":"IdentifierPath","referencedDeclaration":4906,"src":"577:8:23"},"nodeType":"ModifierInvocation","src":"577:39:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"forwarder","nameLocation":"497:9:23","nodeType":"VariableDeclaration","scope":3360,"src":"489:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"489:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"_owners","nameLocation":"534:7:23","nodeType":"VariableDeclaration","scope":3360,"src":"517:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3341,"nodeType":"ArrayTypeName","src":"517:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"_required","nameLocation":"560:9:23","nodeType":"VariableDeclaration","scope":3360,"src":"552:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"478:98:23"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"617:0:23"},"scope":3775,"src":"467:198:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"id":3370,"name":"EnergyListed","nameLocation":"749:12:23","nodeType":"EventDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"indexed":true,"mutability":"mutable","name":"sellerID","nameLocation":"788:8:23","nodeType":"VariableDeclaration","scope":3370,"src":"772:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3364,"indexed":false,"mutability":"mutable","name":"unitEnergyPriceUSD","nameLocation":"815:18:23","nodeType":"VariableDeclaration","scope":3370,"src":"807:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3366,"indexed":false,"mutability":"mutable","name":"unitEnergyPriceMatic","nameLocation":"852:20:23","nodeType":"VariableDeclaration","scope":3370,"src":"844:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3368,"indexed":false,"mutability":"mutable","name":"listedEnergyToken","nameLocation":"891:17:23","nodeType":"VariableDeclaration","scope":3370,"src":"883:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"761:154:23"},"src":"743:173:23"},{"anonymous":false,"id":3382,"name":"EnergyBought","nameLocation":"930:12:23","nodeType":"EventDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"indexed":true,"mutability":"mutable","name":"sellerID","nameLocation":"969:8:23","nodeType":"VariableDeclaration","scope":3382,"src":"953:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3374,"indexed":true,"mutability":"mutable","name":"buyerID","nameLocation":"1004:7:23","nodeType":"VariableDeclaration","scope":3382,"src":"988:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"988:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3376,"indexed":true,"mutability":"mutable","name":"unitEnergyPriceUSD","nameLocation":"1038:18:23","nodeType":"VariableDeclaration","scope":3382,"src":"1022:34:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1022:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3378,"indexed":false,"mutability":"mutable","name":"unitEnergyPriceMatic","nameLocation":"1075:20:23","nodeType":"VariableDeclaration","scope":3382,"src":"1067:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1067:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3380,"indexed":false,"mutability":"mutable","name":"boughtEnergyToken","nameLocation":"1114:17:23","nodeType":"VariableDeclaration","scope":3382,"src":"1106:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1106:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:196:23"},"src":"924:215:23"},{"baseFunctions":[511,3066],"body":{"id":3394,"nodeType":"Block","src":"1237:55:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3390,"name":"ERC2771Recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1255:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Recipient_$546_$","typeString":"type(contract ERC2771Recipient)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":511,"src":"1255:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1255:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3389,"id":3393,"nodeType":"Return","src":"1248:36:23"}]},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"1156:10:23","nodeType":"FunctionDefinition","overrides":{"id":3386,"nodeType":"OverrideSpecifier","overrides":[{"id":3384,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3076,"src":"1192:7:23"},{"id":3385,"name":"ERC2771Recipient","nodeType":"IdentifierPath","referencedDeclaration":546,"src":"1201:16:23"}],"src":"1183:35:23"},"parameters":{"id":3383,"nodeType":"ParameterList","parameters":[],"src":"1166:2:23"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"1228:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:9:23"},"scope":3775,"src":"1147:145:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[545,3075],"body":{"id":3407,"nodeType":"Block","src":"1395:53:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3403,"name":"ERC2771Recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1413:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Recipient_$546_$","typeString":"type(contract ERC2771Recipient)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":545,"src":"1413:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1413:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3402,"id":3406,"nodeType":"Return","src":"1406:34:23"}]},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"1309:8:23","nodeType":"FunctionDefinition","overrides":{"id":3399,"nodeType":"OverrideSpecifier","overrides":[{"id":3397,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3076,"src":"1343:7:23"},{"id":3398,"name":"ERC2771Recipient","nodeType":"IdentifierPath","referencedDeclaration":546,"src":"1352:16:23"}],"src":"1334:35:23"},"parameters":{"id":3396,"nodeType":"ParameterList","parameters":[],"src":"1317:2:23"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"1379:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3400,"name":"bytes","nodeType":"ElementaryTypeName","src":"1379:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1378:16:23"},"scope":3775,"src":"1300:148:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3425,"nodeType":"Block","src":"1594:75:23","statements":[{"expression":{"components":[{"expression":{"arguments":[{"id":3417,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1621:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EnergyTrade_$3775","typeString":"contract EnergyTrade"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EnergyTrade_$3775","typeString":"contract EnergyTrade"}],"id":3416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1613:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"1613:7:23","typeDescriptions":{}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1613:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1613:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3421,"name":"escrowAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"1646:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3420,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"1636:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1612:49:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3414,"id":3424,"nodeType":"Return","src":"1605:56:23"}]},"functionSelector":"3628c333","id":3426,"implemented":true,"kind":"function","modifiers":[],"name":"viewEscrowBalance","nameLocation":"1535:17:23","nodeType":"FunctionDefinition","parameters":{"id":3409,"nodeType":"ParameterList","parameters":[],"src":"1552:2:23"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1576:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1576:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"1585:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1575:18:23"},"scope":3775,"src":"1526:143:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3435,"nodeType":"Block","src":"1735:44:23","statements":[{"expression":{"expression":{"expression":{"id":3431,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1753:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1753:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1753:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3430,"id":3434,"nodeType":"Return","src":"1746:25:23"}]},"functionSelector":"8bda812f","id":3436,"implemented":true,"kind":"function","modifiers":[],"name":"viewMaticBalance","nameLocation":"1686:16:23","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[],"src":"1702:2:23"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3436,"src":"1726:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1726:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1725:9:23"},"scope":3775,"src":"1677:102:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3446,"nodeType":"Block","src":"1846:47:23","statements":[{"expression":{"arguments":[{"expression":{"id":3442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1874:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1874:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3441,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"1864:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1864:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3440,"id":3445,"nodeType":"Return","src":"1857:28:23"}]},"functionSelector":"83ae0367","id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"viewEnergyBalance","nameLocation":"1796:17:23","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[],"src":"1813:2:23"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"1837:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1836:9:23"},"scope":3775,"src":"1787:106:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3479,"nodeType":"Block","src":"2229:326:23","statements":[{"expression":{"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3456,"name":"EnergyUnitPrice_usd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"2282:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3457,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"2304:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2282:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3459,"nodeType":"ExpressionStatement","src":"2282:27:23"},{"assignments":[3461],"declarations":[{"constant":false,"id":3461,"mutability":"mutable","name":"latestMaticPrice","nameLocation":"2328:16:23","nodeType":"VariableDeclaration","scope":3479,"src":"2320:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2320:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3467,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3464,"name":"getLatestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"2352:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2352:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3462,"name":"uint","nodeType":"ElementaryTypeName","src":"2347:4:23","typeDescriptions":{}}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2320:49:23"},{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3468,"name":"EnergyUnitPrice_matic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2380:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"2405:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3470,"name":"latestMaticPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"2413:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2405:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2404:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653130","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2433:4:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"src":"2404:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2380:57:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3476,"nodeType":"ExpressionStatement","src":"2380:57:23"},{"expression":{"id":3477,"name":"EnergyUnitPrice_matic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2526:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3455,"id":3478,"nodeType":"Return","src":"2519:28:23"}]},"id":3480,"implemented":true,"kind":"function","modifiers":[{"id":3452,"kind":"modifierInvocation","modifierName":{"id":3451,"name":"onlyProsumer","nodeType":"IdentifierPath","referencedDeclaration":3756,"src":"2198:12:23"},"nodeType":"ModifierInvocation","src":"2198:12:23"}],"name":"setUnitPrice","nameLocation":"2162:12:23","nodeType":"FunctionDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"price","nameLocation":"2183:5:23","nodeType":"VariableDeclaration","scope":3480,"src":"2175:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2174:15:23"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3480,"src":"2220:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2220:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2219:9:23"},"scope":3775,"src":"2153:402:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3569,"nodeType":"Block","src":"2748:824:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3494,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"2781:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3501,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3495,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2799:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3498,"indexExpression":{"expression":{"id":3496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2810:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2810:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2799:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2824:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2799:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2781:45:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_stakedEnergyBalance","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"2781:66:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2851:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2781:71:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520416c7265616479205374616b656420456e65726779","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2867:32:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f0cc6fc952c56e6e0909ccf835e416a9db4dc9d89e8680085ce7505b6972f36","typeString":"literal_string \"You have Already Staked Energy\""},"value":"You have Already Staked Energy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f0cc6fc952c56e6e0909ccf835e416a9db4dc9d89e8680085ce7505b6972f36","typeString":"literal_string \"You have Already Staked Energy\""}],"id":3493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2759:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2759:151:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3507,"nodeType":"ExpressionStatement","src":"2759:151:23"},{"assignments":[3509],"declarations":[{"constant":false,"id":3509,"mutability":"mutable","name":"ad_placerID","nameLocation":"2931:11:23","nodeType":"VariableDeclaration","scope":3569,"src":"2923:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3514,"initialValue":{"baseExpression":{"id":3510,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2945:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3513,"indexExpression":{"expression":{"id":3511,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2956:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2956:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2945:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2923:44:23"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3515,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"2980:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3519,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"ad_placerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"2998:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3012:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2998:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2980:34:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_energyUnitPriceUSD","nodeType":"MemberAccess","referencedDeclaration":3827,"src":"2980:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3521,"name":"unitEnergyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"3037:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2980:72:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ExpressionStatement","src":"2980:72:23"},{"expression":{"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3524,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3063:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3528,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"ad_placerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"3081:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3095:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3081:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3063:34:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_energyUnitPriceMatic","nodeType":"MemberAccess","referencedDeclaration":3829,"src":"3063:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"id":3531,"name":"unitEnergyPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"3136:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3530,"name":"setUnitPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"3123:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3123:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3122:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3063:90:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3535,"nodeType":"ExpressionStatement","src":"3063:90:23"},{"expression":{"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3536,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3164:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3540,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3537,"name":"ad_placerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"3182:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3182:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3164:34:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_stakedEnergyBalance","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"3164:55:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3542,"name":"excessEnergyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"3222:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3164:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3544,"nodeType":"ExpressionStatement","src":"3164:75:23"},{"expression":{"arguments":[{"id":3546,"name":"escrowAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"3261:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3547,"name":"excessEnergyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"3276:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3545,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"3252:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3252:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3549,"nodeType":"ExpressionStatement","src":"3252:42:23"},{"eventCall":{"arguments":[{"id":3551,"name":"ad_placerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"3339:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3552,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3365:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3556,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"ad_placerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"3383:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3383:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3365:34:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_energyUnitPriceUSD","nodeType":"MemberAccess","referencedDeclaration":3827,"src":"3365:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3558,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3434:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3562,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"ad_placerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"3452:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3452:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3434:34:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_energyUnitPriceMatic","nodeType":"MemberAccess","referencedDeclaration":3829,"src":"3434:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3564,"name":"excessEnergyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"3505:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"name":"EnergyListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"3312:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3312:221:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3566,"nodeType":"EmitStatement","src":"3307:226:23"},{"expression":{"id":3567,"name":"ad_placerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"3553:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3492,"id":3568,"nodeType":"Return","src":"3546:18:23"}]},"functionSelector":"c8a9fb5e","id":3570,"implemented":true,"kind":"function","modifiers":[{"id":3487,"kind":"modifierInvocation","modifierName":{"id":3486,"name":"onlyProsumer","nodeType":"IdentifierPath","referencedDeclaration":3756,"src":"2702:12:23"},"nodeType":"ModifierInvocation","src":"2702:12:23"},{"id":3489,"kind":"modifierInvocation","modifierName":{"id":3488,"name":"isNotSuspended","nodeType":"IdentifierPath","referencedDeclaration":3774,"src":"2715:14:23"},"nodeType":"ModifierInvocation","src":"2715:14:23"}],"name":"listEnergy","nameLocation":"2607:10:23","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"unitEnergyPrice","nameLocation":"2636:15:23","nodeType":"VariableDeclaration","scope":3570,"src":"2628:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2628:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3484,"mutability":"mutable","name":"excessEnergyToken","nameLocation":"2670:17:23","nodeType":"VariableDeclaration","scope":3570,"src":"2662:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2662:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2617:77:23"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3570,"src":"2739:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2738:9:23"},"scope":3775,"src":"2598:974:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3587,"nodeType":"Block","src":"3714:93:23","statements":[{"expression":{"expression":{"baseExpression":{"id":3577,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3732:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3584,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3578,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"3750:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3581,"indexExpression":{"expression":{"id":3579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3761:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3761:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3775:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3750:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3732:45:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_energyUnitPriceMatic","nodeType":"MemberAccess","referencedDeclaration":3829,"src":"3732:67:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3576,"id":3586,"nodeType":"Return","src":"3725:74:23"}]},"functionSelector":"4ec9dd8d","id":3588,"implemented":true,"kind":"function","modifiers":[{"id":3573,"kind":"modifierInvocation","modifierName":{"id":3572,"name":"onlyProsumer","nodeType":"IdentifierPath","referencedDeclaration":3756,"src":"3683:12:23"},"nodeType":"ModifierInvocation","src":"3683:12:23"}],"name":"mySetUnitPrice_Matic","nameLocation":"3648:20:23","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[],"src":"3668:2:23"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3588,"src":"3705:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3705:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3704:9:23"},"scope":3775,"src":"3639:168:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3605,"nodeType":"Block","src":"3945:91:23","statements":[{"expression":{"expression":{"baseExpression":{"id":3595,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3963:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3602,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3596,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"3981:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3599,"indexExpression":{"expression":{"id":3597,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3992:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3992:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3981:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4006:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3981:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3963:45:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_energyUnitPriceUSD","nodeType":"MemberAccess","referencedDeclaration":3827,"src":"3963:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3594,"id":3604,"nodeType":"Return","src":"3956:72:23"}]},"functionSelector":"0e264f80","id":3606,"implemented":true,"kind":"function","modifiers":[{"id":3591,"kind":"modifierInvocation","modifierName":{"id":3590,"name":"onlyProsumer","nodeType":"IdentifierPath","referencedDeclaration":3756,"src":"3914:12:23"},"nodeType":"ModifierInvocation","src":"3914:12:23"}],"name":"mySetUnitPrice_USD","nameLocation":"3881:18:23","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[],"src":"3899:2:23"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"3936:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3935:9:23"},"scope":3775,"src":"3872:164:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3621,"nodeType":"Block","src":"4158:52:23","statements":[{"expression":{"arguments":[{"expression":{"id":3616,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4175:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4175:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3618,"name":"energyProduced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"4187:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3615,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4169:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4169:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3620,"nodeType":"ExpressionStatement","src":"4169:33:23"}]},"functionSelector":"0b6d83e2","id":3622,"implemented":true,"kind":"function","modifiers":[{"id":3611,"kind":"modifierInvocation","modifierName":{"id":3610,"name":"onlyProsumer","nodeType":"IdentifierPath","referencedDeclaration":3756,"src":"4130:12:23"},"nodeType":"ModifierInvocation","src":"4130:12:23"},{"id":3613,"kind":"modifierInvocation","modifierName":{"id":3612,"name":"isNotSuspended","nodeType":"IdentifierPath","referencedDeclaration":3774,"src":"4143:14:23"},"nodeType":"ModifierInvocation","src":"4143:14:23"}],"name":"produceEnergy","nameLocation":"4085:13:23","nodeType":"FunctionDefinition","parameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"energyProduced","nameLocation":"4107:14:23","nodeType":"VariableDeclaration","scope":3622,"src":"4099:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:24:23"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[],"src":"4158:0:23"},"scope":3775,"src":"4076:134:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3637,"nodeType":"Block","src":"4327:50:23","statements":[{"expression":{"arguments":[{"expression":{"id":3632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4344:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4344:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3634,"name":"energyBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"4356:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3631,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"4338:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4338:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3636,"nodeType":"ExpressionStatement","src":"4338:31:23"}]},"functionSelector":"7fb400f9","id":3638,"implemented":true,"kind":"function","modifiers":[{"id":3627,"kind":"modifierInvocation","modifierName":{"id":3626,"name":"onlyProsumer","nodeType":"IdentifierPath","referencedDeclaration":3756,"src":"4299:12:23"},"nodeType":"ModifierInvocation","src":"4299:12:23"},{"id":3629,"kind":"modifierInvocation","modifierName":{"id":3628,"name":"isNotSuspended","nodeType":"IdentifierPath","referencedDeclaration":3774,"src":"4312:14:23"},"nodeType":"ModifierInvocation","src":"4312:14:23"}],"name":"burnEnergy","nameLocation":"4259:10:23","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"energyBurned","nameLocation":"4278:12:23","nodeType":"VariableDeclaration","scope":3638,"src":"4270:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"4270:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4269:22:23"},"returnParameters":{"id":3630,"nodeType":"ParameterList","parameters":[],"src":"4327:0:23"},"scope":3775,"src":"4250:127:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3743,"nodeType":"Block","src":"4639:1207:23","statements":[{"assignments":[3650],"declarations":[{"constant":false,"id":3650,"mutability":"mutable","name":"MinPayableAmount","nameLocation":"4658:16:23","nodeType":"VariableDeclaration","scope":3743,"src":"4650:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4650:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3659,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3651,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"4677:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3655,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"4695:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4708:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4695:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4677:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_energyUnitPriceMatic","nodeType":"MemberAccess","referencedDeclaration":3829,"src":"4677:55:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3657,"name":"energy_need","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"4748:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4677:82:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4650:109:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4778:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4778:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3663,"name":"MinPayableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"4791:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4778:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4469646e27742073656e6420656e6f756768204d6174696321","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4809:27:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0476f23c45f458c311a526706d6b90266147c599bd68d096e25488defac32084","typeString":"literal_string \"Didn't send enough Matic!\""},"value":"Didn't send enough Matic!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0476f23c45f458c311a526706d6b90266147c599bd68d096e25488defac32084","typeString":"literal_string \"Didn't send enough Matic!\""}],"id":3660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4770:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4770:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"ExpressionStatement","src":"4770:67:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"energy_need","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"4870:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":3670,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"4885:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3674,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"4903:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4916:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4903:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4885:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_stakedEnergyBalance","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"4885:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4870:69:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656c65637465642050726f647563657220646f206861766520656e6f75676820456e6f75676820456e657267792042616c616e6365","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4954:56:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_10216fcf0b608737c9ebd44549ab7662b45b101bcf0a8f821aa113c9c83feca1","typeString":"literal_string \"Selected Producer do have enough Enough Energy Balance\""},"value":"Selected Producer do have enough Enough Energy Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10216fcf0b608737c9ebd44549ab7662b45b101bcf0a8f821aa113c9c83feca1","typeString":"literal_string \"Selected Producer do have enough Enough Energy Balance\""}],"id":3668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4848:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4848:173:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3679,"nodeType":"ExpressionStatement","src":"4848:173:23"},{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3680,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5103:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3684,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5121:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5134:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5121:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5103:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_stakedEnergyBalance","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"5103:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3686,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5173:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3690,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5191:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5204:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5191:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5173:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_stakedEnergyBalance","nodeType":"MemberAccess","referencedDeclaration":3831,"src":"5173:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3692,"name":"energy_need","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"5243:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5173:81:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5103:151:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3695,"nodeType":"ExpressionStatement","src":"5103:151:23"},{"expression":{"arguments":[{"id":3697,"name":"escrowAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"5316:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5331:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5331:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3700,"name":"energy_need","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"5343:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3696,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"5306:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5306:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3702,"nodeType":"ExpressionStatement","src":"5306:49:23"},{"assignments":[3704,null],"declarations":[{"constant":false,"id":3704,"mutability":"mutable","name":"callSuccess","nameLocation":"5412:11:23","nodeType":"VariableDeclaration","scope":3743,"src":"5407:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3703,"name":"bool","nodeType":"ElementaryTypeName","src":"5407:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3716,"initialValue":{"arguments":[{"hexValue":"","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5510:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"baseExpression":{"id":3707,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"5437:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3709,"indexExpression":{"id":3708,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5453:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5437:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5429:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3705,"name":"address","nodeType":"ElementaryTypeName","src":"5429:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5429:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5429:41:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3712,"name":"MinPayableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"5478:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5429:66:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5429:94:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5406:117:23"},{"expression":{"arguments":[{"id":3718,"name":"callSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5544:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616c6c206661696c6564","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5557:13:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a","typeString":"literal_string \"call failed\""},"value":"call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a","typeString":"literal_string \"call failed\""}],"id":3717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5536:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5536:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3721,"nodeType":"ExpressionStatement","src":"5536:35:23"},{"eventCall":{"arguments":[{"id":3723,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5616:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3724,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"5641:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3727,"indexExpression":{"expression":{"id":3725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5652:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5652:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5641:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3728,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5678:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3732,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5696:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5709:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5696:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5678:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_energyUnitPriceUSD","nodeType":"MemberAccess","referencedDeclaration":3827,"src":"5678:53:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3734,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"5746:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3738,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"producerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5764:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5777:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5764:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5746:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_energyUnitPriceMatic","nodeType":"MemberAccess","referencedDeclaration":3829,"src":"5746:55:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3740,"name":"energy_need","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"5816:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3722,"name":"EnergyBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"5589:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,uint256)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5589:249:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3742,"nodeType":"EmitStatement","src":"5584:254:23"}]},"functionSelector":"cdb6d52d","id":3744,"implemented":true,"kind":"function","modifiers":[{"id":3645,"kind":"modifierInvocation","modifierName":{"id":3644,"name":"onlyProsumer","nodeType":"IdentifierPath","referencedDeclaration":3756,"src":"4611:12:23"},"nodeType":"ModifierInvocation","src":"4611:12:23"},{"id":3647,"kind":"modifierInvocation","modifierName":{"id":3646,"name":"isNotSuspended","nodeType":"IdentifierPath","referencedDeclaration":3774,"src":"4624:14:23"},"nodeType":"ModifierInvocation","src":"4624:14:23"}],"name":"buyEnergy","nameLocation":"4520:9:23","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"producerID","nameLocation":"4548:10:23","nodeType":"VariableDeclaration","scope":3744,"src":"4540:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"4540:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"energy_need","nameLocation":"4577:11:23","nodeType":"VariableDeclaration","scope":3744,"src":"4569:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"4569:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:66:23"},"returnParameters":{"id":3648,"nodeType":"ParameterList","parameters":[],"src":"4639:0:23"},"scope":3775,"src":"4511:1335:23","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3755,"nodeType":"Block","src":"5925:78:23","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3747,"name":"isProsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"5944:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3750,"indexExpression":{"expression":{"id":3748,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5955:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5955:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5944:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742050726f73756d6572","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5968:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d40a0a793d1534782b36c5b5b02ddf47716308d2c0e8957bd017161181464636","typeString":"literal_string \"Not Prosumer\""},"value":"Not Prosumer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d40a0a793d1534782b36c5b5b02ddf47716308d2c0e8957bd017161181464636","typeString":"literal_string \"Not Prosumer\""}],"id":3746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5936:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5936:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3753,"nodeType":"ExpressionStatement","src":"5936:47:23"},{"id":3754,"nodeType":"PlaceholderStatement","src":"5994:1:23"}]},"id":3756,"name":"onlyProsumer","nameLocation":"5910:12:23","nodeType":"ModifierDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[],"src":"5922:2:23"},"src":"5901:102:23","virtual":false,"visibility":"internal"},{"body":{"id":3773,"nodeType":"Block","src":"6037:118:23","statements":[{"expression":{"arguments":[{"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6056:57:23","subExpression":{"expression":{"baseExpression":{"id":3759,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"6057:17:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3766,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3760,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"6075:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3763,"indexExpression":{"expression":{"id":3761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6086:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6086:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6075:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6100:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6075:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6057:45:23","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":3767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_suspended","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"6057:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206172652053757370656e646564","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6115:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682","typeString":"literal_string \"You are Suspended\""},"value":"You are Suspended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682","typeString":"literal_string \"You are Suspended\""}],"id":3758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6048:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6048:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3771,"nodeType":"ExpressionStatement","src":"6048:87:23"},{"id":3772,"nodeType":"PlaceholderStatement","src":"6146:1:23"}]},"id":3774,"name":"isNotSuspended","nameLocation":"6020:14:23","nodeType":"ModifierDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[],"src":"6034:2:23"},"src":"6011:144:23","virtual":false,"visibility":"internal"}],"scope":3776,"src":"156:6002:23","usedErrors":[]}],"src":"40:6120:23"},"id":23},"contracts/MultiSig.sol":{"ast":{"absolutePath":"contracts/MultiSig.sol","exportedSymbols":{"ERC2771Recipient":[546],"IERC2771Recipient":[663],"MultiSig":[4906]},"id":4907,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3777,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"40:23:24"},{"absolutePath":"@opengsn/contracts/src/ERC2771Recipient.sol","file":"@opengsn/contracts/src/ERC2771Recipient.sol","id":3778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4907,"sourceUnit":547,"src":"64:53:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3779,"name":"ERC2771Recipient","nodeType":"IdentifierPath","referencedDeclaration":546,"src":"164:16:24"},"id":3780,"nodeType":"InheritanceSpecifier","src":"164:16:24"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4906,"linearizedBaseContracts":[4906,546,663],"name":"MultiSig","nameLocation":"152:8:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"dc8452cd","id":3782,"mutability":"mutable","name":"required","nameLocation":"251:8:24","nodeType":"VariableDeclaration","scope":4906,"src":"236:23:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8fff20f3","id":3784,"mutability":"mutable","name":"regFee","nameLocation":"280:6:24","nodeType":"VariableDeclaration","scope":4906,"src":"265:21:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"025e7c27","id":3787,"mutability":"mutable","name":"owners","nameLocation":"310:6:24","nodeType":"VariableDeclaration","scope":4906,"src":"293:23:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3785,"name":"address","nodeType":"ElementaryTypeName","src":"293:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3786,"nodeType":"ArrayTypeName","src":"293:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"2f54bf6e","id":3791,"mutability":"mutable","name":"isOwner","nameLocation":"355:7:24","nodeType":"VariableDeclaration","scope":4906,"src":"323:39:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3790,"keyType":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"323:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3789,"name":"bool","nodeType":"ElementaryTypeName","src":"342:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f4b16045","id":3797,"mutability":"mutable","name":"approved","nameLocation":"420:8:24","nodeType":"VariableDeclaration","scope":4906,"src":"368:60:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":3796,"keyType":{"id":3792,"name":"address","nodeType":"ElementaryTypeName","src":"376:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"368:44:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":3795,"keyType":{"id":3793,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"387:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3794,"name":"bool","nodeType":"ElementaryTypeName","src":"406:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"f85bae78","id":3803,"mutability":"mutable","name":"disapproved","nameLocation":"561:11:24","nodeType":"VariableDeclaration","scope":4906,"src":"509:63:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":3802,"keyType":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"509:44:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":3801,"keyType":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"528:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3800,"name":"bool","nodeType":"ElementaryTypeName","src":"547:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"5f81b606","id":3809,"mutability":"mutable","name":"suspended","nameLocation":"705:9:24","nodeType":"VariableDeclaration","scope":4906,"src":"653:61:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":3808,"keyType":{"id":3804,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"653:44:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":3807,"keyType":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"672:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3806,"name":"bool","nodeType":"ElementaryTypeName","src":"691:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"75ae81b3","id":3815,"mutability":"mutable","name":"unSuspended","nameLocation":"847:11:24","nodeType":"VariableDeclaration","scope":4906,"src":"795:63:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":3814,"keyType":{"id":3810,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"795:44:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":3813,"keyType":{"id":3811,"name":"address","nodeType":"ElementaryTypeName","src":"822:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"814:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3812,"name":"bool","nodeType":"ElementaryTypeName","src":"833:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"canonicalName":"MultiSig.prosumer","id":3832,"members":[{"constant":false,"id":3817,"mutability":"mutable","name":"_prosumerID","nameLocation":"1033:11:24","nodeType":"VariableDeclaration","scope":3832,"src":"1025:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"_address","nameLocation":"1062:8:24","nodeType":"VariableDeclaration","scope":3832,"src":"1054:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3818,"name":"address","nodeType":"ElementaryTypeName","src":"1054:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"_aadharId","nameLocation":"1088:9:24","nodeType":"VariableDeclaration","scope":3832,"src":"1080:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"_approved","nameLocation":"1112:9:24","nodeType":"VariableDeclaration","scope":3832,"src":"1107:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3822,"name":"bool","nodeType":"ElementaryTypeName","src":"1107:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"_suspended","nameLocation":"1136:10:24","nodeType":"VariableDeclaration","scope":3832,"src":"1131:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3824,"name":"bool","nodeType":"ElementaryTypeName","src":"1131:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"_energyUnitPriceUSD","nameLocation":"1164:19:24","nodeType":"VariableDeclaration","scope":3832,"src":"1156:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"_energyUnitPriceMatic","nameLocation":"1201:21:24","nodeType":"VariableDeclaration","scope":3832,"src":"1193:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"_stakedEnergyBalance","nameLocation":"1240:20:24","nodeType":"VariableDeclaration","scope":3832,"src":"1232:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"prosumer","nameLocation":"1006:8:24","nodeType":"StructDefinition","scope":4906,"src":"999:268:24","visibility":"public"},{"constant":false,"functionSelector":"4ef8ab77","id":3836,"mutability":"mutable","name":"ApprovedProsumers","nameLocation":"1291:17:24","nodeType":"VariableDeclaration","scope":4906,"src":"1273:35:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer[]"},"typeName":{"baseType":{"id":3834,"nodeType":"UserDefinedTypeName","pathNode":{"id":3833,"name":"prosumer","nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"1273:8:24"},"referencedDeclaration":3832,"src":"1273:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage_ptr","typeString":"struct MultiSig.prosumer"}},"id":3835,"nodeType":"ArrayTypeName","src":"1273:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr","typeString":"struct MultiSig.prosumer[]"}},"visibility":"public"},{"constant":false,"functionSelector":"9c01a6df","id":3840,"mutability":"mutable","name":"unApprovedProsumers","nameLocation":"1332:19:24","nodeType":"VariableDeclaration","scope":4906,"src":"1314:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer[]"},"typeName":{"baseType":{"id":3838,"nodeType":"UserDefinedTypeName","pathNode":{"id":3837,"name":"prosumer","nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"1314:8:24"},"referencedDeclaration":3832,"src":"1314:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage_ptr","typeString":"struct MultiSig.prosumer"}},"id":3839,"nodeType":"ArrayTypeName","src":"1314:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr","typeString":"struct MultiSig.prosumer[]"}},"visibility":"public"},{"constant":false,"functionSelector":"fdbd2e8b","id":3844,"mutability":"mutable","name":"isProsumer","nameLocation":"1390:10:24","nodeType":"VariableDeclaration","scope":4906,"src":"1358:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3843,"keyType":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"1366:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1358:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3842,"name":"bool","nodeType":"ElementaryTypeName","src":"1377:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"8fac6371","id":3848,"mutability":"mutable","name":"prosumerAddress","nameLocation":"1441:15:24","nodeType":"VariableDeclaration","scope":4906,"src":"1406:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3847,"keyType":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1406:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3846,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"001cfdce","id":3852,"mutability":"mutable","name":"prosumerID","nameLocation":"1497:10:24","nodeType":"VariableDeclaration","scope":4906,"src":"1462:45:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3851,"keyType":{"id":3849,"name":"address","nodeType":"ElementaryTypeName","src":"1470:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1462:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"9a9ddd16","id":3856,"mutability":"mutable","name":"approvalCount","nameLocation":"1570:13:24","nodeType":"VariableDeclaration","scope":4906,"src":"1535:48:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3855,"keyType":{"id":3853,"name":"address","nodeType":"ElementaryTypeName","src":"1543:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1535:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1554:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"66cc771f","id":3860,"mutability":"mutable","name":"disapprovalCount","nameLocation":"1624:16:24","nodeType":"VariableDeclaration","scope":4906,"src":"1589:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3859,"keyType":{"id":3857,"name":"address","nodeType":"ElementaryTypeName","src":"1597:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1589:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1608:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"90f8ba3c","id":3864,"mutability":"mutable","name":"suspensionCount","nameLocation":"1681:15:24","nodeType":"VariableDeclaration","scope":4906,"src":"1646:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3863,"keyType":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"1654:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1646:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1665:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"143859eb","id":3868,"mutability":"mutable","name":"unSuspensionCount","nameLocation":"1737:17:24","nodeType":"VariableDeclaration","scope":4906,"src":"1702:52:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3867,"keyType":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1702:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"MultiSig.Complain","id":3879,"members":[{"constant":false,"id":3870,"mutability":"mutable","name":"_complainID","nameLocation":"1864:11:24","nodeType":"VariableDeclaration","scope":3879,"src":"1856:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1856:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"_complainant","nameLocation":"1893:12:24","nodeType":"VariableDeclaration","scope":3879,"src":"1885:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1885:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"_accused","nameLocation":"1923:8:24","nodeType":"VariableDeclaration","scope":3879,"src":"1915:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"_complain","nameLocation":"1948:9:24","nodeType":"VariableDeclaration","scope":3879,"src":"1941:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3875,"name":"string","nodeType":"ElementaryTypeName","src":"1941:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"_resolved","nameLocation":"1972:9:24","nodeType":"VariableDeclaration","scope":3879,"src":"1967:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3877,"name":"bool","nodeType":"ElementaryTypeName","src":"1967:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Complain","nameLocation":"1837:8:24","nodeType":"StructDefinition","scope":4906,"src":"1830:158:24","visibility":"public"},{"constant":false,"functionSelector":"73de8ce8","id":3881,"mutability":"mutable","name":"complainCount","nameLocation":"2009:13:24","nodeType":"VariableDeclaration","scope":4906,"src":"1994:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"50a7ac25","id":3884,"mutability":"mutable","name":"maxComplains","nameLocation":"2043:12:24","nodeType":"VariableDeclaration","scope":4906,"src":"2028:32:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2028:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2058:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"4ea30b2f","id":3888,"mutability":"mutable","name":"complains","nameLocation":"2084:9:24","nodeType":"VariableDeclaration","scope":4906,"src":"2066:27:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage","typeString":"struct MultiSig.Complain[]"},"typeName":{"baseType":{"id":3886,"nodeType":"UserDefinedTypeName","pathNode":{"id":3885,"name":"Complain","nodeType":"IdentifierPath","referencedDeclaration":3879,"src":"2066:8:24"},"referencedDeclaration":3879,"src":"2066:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_storage_ptr","typeString":"struct MultiSig.Complain"}},"id":3887,"nodeType":"ArrayTypeName","src":"2066:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage_ptr","typeString":"struct MultiSig.Complain[]"}},"visibility":"public"},{"body":{"id":3974,"nodeType":"Block","src":"2219:656:24","statements":[{"expression":{"arguments":[{"id":3899,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"2286:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3898,"name":"_setTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"2265:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2265:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3901,"nodeType":"ExpressionStatement","src":"2265:31:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3903,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"2412:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2412:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2412:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e657273205265717569726564","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2432:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2","typeString":"literal_string \"Owners Required\""},"value":"Owners Required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2","typeString":"literal_string \"Owners Required\""}],"id":3902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2404:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2404:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3909,"nodeType":"ExpressionStatement","src":"2404:46:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"2468:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2480:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2468:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"2485:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3915,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"2498:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2498:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2485:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2468:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265717569726564206e756d626572206f66206f776e657273","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2514:35:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b","typeString":"literal_string \"Invalid required number of owners\""},"value":"Invalid required number of owners"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b","typeString":"literal_string \"Invalid required number of owners\""}],"id":3910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:90:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3921,"nodeType":"ExpressionStatement","src":"2460:90:24"},{"body":{"id":3968,"nodeType":"Block","src":"2599:239:24","statements":[{"assignments":[3933],"declarations":[{"constant":false,"id":3933,"mutability":"mutable","name":"owner","nameLocation":"2621:5:24","nodeType":"VariableDeclaration","scope":3968,"src":"2613:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3932,"name":"address","nodeType":"ElementaryTypeName","src":"2613:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3937,"initialValue":{"baseExpression":{"id":3934,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"2629:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3936,"indexExpression":{"id":3935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"2637:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2613:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2661:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2678:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2670:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3940,"name":"address","nodeType":"ElementaryTypeName","src":"2670:7:24","typeDescriptions":{}}},"id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2670:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2661:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964206f776e6572","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2682:15:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14","typeString":"literal_string \"invalid owner\""},"value":"invalid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14","typeString":"literal_string \"invalid owner\""}],"id":3938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2653:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2653:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3947,"nodeType":"ExpressionStatement","src":"2653:45:24"},{"expression":{"arguments":[{"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2720:15:24","subExpression":{"baseExpression":{"id":3949,"name":"isOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"2721:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3951,"indexExpression":{"id":3950,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2729:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2721:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e6572206973206e6f7420756e69717565","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2737:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f","typeString":"literal_string \"Owner is not unique\""},"value":"Owner is not unique"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f","typeString":"literal_string \"Owner is not unique\""}],"id":3948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2712:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2712:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3955,"nodeType":"ExpressionStatement","src":"2712:47:24"},{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3956,"name":"isOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"2774:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3958,"indexExpression":{"id":3957,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2782:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2774:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2791:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2774:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3961,"nodeType":"ExpressionStatement","src":"2774:21:24"},{"expression":{"arguments":[{"id":3965,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"2821:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3962,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"2809:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2809:11:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2809:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3967,"nodeType":"ExpressionStatement","src":"2809:18:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"2574:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3926,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"2578:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2578:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2574:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3969,"initializationExpression":{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"i","nameLocation":"2571:1:24","nodeType":"VariableDeclaration","scope":3969,"src":"2566:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint","nodeType":"ElementaryTypeName","src":"2566:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3924,"nodeType":"VariableDeclarationStatement","src":"2566:6:24"},"loopExpression":{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2594:3:24","subExpression":{"id":3929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"2594:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3931,"nodeType":"ExpressionStatement","src":"2594:3:24"},"nodeType":"ForStatement","src":"2561:277:24"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"2848:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3971,"name":"_required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"2859:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2848:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3973,"nodeType":"ExpressionStatement","src":"2848:20:24"}]},"id":3975,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"forwarder","nameLocation":"2166:9:24","nodeType":"VariableDeclaration","scope":3975,"src":"2158:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"2158:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"_owners","nameLocation":"2194:7:24","nodeType":"VariableDeclaration","scope":3975,"src":"2177:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3891,"name":"address","nodeType":"ElementaryTypeName","src":"2177:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3892,"nodeType":"ArrayTypeName","src":"2177:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"_required","nameLocation":"2208:9:24","nodeType":"VariableDeclaration","scope":3975,"src":"2203:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint","nodeType":"ElementaryTypeName","src":"2203:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:61:24"},"returnParameters":{"id":3897,"nodeType":"ParameterList","parameters":[],"src":"2219:0:24"},"scope":4906,"src":"2146:729:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"486ff0cd","id":3978,"mutability":"mutable","name":"versionRecipient","nameLocation":"2895:16:24","nodeType":"VariableDeclaration","scope":4906,"src":"2881:40:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3976,"name":"string","nodeType":"ElementaryTypeName","src":"2881:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"332e302e30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2914:7:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d7a1ce683065975771bedf401ecab037f4f4c62cc51fefdc8b39dd246ff0343a","typeString":"literal_string \"3.0.0\""},"value":"3.0.0"},"visibility":"public"},{"body":{"id":4010,"nodeType":"Block","src":"3085:214:24","statements":[{"body":{"id":4006,"nodeType":"Block","src":"3152:119:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3170:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3170:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":3997,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"3184:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3999,"indexExpression":{"id":3998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"3204:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3184:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"3184:31:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3170:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4005,"nodeType":"IfStatement","src":"3166:95:24","trueBody":{"id":4004,"nodeType":"Block","src":"3217:44:24","statements":[{"expression":{"hexValue":"74727565","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3242:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3983,"id":4003,"nodeType":"Return","src":"3235:11:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"3115:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3989,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"3119:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3119:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3115:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4007,"initializationExpression":{"assignments":[3985],"declarations":[{"constant":false,"id":3985,"mutability":"mutable","name":"i","nameLocation":"3108:1:24","nodeType":"VariableDeclaration","scope":4007,"src":"3100:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3987,"initialValue":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3112:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3100:13:24"},"loopExpression":{"expression":{"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3147:3:24","subExpression":{"id":3992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"3147:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3994,"nodeType":"ExpressionStatement","src":"3147:3:24"},"nodeType":"ForStatement","src":"3095:176:24"},{"expression":{"hexValue":"66616c7365","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3287:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3983,"id":4009,"nodeType":"Return","src":"3280:12:24"}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"2973:31:24","text":"Unverified User Function**"},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"isRequested","nameLocation":"3043:11:24","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[],"src":"3054:2:24"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4011,"src":"3079:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3981,"name":"bool","nodeType":"ElementaryTypeName","src":"3079:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3078:6:24"},"scope":4906,"src":"3034:265:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4097,"nodeType":"Block","src":"3398:1011:24","statements":[{"expression":{"arguments":[{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3416:20:24","subExpression":{"baseExpression":{"id":4017,"name":"isOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"3417:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4020,"indexExpression":{"expression":{"id":4018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3425:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3425:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752061726520616e204f776e6572","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3438:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5","typeString":"literal_string \"You are an Owner\""},"value":"You are an Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5","typeString":"literal_string \"You are an Owner\""}],"id":4016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3408:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3408:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4024,"nodeType":"ExpressionStatement","src":"3408:49:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4026,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3475:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3475:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4028,"name":"regFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"3488:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3475:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526567697374726174696f6e204661696c65642c20496e73756666696369656e7420466565","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3496:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43","typeString":"literal_string \"Registration Failed, Insufficient Fee\""},"value":"Registration Failed, Insufficient Fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43","typeString":"literal_string \"Registration Failed, Insufficient Fee\""}],"id":4025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3467:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3467:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4032,"nodeType":"ExpressionStatement","src":"3467:69:24"},{"expression":{"arguments":[{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3554:23:24","subExpression":{"baseExpression":{"id":4034,"name":"isProsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"3555:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4037,"indexExpression":{"expression":{"id":4035,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3566:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3566:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3555:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752061726520616c726561647920612050726f73756d657220696e20746865204e6574776f726b","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3579:43:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602","typeString":"literal_string \"You are already a Prosumer in the Network\""},"value":"You are already a Prosumer in the Network"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602","typeString":"literal_string \"You are already a Prosumer in the Network\""}],"id":4033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3546:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3546:77:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4041,"nodeType":"ExpressionStatement","src":"3546:77:24"},{"expression":{"arguments":[{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3641:14:24","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4043,"name":"isRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"3642:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3642:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520616c72656164792072657175657374656420666f7220526567697374726174696f6e","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3657:45:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1","typeString":"literal_string \"You have already requested for Registration\""},"value":"You have already requested for Registration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1","typeString":"literal_string \"You have already requested for Registration\""}],"id":4042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3633:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3633:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4048,"nodeType":"ExpressionStatement","src":"3633:70:24"},{"assignments":[4050],"declarations":[{"constant":false,"id":4050,"mutability":"mutable","name":"digitCheck","nameLocation":"3722:10:24","nodeType":"VariableDeclaration","scope":4097,"src":"3714:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4052,"initialValue":{"id":4051,"name":"_aadharNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"3735:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3714:30:24"},{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"digits","nameLocation":"3762:6:24","nodeType":"VariableDeclaration","scope":4097,"src":"3754:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3754:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4056,"initialValue":{"hexValue":"30","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3771:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3754:18:24"},{"body":{"id":4067,"nodeType":"Block","src":"3807:63:24","statements":[{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"digitCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"3821:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3835:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3821:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"3821:16:24"},{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3851:8:24","subExpression":{"id":4064,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3851:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4066,"nodeType":"ExpressionStatement","src":"3851:8:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"digitCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"3790:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3804:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3790:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4068,"nodeType":"WhileStatement","src":"3783:87:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"3888:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3132","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3898:2:24","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"3888:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e746572206120313220646967697420416164686172204e6f2e","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3902:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0","typeString":"literal_string \"Enter a 12 digit Aadhar No.\""},"value":"Enter a 12 digit Aadhar No."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0","typeString":"literal_string \"Enter a 12 digit Aadhar No.\""}],"id":4069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3880:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3880:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"ExpressionStatement","src":"3880:52:24"},{"assignments":[4078],"declarations":[{"constant":false,"id":4078,"mutability":"mutable","name":"_prosumer","nameLocation":"3994:9:24","nodeType":"VariableDeclaration","scope":4097,"src":"3978:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_memory_ptr","typeString":"struct MultiSig.prosumer"},"typeName":{"id":4077,"nodeType":"UserDefinedTypeName","pathNode":{"id":4076,"name":"prosumer","nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"3978:8:24"},"referencedDeclaration":3832,"src":"3978:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage_ptr","typeString":"struct MultiSig.prosumer"}},"visibility":"internal"}],"id":4090,"initialValue":{"arguments":[{"hexValue":"30","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4042:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":4081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4067:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4067:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4083,"name":"_aadharNo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"4102:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4136:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4167:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4207:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4245:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4282:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4079,"name":"prosumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"4006:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_prosumer_$3832_storage_ptr_$","typeString":"type(struct MultiSig.prosumer storage pointer)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_prosumerID","_address","_aadharId","_approved","_suspended","_energyUnitPriceUSD","_energyUnitPriceMatic","_stakedEnergyBalance"],"nodeType":"FunctionCall","src":"4006:288:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_memory_ptr","typeString":"struct MultiSig.prosumer memory"}},"nodeType":"VariableDeclarationStatement","src":"3978:316:24"},{"expression":{"arguments":[{"id":4094,"name":"_prosumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"4392:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_memory_ptr","typeString":"struct MultiSig.prosumer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_prosumer_$3832_memory_ptr","typeString":"struct MultiSig.prosumer memory"}],"expression":{"id":4091,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"4367:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4367:24:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr_$_t_struct$_prosumer_$3832_storage_$returns$__$bound_to$_t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr_$","typeString":"function (struct MultiSig.prosumer storage ref[] storage pointer,struct MultiSig.prosumer storage ref)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4096,"nodeType":"ExpressionStatement","src":"4367:35:24"}]},"functionSelector":"9ff34115","id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"req_Registration","nameLocation":"3347:16:24","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"_aadharNo","nameLocation":"3372:9:24","nodeType":"VariableDeclaration","scope":4098,"src":"3364:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:19:24"},"returnParameters":{"id":4015,"nodeType":"ParameterList","parameters":[],"src":"3398:0:24"},"scope":4906,"src":"3338:1071:24","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4220,"nodeType":"Block","src":"4495:1149:24","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4106,"name":"isProsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"4513:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4109,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4107,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"4524:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4524:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4513:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206e6f7420612050726f73756d6572","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4539:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75","typeString":"literal_string \"You not a Prosumer\""},"value":"You not a Prosumer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75","typeString":"literal_string \"You not a Prosumer\""}],"id":4105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4505:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4505:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4112,"nodeType":"ExpressionStatement","src":"4505:55:24"},{"expression":{"arguments":[{"baseExpression":{"id":4114,"name":"isProsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"4578:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4118,"indexExpression":{"baseExpression":{"id":4115,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4589:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4117,"indexExpression":{"id":4116,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"4605:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4589:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4578:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41636375736564206e6f7420612050726f73756d6572","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4620:24:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7","typeString":"literal_string \"Accused not a Prosumer\""},"value":"Accused not a Prosumer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7","typeString":"literal_string \"Accused not a Prosumer\""}],"id":4113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4570:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4121,"nodeType":"ExpressionStatement","src":"4570:75:24"},{"expression":{"arguments":[{"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4676:54:24","subExpression":{"baseExpression":{"baseExpression":{"id":4123,"name":"suspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"4677:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4127,"indexExpression":{"baseExpression":{"id":4124,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4687:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4126,"indexExpression":{"id":4125,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"4703:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4687:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4677:39:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4130,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4128,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"4717:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4717:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4677:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363757365642050726f73756d65722069732053757370656e646564","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4744:31:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a","typeString":"literal_string \"Accused Prosumer is Suspended\""},"value":"Accused Prosumer is Suspended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a","typeString":"literal_string \"Accused Prosumer is Suspended\""}],"id":4122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4655:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4655:130:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4134,"nodeType":"ExpressionStatement","src":"4655:130:24"},{"expression":{"arguments":[{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4803:54:24","subExpression":{"baseExpression":{"baseExpression":{"id":4136,"name":"suspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"4804:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4139,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4137,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"4814:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4814:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4804:23:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4143,"indexExpression":{"baseExpression":{"id":4140,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4828:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4142,"indexExpression":{"id":4141,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"4844:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4828:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4804:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206172652053757370656e646564","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4859:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682","typeString":"literal_string \"You are Suspended\""},"value":"You are Suspended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682","typeString":"literal_string \"You are Suspended\""}],"id":4135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4795:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4795:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4147,"nodeType":"ExpressionStatement","src":"4795:84:24"},{"expression":{"arguments":[{"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4910:56:24","subExpression":{"baseExpression":{"baseExpression":{"id":4149,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"4911:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4153,"indexExpression":{"baseExpression":{"id":4150,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4923:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4152,"indexExpression":{"id":4151,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"4939:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4923:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4911:41:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4156,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4154,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"4953:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4953:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4911:55:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f73756d657220697320446973617070726f766564","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4980:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104","typeString":"literal_string \"Prosumer is Disapproved\""},"value":"Prosumer is Disapproved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104","typeString":"literal_string \"Prosumer is Disapproved\""}],"id":4148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4889:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4889:126:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4160,"nodeType":"ExpressionStatement","src":"4889:126:24"},{"expression":{"arguments":[{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5033:56:24","subExpression":{"baseExpression":{"baseExpression":{"id":4162,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"5034:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4165,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4163,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"5046:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5046:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5034:25:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4169,"indexExpression":{"baseExpression":{"id":4166,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"5060:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4168,"indexExpression":{"id":4167,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"5076:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5060:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5034:55:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752061726520446973617070726f766564","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5091:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab","typeString":"literal_string \"You are Disapproved\""},"value":"You are Disapproved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab","typeString":"literal_string \"You are Disapproved\""}],"id":4161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5025:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5025:88:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4173,"nodeType":"ExpressionStatement","src":"5025:88:24"},{"assignments":[4176],"declarations":[{"constant":false,"id":4176,"mutability":"mutable","name":"_complain","nameLocation":"5140:9:24","nodeType":"VariableDeclaration","scope":4220,"src":"5124:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_memory_ptr","typeString":"struct MultiSig.Complain"},"typeName":{"id":4175,"nodeType":"UserDefinedTypeName","pathNode":{"id":4174,"name":"Complain","nodeType":"IdentifierPath","referencedDeclaration":3879,"src":"5124:8:24"},"referencedDeclaration":3879,"src":"5124:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_storage_ptr","typeString":"struct MultiSig.Complain"}},"visibility":"internal"}],"id":4190,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4178,"name":"complains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"5188:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage","typeString":"struct MultiSig.Complain storage ref[] storage ref"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5188:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5207:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5188:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4182,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"5236:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4185,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4183,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"5247:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5236:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4186,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"5284:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4187,"name":"_complainBody","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"5320:13:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5358:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4177,"name":"Complain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"5152:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Complain_$3879_storage_ptr_$","typeString":"type(struct MultiSig.Complain storage pointer)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_complainID","_complainant","_accused","_complain","_resolved"],"nodeType":"FunctionCall","src":"5152:222:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_memory_ptr","typeString":"struct MultiSig.Complain memory"}},"nodeType":"VariableDeclarationStatement","src":"5124:250:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4191,"name":"complains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"5389:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage","typeString":"struct MultiSig.Complain storage ref[] storage ref"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5389:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4193,"name":"maxComplains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"5408:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5389:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4210,"nodeType":"Block","src":"5478:76:24","statements":[{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4202,"name":"complains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"5492:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage","typeString":"struct MultiSig.Complain storage ref[] storage ref"}},"id":4206,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"complainCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"5502:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4204,"name":"maxComplains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"5518:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5502:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5492:39:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_storage","typeString":"struct MultiSig.Complain storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4207,"name":"_complain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5534:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_memory_ptr","typeString":"struct MultiSig.Complain memory"}},"src":"5492:51:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_storage","typeString":"struct MultiSig.Complain storage ref"}},"id":4209,"nodeType":"ExpressionStatement","src":"5492:51:24"}]},"id":4211,"nodeType":"IfStatement","src":"5385:169:24","trueBody":{"id":4201,"nodeType":"Block","src":"5422:50:24","statements":[{"expression":{"arguments":[{"id":4198,"name":"_complain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5451:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_memory_ptr","typeString":"struct MultiSig.Complain memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Complain_$3879_memory_ptr","typeString":"struct MultiSig.Complain memory"}],"expression":{"id":4195,"name":"complains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"5436:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage","typeString":"struct MultiSig.Complain storage ref[] storage ref"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"5436:14:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Complain_$3879_storage_$dyn_storage_ptr_$_t_struct$_Complain_$3879_storage_$returns$__$bound_to$_t_array$_t_struct$_Complain_$3879_storage_$dyn_storage_ptr_$","typeString":"function (struct MultiSig.Complain storage ref[] storage pointer,struct MultiSig.Complain storage ref)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"ExpressionStatement","src":"5436:25:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4212,"name":"complainCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"5568:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4213,"name":"maxComplains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"5584:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5568:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4219,"nodeType":"IfStatement","src":"5564:74:24","trueBody":{"id":4218,"nodeType":"Block","src":"5598:40:24","statements":[{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5612:15:24","subExpression":{"id":4215,"name":"complainCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"5612:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4217,"nodeType":"ExpressionStatement","src":"5612:15:24"}]}}]},"functionSelector":"c8b6ba49","id":4221,"implemented":true,"kind":"function","modifiers":[],"name":"raiseComplain","nameLocation":"4424:13:24","nodeType":"FunctionDefinition","parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"_prosumerId","nameLocation":"4446:11:24","nodeType":"VariableDeclaration","scope":4221,"src":"4438:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"4438:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"_complainBody","nameLocation":"4473:13:24","nodeType":"VariableDeclaration","scope":4221,"src":"4459:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4101,"name":"string","nodeType":"ElementaryTypeName","src":"4459:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4437:50:24"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[],"src":"4495:0:24"},"scope":4906,"src":"4415:1229:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4232,"nodeType":"Block","src":"5799:33:24","statements":[{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"regFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"5809:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4229,"name":"_regFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"5818:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5809:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4231,"nodeType":"ExpressionStatement","src":"5809:16:24"}]},"functionSelector":"e814db59","id":4233,"implemented":true,"kind":"function","modifiers":[{"id":4226,"kind":"modifierInvocation","modifierName":{"id":4225,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"5789:9:24"},"nodeType":"ModifierInvocation","src":"5789:9:24"}],"name":"setRegFee","nameLocation":"5755:9:24","nodeType":"FunctionDefinition","parameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"_regFee","nameLocation":"5773:7:24","nodeType":"VariableDeclaration","scope":4233,"src":"5765:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5765:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5764:17:24"},"returnParameters":{"id":4227,"nodeType":"ParameterList","parameters":[],"src":"5799:0:24"},"scope":4906,"src":"5746:86:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4278,"nodeType":"Block","src":"6032:348:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"6063:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4242,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"6087:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6087:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6063:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420756e617070726f76656450726f73756d657220496e646578","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6127:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea","typeString":"literal_string \"Invalid unapprovedProsumer Index\""},"value":"Invalid unapprovedProsumer Index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea","typeString":"literal_string \"Invalid unapprovedProsumer Index\""}],"id":4240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6042:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6042:129:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4247,"nodeType":"ExpressionStatement","src":"6042:129:24"},{"body":{"id":4271,"nodeType":"Block","src":"6263:76:24","statements":[{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4261,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"6277:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4263,"indexExpression":{"id":4262,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"6297:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6277:22:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4264,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"6302:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4268,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4265,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"6322:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6326:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6322:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6302:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"src":"6277:51:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4270,"nodeType":"ExpressionStatement","src":"6277:51:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"6222:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4253,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"6226:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6226:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6226:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6222:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4272,"initializationExpression":{"assignments":[4249],"declarations":[{"constant":false,"id":4249,"mutability":"mutable","name":"i","nameLocation":"6195:1:24","nodeType":"VariableDeclaration","scope":4272,"src":"6187:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4251,"initialValue":{"id":4250,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"6199:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6187:33:24"},"loopExpression":{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6258:3:24","subExpression":{"id":4258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"6258:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"6258:3:24"},"nodeType":"ForStatement","src":"6182:157:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4273,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"6348:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"6348:23:24","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr_$","typeString":"function (struct MultiSig.prosumer storage ref[] storage pointer)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6348:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4277,"nodeType":"ExpressionStatement","src":"6348:25:24"}]},"id":4279,"implemented":true,"kind":"function","modifiers":[{"id":4238,"kind":"modifierInvocation","modifierName":{"id":4237,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"6022:9:24"},"nodeType":"ModifierInvocation","src":"6022:9:24"}],"name":"deleteElementFrom_UnApprovedProsumers","nameLocation":"5931:37:24","nodeType":"FunctionDefinition","parameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"_unApprovedProsumerID","nameLocation":"5986:21:24","nodeType":"VariableDeclaration","scope":4279,"src":"5978:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5978:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5968:45:24"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[],"src":"6032:0:24"},"scope":4906,"src":"5922:458:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4290,"nodeType":"Block","src":"6633:43:24","statements":[{"expression":{"id":4288,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"6650:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"functionReturnParameters":4287,"id":4289,"nodeType":"Return","src":"6643:26:24"}]},"functionSelector":"e706d568","id":4291,"implemented":true,"kind":"function","modifiers":[{"id":4282,"kind":"modifierInvocation","modifierName":{"id":4281,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"6595:9:24"},"nodeType":"ModifierInvocation","src":"6595:9:24"}],"name":"show_Unapproved_Prosumers","nameLocation":"6555:25:24","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[],"src":"6580:2:24"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4291,"src":"6614:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr","typeString":"struct MultiSig.prosumer[]"},"typeName":{"baseType":{"id":4284,"nodeType":"UserDefinedTypeName","pathNode":{"id":4283,"name":"prosumer","nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"6614:8:24"},"referencedDeclaration":3832,"src":"6614:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage_ptr","typeString":"struct MultiSig.prosumer"}},"id":4285,"nodeType":"ArrayTypeName","src":"6614:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr","typeString":"struct MultiSig.prosumer[]"}},"visibility":"internal"}],"src":"6613:19:24"},"scope":4906,"src":"6546:130:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4300,"nodeType":"Block","src":"6757:84:24","statements":[{"expression":{"id":4298,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"6817:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"functionReturnParameters":4297,"id":4299,"nodeType":"Return","src":"6810:24:24"}]},"functionSelector":"612536fc","id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"show_Approved_Prosumers","nameLocation":"6691:23:24","nodeType":"FunctionDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[],"src":"6714:2:24"},"returnParameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"6738:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr","typeString":"struct MultiSig.prosumer[]"},"typeName":{"baseType":{"id":4294,"nodeType":"UserDefinedTypeName","pathNode":{"id":4293,"name":"prosumer","nodeType":"IdentifierPath","referencedDeclaration":3832,"src":"6738:8:24"},"referencedDeclaration":3832,"src":"6738:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage_ptr","typeString":"struct MultiSig.prosumer"}},"id":4295,"nodeType":"ArrayTypeName","src":"6738:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr","typeString":"struct MultiSig.prosumer[]"}},"visibility":"internal"}],"src":"6737:19:24"},"scope":4906,"src":"6682:159:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4336,"nodeType":"Block","src":"7032:313:24","statements":[{"condition":{"baseExpression":{"baseExpression":{"id":4310,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"7046:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4312,"indexExpression":{"id":4311,"name":"_unapprovedProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"7055:26:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7046:36:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4315,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4313,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"7083:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7083:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7046:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"baseExpression":{"baseExpression":{"id":4320,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"7161:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4322,"indexExpression":{"id":4321,"name":"_unapprovedProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"7173:26:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7161:39:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4325,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4323,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"7201:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7201:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7161:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4333,"nodeType":"Block","src":"7278:61:24","statements":[{"expression":{"components":[{"hexValue":"50726f73756d6572204e6f7420566572696669656420596574","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7300:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3636ed28c8e81b49eedf1ab8f281ab5736027bee1b60bfb3b8f41331a296dbe8","typeString":"literal_string \"Prosumer Not Verified Yet\""},"value":"Prosumer Not Verified Yet"}],"id":4331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7299:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3636ed28c8e81b49eedf1ab8f281ab5736027bee1b60bfb3b8f41331a296dbe8","typeString":"literal_string \"Prosumer Not Verified Yet\""}},"functionReturnParameters":4309,"id":4332,"nodeType":"Return","src":"7292:36:24"}]},"id":4334,"nodeType":"IfStatement","src":"7157:182:24","trueBody":{"id":4329,"nodeType":"Block","src":"7216:56:24","statements":[{"expression":{"components":[{"hexValue":"50726f73756d657220446973617070726f766564","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7238:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_0126f86ca50791ac70906496feef784bbab3612df0d864f591c2cdebc06ab1e9","typeString":"literal_string \"Prosumer Disapproved\""},"value":"Prosumer Disapproved"}],"id":4327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7237:24:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_0126f86ca50791ac70906496feef784bbab3612df0d864f591c2cdebc06ab1e9","typeString":"literal_string \"Prosumer Disapproved\""}},"functionReturnParameters":4309,"id":4328,"nodeType":"Return","src":"7230:31:24"}]}},"id":4335,"nodeType":"IfStatement","src":"7042:297:24","trueBody":{"id":4319,"nodeType":"Block","src":"7098:53:24","statements":[{"expression":{"components":[{"hexValue":"50726f73756d657220417070726f766564","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7120:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_165c86e1967013eacd3b0b3f137e82f02383f63753f470c4486d4d93f8527907","typeString":"literal_string \"Prosumer Approved\""},"value":"Prosumer Approved"}],"id":4317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7119:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_165c86e1967013eacd3b0b3f137e82f02383f63753f470c4486d4d93f8527907","typeString":"literal_string \"Prosumer Approved\""}},"functionReturnParameters":4309,"id":4318,"nodeType":"Return","src":"7112:28:24"}]}}]},"functionSelector":"7b78bc6b","id":4337,"implemented":true,"kind":"function","modifiers":[{"id":4306,"kind":"modifierInvocation","modifierName":{"id":4305,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"6998:9:24"},"nodeType":"ModifierInvocation","src":"6998:9:24"}],"name":"showApprovalStatus_OwnerSpecific","nameLocation":"6903:32:24","nodeType":"FunctionDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"_unapprovedProsumerAddress","nameLocation":"6953:26:24","nodeType":"VariableDeclaration","scope":4337,"src":"6945:34:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4302,"name":"address","nodeType":"ElementaryTypeName","src":"6945:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6935:50:24"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4337,"src":"7017:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4307,"name":"string","nodeType":"ElementaryTypeName","src":"7017:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7016:15:24"},"scope":4906,"src":"6894:451:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4489,"nodeType":"Block","src":"7506:1847:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"7537:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4346,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"7561:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7561:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7537:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420556e617070726f7665642050726f73756d6572204944","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7601:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c","typeString":"literal_string \"Invalid Unapproved Prosumer ID\""},"value":"Invalid Unapproved Prosumer ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c","typeString":"literal_string \"Invalid Unapproved Prosumer ID\""}],"id":4344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7516:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7516:127:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4351,"nodeType":"ExpressionStatement","src":"7516:127:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4353,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"7674:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4358,"indexExpression":{"expression":{"baseExpression":{"id":4354,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"7683:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4356,"indexExpression":{"id":4355,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"7703:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7683:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"7683:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7674:61:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4361,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4359,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"7736:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7736:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7674:75:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7753:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7674:84:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f73756d657220416c726561647920617070726f76656420627920796f75","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7772:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f","typeString":"literal_string \"Prosumer Already approved by you\""},"value":"Prosumer Already approved by you"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f","typeString":"literal_string \"Prosumer Already approved by you\""}],"id":4352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7653:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7653:163:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4366,"nodeType":"ExpressionStatement","src":"7653:163:24"},{"expression":{"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4367,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"7827:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4374,"indexExpression":{"expression":{"baseExpression":{"id":4368,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"7836:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4370,"indexExpression":{"id":4369,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"7856:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7836:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"7836:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7827:61:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4375,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4372,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"7889:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7889:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7827:75:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7905:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7827:82:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4378,"nodeType":"ExpressionStatement","src":"7827:82:24"},{"condition":{"baseExpression":{"baseExpression":{"id":4379,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"7979:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4384,"indexExpression":{"expression":{"baseExpression":{"id":4380,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"7991:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4382,"indexExpression":{"id":4381,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8011:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7991:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"7991:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7979:64:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4387,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4385,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"8044:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7979:78:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4409,"nodeType":"IfStatement","src":"7975:280:24","trueBody":{"id":4408,"nodeType":"Block","src":"8059:196:24","statements":[{"expression":{"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4388,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"8073:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4395,"indexExpression":{"expression":{"baseExpression":{"id":4389,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"8085:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4391,"indexExpression":{"id":4390,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8105:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8085:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"8085:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8073:64:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4396,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4393,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"8138:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8138:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8073:78:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8154:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8073:86:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4399,"nodeType":"ExpressionStatement","src":"8073:86:24"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"8173:71:24","subExpression":{"baseExpression":{"id":4400,"name":"disapprovalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"8173:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4405,"indexExpression":{"expression":{"baseExpression":{"id":4401,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"8190:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4403,"indexExpression":{"id":4402,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8210:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8190:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"8190:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8173:69:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"8173:71:24"}]}},{"assignments":[4411],"declarations":[{"constant":false,"id":4411,"mutability":"mutable","name":"getApprovalCount","nameLocation":"8273:16:24","nodeType":"VariableDeclaration","scope":4489,"src":"8265:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4419,"initialValue":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8292:90:24","subExpression":{"baseExpression":{"id":4412,"name":"approvalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"8292:13:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4417,"indexExpression":{"expression":{"baseExpression":{"id":4413,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"8319:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4415,"indexExpression":{"id":4414,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8339:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8319:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"8319:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8292:88:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8265:117:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"getApprovalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"8436:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4421,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"8455:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8436:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4488,"nodeType":"IfStatement","src":"8432:915:24","trueBody":{"id":4487,"nodeType":"Block","src":"8465:882:24","statements":[{"expression":{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4423,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"8576:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4425,"indexExpression":{"id":4424,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8596:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8576:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_approved","nodeType":"MemberAccess","referencedDeclaration":3823,"src":"8576:52:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8631:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8576:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4429,"nodeType":"ExpressionStatement","src":"8576:59:24"},{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4430,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"8676:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4432,"indexExpression":{"id":4431,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8696:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8676:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_prosumerID","nodeType":"MemberAccess","referencedDeclaration":3817,"src":"8676:54:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4434,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8733:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8733:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8760:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8733:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8676:85:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"8676:85:24"},{"expression":{"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4440,"name":"isProsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8793:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4445,"indexExpression":{"expression":{"baseExpression":{"id":4441,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"8804:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4443,"indexExpression":{"id":4442,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8824:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8804:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"8804:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8793:63:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8859:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8793:70:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4448,"nodeType":"ExpressionStatement","src":"8793:70:24"},{"expression":{"arguments":[{"baseExpression":{"id":4452,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"8900:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4454,"indexExpression":{"id":4453,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8920:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8900:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}],"expression":{"id":4449,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"8877:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8877:22:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr_$_t_struct$_prosumer_$3832_storage_$returns$__$bound_to$_t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage_ptr_$","typeString":"function (struct MultiSig.prosumer storage ref[] storage pointer,struct MultiSig.prosumer storage ref)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8877:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4456,"nodeType":"ExpressionStatement","src":"8877:66:24"},{"expression":{"arguments":[{"id":4458,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"8995:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4457,"name":"deleteElementFrom_UnApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"8957:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8957:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4460,"nodeType":"ExpressionStatement","src":"8957:60:24"},{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4461,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"9080:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4464,"indexExpression":{"expression":{"id":4462,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"9096:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9096:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9080:41:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4465,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"9124:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4470,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4466,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"9159:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9159:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9186:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9159:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9124:77:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"9124:86:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9080:130:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4473,"nodeType":"ExpressionStatement","src":"9080:130:24"},{"expression":{"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4474,"name":"prosumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"9224:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4482,"indexExpression":{"expression":{"baseExpression":{"id":4475,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"9235:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4480,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4476,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"9253:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9253:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9253:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9235:47:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"9235:56:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9224:68:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4483,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"9295:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9295:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9224:112:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4486,"nodeType":"ExpressionStatement","src":"9224:112:24"}]}}]},"functionSelector":"c7a7275e","id":4490,"implemented":true,"kind":"function","modifiers":[{"id":4342,"kind":"modifierInvocation","modifierName":{"id":4341,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"7496:9:24"},"nodeType":"ModifierInvocation","src":"7496:9:24"}],"name":"approveProsumer_OwnerSpecific","nameLocation":"7428:29:24","nodeType":"FunctionDefinition","parameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"_unApprovedProsumerID","nameLocation":"7466:21:24","nodeType":"VariableDeclaration","scope":4490,"src":"7458:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7458:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7457:31:24"},"returnParameters":{"id":4343,"nodeType":"ParameterList","parameters":[],"src":"7506:0:24"},"scope":4906,"src":"7419:1934:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4598,"nodeType":"Block","src":"9482:1323:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4498,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"9513:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4499,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"9537:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9537:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9513:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420556e617070726f7665642050726f73756d6572204944","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9577:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c","typeString":"literal_string \"Invalid Unapproved Prosumer ID\""},"value":"Invalid Unapproved Prosumer ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c","typeString":"literal_string \"Invalid Unapproved Prosumer ID\""}],"id":4497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9492:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9492:127:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4504,"nodeType":"ExpressionStatement","src":"9492:127:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4506,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"9650:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4511,"indexExpression":{"expression":{"baseExpression":{"id":4507,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"9662:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4509,"indexExpression":{"id":4508,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"9682:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9662:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"9662:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9650:64:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4514,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4512,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"9715:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9715:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9650:78:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9732:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9650:87:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f73756d657220416c726561647920646973617070726f76656420627920796f75","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9751:37:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74","typeString":"literal_string \"Prosumer Already disapproved by you\""},"value":"Prosumer Already disapproved by you"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74","typeString":"literal_string \"Prosumer Already disapproved by you\""}],"id":4505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9629:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9629:169:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4519,"nodeType":"ExpressionStatement","src":"9629:169:24"},{"expression":{"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4520,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"9809:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4527,"indexExpression":{"expression":{"baseExpression":{"id":4521,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"9821:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4523,"indexExpression":{"id":4522,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"9841:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9821:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"9821:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9809:64:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4528,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4525,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"9874:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9874:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9809:78:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9890:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9809:85:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4531,"nodeType":"ExpressionStatement","src":"9809:85:24"},{"condition":{"baseExpression":{"baseExpression":{"id":4532,"name":"disapproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"9955:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4537,"indexExpression":{"expression":{"baseExpression":{"id":4533,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"9967:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4535,"indexExpression":{"id":4534,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"9987:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9967:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"9967:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9955:64:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4540,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4538,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"10020:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10020:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9955:78:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4562,"nodeType":"IfStatement","src":"9951:274:24","trueBody":{"id":4561,"nodeType":"Block","src":"10035:190:24","statements":[{"expression":{"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4541,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"10049:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4548,"indexExpression":{"expression":{"baseExpression":{"id":4542,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"10058:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4544,"indexExpression":{"id":4543,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"10078:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10058:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"10058:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10049:61:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4549,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4546,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"10111:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10111:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10049:75:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10127:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10049:83:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4552,"nodeType":"ExpressionStatement","src":"10049:83:24"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"10146:68:24","subExpression":{"baseExpression":{"id":4553,"name":"approvalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10146:13:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4558,"indexExpression":{"expression":{"baseExpression":{"id":4554,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"10160:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4556,"indexExpression":{"id":4555,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"10180:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10160:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"10160:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10146:66:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ExpressionStatement","src":"10146:68:24"}]}},{"assignments":[4564],"declarations":[{"constant":false,"id":4564,"mutability":"mutable","name":"getDisApprovalCount","nameLocation":"10243:19:24","nodeType":"VariableDeclaration","scope":4598,"src":"10235:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"10235:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4572,"initialValue":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10265:93:24","subExpression":{"baseExpression":{"id":4565,"name":"disapprovalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"10265:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4570,"indexExpression":{"expression":{"baseExpression":{"id":4566,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"10295:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4568,"indexExpression":{"id":4567,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"10315:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10295:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"10295:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10265:91:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10235:123:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"getDisApprovalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"10415:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4574,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"10437:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10415:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4597,"nodeType":"IfStatement","src":"10411:388:24","trueBody":{"id":4596,"nodeType":"Block","src":"10447:352:24","statements":[{"expression":{"arguments":[{"id":4577,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"10589:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4576,"name":"deleteElementFrom_UnApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"10551:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10551:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4579,"nodeType":"ExpressionStatement","src":"10551:60:24"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10625:76:24","subExpression":{"baseExpression":{"id":4580,"name":"disapprovalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"10632:16:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4585,"indexExpression":{"expression":{"baseExpression":{"id":4581,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"10649:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4583,"indexExpression":{"id":4582,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"10669:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10649:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"10649:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10632:69:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4587,"nodeType":"ExpressionStatement","src":"10625:76:24"},{"expression":{"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10715:73:24","subExpression":{"baseExpression":{"id":4588,"name":"approvalCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10722:13:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4593,"indexExpression":{"expression":{"baseExpression":{"id":4589,"name":"unApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"10736:19:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4591,"indexExpression":{"id":4590,"name":"_unApprovedProsumerID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"10756:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10736:42:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_address","nodeType":"MemberAccess","referencedDeclaration":3819,"src":"10736:51:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10722:66:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4595,"nodeType":"ExpressionStatement","src":"10715:73:24"}]}}]},"functionSelector":"4ca46d19","id":4599,"implemented":true,"kind":"function","modifiers":[{"id":4495,"kind":"modifierInvocation","modifierName":{"id":4494,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"9472:9:24"},"nodeType":"ModifierInvocation","src":"9472:9:24"}],"name":"DisApproveProsumer_OwnerSpecific","nameLocation":"9401:32:24","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"_unApprovedProsumerID","nameLocation":"9442:21:24","nodeType":"VariableDeclaration","scope":4599,"src":"9434:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9434:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9433:31:24"},"returnParameters":{"id":4496,"nodeType":"ParameterList","parameters":[],"src":"9482:0:24"},"scope":4906,"src":"9392:1413:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4698,"nodeType":"Block","src":"10963:967:24","statements":[{"assignments":[4609],"declarations":[{"constant":false,"id":4609,"mutability":"mutable","name":"getProsumerAddress","nameLocation":"10981:18:24","nodeType":"VariableDeclaration","scope":4698,"src":"10973:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4608,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4613,"initialValue":{"baseExpression":{"id":4610,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"11002:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4612,"indexExpression":{"id":4611,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"11018:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11002:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10973:57:24"},{"expression":{"arguments":[{"baseExpression":{"id":4615,"name":"isProsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"11048:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4617,"indexExpression":{"id":4616,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11059:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11048:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612050726f73756d6572","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11080:16:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb","typeString":"literal_string \"Not a Prosumer\""},"value":"Not a Prosumer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb","typeString":"literal_string \"Not a Prosumer\""}],"id":4614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11040:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11040:57:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4620,"nodeType":"ExpressionStatement","src":"11040:57:24"},{"expression":{"arguments":[{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11115:44:24","subExpression":{"baseExpression":{"baseExpression":{"id":4622,"name":"suspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11116:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4624,"indexExpression":{"id":4623,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11126:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11116:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4627,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4625,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"11146:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11146:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11116:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792053757370656e646564","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11161:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd","typeString":"literal_string \"Already Suspended\""},"value":"Already Suspended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd","typeString":"literal_string \"Already Suspended\""}],"id":4621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11107:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11107:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4631,"nodeType":"ExpressionStatement","src":"11107:74:24"},{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4632,"name":"suspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11192:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4636,"indexExpression":{"id":4633,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11202:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11192:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4637,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4634,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"11222:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11222:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11192:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11238:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11192:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"nodeType":"ExpressionStatement","src":"11192:50:24"},{"condition":{"baseExpression":{"baseExpression":{"id":4641,"name":"unSuspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"11303:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4643,"indexExpression":{"id":4642,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11315:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11303:31:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4646,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4644,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"11335:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11303:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4662,"nodeType":"IfStatement","src":"11299:182:24","trueBody":{"id":4661,"nodeType":"Block","src":"11350:131:24","statements":[{"expression":{"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4647,"name":"unSuspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"11364:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4651,"indexExpression":{"id":4648,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11376:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11364:31:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4652,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4649,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"11396:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11396:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11364:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11412:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11364:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4655,"nodeType":"ExpressionStatement","src":"11364:53:24"},{"expression":{"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"11431:39:24","subExpression":{"baseExpression":{"id":4656,"name":"unSuspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11431:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4658,"indexExpression":{"id":4657,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11449:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11431:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ExpressionStatement","src":"11431:39:24"}]}},{"assignments":[4664],"declarations":[{"constant":false,"id":4664,"mutability":"mutable","name":"getSuspensionCount","nameLocation":"11499:18:24","nodeType":"VariableDeclaration","scope":4698,"src":"11491:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"11491:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4669,"initialValue":{"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11520:37:24","subExpression":{"baseExpression":{"id":4665,"name":"suspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"11520:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4667,"indexExpression":{"id":4666,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11536:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11520:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11491:66:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"getSuspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"11613:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4671,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"11634:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11613:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4697,"nodeType":"IfStatement","src":"11609:315:24","trueBody":{"id":4696,"nodeType":"Block","src":"11644:280:24","statements":[{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11748:42:24","subExpression":{"baseExpression":{"id":4673,"name":"suspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"11755:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4675,"indexExpression":{"id":4674,"name":"getProsumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"11771:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11755:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4677,"nodeType":"ExpressionStatement","src":"11748:42:24"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4678,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"11804:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4682,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"11822:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11836:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11822:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11804:34:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_suspended","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"11804:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11852:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11804:52:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4686,"nodeType":"ExpressionStatement","src":"11804:52:24"},{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4687,"name":"complains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11870:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage","typeString":"struct MultiSig.Complain storage ref[] storage ref"}},"id":4691,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"_complainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"11880:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11880:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11870:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_storage","typeString":"struct MultiSig.Complain storage ref"}},"id":4692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_resolved","nodeType":"MemberAccess","referencedDeclaration":3878,"src":"11870:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11909:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11870:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4695,"nodeType":"ExpressionStatement","src":"11870:43:24"}]}}]},"functionSelector":"e7e4f9d9","id":4699,"implemented":true,"kind":"function","modifiers":[{"id":4606,"kind":"modifierInvocation","modifierName":{"id":4605,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"10953:9:24"},"nodeType":"ModifierInvocation","src":"10953:9:24"}],"name":"suspendProsumer","nameLocation":"10888:15:24","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"_prosumerId","nameLocation":"10912:11:24","nodeType":"VariableDeclaration","scope":4699,"src":"10904:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"10904:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4603,"mutability":"mutable","name":"_complainId","nameLocation":"10933:11:24","nodeType":"VariableDeclaration","scope":4699,"src":"10925:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"10925:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10903:42:24"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[],"src":"10963:0:24"},"scope":4906,"src":"10879:1051:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4807,"nodeType":"Block","src":"12054:1071:24","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4709,"name":"isProsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"12072:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4713,"indexExpression":{"baseExpression":{"id":4710,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"12083:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4712,"indexExpression":{"id":4711,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"12099:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12083:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12072:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612050726f73756d6572","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12114:16:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb","typeString":"literal_string \"Not a Prosumer\""},"value":"Not a Prosumer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb","typeString":"literal_string \"Not a Prosumer\""}],"id":4708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12064:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12064:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"ExpressionStatement","src":"12064:67:24"},{"expression":{"arguments":[{"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12149:56:24","subExpression":{"baseExpression":{"baseExpression":{"id":4718,"name":"unSuspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"12150:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4722,"indexExpression":{"baseExpression":{"id":4719,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"12162:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4721,"indexExpression":{"id":4720,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"12178:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12162:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12150:41:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4725,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4723,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"12192:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12192:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12150:55:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920556e73757370656e646564","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12207:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c","typeString":"literal_string \"Already Unsuspended\""},"value":"Already Unsuspended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c","typeString":"literal_string \"Already Unsuspended\""}],"id":4717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12141:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12141:88:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4729,"nodeType":"ExpressionStatement","src":"12141:88:24"},{"assignments":[4731],"declarations":[{"constant":false,"id":4731,"mutability":"mutable","name":"prosumerToUnsuspend","nameLocation":"12248:19:24","nodeType":"VariableDeclaration","scope":4807,"src":"12240:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4730,"name":"address","nodeType":"ElementaryTypeName","src":"12240:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4735,"initialValue":{"baseExpression":{"id":4732,"name":"prosumerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"12270:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4734,"indexExpression":{"id":4733,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"12286:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12270:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12240:58:24"},{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4736,"name":"unSuspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"12309:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4740,"indexExpression":{"id":4737,"name":"prosumerToUnsuspend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"12321:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12309:32:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4741,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4738,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"12342:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12342:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12309:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12358:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12309:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4744,"nodeType":"ExpressionStatement","src":"12309:53:24"},{"condition":{"baseExpression":{"baseExpression":{"id":4745,"name":"suspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"12424:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4747,"indexExpression":{"id":4746,"name":"prosumerToUnsuspend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"12434:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12424:30:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4750,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4748,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"12455:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12455:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12424:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4766,"nodeType":"IfStatement","src":"12420:179:24","trueBody":{"id":4765,"nodeType":"Block","src":"12470:129:24","statements":[{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4751,"name":"suspended","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"12484:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4755,"indexExpression":{"id":4752,"name":"prosumerToUnsuspend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"12494:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12484:30:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4756,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4753,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"12515:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12515:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12484:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12531:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12484:52:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4759,"nodeType":"ExpressionStatement","src":"12484:52:24"},{"expression":{"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"12550:38:24","subExpression":{"baseExpression":{"id":4760,"name":"suspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"12550:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4762,"indexExpression":{"id":4761,"name":"prosumerToUnsuspend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"12566:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12550:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ExpressionStatement","src":"12550:38:24"}]}},{"assignments":[4768],"declarations":[{"constant":false,"id":4768,"mutability":"mutable","name":"getUnSuspensionCount","nameLocation":"12617:20:24","nodeType":"VariableDeclaration","scope":4807,"src":"12609:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"12609:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4773,"initialValue":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12640:40:24","subExpression":{"baseExpression":{"id":4769,"name":"unSuspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"12640:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4771,"indexExpression":{"id":4770,"name":"prosumerToUnsuspend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"12658:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12640:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12609:71:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"getUnSuspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"12739:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4775,"name":"required","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"12762:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12739:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4806,"nodeType":"IfStatement","src":"12735:384:24","trueBody":{"id":4805,"nodeType":"Block","src":"12772:347:24","statements":[{"expression":{"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12882:45:24","subExpression":{"baseExpression":{"id":4777,"name":"unSuspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"12889:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4779,"indexExpression":{"id":4778,"name":"prosumerToUnsuspend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"12907:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12889:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4781,"nodeType":"ExpressionStatement","src":"12882:45:24"},{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12941:43:24","subExpression":{"baseExpression":{"id":4782,"name":"suspensionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"12948:15:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4784,"indexExpression":{"id":4783,"name":"prosumerToUnsuspend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"12964:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12948:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4786,"nodeType":"ExpressionStatement","src":"12941:43:24"},{"expression":{"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4787,"name":"ApprovedProsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"12998:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_prosumer_$3832_storage_$dyn_storage","typeString":"struct MultiSig.prosumer storage ref[] storage ref"}},"id":4791,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"_prosumerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"13016:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13016:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12998:34:24","typeDescriptions":{"typeIdentifier":"t_struct$_prosumer_$3832_storage","typeString":"struct MultiSig.prosumer storage ref"}},"id":4792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_suspended","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"12998:45:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13046:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12998:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4795,"nodeType":"ExpressionStatement","src":"12998:53:24"},{"expression":{"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4796,"name":"complains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"13065:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Complain_$3879_storage_$dyn_storage","typeString":"struct MultiSig.Complain storage ref[] storage ref"}},"id":4800,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"_complainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"13075:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13089:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13075:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13065:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_Complain_$3879_storage","typeString":"struct MultiSig.Complain storage ref"}},"id":4801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_resolved","nodeType":"MemberAccess","referencedDeclaration":3878,"src":"13065:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13104:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13065:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4804,"nodeType":"ExpressionStatement","src":"13065:43:24"}]}}]},"functionSelector":"40cb3342","id":4808,"implemented":true,"kind":"function","modifiers":[{"id":4706,"kind":"modifierInvocation","modifierName":{"id":4705,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"12044:9:24"},"nodeType":"ModifierInvocation","src":"12044:9:24"}],"name":"unSuspendProsumer","nameLocation":"11977:17:24","nodeType":"FunctionDefinition","parameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"_prosumerId","nameLocation":"12003:11:24","nodeType":"VariableDeclaration","scope":4808,"src":"11995:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"11995:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4703,"mutability":"mutable","name":"_complainId","nameLocation":"12024:11:24","nodeType":"VariableDeclaration","scope":4808,"src":"12016:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"12016:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11994:42:24"},"returnParameters":{"id":4707,"nodeType":"ParameterList","parameters":[],"src":"12054:0:24"},"scope":4906,"src":"11968:1157:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4856,"nodeType":"Block","src":"13307:274:24","statements":[{"assignments":[4814],"declarations":[{"constant":false,"id":4814,"mutability":"mutable","name":"euqiBalance","nameLocation":"13325:11:24","nodeType":"VariableDeclaration","scope":4856,"src":"13317:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"13317:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4823,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4817,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13347:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_MultiSig_$4906","typeString":"contract MultiSig"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultiSig_$4906","typeString":"contract MultiSig"}],"id":4816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13339:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4815,"name":"address","nodeType":"ElementaryTypeName","src":"13339:7:24","typeDescriptions":{}}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13339:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"13339:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":4820,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"13363:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13363:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13339:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13317:59:24"},{"body":{"id":4854,"nodeType":"Block","src":"13431:144:24","statements":[{"assignments":[4836,null],"declarations":[{"constant":false,"id":4836,"mutability":"mutable","name":"callSuccess","nameLocation":"13451:11:24","nodeType":"VariableDeclaration","scope":4854,"src":"13446:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4835,"name":"bool","nodeType":"ElementaryTypeName","src":"13446:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4848,"initialValue":{"arguments":[{"hexValue":"","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13512:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"baseExpression":{"id":4839,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"13476:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4841,"indexExpression":{"id":4840,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"13483:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13476:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13468:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4837,"name":"address","nodeType":"ElementaryTypeName","src":"13468:8:24","stateMutability":"payable","typeDescriptions":{}}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13468:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"13468:23:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4844,"name":"euqiBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"13499:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13468:43:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13468:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13445:70:24"},{"expression":{"arguments":[{"id":4850,"name":"callSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"13537:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c204661696c6564","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13550:13:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd","typeString":"literal_string \"Call Failed\""},"value":"Call Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd","typeString":"literal_string \"Call Failed\""}],"id":4849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13529:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13529:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4853,"nodeType":"ExpressionStatement","src":"13529:35:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"13407:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4829,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"13411:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13411:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13407:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4855,"initializationExpression":{"assignments":[4825],"declarations":[{"constant":false,"id":4825,"mutability":"mutable","name":"i","nameLocation":"13400:1:24","nodeType":"VariableDeclaration","scope":4855,"src":"13392:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"13392:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4827,"initialValue":{"hexValue":"30","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13404:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13392:13:24"},"loopExpression":{"expression":{"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13426:3:24","subExpression":{"id":4832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"13426:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4834,"nodeType":"ExpressionStatement","src":"13426:3:24"},"nodeType":"ForStatement","src":"13387:188:24"}]},"functionSelector":"476343ee","id":4857,"implemented":true,"kind":"function","modifiers":[{"id":4811,"kind":"modifierInvocation","modifierName":{"id":4810,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"13297:9:24"},"nodeType":"ModifierInvocation","src":"13297:9:24"}],"name":"withdrawFees","nameLocation":"13275:12:24","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[],"src":"13287:2:24"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[],"src":"13307:0:24"},"scope":4906,"src":"13266:315:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4892,"nodeType":"Block","src":"13679:191:24","statements":[{"body":{"id":4890,"nodeType":"Block","src":"13733:131:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4875,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"13751:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4877,"indexExpression":{"id":4876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"13758:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13751:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4878,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"13764:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13764:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13751:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4889,"nodeType":"IfStatement","src":"13747:107:24","trueBody":{"id":4888,"nodeType":"Block","src":"13778:76:24","statements":[{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4881,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"13796:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4883,"indexExpression":{"id":4882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"13803:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13796:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4884,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"13808:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13796:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4886,"nodeType":"ExpressionStatement","src":"13796:20:24"},{"id":4887,"nodeType":"Break","src":"13834:5:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"13709:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4869,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"13713:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13713:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13709:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4891,"initializationExpression":{"assignments":[4865],"declarations":[{"constant":false,"id":4865,"mutability":"mutable","name":"i","nameLocation":"13702:1:24","nodeType":"VariableDeclaration","scope":4891,"src":"13694:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"13694:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4867,"initialValue":{"hexValue":"30","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13706:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13694:13:24"},"loopExpression":{"expression":{"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13728:3:24","subExpression":{"id":4872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"13728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4874,"nodeType":"ExpressionStatement","src":"13728:3:24"},"nodeType":"ForStatement","src":"13689:175:24"}]},"functionSelector":"f2fde38b","id":4893,"implemented":true,"kind":"function","modifiers":[{"id":4862,"kind":"modifierInvocation","modifierName":{"id":4861,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"13669:9:24"},"nodeType":"ModifierInvocation","src":"13669:9:24"}],"name":"transferOwnership","nameLocation":"13626:17:24","nodeType":"FunctionDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4859,"mutability":"mutable","name":"newOwner","nameLocation":"13652:8:24","nodeType":"VariableDeclaration","scope":4893,"src":"13644:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4858,"name":"address","nodeType":"ElementaryTypeName","src":"13644:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13643:18:24"},"returnParameters":{"id":4863,"nodeType":"ParameterList","parameters":[],"src":"13679:0:24"},"scope":4906,"src":"13617:253:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4904,"nodeType":"Block","src":"13897:71:24","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4896,"name":"isOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"13915:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4899,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4897,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[511],"referencedDeclaration":511,"src":"13923:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13923:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13915:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204f776e6572","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13938:11:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""},"value":"Not Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4","typeString":"literal_string \"Not Owner\""}],"id":4895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13907:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13907:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4902,"nodeType":"ExpressionStatement","src":"13907:43:24"},{"id":4903,"nodeType":"PlaceholderStatement","src":"13960:1:24"}]},"id":4905,"name":"onlyOwner","nameLocation":"13885:9:24","nodeType":"ModifierDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[],"src":"13894:2:24"},"src":"13876:92:24","virtual":false,"visibility":"internal"}],"scope":4907,"src":"143:13827:24","usedErrors":[]}],"src":"40:13931:24"},"id":24},"contracts/PriceConverter.sol":{"ast":{"absolutePath":"contracts/PriceConverter.sol","exportedSymbols":{"AggregatorV3Interface":[45],"PriceConverter":[4939]},"id":4940,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4908,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:25"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":4909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4940,"sourceUnit":46,"src":"60:76:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4939,"linearizedBaseContracts":[4939],"name":"PriceConverter","nameLocation":"149:14:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4912,"mutability":"mutable","name":"priceFeed","nameLocation":"202:9:25","nodeType":"VariableDeclaration","scope":4939,"src":"171:40:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":4911,"nodeType":"UserDefinedTypeName","pathNode":{"id":4910,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"171:21:25"},"referencedDeclaration":45,"src":"171:21:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"body":{"id":4922,"nodeType":"Block","src":"374:96:25","statements":[{"expression":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4916,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"385:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307864304435653344423434444530354539463239344242306133624545614630333044453234416461","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"419:42:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4917,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"397:21:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"397:65:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"385:77:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":4921,"nodeType":"ExpressionStatement","src":"385:77:25"}]},"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"220:134:25","text":" Network: Polygon Mumbai\n Aggregator: MATIC/USD\n Address: 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"},"id":4923,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4914,"nodeType":"ParameterList","parameters":[],"src":"371:2:25"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[],"src":"374:0:25"},"scope":4939,"src":"360:110:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4937,"nodeType":"Block","src":"581:239:25","statements":[{"assignments":[null,4930,null,null,null],"declarations":[null,{"constant":false,"id":4930,"mutability":"mutable","name":"price","nameLocation":"645:5:25","nodeType":"VariableDeclaration","scope":4937,"src":"641:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4929,"name":"int","nodeType":"ElementaryTypeName","src":"641:3:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":4934,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4931,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"762:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"762:25:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"762:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"592:197:25"},{"expression":{"id":4935,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"807:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4928,"id":4936,"nodeType":"Return","src":"800:12:25"}]},"documentation":{"id":4924,"nodeType":"StructuredDocumentation","src":"478:45:25","text":" Returns the latest price"},"functionSelector":"8e15f473","id":4938,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestPrice","nameLocation":"538:14:25","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[],"src":"552:2:25"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4938,"src":"576:3:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4926,"name":"int","nodeType":"ElementaryTypeName","src":"576:3:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"575:5:25"},"scope":4939,"src":"529:291:25","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4940,"src":"140:683:25","usedErrors":[]}],"src":"33:811:25"},"id":25},"contracts/import.sol":{"ast":{"absolutePath":"contracts/import.sol","exportedSymbols":{"BasePaymaster":[443],"Context":[3076],"ERC165":[3100],"ERC165Checker":[3294],"GsnEip712Library":[1781],"GsnTypes":[1809],"GsnUtils":[1889],"IERC165":[3306],"IERC20":[3029],"IERC2771Recipient":[663],"IForwarder":[639],"IPaymaster":[736],"IRelayHub":[1104],"IStakeManager":[1394],"MinLibBytes":[2004],"Ownable":[2361],"WhitelistPaymaster":[2248]},"id":4943,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4941,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"40:23:26"},{"absolutePath":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol","file":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol","id":4942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4943,"sourceUnit":2249,"src":"65:62:26","symbolAliases":[],"unitAlias":""}],"src":"40:137:26"},"id":26}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@opengsn/contracts/src/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"CALLDATA_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FORWARDER_HUB_OVERHEAD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_ACCEPTANCE_BUDGET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"POST_RELAYED_CALL_GAS_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRE_RELAYED_CALL_GAS_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasAndDataLimits","outputs":[{"components":[{"internalType":"uint256","name":"acceptanceBudget","type":"uint256"},{"internalType":"uint256","name":"preRelayedCallGasLimit","type":"uint256"},{"internalType":"uint256","name":"postRelayedCallGasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSizeLimit","type":"uint256"}],"internalType":"struct IPaymaster.GasAndDataLimits","name":"limits","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelayHub","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"gasUseWithoutPost","type":"uint256"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"name":"postRelayedCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntilTime","type":"uint256"}],"internalType":"struct IForwarder.ForwardRequest","name":"request","type":"tuple"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"internalType":"struct GsnTypes.RelayRequest","name":"relayRequest","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"approvalData","type":"bytes"},{"internalType":"uint256","name":"maxPossibleGas","type":"uint256"}],"name":"preRelayedCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IRelayHub","name":"hub","type":"address"}],"name":"setRelayHub","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"setTrustedForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"versionPaymaster","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"target","type":"address"}],"name":"withdrawRelayHubDepositTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"getGasAndDataLimits()":{"returns":{"limits":"An instance of the `GasAndDataLimits` struct ##### `acceptanceBudget` If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what. Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense. Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request. This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract. :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit` (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions. If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \"griefing\" attack. The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated. From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay, since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts. Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config). ##### `preRelayedCallGasLimit` The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster. As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster. ##### `postRelayedCallGasLimit` The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas. Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway."}},"getRelayHub()":{"returns":{"_0":"The address of the `RelayHub` that is trusted by this Paymaster to execute the requests."}},"getTrustedForwarder()":{"returns":{"_0":"The address of the `Forwarder` that is trusted by this Paymaster to execute the requests."}},"owner()":{"details":"Returns the address of the current owner."},"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"params":{"context":"The call context, as returned by the preRelayedCall","gasUseWithoutPost":"The actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.","relayData":"The relay params of the request. can be used by relayHub.calculateCharge()","success":"`true` if the relayed call succeeded, false if it reverted"}},"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":{"params":{"approvalData":"- extra dapp-specific data (e.g. signature from trusted party)","maxPossibleGas":"- based on values returned from `getGasAndDataLimits` the RelayHub will calculate the maximum possible amount of gas the user may be charged for. In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"","relayRequest":"- the full relay request structure","signature":"- user's EIP712-compatible signature of the `relayRequest`. Note that in most cases the paymaster shouldn't try use it at all. It is always checked by the forwarder immediately after preRelayedCall returns."},"returns":{"_0":"A byte array to be passed to postRelayedCall. Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.","_1":"The flag that allows a Paymaster to \"delegate\" the rejection to the recipient code. It also means the Paymaster trust the recipient to reject fast: both preRelayedCall, forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget, otherwise the TX is paid by the Paymaster. `true` if the Paymaster wants to reject the TX if the recipient reverts. `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"versionPaymaster()":{"returns":{"_0":"version The SemVer string of this Paymaster's version."}},"withdrawRelayHubDepositTo(uint256,address)":{"params":{"amount":"The amount to be subtracted from the sender.","target":"The target to which the amount will be transferred."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"CALLDATA_SIZE_LIMIT()":"5c5e3db1","FORWARDER_HUB_OVERHEAD()":"b90b41cf","PAYMASTER_ACCEPTANCE_BUDGET()":"df463a66","POST_RELAYED_CALL_GAS_LIMIT()":"bbdaa3c9","PRE_RELAYED_CALL_GAS_LIMIT()":"f9c002f7","getGasAndDataLimits()":"b039a88f","getRelayHub()":"7bdf2ec7","getTrustedForwarder()":"ce1b815f","owner()":"8da5cb5b","postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":"76fa01c3","preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":"00be5dd4","renounceOwnership()":"715018a6","setRelayHub(address)":"7bb05264","setTrustedForwarder(address)":"da742228","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","versionPaymaster()":"921276ea","withdrawRelayHubDepositTo(uint256,address)":"2d14c4b7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getGasAndDataLimits()\":{\"returns\":{\"limits\":\"An instance of the `GasAndDataLimits` struct ##### `acceptanceBudget` If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what. Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense. Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request. This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract. :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit` (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions. If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \\\"griefing\\\" attack. The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated. From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay, since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts. Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config). ##### `preRelayedCallGasLimit` The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster. As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster. ##### `postRelayedCallGasLimit` The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas. Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway.\"}},\"getRelayHub()\":{\"returns\":{\"_0\":\"The address of the `RelayHub` that is trusted by this Paymaster to execute the requests.\"}},\"getTrustedForwarder()\":{\"returns\":{\"_0\":\"The address of the `Forwarder` that is trusted by this Paymaster to execute the requests.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"The call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"The actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"The relay params of the request. can be used by relayHub.calculateCharge()\",\"success\":\"`true` if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from `getGasAndDataLimits` the RelayHub will calculate the maximum possible amount of gas the user may be charged for. In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the `relayRequest`. Note that in most cases the paymaster shouldn't try use it at all. It is always checked by the forwarder immediately after preRelayedCall returns.\"},\"returns\":{\"_0\":\"A byte array to be passed to postRelayedCall. Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\",\"_1\":\"The flag that allows a Paymaster to \\\"delegate\\\" the rejection to the recipient code. It also means the Paymaster trust the recipient to reject fast: both preRelayedCall, forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget, otherwise the TX is paid by the Paymaster. `true` if the Paymaster wants to reject the TX if the recipient reverts. `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"versionPaymaster()\":{\"returns\":{\"_0\":\"version The SemVer string of this Paymaster's version.\"}},\"withdrawRelayHubDepositTo(uint256,address)\":{\"params\":{\"amount\":\"The amount to be subtracted from the sender.\",\"target\":\"The target to which the amount will be transferred.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster. This function allows different paymasters to have different properties without changes to the RelayHub.\"},\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that the Paymaster agrees to pay for this call. The request is considered to be rejected by the Paymaster in one of the following conditions:  - `preRelayedCall()` method reverts  - the `Forwarder` reverts because of nonce or signature error  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted    (and all that did not consume more than `acceptanceBudget` gas). In any of the above cases, all Paymaster calls and the recipient call are reverted. In any other case the Paymaster will pay for the gas cost of the transaction. Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\"},\"setRelayHub(address)\":{\"notice\":\"The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with. :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first.\"},\"setTrustedForwarder(address)\":{\"notice\":\"The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.the Recipients must trust this Forwarder as well in order for the configuration to remain functional.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"Withdraw deposit from the RelayHub.\"}},\"notice\":\"An abstract base class to be inherited by a concrete Paymaster. A subclass must implement:  - preRelayedCall  - postRelayedCall\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/BasePaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\\\";\\n\\nimport \\\"./utils/GsnTypes.sol\\\";\\nimport \\\"./interfaces/IPaymaster.sol\\\";\\nimport \\\"./interfaces/IRelayHub.sol\\\";\\nimport \\\"./utils/GsnEip712Library.sol\\\";\\nimport \\\"./forwarder/IForwarder.sol\\\";\\n\\n/**\\n * @notice An abstract base class to be inherited by a concrete Paymaster.\\n * A subclass must implement:\\n *  - preRelayedCall\\n *  - postRelayedCall\\n */\\nabstract contract BasePaymaster is IPaymaster, Ownable, ERC165 {\\n    using ERC165Checker for address;\\n\\n    IRelayHub internal relayHub;\\n    address private _trustedForwarder;\\n\\n    /// @inheritdoc IPaymaster\\n    function getRelayHub() public override view returns (address) {\\n        return address(relayHub);\\n    }\\n\\n    //overhead of forwarder verify+signature, plus hub overhead.\\n    uint256 constant public FORWARDER_HUB_OVERHEAD = 50000;\\n\\n    //These parameters are documented in IPaymaster.GasAndDataLimits\\n    uint256 constant public PRE_RELAYED_CALL_GAS_LIMIT = 100000;\\n    uint256 constant public POST_RELAYED_CALL_GAS_LIMIT = 110000;\\n    uint256 constant public PAYMASTER_ACCEPTANCE_BUDGET = PRE_RELAYED_CALL_GAS_LIMIT + FORWARDER_HUB_OVERHEAD;\\n    uint256 constant public CALLDATA_SIZE_LIMIT = 10500;\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\\n        return interfaceId == type(IPaymaster).interfaceId ||\\n            interfaceId == type(Ownable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /// @inheritdoc IPaymaster\\n    function getGasAndDataLimits()\\n    public\\n    override\\n    virtual\\n    view\\n    returns (\\n        IPaymaster.GasAndDataLimits memory limits\\n    ) {\\n        return IPaymaster.GasAndDataLimits(\\n            PAYMASTER_ACCEPTANCE_BUDGET,\\n            PRE_RELAYED_CALL_GAS_LIMIT,\\n            POST_RELAYED_CALL_GAS_LIMIT,\\n            CALLDATA_SIZE_LIMIT\\n        );\\n    }\\n\\n    /**\\n     * @notice this method must be called from preRelayedCall to validate that the forwarder\\n     * is approved by the paymaster as well as by the recipient contract.\\n     */\\n    function _verifyForwarder(GsnTypes.RelayRequest calldata relayRequest)\\n    internal\\n    virtual\\n    view\\n    {\\n        require(getTrustedForwarder() == relayRequest.relayData.forwarder, \\\"Forwarder is not trusted\\\");\\n        GsnEip712Library.verifyForwarderTrusted(relayRequest);\\n    }\\n\\n    function _verifyRelayHubOnly() internal virtual view {\\n        require(msg.sender == getRelayHub(), \\\"can only be called by RelayHub\\\");\\n    }\\n\\n    function _verifyValue(GsnTypes.RelayRequest calldata relayRequest) internal virtual view{\\n        require(relayRequest.request.value == 0, \\\"value transfer not supported\\\");\\n    }\\n\\n    function _verifyPaymasterData(GsnTypes.RelayRequest calldata relayRequest) internal virtual view {\\n        require(relayRequest.relayData.paymasterData.length == 0, \\\"should have no paymasterData\\\");\\n    }\\n\\n    function _verifyApprovalData(bytes calldata approvalData) internal virtual view{\\n        require(approvalData.length == 0, \\\"should have no approvalData\\\");\\n    }\\n\\n    /**\\n     * @notice The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with.\\n     * :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first.\\n     */\\n    function setRelayHub(IRelayHub hub) public onlyOwner {\\n        require(address(hub).supportsInterface(type(IRelayHub).interfaceId), \\\"target is not a valid IRelayHub\\\");\\n        relayHub = hub;\\n    }\\n\\n    /**\\n     * @notice The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.\\n     * @notice the Recipients must trust this Forwarder as well in order for the configuration to remain functional.\\n     */\\n    function setTrustedForwarder(address forwarder) public virtual onlyOwner {\\n        require(forwarder.supportsInterface(type(IForwarder).interfaceId), \\\"target is not a valid IForwarder\\\");\\n        _trustedForwarder = forwarder;\\n    }\\n\\n    function getTrustedForwarder() public virtual view override returns (address){\\n        return _trustedForwarder;\\n    }\\n\\n    /**\\n     * @notice Any native Ether transferred into the paymaster is transferred as a deposit to the RelayHub.\\n     * This way, we don't need to understand the RelayHub API in order to replenish the paymaster.\\n     */\\n    receive() external virtual payable {\\n        require(address(relayHub) != address(0), \\\"relay hub address not set\\\");\\n        relayHub.depositFor{value:msg.value}(address(this));\\n    }\\n\\n    /**\\n     * @notice Withdraw deposit from the RelayHub.\\n     * @param amount The amount to be subtracted from the sender.\\n     * @param target The target to which the amount will be transferred.\\n     */\\n    function withdrawRelayHubDepositTo(uint256 amount, address payable target) public onlyOwner {\\n        relayHub.withdraw(target, amount);\\n    }\\n\\n    /// @inheritdoc IPaymaster\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    override\\n    returns (bytes memory, bool) {\\n        _verifyRelayHubOnly();\\n        _verifyForwarder(relayRequest);\\n        _verifyValue(relayRequest);\\n        _verifyPaymasterData(relayRequest);\\n        _verifyApprovalData(approvalData);\\n        return _preRelayedCall(relayRequest, signature, approvalData, maxPossibleGas);\\n    }\\n\\n\\n    /**\\n     * @notice internal logic the paymasters need to provide to select which transactions they are willing to pay for\\n     * @notice see the documentation for `IPaymaster::preRelayedCall` for details\\n     */\\n    function _preRelayedCall(\\n        GsnTypes.RelayRequest calldata,\\n        bytes calldata,\\n        bytes calldata,\\n        uint256\\n    )\\n    internal\\n    virtual\\n    returns (bytes memory, bool);\\n\\n    /// @inheritdoc IPaymaster\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    )\\n    external\\n    override\\n    {\\n        _verifyRelayHubOnly();\\n        _postRelayedCall(context, success, gasUseWithoutPost, relayData);\\n    }\\n\\n    /**\\n     * @notice internal logic the paymasters need to provide if they need to take some action after the transaction\\n     * @notice see the documentation for `IPaymaster::postRelayedCall` for details\\n     */\\n    function _postRelayedCall(\\n        bytes calldata,\\n        bool,\\n        uint256,\\n        GsnTypes.RelayData calldata\\n    )\\n    internal\\n    virtual;\\n}\\n\",\"keccak256\":\"0xcd6a501e35d31a1732c1c1bcdd8d32e7f4ddbd4018dcbde4db7220efa4ec3e13\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\n\\n/**\\n * @title The Paymaster Interface\\n * @notice Contracts implementing this interface exist to make decision about paying the transaction fee to the relay.\\n *\\n * @notice There are two callbacks here that are executed by the RelayHub: `preRelayedCall` and `postRelayedCall`.\\n *\\n * @notice It is recommended that your implementation inherits from the abstract BasePaymaster contract.\\n*/\\ninterface IPaymaster is IERC165 {\\n    /**\\n     * @notice The limits this Paymaster wants to be imposed by the RelayHub on user input. See `getGasAndDataLimits`.\\n     */\\n    struct GasAndDataLimits {\\n        uint256 acceptanceBudget;\\n        uint256 preRelayedCallGasLimit;\\n        uint256 postRelayedCallGasLimit;\\n        uint256 calldataSizeLimit;\\n    }\\n\\n    /**\\n     * @notice Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster.\\n     * This function allows different paymasters to have different properties without changes to the RelayHub.\\n     * @return limits An instance of the `GasAndDataLimits` struct\\n     *\\n     * ##### `acceptanceBudget`\\n     * If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what.\\n     * Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense.\\n     *\\n     * Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request.\\n     * This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract.\\n     *\\n     * :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit`\\n     * (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions.\\n     * If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \\\"griefing\\\" attack.\\n     *\\n     * The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated.\\n     * From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay,\\n     * since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts.\\n     * Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config).\\n     *\\n     * ##### `preRelayedCallGasLimit`\\n     * The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster.\\n     * As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster.\\n     *\\n     * ##### `postRelayedCallGasLimit`\\n     * The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas.\\n     * Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway.\\n     */\\n    function getGasAndDataLimits()\\n    external\\n    view\\n    returns (\\n        GasAndDataLimits memory limits\\n    );\\n\\n    /**\\n     * @notice :warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\\n     * @return trustedForwarder The address of the `Forwarder` that is trusted by this Paymaster to execute the requests.\\n     */\\n    function getTrustedForwarder() external view returns (address trustedForwarder);\\n\\n    /**\\n     * @return relayHub The address of the `RelayHub` that is trusted by this Paymaster to execute the requests.\\n     */\\n    function getRelayHub() external view returns (address relayHub);\\n\\n    /**\\n     * @notice Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that\\n     * the Paymaster agrees to pay for this call.\\n     *\\n     * The request is considered to be rejected by the Paymaster in one of the following conditions:\\n     *  - `preRelayedCall()` method reverts\\n     *  - the `Forwarder` reverts because of nonce or signature error\\n     *  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted\\n     *    (and all that did not consume more than `acceptanceBudget` gas).\\n     *\\n     * In any of the above cases, all Paymaster calls and the recipient call are reverted.\\n     * In any other case the Paymaster will pay for the gas cost of the transaction.\\n     * Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\\n     *\\n\\n     * @param relayRequest - the full relay request structure\\n     * @param signature - user's EIP712-compatible signature of the `relayRequest`.\\n     * Note that in most cases the paymaster shouldn't try use it at all. It is always checked\\n     * by the forwarder immediately after preRelayedCall returns.\\n     * @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\\n     * @param maxPossibleGas - based on values returned from `getGasAndDataLimits`\\n     * the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\\n     * In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\\n     *\\n     * @return context\\n     * A byte array to be passed to postRelayedCall.\\n     * Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\\n     * @return rejectOnRecipientRevert\\n     * The flag that allows a Paymaster to \\\"delegate\\\" the rejection to the recipient code.\\n     * It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\\n     * forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget,\\n     * otherwise the TX is paid by the Paymaster.\\n     * `true` if the Paymaster wants to reject the TX if the recipient reverts.\\n     * `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster.\\n     */\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    returns (bytes memory context, bool rejectOnRecipientRevert);\\n\\n    /**\\n     * @notice This method is called after the actual relayed function call.\\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\\n     *\\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\\n     * is still committed to pay the relay for the entire transaction.\\n     *\\n     * @param context The call context, as returned by the preRelayedCall\\n     * @param success `true` if the relayed call succeeded, false if it reverted\\n     * @param gasUseWithoutPost The actual amount of gas used by the entire transaction, EXCEPT\\n     *        the gas used by the postRelayedCall itself.\\n     * @param relayData The relay params of the request. can be used by relayHub.calculateCharge()\\n     *\\n     */\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    ) external;\\n\\n    /**\\n     * @return version The SemVer string of this Paymaster's version.\\n     */\\n    function versionPaymaster() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xeedb6d83ce600a97a4abbb614d24c65cb2ebc06a1784cc6a81afa9233d1331b6\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"./IStakeManager.sol\\\";\\n\\n/**\\n * @title The RelayHub interface\\n * @notice The implementation of this interface provides all the information the GSN client needs to\\n * create a valid `RelayRequest` and also serves as an entry point for such requests.\\n *\\n * @notice The RelayHub also handles all the related financial records and hold the balances of participants.\\n * The Paymasters keep their Ether deposited in the `RelayHub` in order to pay for the `RelayRequest`s that thay choose\\n * to pay for, and Relay Servers keep their earned Ether in the `RelayHub` until they choose to `withdraw()`\\n *\\n * @notice The RelayHub on each supported network only needs a single instance and there is usually no need for dApp\\n * developers or Relay Server operators to redeploy, reimplement, modify or override the `RelayHub`.\\n */\\ninterface IRelayHub is IERC165 {\\n    /**\\n     * @notice A struct that contains all the parameters of the `RelayHub` that can be modified after the deployment.\\n     */\\n    struct RelayHubConfig {\\n        // maximum number of worker accounts allowed per manager\\n        uint256 maxWorkerCount;\\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\\n        uint256 gasReserve;\\n        // Gas overhead to calculate gasUseWithoutPost\\n        uint256 postOverhead;\\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\\n        uint256 gasOverhead;\\n        // Minimum unstake delay seconds of a relay manager's stake on the StakeManager\\n        uint256 minimumUnstakeDelay;\\n        // Developers address\\n        address devAddress;\\n        // 0 < fee < 100, as percentage of total charge from paymaster to relayer\\n        uint8 devFee;\\n        // baseRelayFee The base fee the Relay Server charges for a single transaction in Ether, in wei.\\n        uint80 baseRelayFee;\\n        // pctRelayFee The percent of the total charge to add as a Relay Server fee to the total charge.\\n        uint16 pctRelayFee;\\n    }\\n\\n    /// @notice Emitted when a configuration of the `RelayHub` is changed\\n    event RelayHubConfigured(RelayHubConfig config);\\n\\n    /// @notice Emitted when relays are added by a relayManager\\n    event RelayWorkersAdded(\\n        address indexed relayManager,\\n        address[] newRelayWorkers,\\n        uint256 workersCount\\n    );\\n\\n    /// @notice Emitted when an account withdraws funds from the `RelayHub`.\\n    event Withdrawn(\\n        address indexed account,\\n        address indexed dest,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted when `depositFor` is called, including the amount and account that was funded.\\n    event Deposited(\\n        address indexed paymaster,\\n        address indexed from,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted for each token configured for staking in setMinimumStakes\\n    event StakingTokenDataChanged(\\n        address token,\\n        uint256 minimumStake\\n    );\\n\\n    /**\\n     * @notice Emitted when an attempt to relay a call fails and the `Paymaster` does not accept the transaction.\\n     * The actual relayed call was not executed, and the recipient not charged.\\n     * @param reason contains a revert reason returned from preRelayedCall or forwarder.\\n     */\\n    event TransactionRejectedByPaymaster(\\n        address indexed relayManager,\\n        address indexed paymaster,\\n        bytes32 indexed relayRequestID,\\n        address from,\\n        address to,\\n        address relayWorker,\\n        bytes4 selector,\\n        uint256 innerGasUsed,\\n        bytes reason\\n    );\\n\\n    /**\\n     * @notice Emitted when a transaction is relayed. Note that the actual internal function call might be reverted.\\n     * The reason for a revert will be indicated in the `status` field of a corresponding `RelayCallStatus` value.\\n     * @notice `charge` is the Ether value deducted from the `Paymaster` balance.\\n     * The amount added to the `relayManager` balance will be lower if there is an activated `devFee` in the `config`.\\n     */\\n    event TransactionRelayed(\\n        address indexed relayManager,\\n        address indexed relayWorker,\\n        bytes32 indexed relayRequestID,\\n        address from,\\n        address to,\\n        address paymaster,\\n        bytes4 selector,\\n        RelayCallStatus status,\\n        uint256 charge\\n    );\\n\\n    /// @notice This event is emitted in case the internal function returns a value or reverts with a revert string.\\n    event TransactionResult(\\n        RelayCallStatus status,\\n        bytes returnValue\\n    );\\n\\n    /// @notice This event is emitted in case this `RelayHub` is deprecated and will stop serving transactions soon.\\n    event HubDeprecated(uint256 deprecationTime);\\n\\n    /**\\n     * @notice This event is emitted in case a `relayManager` has been deemed \\\"abandoned\\\" for being\\n     * unresponsive for a prolonged period of time.\\n     * @notice This event means the entire balance of the relay has been transferred to the `devAddress`.\\n     */\\n    event AbandonedRelayManagerBalanceEscheated(\\n        address indexed relayManager,\\n        uint256 balance\\n    );\\n\\n    /**\\n     * Error codes that describe all possible failure reasons reported in the `TransactionRelayed` event `status` field.\\n     *  @param OK The transaction was successfully relayed and execution successful - never included in the event.\\n     *  @param RelayedCallFailed The transaction was relayed, but the relayed call failed.\\n     *  @param RejectedByPreRelayed The transaction was not relayed due to preRelatedCall reverting.\\n     *  @param RejectedByForwarder The transaction was not relayed due to forwarder check (signature,nonce).\\n     *  @param PostRelayedFailed The transaction was relayed and reverted due to postRelatedCall reverting.\\n     *  @param PaymasterBalanceChanged The transaction was relayed and reverted due to the paymaster balance change.\\n     */\\n    enum RelayCallStatus {\\n        OK,\\n        RelayedCallFailed,\\n        RejectedByPreRelayed,\\n        RejectedByForwarder,\\n        RejectedByRecipientRevert,\\n        PostRelayedFailed,\\n        PaymasterBalanceChanged\\n    }\\n\\n    /**\\n     * @notice Add new worker addresses controlled by the sender who must be a staked Relay Manager address.\\n     * Emits a `RelayWorkersAdded` event.\\n     * This function can be called multiple times, emitting new events.\\n     */\\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\\n\\n    /**\\n     * @notice The `RelayRegistrar` callback to notify the `RelayHub` that this `relayManager` has updated registration.\\n     */\\n    function onRelayServerRegistered(address relayManager) external;\\n\\n    // Balance management\\n\\n    /**\\n     * @notice Deposits ether for a `Paymaster`, so that it can and pay for relayed transactions.\\n     * :warning: **Warning** :warning: Unused balance can only be withdrawn by the holder itself, by calling `withdraw`.\\n     * Emits a `Deposited` event.\\n     */\\n    function depositFor(address target) external payable;\\n\\n    /**\\n     * @notice Withdraws from an account's balance, sending it back to the caller.\\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\\n     * Emits a `Withdrawn` event.\\n     */\\n    function withdraw(address payable dest, uint256 amount) external;\\n\\n    /**\\n     * @notice Withdraws from an account's balance, sending funds to multiple provided addresses.\\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\\n     * Emits a `Withdrawn` event for each destination.\\n     */\\n    function withdrawMultiple(address payable[] memory dest, uint256[] memory amount) external;\\n\\n    // Relaying\\n\\n\\n    /**\\n     * @notice Relays a transaction. For this to succeed, multiple conditions must be met:\\n     *  - `Paymaster`'s `preRelayCall` method must succeed and not revert.\\n     *  - the `msg.sender` must be a registered Relay Worker that the user signed to use.\\n     *  - the transaction's gas fees must be equal or larger than the ones that were signed by the sender.\\n     *  - the transaction must have enough gas to run all internal transactions if they use all gas available to them.\\n     *  - the `Paymaster` must have enough balance to pay the Relay Worker if all gas is spent.\\n     *\\n     * @notice If all conditions are met, the call will be relayed and the `Paymaster` charged.\\n     *\\n     * @param domainSeparatorName The name of the Domain Separator used to verify the EIP-712 signature\\n     * @param maxAcceptanceBudget The maximum valid value for `paymaster.getGasLimits().acceptanceBudget` to return.\\n     * @param relayRequest All details of the requested relayed call.\\n     * @param signature The client's EIP-712 signature over the `relayRequest` struct.\\n     * @param approvalData The dapp-specific data forwarded to the `Paymaster`'s `preRelayedCall` method.\\n     * This value is **not** verified by the `RelayHub` in any way.\\n     * As an example, it can be used to pass some kind of a third-party signature to the `Paymaster` for verification.\\n     *\\n     * Emits a `TransactionRelayed` event regardless of whether the transaction succeeded or failed.\\n     */\\n    function relayCall(\\n        string calldata domainSeparatorName,\\n        uint256 maxAcceptanceBudget,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData\\n    )\\n    external\\n    returns (\\n        bool paymasterAccepted,\\n        uint256 charge,\\n        IRelayHub.RelayCallStatus status,\\n        bytes memory returnValue\\n    );\\n\\n    /**\\n     * @notice In case the Relay Worker has been found to be in violation of some rules by the `Penalizer` contract,\\n     * the `Penalizer` will call this method to execute a penalization.\\n     * The `RelayHub` will look up the Relay Manager of the given Relay Worker and will forward the call to\\n     * the `StakeManager` contract. The `RelayHub` does not perform the actual penalization either.\\n     * @param relayWorker The address of the Relay Worker that committed a penalizable offense.\\n     * @param beneficiary The address that called the `Penalizer` and will receive a reward for it.\\n     */\\n    function penalize(address relayWorker, address payable beneficiary) external;\\n\\n    /**\\n     * @notice Sets or changes the configuration of this `RelayHub`.\\n     * @param _config The new configuration.\\n     */\\n    function setConfiguration(RelayHubConfig memory _config) external;\\n\\n    /**\\n     * @notice Sets or changes the minimum amount of a given `token` that needs to be staked so that the Relay Manager\\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\\n     * @param token An array of addresses of ERC-20 compatible tokens.\\n     * @param minimumStake An array of minimal amounts necessary for a corresponding token, in wei.\\n     */\\n    function setMinimumStakes(IERC20[] memory token, uint256[] memory minimumStake) external;\\n\\n    /**\\n     * @notice Deprecate hub by reverting all incoming `relayCall()` calls starting from a given timestamp\\n     * @param _deprecationTime The timestamp in seconds after which the `RelayHub` stops serving transactions.\\n     */\\n    function deprecateHub(uint256 _deprecationTime) external;\\n\\n    /**\\n     * @notice\\n     * @param relayManager\\n     */\\n    function escheatAbandonedRelayBalance(address relayManager) external;\\n\\n    /**\\n     * @notice The fee is expressed as a base fee in wei plus percentage of the actual charge.\\n     * For example, a value '40' stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\\n     * @param gasUsed An amount of gas used by the transaction.\\n     * @param relayData The details of a transaction signed by the sender.\\n     * @return The calculated charge, in wei.\\n     */\\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\\n\\n    /**\\n     * @notice The fee is expressed as a  percentage of the actual charge.\\n     * For example, a value '40' stands for a 40% fee, so the Relay Manager will only get 60% of the `charge`.\\n     * @param charge The amount of Ether in wei the Paymaster will be charged for this transaction.\\n     * @return The calculated devFee, in wei.\\n     */\\n    function calculateDevCharge(uint256 charge) external view returns (uint256);\\n    /* getters */\\n\\n    /// @return config The configuration of the `RelayHub`.\\n    function getConfiguration() external view returns (RelayHubConfig memory config);\\n\\n    /**\\n     * @param token An address of an ERC-20 compatible tokens.\\n     * @return The minimum amount of a given `token` that needs to be staked so that the Relay Manager\\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\\n     */\\n    function getMinimumStakePerToken(IERC20 token) external view returns (uint256);\\n\\n    /**\\n     * @param worker An address of the Relay Worker.\\n     * @return The address of its Relay Manager.\\n     */\\n    function getWorkerManager(address worker) external view returns (address);\\n\\n    /**\\n     * @param manager An address of the Relay Manager.\\n     * @return The count of Relay Workers associated with this Relay Manager.\\n     */\\n    function getWorkerCount(address manager) external view returns (uint256);\\n\\n    /// @return An account's balance. It can be either a deposit of a `Paymaster`, or a revenue of a Relay Manager.\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    /// @return The `StakeManager` address for this `RelayHub`.\\n    function getStakeManager() external view returns (IStakeManager);\\n\\n    /// @return The `Penalizer` address for this `RelayHub`.\\n    function getPenalizer() external view returns (address);\\n\\n    /// @return The `RelayRegistrar` address for this `RelayHub`.\\n    function getRelayRegistrar() external view returns (address);\\n\\n    /// @return The `BatchGateway` address for this `RelayHub`.\\n    function getBatchGateway() external view returns (address);\\n\\n    /**\\n     * @notice Uses `StakeManager` to decide if the Relay Manager can be considered staked or not.\\n     * Returns if the stake's token, amount and delay satisfy all requirements, reverts otherwise.\\n     */\\n    function verifyRelayManagerStaked(address relayManager) external view;\\n\\n    /**\\n     * @notice Uses `StakeManager` to check if the Relay Manager can be considered abandoned or not.\\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\\n     */\\n    function isRelayEscheatable(address relayManager) external view returns (bool);\\n\\n    /// @return `true` if the `RelayHub` is deprecated, `false` it it is not deprecated and can serve transactions.\\n    function isDeprecated() external view returns (bool);\\n\\n    /// @return The timestamp from which the hub no longer allows relaying calls.\\n    function getDeprecationTime() external view returns (uint256);\\n\\n    /// @return The block number in which the contract has been deployed.\\n    function getCreationBlock() external view returns (uint256);\\n\\n    /// @return a SemVer-compliant version of the `RelayHub` contract.\\n    function versionHub() external view returns (string memory);\\n\\n    /// @return A total measurable amount of gas left to current execution. Same as 'gasleft()' for pure EVMs.\\n    function aggregateGasleft() external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x0ab29ca5985c98f530e5985e3d9dd14f00d34527410ce980b51b26e57bb0121c\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @title The StakeManager Interface\\n * @notice In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires\\n * the Relay Server to maintain a permanently locked stake in the system before being able to register.\\n *\\n * @notice Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract.\\n * In such case, the stake will never be returned to the Relay Server operator and will be slashed.\\n *\\n * @notice An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token.\\n * Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed.\\n */\\ninterface IStakeManager is IERC165 {\\n\\n    /// @notice Emitted when a `stake` or `unstakeDelay` are initialized or increased.\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// @notice Emitted once a stake is scheduled for withdrawal.\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawTime\\n    );\\n\\n    /// @notice Emitted when owner withdraws `relayManager` funds.\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted when an authorized `RelayHub` penalizes a `relayManager`.\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        IERC20 token,\\n        uint256 reward\\n    );\\n\\n    /// @notice Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized.\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    /// @notice Emitted when a `relayManager` removes a `RelayHub` from a list of authorized.\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalTime\\n    );\\n\\n    /// @notice Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking.\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @notice Emitted when a `burnAddress` is changed.\\n    event BurnAddressSet(\\n        address indexed burnAddress\\n    );\\n\\n    /// @notice Emitted when a `devAddress` is changed.\\n    event DevAddressSet(\\n        address indexed devAddress\\n    );\\n\\n    /// @notice Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal.\\n    event RelayServerAbandoned(\\n        address indexed relayManager,\\n        uint256 abandonedTime\\n    );\\n\\n    /// @notice Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned.\\n    event RelayServerKeepalive(\\n        address indexed relayManager,\\n        uint256 keepaliveTime\\n    );\\n\\n    /// @notice Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`.\\n    event AbandonedRelayManagerStakeEscheated(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @param stake - amount of ether staked for this relay\\n     * @param unstakeDelay - number of seconds to elapse before the owner can retrieve the stake after calling 'unlock'\\n     * @param withdrawTime - timestamp in seconds when 'withdraw' will be callable, or zero if the unlock has not been called\\n     * @param owner - address that receives revenue and manages relayManager's stake\\n     */\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawTime;\\n        uint256 abandonedTime;\\n        uint256 keepaliveTime;\\n        IERC20 token;\\n        address owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalTime;\\n    }\\n\\n    /**\\n     * @param devAddress - the address that will receive the 'abandoned' stake\\n     * @param abandonmentDelay - the amount of time after which the relay can be marked as 'abandoned'\\n     * @param escheatmentDelay - the amount of time after which the abandoned relay's stake and balance may be withdrawn to the `devAddress`\\n     */\\n    struct AbandonedRelayServerConfig {\\n        address devAddress;\\n        uint256 abandonmentDelay;\\n        uint256 escheatmentDelay;\\n    }\\n\\n    /**\\n     * @notice Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n     * Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n     * @param owner - owner of the relay (as configured off-chain)\\n     */\\n    function setRelayManagerOwner(address owner) external;\\n\\n    /**\\n     * @notice Put a stake for a relayManager and set its unstake delay.\\n     * Only the owner can call this function. If the entry does not exist, reverts.\\n     * The owner must give allowance of the ERC-20 token to the StakeManager before calling this method.\\n     * It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.\\n     * @param token The address of an ERC-20 token that is used by the relayManager as a stake\\n     * @param relayManager The address that represents a stake entry and controls relay registrations on relay hubs\\n     * @param unstakeDelay The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`\\n     * @param amount The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake\\n     */\\n    function stakeForRelayManager(IERC20 token, address relayManager, uint256 unstakeDelay, uint256 amount) external;\\n\\n    /**\\n     * @notice Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.\\n     * @param relayManager The address of a Relay Manager whose stake is to be unlocked.\\n     */\\n    function unlockStake(address relayManager) external;\\n    /**\\n     * @notice Withdraw the unlocked stake.\\n     * @param relayManager The address of a Relay Manager whose stake is to be withdrawn.\\n     */\\n    function withdrawStake(address relayManager) external;\\n\\n    /**\\n     * @notice Add the `RelayHub` to a list of authorized by this Relay Manager.\\n     * This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.\\n     * @param relayManager The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.\\n     * @param relayHub The address of a `RelayHub` to be authorized.\\n     */\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `authorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * @notice Remove the `RelayHub` from a list of authorized by this Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @param relayHub The address of a `RelayHub` to be unauthorized.\\n     */\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.\\n     * @param relayManager The address of a Relay Manager to be penalized.\\n     * @param beneficiary The address that receives part of the penalty amount.\\n     * @param amount A total amount of penalty to be withdrawn from stake.\\n     */\\n    function penalizeRelayManager(address relayManager, address beneficiary, uint256 amount) external;\\n\\n    /**\\n     * @notice Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay.\\n     * Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned.\\n     */\\n    function markRelayAbandoned(address relayManager) external;\\n\\n    /**\\n     * @notice If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager\\n     * has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and\\n     * balance will be taken from this relay.\\n     */\\n    function escheatAbandonedRelayStake(address relayManager) external;\\n\\n    /**\\n     * @notice Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned.\\n     * Can be called by an authorized `RelayHub` or by the `relayOwner` address.\\n     */\\n    function updateRelayKeepaliveTime(address relayManager) external;\\n\\n    /**\\n     * @notice Check if the Relay Manager can be considered abandoned or not.\\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\\n     */\\n    function isRelayEscheatable(address relayManager) external view returns(bool);\\n\\n    /**\\n     * @notice Get the stake details information for the given Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @return stakeInfo The `StakeInfo` structure.\\n     * @return isSenderAuthorizedHub `true` if the `msg.sender` for this call was a `RelayHub` that is authorized now.\\n     * `false` if the `msg.sender` for this call is not authorized.\\n     */\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo, bool isSenderAuthorizedHub);\\n\\n    /**\\n     * @return The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake.\\n     */\\n    function getMaxUnstakeDelay() external view returns (uint256);\\n\\n    /**\\n     * @notice Change the address that will receive the 'burned' part of the penalized stake.\\n     * This is done to prevent malicious Relay Server from penalizing itself and breaking even.\\n     */\\n    function setBurnAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The address that will receive the 'burned' part of the penalized stake.\\n     */\\n    function getBurnAddress() external view returns (address);\\n\\n    /**\\n     * @notice Change the address that will receive the 'abandoned' stake.\\n     * This is done to prevent Relay Servers that lost their keys from losing access to funds.\\n     */\\n    function setDevAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The structure that contains all configuration values for the 'abandoned' stake.\\n     */\\n    function getAbandonedRelayServerConfig() external view returns (AbandonedRelayServerConfig memory);\\n\\n    /**\\n     * @return the block number in which the contract has been deployed.\\n     */\\n    function getCreationBlock() external view returns (uint256);\\n\\n    /**\\n     * @return a SemVer-compliant version of the `StakeManager` contract.\\n     */\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x77035b55ca4c09cb499bc0cab3f9e791d77597b148dbfee8bf94ca6c0039c3e0\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"../interfaces/IERC2771Recipient.sol\\\";\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\nimport \\\"./GsnUtils.sol\\\";\\n\\n/**\\n * @title The ERC-712 Library for GSN\\n * @notice Bridge Library to convert a GSN RelayRequest into a valid `ForwardRequest` for a `Forwarder`.\\n */\\nlibrary GsnEip712Library {\\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\\n    uint256 private constant MAX_RETURN_SIZE = 1024;\\n\\n    //copied from Forwarder (can't reference string constants even from another library)\\n    string public constant GENERIC_PARAMS = \\\"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntilTime\\\";\\n\\n    bytes public constant RELAYDATA_TYPE = \\\"RelayData(uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 transactionCalldataGasUsed,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\\\";\\n\\n    string public constant RELAY_REQUEST_NAME = \\\"RelayRequest\\\";\\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\\\"RelayData relayData)\\\", RELAYDATA_TYPE));\\n\\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\\n        RELAY_REQUEST_NAME,\\\"(\\\",GENERIC_PARAMS,\\\",\\\", RELAY_REQUEST_SUFFIX);\\n\\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\\n\\n\\n    struct EIP712Domain {\\n        string name;\\n        string version;\\n        uint256 chainId;\\n        address verifyingContract;\\n    }\\n\\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n    );\\n\\n    function splitRequest(\\n        GsnTypes.RelayRequest calldata req\\n    )\\n    internal\\n    pure\\n    returns (\\n        bytes memory suffixData\\n    ) {\\n        suffixData = abi.encode(\\n            hashRelayData(req.relayData));\\n    }\\n\\n    //verify that the recipient trusts the given forwarder\\n    // MUST be called by paymaster\\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\\n            abi.encodeWithSelector(\\n                IERC2771Recipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\\n            )\\n        );\\n        require(success, \\\"isTrustedForwarder: reverted\\\");\\n        require(ret.length == 32, \\\"isTrustedForwarder: bad response\\\");\\n        require(abi.decode(ret, (bool)), \\\"invalid forwarder for recipient\\\");\\n    }\\n\\n    function verifySignature(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal view {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\\n    }\\n\\n    function verify(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal view {\\n        verifyForwarderTrusted(relayRequest);\\n        verifySignature(domainSeparatorName, relayRequest, signature);\\n    }\\n\\n    function execute(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal returns (\\n        bool forwarderSuccess,\\n        bool callSuccess,\\n        bytes memory ret\\n    ) {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\\n        /* solhint-disable-next-line avoid-low-level-calls */\\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\\n            abi.encodeWithSelector(IForwarder.execute.selector,\\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\\n        ));\\n        if ( forwarderSuccess ) {\\n\\n          //decode return value of execute:\\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\\n        }\\n        truncateInPlace(ret);\\n    }\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data) internal pure {\\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\\n    }\\n\\n    function domainSeparator(string memory name, address forwarder) internal view returns (bytes32) {\\n        return hashDomain(EIP712Domain({\\n            name : name,\\n            version : \\\"3\\\",\\n            chainId : getChainID(),\\n            verifyingContract : forwarder\\n            }));\\n    }\\n\\n    function getChainID() internal view returns (uint256 id) {\\n        /* solhint-disable no-inline-assembly */\\n        assembly {\\n            id := chainid()\\n        }\\n    }\\n\\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(bytes(req.name)),\\n                keccak256(bytes(req.version)),\\n                req.chainId,\\n                req.verifyingContract));\\n    }\\n\\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                RELAYDATA_TYPEHASH,\\n                req.maxFeePerGas,\\n                req.maxPriorityFeePerGas,\\n                req.transactionCalldataGasUsed,\\n                req.relayWorker,\\n                req.paymaster,\\n                req.forwarder,\\n                keccak256(req.paymasterData),\\n                req.clientId\\n            ));\\n    }\\n}\\n\",\"keccak256\":\"0x73b5828c2578aea26dbd21cea00f1a245c94f9720ffd95932777ee6121e31972\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 maxFeePerGas;\\n        uint256 maxPriorityFeePerGas;\\n        uint256 transactionCalldataGasUsed;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x9fb51c540f32939f1ee291e3fa709be64f7c73485bd7b87c6624c3567dd42a1b\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\nimport \\\"./GsnTypes.sol\\\";\\n\\n/**\\n * @title The GSN Solidity Utils Library\\n * @notice Some library functions used throughout the GSN Solidity codebase.\\n */\\nlibrary GsnUtils {\\n\\n    bytes32 constant private RELAY_REQUEST_ID_MASK = 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\n    /**\\n     * @notice Calculate an identifier for the meta-transaction in a format similar to a transaction hash.\\n     * Note that uniqueness relies on signature and may not be enforced if meta-transactions are verified\\n     * with a different algorithm, e.g. when batching.\\n     * @param relayRequest The `RelayRequest` for which an ID is being calculated.\\n     * @param signature The signature for the `RelayRequest`. It is not validated here and may even remain empty.\\n     */\\n    function getRelayRequestID(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature)\\n    internal\\n    pure\\n    returns (bytes32) {\\n        return keccak256(abi.encode(relayRequest.request.from, relayRequest.request.nonce, signature)) & RELAY_REQUEST_ID_MASK;\\n    }\\n\\n    /**\\n     * @notice Extract the method identifier signature from the encoded function call.\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * @notice Extract a parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * The return value should be casted to the right type (`uintXXX`/`bytesXXX`/`address`/`bool`/`enum`).\\n     * @param msgData Byte array containing a uint256 value.\\n     * @param index Index in byte array of uint256 value.\\n     * @return result uint256 value from byte array.\\n     */\\n    function getParam(bytes memory msgData, uint256 index) internal pure returns (uint256 result) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    /// @notice Re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7ea79bac2508612eba2c9372a7a4af953218b4ee2721e273f6d368e76b1ae7bb\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity ^0.8.0;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x8063af8e0f134be3d794ad39bdc0041f33a16c91a4ee7abb968d4c15c8d10c54\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/introspection/ERC165Checker.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Library used to query support of an interface declared via {IERC165}.\\n *\\n * Note that these functions return the actual result of the query: they do not\\n * `revert` if an interface is not supported. It is up to the caller to decide\\n * what to do in these cases.\\n */\\nlibrary ERC165Checker {\\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\\n\\n    /**\\n     * @dev Returns true if `account` supports the {IERC165} interface.\\n     */\\n    function supportsERC165(address account) internal view returns (bool) {\\n        // Any contract that implements ERC165 must explicitly indicate support of\\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\\n        return\\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\\n    }\\n\\n    /**\\n     * @dev Returns true if `account` supports the interface defined by\\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\\n        // query support of both ERC165 as per the spec and support of _interfaceId\\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns a boolean array where each value corresponds to the\\n     * interfaces passed in and whether they're supported or not. This allows\\n     * you to batch check interfaces for a contract where your expectation\\n     * is that some interfaces may not be supported.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds)\\n        internal\\n        view\\n        returns (bool[] memory)\\n    {\\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\\n\\n        // query support of ERC165 itself\\n        if (supportsERC165(account)) {\\n            // query support of each interface in interfaceIds\\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\\n            }\\n        }\\n\\n        return interfaceIdsSupported;\\n    }\\n\\n    /**\\n     * @dev Returns true if `account` supports all the interfaces defined in\\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\\n     *\\n     * Batch-querying can lead to gas savings by skipping repeated checks for\\n     * {IERC165} support.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     */\\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\\n        // query support of ERC165 itself\\n        if (!supportsERC165(account)) {\\n            return false;\\n        }\\n\\n        // query support of each interface in interfaceIds\\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\\n                return false;\\n            }\\n        }\\n\\n        // all interfaces supported\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Query if a contract implements an interface, does not check ERC165 support\\n     * @param account The address of the contract to query for support of an interface\\n     * @param interfaceId The interface identifier, as specified in ERC-165\\n     * @return true if the contract at account indicates support of the interface with\\n     * identifier interfaceId, false otherwise\\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\\n     * the behavior of this method is undefined. This precondition can be checked\\n     * with {supportsERC165}.\\n     * Interface identification is specified in ERC-165.\\n     */\\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\\n        // prepare call\\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\\n\\n        // perform static call\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly {\\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0x00)\\n        }\\n\\n        return success && returnSize >= 0x20 && returnValue > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2256,"contract":"@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":69,"contract":"@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster","label":"relayHub","offset":0,"slot":"1","type":"t_contract(IRelayHub)1104"},{"astId":71,"contract":"@opengsn/contracts/src/BasePaymaster.sol:BasePaymaster","label":"_trustedForwarder","offset":0,"slot":"2","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IRelayHub)1104":{"encoding":"inplace","label":"contract IRelayHub","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"getGasAndDataLimits()":{"notice":"Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster. This function allows different paymasters to have different properties without changes to the RelayHub."},"getTrustedForwarder()":{"notice":":warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions."},"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"notice":"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction."},"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":{"notice":"Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that the Paymaster agrees to pay for this call. The request is considered to be rejected by the Paymaster in one of the following conditions:  - `preRelayedCall()` method reverts  - the `Forwarder` reverts because of nonce or signature error  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted    (and all that did not consume more than `acceptanceBudget` gas). In any of the above cases, all Paymaster calls and the recipient call are reverted. In any other case the Paymaster will pay for the gas cost of the transaction. Note that even if `postRelayedCall` is reverted the Paymaster will be charged."},"setRelayHub(address)":{"notice":"The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with. :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first."},"setTrustedForwarder(address)":{"notice":"The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.the Recipients must trust this Forwarder as well in order for the configuration to remain functional."},"withdrawRelayHubDepositTo(uint256,address)":{"notice":"Withdraw deposit from the RelayHub."}},"notice":"An abstract base class to be inherited by a concrete Paymaster. A subclass must implement:  - preRelayedCall  - postRelayedCall","version":1}}},"@opengsn/contracts/src/ERC2771Recipient.sol":{"ERC2771Recipient":{"abi":[{"inputs":[],"name":"getTrustedForwarder","outputs":[{"internalType":"address","name":"forwarder","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getTrustedForwarder()":{"returns":{"forwarder":"The address of the Forwarder contract that is being used."}},"isTrustedForwarder(address)":{"params":{"forwarder":"The address of the Forwarder contract that is being used."},"returns":{"_0":"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."}}},"title":"The ERC-2771 Recipient Base Abstract Class - Implementation","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getTrustedForwarder()":"ce1b815f","isTrustedForwarder(address)":"572b6c05"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"title\":\"The ERC-2771 Recipient Base Abstract Class - Implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"notice\":\"Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.A base contract to be inherited by any contract that want to receive relayed transactions.A subclass must use `_msgSender()` instead of `msg.sender`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":\"ERC2771Recipient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable no-inline-assembly\\npragma solidity >=0.6.9;\\n\\nimport \\\"./interfaces/IERC2771Recipient.sol\\\";\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\\n *\\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\\n *\\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\\n *\\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\\n */\\nabstract contract ERC2771Recipient is IERC2771Recipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address private _trustedForwarder;\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\\n     * @return forwarder The address of the Forwarder contract that is being used.\\n     */\\n    function getTrustedForwarder() public virtual view returns (address forwarder){\\n        return _trustedForwarder;\\n    }\\n\\n    function _setTrustedForwarder(address _forwarder) internal {\\n        _trustedForwarder = _forwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            ret = msg.sender;\\n        }\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            return msg.data[0:msg.data.length-20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":451,"contract":"@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient","label":"_trustedForwarder","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"getTrustedForwarder()":{"notice":":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."},"isTrustedForwarder(address)":{"notice":":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."}},"notice":"Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.A base contract to be inherited by any contract that want to receive relayed transactions.A subclass must use `_msgSender()` instead of `msg.sender`.","version":1}}},"@opengsn/contracts/src/forwarder/IForwarder.sol":{"IForwarder":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"domainSeparator","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"domainValue","type":"bytes"}],"name":"DomainRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"typeHash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"typeStr","type":"string"}],"name":"RequestTypeRegistered","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntilTime","type":"uint256"}],"internalType":"struct IForwarder.ForwardRequest","name":"forwardRequest","type":"tuple"},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"},{"internalType":"bytes32","name":"requestTypeHash","type":"bytes32"},{"internalType":"bytes","name":"suffixData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"}],"name":"registerDomainSeparator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"typeName","type":"string"},{"internalType":"string","name":"typeSuffix","type":"string"}],"name":"registerRequestType","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntilTime","type":"uint256"}],"internalType":"struct IForwarder.ForwardRequest","name":"forwardRequest","type":"tuple"},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"},{"internalType":"bytes32","name":"requestTypeHash","type":"bytes32"},{"internalType":"bytes","name":"suffixData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"verify","outputs":[],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":{"params":{"domainSeparator":"The domain used when signing this request.","forwardRequest":"All requested transaction parameters.","requestTypeHash":"The request type used when signing this request.","signature":"The client signature to be validated.","suffixData":"The ABI-encoded extension data for the current `RequestType` used when signing this request."},"returns":{"ret":"The byte array returned by the underlying `CALL` to the target address.","success":"The success flag of the underlying `CALL` to the target address."}},"getNonce(address)":{"params":{"from":"The address of a sender."},"returns":{"_0":"The nonce for this address."}},"registerDomainSeparator(string,string)":{"params":{"name":"The domain's display name.","version":"The domain/protocol version."}},"registerRequestType(string,string)":{"params":{"typeName":"The name of the request type.","typeSuffix":"Any extra data after the generic params. Must contain add at least one param. The generic ForwardRequest type is always registered by the constructor."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"title":"The Forwarder Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":"e024dc7f","getNonce(address)":"2d0335ab","registerDomainSeparator(string,string)":"9c7b4592","registerRequestType(string,string)":"d9210be5","supportsInterface(bytes4)":"01ffc9a7","verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":"ad9f99c7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"domainValue\",\"type\":\"bytes\"}],\"name\":\"DomainRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"typeStr\",\"type\":\"string\"}],\"name\":\"RequestTypeRegistered\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"forwardRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"requestTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"suffixData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"registerDomainSeparator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSuffix\",\"type\":\"string\"}],\"name\":\"registerRequestType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"forwardRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"requestTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"suffixData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"params\":{\"domainSeparator\":\"The domain used when signing this request.\",\"forwardRequest\":\"All requested transaction parameters.\",\"requestTypeHash\":\"The request type used when signing this request.\",\"signature\":\"The client signature to be validated.\",\"suffixData\":\"The ABI-encoded extension data for the current `RequestType` used when signing this request.\"},\"returns\":{\"ret\":\"The byte array returned by the underlying `CALL` to the target address.\",\"success\":\"The success flag of the underlying `CALL` to the target address.\"}},\"getNonce(address)\":{\"params\":{\"from\":\"The address of a sender.\"},\"returns\":{\"_0\":\"The nonce for this address.\"}},\"registerDomainSeparator(string,string)\":{\"params\":{\"name\":\"The domain's display name.\",\"version\":\"The domain/protocol version.\"}},\"registerRequestType(string,string)\":{\"params\":{\"typeName\":\"The name of the request type.\",\"typeSuffix\":\"Any extra data after the generic params. Must contain add at least one param. The generic ForwardRequest type is always registered by the constructor.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The Forwarder Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"notice\":\"Executes a transaction specified by the `ForwardRequest`. The transaction is first verified and then executed. The success flag and returned bytes array of the `CALL` are returned as-is. This method would revert only in case of a verification error. All the target errors are reported using the returned success flag and returned bytes array.\"},\"registerDomainSeparator(string,string)\":{\"notice\":\"Register a new domain separator.This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`. The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address. This method accepts the domain name and version to create and register the domain separator value.\"},\"registerRequestType(string,string)\":{\"notice\":\"Register a new Request typehash.This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\"},\"verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"notice\":\"Verify the transaction is valid and can be executed. Implementations must validate the signature and the nonce of the request are correct. Does not revert and returns successfully if the input is valid. Reverts if any validation has failed. For instance, if either signature or nonce are incorrect. Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\"}},\"notice\":\"The contracts implementing this interface take a role of authorization, authentication and replay protection for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that represent the caller to the `data` field of the request and send this new data to the target address (the `to` field) :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract. Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible! Recipient contracts should only trust forwarders that passed through security audit, otherwise they are susceptible to identity theft.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":\"IForwarder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":{"notice":"Executes a transaction specified by the `ForwardRequest`. The transaction is first verified and then executed. The success flag and returned bytes array of the `CALL` are returned as-is. This method would revert only in case of a verification error. All the target errors are reported using the returned success flag and returned bytes array."},"registerDomainSeparator(string,string)":{"notice":"Register a new domain separator.This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`. The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address. This method accepts the domain name and version to create and register the domain separator value."},"registerRequestType(string,string)":{"notice":"Register a new Request typehash.This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712."},"verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":{"notice":"Verify the transaction is valid and can be executed. Implementations must validate the signature and the nonce of the request are correct. Does not revert and returns successfully if the input is valid. Reverts if any validation has failed. For instance, if either signature or nonce are incorrect. Reverts if `domainSeparator` or `requestTypeHash` are not registered as well."}},"notice":"The contracts implementing this interface take a role of authorization, authentication and replay protection for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that represent the caller to the `data` field of the request and send this new data to the target address (the `to` field) :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract. Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible! Recipient contracts should only trust forwarders that passed through security audit, otherwise they are susceptible to identity theft.","version":1}}},"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol":{"IERC2771Recipient":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"isTrustedForwarder(address)":{"params":{"forwarder":"The address of the Forwarder contract that is being used."},"returns":{"_0":"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."}}},"title":"The ERC-2771 Recipient Base Abstract Class - Declarations","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"title\":\"The ERC-2771 Recipient Base Abstract Class - Declarations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"notice\":\"A contract must implement this interface in order to support relayed transaction.It is recommended that your contract inherits from the ERC2771Recipient contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":\"IERC2771Recipient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"isTrustedForwarder(address)":{"notice":":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."}},"notice":"A contract must implement this interface in order to support relayed transaction.It is recommended that your contract inherits from the ERC2771Recipient contract.","version":1}}},"@opengsn/contracts/src/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[],"name":"getGasAndDataLimits","outputs":[{"components":[{"internalType":"uint256","name":"acceptanceBudget","type":"uint256"},{"internalType":"uint256","name":"preRelayedCallGasLimit","type":"uint256"},{"internalType":"uint256","name":"postRelayedCallGasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSizeLimit","type":"uint256"}],"internalType":"struct IPaymaster.GasAndDataLimits","name":"limits","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelayHub","outputs":[{"internalType":"address","name":"relayHub","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedForwarder","outputs":[{"internalType":"address","name":"trustedForwarder","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"gasUseWithoutPost","type":"uint256"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"name":"postRelayedCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntilTime","type":"uint256"}],"internalType":"struct IForwarder.ForwardRequest","name":"request","type":"tuple"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"internalType":"struct GsnTypes.RelayRequest","name":"relayRequest","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"approvalData","type":"bytes"},{"internalType":"uint256","name":"maxPossibleGas","type":"uint256"}],"name":"preRelayedCall","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"bool","name":"rejectOnRecipientRevert","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"versionPaymaster","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getGasAndDataLimits()":{"returns":{"limits":"An instance of the `GasAndDataLimits` struct ##### `acceptanceBudget` If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what. Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense. Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request. This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract. :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit` (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions. If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \"griefing\" attack. The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated. From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay, since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts. Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config). ##### `preRelayedCallGasLimit` The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster. As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster. ##### `postRelayedCallGasLimit` The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas. Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway."}},"getRelayHub()":{"returns":{"relayHub":"The address of the `RelayHub` that is trusted by this Paymaster to execute the requests."}},"getTrustedForwarder()":{"returns":{"trustedForwarder":"The address of the `Forwarder` that is trusted by this Paymaster to execute the requests."}},"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"params":{"context":"The call context, as returned by the preRelayedCall","gasUseWithoutPost":"The actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.","relayData":"The relay params of the request. can be used by relayHub.calculateCharge()","success":"`true` if the relayed call succeeded, false if it reverted"}},"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":{"params":{"approvalData":"- extra dapp-specific data (e.g. signature from trusted party)","maxPossibleGas":"- based on values returned from `getGasAndDataLimits` the RelayHub will calculate the maximum possible amount of gas the user may be charged for. In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"","relayRequest":"- the full relay request structure","signature":"- user's EIP712-compatible signature of the `relayRequest`. Note that in most cases the paymaster shouldn't try use it at all. It is always checked by the forwarder immediately after preRelayedCall returns."},"returns":{"context":"A byte array to be passed to postRelayedCall. Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.","rejectOnRecipientRevert":"The flag that allows a Paymaster to \"delegate\" the rejection to the recipient code. It also means the Paymaster trust the recipient to reject fast: both preRelayedCall, forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget, otherwise the TX is paid by the Paymaster. `true` if the Paymaster wants to reject the TX if the recipient reverts. `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"versionPaymaster()":{"returns":{"_0":"version The SemVer string of this Paymaster's version."}}},"title":"The Paymaster Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getGasAndDataLimits()":"b039a88f","getRelayHub()":"7bdf2ec7","getTrustedForwarder()":"ce1b815f","postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":"76fa01c3","preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":"00be5dd4","supportsInterface(bytes4)":"01ffc9a7","versionPaymaster()":"921276ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"rejectOnRecipientRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getGasAndDataLimits()\":{\"returns\":{\"limits\":\"An instance of the `GasAndDataLimits` struct ##### `acceptanceBudget` If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what. Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense. Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request. This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract. :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit` (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions. If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \\\"griefing\\\" attack. The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated. From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay, since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts. Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config). ##### `preRelayedCallGasLimit` The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster. As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster. ##### `postRelayedCallGasLimit` The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas. Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway.\"}},\"getRelayHub()\":{\"returns\":{\"relayHub\":\"The address of the `RelayHub` that is trusted by this Paymaster to execute the requests.\"}},\"getTrustedForwarder()\":{\"returns\":{\"trustedForwarder\":\"The address of the `Forwarder` that is trusted by this Paymaster to execute the requests.\"}},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"The call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"The actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"The relay params of the request. can be used by relayHub.calculateCharge()\",\"success\":\"`true` if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from `getGasAndDataLimits` the RelayHub will calculate the maximum possible amount of gas the user may be charged for. In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the `relayRequest`. Note that in most cases the paymaster shouldn't try use it at all. It is always checked by the forwarder immediately after preRelayedCall returns.\"},\"returns\":{\"context\":\"A byte array to be passed to postRelayedCall. Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\",\"rejectOnRecipientRevert\":\"The flag that allows a Paymaster to \\\"delegate\\\" the rejection to the recipient code. It also means the Paymaster trust the recipient to reject fast: both preRelayedCall, forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget, otherwise the TX is paid by the Paymaster. `true` if the Paymaster wants to reject the TX if the recipient reverts. `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"versionPaymaster()\":{\"returns\":{\"_0\":\"version The SemVer string of this Paymaster's version.\"}}},\"title\":\"The Paymaster Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster. This function allows different paymasters to have different properties without changes to the RelayHub.\"},\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that the Paymaster agrees to pay for this call. The request is considered to be rejected by the Paymaster in one of the following conditions:  - `preRelayedCall()` method reverts  - the `Forwarder` reverts because of nonce or signature error  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted    (and all that did not consume more than `acceptanceBudget` gas). In any of the above cases, all Paymaster calls and the recipient call are reverted. In any other case the Paymaster will pay for the gas cost of the transaction. Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\"}},\"notice\":\"Contracts implementing this interface exist to make decision about paying the transaction fee to the relay.There are two callbacks here that are executed by the RelayHub: `preRelayedCall` and `postRelayedCall`.It is recommended that your implementation inherits from the abstract BasePaymaster contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\n\\n/**\\n * @title The Paymaster Interface\\n * @notice Contracts implementing this interface exist to make decision about paying the transaction fee to the relay.\\n *\\n * @notice There are two callbacks here that are executed by the RelayHub: `preRelayedCall` and `postRelayedCall`.\\n *\\n * @notice It is recommended that your implementation inherits from the abstract BasePaymaster contract.\\n*/\\ninterface IPaymaster is IERC165 {\\n    /**\\n     * @notice The limits this Paymaster wants to be imposed by the RelayHub on user input. See `getGasAndDataLimits`.\\n     */\\n    struct GasAndDataLimits {\\n        uint256 acceptanceBudget;\\n        uint256 preRelayedCallGasLimit;\\n        uint256 postRelayedCallGasLimit;\\n        uint256 calldataSizeLimit;\\n    }\\n\\n    /**\\n     * @notice Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster.\\n     * This function allows different paymasters to have different properties without changes to the RelayHub.\\n     * @return limits An instance of the `GasAndDataLimits` struct\\n     *\\n     * ##### `acceptanceBudget`\\n     * If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what.\\n     * Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense.\\n     *\\n     * Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request.\\n     * This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract.\\n     *\\n     * :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit`\\n     * (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions.\\n     * If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \\\"griefing\\\" attack.\\n     *\\n     * The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated.\\n     * From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay,\\n     * since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts.\\n     * Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config).\\n     *\\n     * ##### `preRelayedCallGasLimit`\\n     * The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster.\\n     * As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster.\\n     *\\n     * ##### `postRelayedCallGasLimit`\\n     * The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas.\\n     * Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway.\\n     */\\n    function getGasAndDataLimits()\\n    external\\n    view\\n    returns (\\n        GasAndDataLimits memory limits\\n    );\\n\\n    /**\\n     * @notice :warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\\n     * @return trustedForwarder The address of the `Forwarder` that is trusted by this Paymaster to execute the requests.\\n     */\\n    function getTrustedForwarder() external view returns (address trustedForwarder);\\n\\n    /**\\n     * @return relayHub The address of the `RelayHub` that is trusted by this Paymaster to execute the requests.\\n     */\\n    function getRelayHub() external view returns (address relayHub);\\n\\n    /**\\n     * @notice Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that\\n     * the Paymaster agrees to pay for this call.\\n     *\\n     * The request is considered to be rejected by the Paymaster in one of the following conditions:\\n     *  - `preRelayedCall()` method reverts\\n     *  - the `Forwarder` reverts because of nonce or signature error\\n     *  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted\\n     *    (and all that did not consume more than `acceptanceBudget` gas).\\n     *\\n     * In any of the above cases, all Paymaster calls and the recipient call are reverted.\\n     * In any other case the Paymaster will pay for the gas cost of the transaction.\\n     * Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\\n     *\\n\\n     * @param relayRequest - the full relay request structure\\n     * @param signature - user's EIP712-compatible signature of the `relayRequest`.\\n     * Note that in most cases the paymaster shouldn't try use it at all. It is always checked\\n     * by the forwarder immediately after preRelayedCall returns.\\n     * @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\\n     * @param maxPossibleGas - based on values returned from `getGasAndDataLimits`\\n     * the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\\n     * In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\\n     *\\n     * @return context\\n     * A byte array to be passed to postRelayedCall.\\n     * Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\\n     * @return rejectOnRecipientRevert\\n     * The flag that allows a Paymaster to \\\"delegate\\\" the rejection to the recipient code.\\n     * It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\\n     * forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget,\\n     * otherwise the TX is paid by the Paymaster.\\n     * `true` if the Paymaster wants to reject the TX if the recipient reverts.\\n     * `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster.\\n     */\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    returns (bytes memory context, bool rejectOnRecipientRevert);\\n\\n    /**\\n     * @notice This method is called after the actual relayed function call.\\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\\n     *\\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\\n     * is still committed to pay the relay for the entire transaction.\\n     *\\n     * @param context The call context, as returned by the preRelayedCall\\n     * @param success `true` if the relayed call succeeded, false if it reverted\\n     * @param gasUseWithoutPost The actual amount of gas used by the entire transaction, EXCEPT\\n     *        the gas used by the postRelayedCall itself.\\n     * @param relayData The relay params of the request. can be used by relayHub.calculateCharge()\\n     *\\n     */\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    ) external;\\n\\n    /**\\n     * @return version The SemVer string of this Paymaster's version.\\n     */\\n    function versionPaymaster() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xeedb6d83ce600a97a4abbb614d24c65cb2ebc06a1784cc6a81afa9233d1331b6\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 maxFeePerGas;\\n        uint256 maxPriorityFeePerGas;\\n        uint256 transactionCalldataGasUsed;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x9fb51c540f32939f1ee291e3fa709be64f7c73485bd7b87c6624c3567dd42a1b\",\"license\":\"GPL-3.0-only\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"getGasAndDataLimits()":{"notice":"Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster. This function allows different paymasters to have different properties without changes to the RelayHub."},"getTrustedForwarder()":{"notice":":warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions."},"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"notice":"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction."},"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":{"notice":"Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that the Paymaster agrees to pay for this call. The request is considered to be rejected by the Paymaster in one of the following conditions:  - `preRelayedCall()` method reverts  - the `Forwarder` reverts because of nonce or signature error  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted    (and all that did not consume more than `acceptanceBudget` gas). In any of the above cases, all Paymaster calls and the recipient call are reverted. In any other case the Paymaster will pay for the gas cost of the transaction. Note that even if `postRelayedCall` is reverted the Paymaster will be charged."}},"notice":"Contracts implementing this interface exist to make decision about paying the transaction fee to the relay.There are two callbacks here that are executed by the RelayHub: `preRelayedCall` and `postRelayedCall`.It is recommended that your implementation inherits from the abstract BasePaymaster contract.","version":1}}},"@opengsn/contracts/src/interfaces/IRelayHub.sol":{"IRelayHub":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"AbandonedRelayManagerBalanceEscheated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"deprecationTime","type":"uint256"}],"name":"HubDeprecated","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint256","name":"maxWorkerCount","type":"uint256"},{"internalType":"uint256","name":"gasReserve","type":"uint256"},{"internalType":"uint256","name":"postOverhead","type":"uint256"},{"internalType":"uint256","name":"gasOverhead","type":"uint256"},{"internalType":"uint256","name":"minimumUnstakeDelay","type":"uint256"},{"internalType":"address","name":"devAddress","type":"address"},{"internalType":"uint8","name":"devFee","type":"uint8"},{"internalType":"uint80","name":"baseRelayFee","type":"uint80"},{"internalType":"uint16","name":"pctRelayFee","type":"uint16"}],"indexed":false,"internalType":"struct IRelayHub.RelayHubConfig","name":"config","type":"tuple"}],"name":"RelayHubConfigured","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":false,"internalType":"address[]","name":"newRelayWorkers","type":"address[]"},{"indexed":false,"internalType":"uint256","name":"workersCount","type":"uint256"}],"name":"RelayWorkersAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"minimumStake","type":"uint256"}],"name":"StakingTokenDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":true,"internalType":"bytes32","name":"relayRequestID","type":"bytes32"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"address","name":"relayWorker","type":"address"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"},{"indexed":false,"internalType":"uint256","name":"innerGasUsed","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"TransactionRejectedByPaymaster","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"relayWorker","type":"address"},{"indexed":true,"internalType":"bytes32","name":"relayRequestID","type":"bytes32"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"},{"indexed":false,"internalType":"enum IRelayHub.RelayCallStatus","name":"status","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"charge","type":"uint256"}],"name":"TransactionRelayed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum IRelayHub.RelayCallStatus","name":"status","type":"uint8"},{"indexed":false,"internalType":"bytes","name":"returnValue","type":"bytes"}],"name":"TransactionResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"dest","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address[]","name":"newRelayWorkers","type":"address[]"}],"name":"addRelayWorkers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"aggregateGasleft","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"name":"calculateCharge","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"charge","type":"uint256"}],"name":"calculateDevCharge","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"depositFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_deprecationTime","type":"uint256"}],"name":"deprecateHub","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"escheatAbandonedRelayBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getBatchGateway","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"maxWorkerCount","type":"uint256"},{"internalType":"uint256","name":"gasReserve","type":"uint256"},{"internalType":"uint256","name":"postOverhead","type":"uint256"},{"internalType":"uint256","name":"gasOverhead","type":"uint256"},{"internalType":"uint256","name":"minimumUnstakeDelay","type":"uint256"},{"internalType":"address","name":"devAddress","type":"address"},{"internalType":"uint8","name":"devFee","type":"uint8"},{"internalType":"uint80","name":"baseRelayFee","type":"uint80"},{"internalType":"uint16","name":"pctRelayFee","type":"uint16"}],"internalType":"struct IRelayHub.RelayHubConfig","name":"config","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCreationBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeprecationTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getMinimumStakePerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPenalizer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelayRegistrar","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakeManager","outputs":[{"internalType":"contract IStakeManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"getWorkerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"worker","type":"address"}],"name":"getWorkerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isDeprecated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"isRelayEscheatable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"onRelayServerRegistered","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"penalize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"domainSeparatorName","type":"string"},{"internalType":"uint256","name":"maxAcceptanceBudget","type":"uint256"},{"components":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntilTime","type":"uint256"}],"internalType":"struct IForwarder.ForwardRequest","name":"request","type":"tuple"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"internalType":"struct GsnTypes.RelayRequest","name":"relayRequest","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"approvalData","type":"bytes"}],"name":"relayCall","outputs":[{"internalType":"bool","name":"paymasterAccepted","type":"bool"},{"internalType":"uint256","name":"charge","type":"uint256"},{"internalType":"enum IRelayHub.RelayCallStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"returnValue","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"maxWorkerCount","type":"uint256"},{"internalType":"uint256","name":"gasReserve","type":"uint256"},{"internalType":"uint256","name":"postOverhead","type":"uint256"},{"internalType":"uint256","name":"gasOverhead","type":"uint256"},{"internalType":"uint256","name":"minimumUnstakeDelay","type":"uint256"},{"internalType":"address","name":"devAddress","type":"address"},{"internalType":"uint8","name":"devFee","type":"uint8"},{"internalType":"uint80","name":"baseRelayFee","type":"uint80"},{"internalType":"uint16","name":"pctRelayFee","type":"uint16"}],"internalType":"struct IRelayHub.RelayHubConfig","name":"_config","type":"tuple"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"token","type":"address[]"},{"internalType":"uint256[]","name":"minimumStake","type":"uint256[]"}],"name":"setMinimumStakes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"verifyRelayManagerStaked","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"versionHub","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"dest","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable[]","name":"dest","type":"address[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"}],"name":"withdrawMultiple","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"TransactionRejectedByPaymaster(address,address,bytes32,address,address,address,bytes4,uint256,bytes)":{"params":{"reason":"contains a revert reason returned from preRelayedCall or forwarder."}}},"kind":"dev","methods":{"aggregateGasleft()":{"returns":{"_0":"A total measurable amount of gas left to current execution. Same as 'gasleft()' for pure EVMs."}},"balanceOf(address)":{"returns":{"_0":"An account's balance. It can be either a deposit of a `Paymaster`, or a revenue of a Relay Manager."}},"calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"params":{"gasUsed":"An amount of gas used by the transaction.","relayData":"The details of a transaction signed by the sender."},"returns":{"_0":"The calculated charge, in wei."}},"calculateDevCharge(uint256)":{"params":{"charge":"The amount of Ether in wei the Paymaster will be charged for this transaction."},"returns":{"_0":"The calculated devFee, in wei."}},"deprecateHub(uint256)":{"params":{"_deprecationTime":"The timestamp in seconds after which the `RelayHub` stops serving transactions."}},"getBatchGateway()":{"returns":{"_0":"The `BatchGateway` address for this `RelayHub`."}},"getConfiguration()":{"returns":{"config":"The configuration of the `RelayHub`."}},"getCreationBlock()":{"returns":{"_0":"The block number in which the contract has been deployed."}},"getDeprecationTime()":{"returns":{"_0":"The timestamp from which the hub no longer allows relaying calls."}},"getMinimumStakePerToken(address)":{"params":{"token":"An address of an ERC-20 compatible tokens."},"returns":{"_0":"The minimum amount of a given `token` that needs to be staked so that the Relay Manager is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking."}},"getPenalizer()":{"returns":{"_0":"The `Penalizer` address for this `RelayHub`."}},"getRelayRegistrar()":{"returns":{"_0":"The `RelayRegistrar` address for this `RelayHub`."}},"getStakeManager()":{"returns":{"_0":"The `StakeManager` address for this `RelayHub`."}},"getWorkerCount(address)":{"params":{"manager":"An address of the Relay Manager."},"returns":{"_0":"The count of Relay Workers associated with this Relay Manager."}},"getWorkerManager(address)":{"params":{"worker":"An address of the Relay Worker."},"returns":{"_0":"The address of its Relay Manager."}},"isDeprecated()":{"returns":{"_0":"`true` if the `RelayHub` is deprecated, `false` it it is not deprecated and can serve transactions."}},"penalize(address,address)":{"params":{"beneficiary":"The address that called the `Penalizer` and will receive a reward for it.","relayWorker":"The address of the Relay Worker that committed a penalizable offense."}},"relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)":{"params":{"approvalData":"The dapp-specific data forwarded to the `Paymaster`'s `preRelayedCall` method. This value is **not** verified by the `RelayHub` in any way. As an example, it can be used to pass some kind of a third-party signature to the `Paymaster` for verification. Emits a `TransactionRelayed` event regardless of whether the transaction succeeded or failed.","domainSeparatorName":"The name of the Domain Separator used to verify the EIP-712 signature","maxAcceptanceBudget":"The maximum valid value for `paymaster.getGasLimits().acceptanceBudget` to return.","relayRequest":"All details of the requested relayed call.","signature":"The client's EIP-712 signature over the `relayRequest` struct."}},"setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))":{"params":{"_config":"The new configuration."}},"setMinimumStakes(address[],uint256[])":{"params":{"minimumStake":"An array of minimal amounts necessary for a corresponding token, in wei.","token":"An array of addresses of ERC-20 compatible tokens."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"versionHub()":{"returns":{"_0":"a SemVer-compliant version of the `RelayHub` contract."}}},"title":"The RelayHub interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addRelayWorkers(address[])":"c2da0786","aggregateGasleft()":"45bdade7","balanceOf(address)":"70a08231","calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":"8e53548b","calculateDevCharge(uint256)":"8ac3b845","depositFor(address)":"aa67c919","deprecateHub(uint256)":"af595dfc","escheatAbandonedRelayBalance(address)":"d26152f9","getBatchGateway()":"f7908a74","getConfiguration()":"6bd50cef","getCreationBlock()":"20ffd56d","getDeprecationTime()":"3c16e59a","getMinimumStakePerToken(address)":"ddf73789","getPenalizer()":"75dc7b4e","getRelayRegistrar()":"51d85156","getStakeManager()":"ca64f9e7","getWorkerCount(address)":"59c4afc0","getWorkerManager(address)":"be7c76ad","isDeprecated()":"c7178230","isRelayEscheatable(address)":"39622167","onRelayServerRegistered(address)":"4f7de031","penalize(address,address)":"ebcd31ac","relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)":"6ca862e2","setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))":"9bcde3f3","setMinimumStakes(address[],uint256[])":"8a09fb56","supportsInterface(bytes4)":"01ffc9a7","verifyRelayManagerStaked(address)":"e6e22e12","versionHub()":"d904c732","withdraw(address,uint256)":"f3fef3a3","withdrawMultiple(address[],uint256[])":"72c1ab0c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"AbandonedRelayManagerBalanceEscheated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deprecationTime\",\"type\":\"uint256\"}],\"name\":\"HubDeprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"devAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"devFee\",\"type\":\"uint8\"},{\"internalType\":\"uint80\",\"name\":\"baseRelayFee\",\"type\":\"uint80\"},{\"internalType\":\"uint16\",\"name\":\"pctRelayFee\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"RelayHubConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newRelayWorkers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"workersCount\",\"type\":\"uint256\"}],\"name\":\"RelayWorkersAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumStake\",\"type\":\"uint256\"}],\"name\":\"StakingTokenDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"relayRequestID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"innerGasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"TransactionRejectedByPaymaster\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"relayRequestID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"charge\",\"type\":\"uint256\"}],\"name\":\"TransactionRelayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnValue\",\"type\":\"bytes\"}],\"name\":\"TransactionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newRelayWorkers\",\"type\":\"address[]\"}],\"name\":\"addRelayWorkers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregateGasleft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"calculateCharge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"charge\",\"type\":\"uint256\"}],\"name\":\"calculateDevCharge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deprecationTime\",\"type\":\"uint256\"}],\"name\":\"deprecateHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"escheatAbandonedRelayBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBatchGateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"devAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"devFee\",\"type\":\"uint8\"},{\"internalType\":\"uint80\",\"name\":\"baseRelayFee\",\"type\":\"uint80\"},{\"internalType\":\"uint16\",\"name\":\"pctRelayFee\",\"type\":\"uint16\"}],\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeprecationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getMinimumStakePerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPenalizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayRegistrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeManager\",\"outputs\":[{\"internalType\":\"contract IStakeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"getWorkerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"}],\"name\":\"getWorkerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeprecated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"isRelayEscheatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"onRelayServerRegistered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"penalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domainSeparatorName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxAcceptanceBudget\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"}],\"name\":\"relayCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paymasterAccepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"charge\",\"type\":\"uint256\"},{\"internalType\":\"enum IRelayHub.RelayCallStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"returnValue\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxWorkerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasOverhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumUnstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"devAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"devFee\",\"type\":\"uint8\"},{\"internalType\":\"uint80\",\"name\":\"baseRelayFee\",\"type\":\"uint80\"},{\"internalType\":\"uint16\",\"name\":\"pctRelayFee\",\"type\":\"uint16\"}],\"internalType\":\"struct IRelayHub.RelayHubConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"token\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minimumStake\",\"type\":\"uint256[]\"}],\"name\":\"setMinimumStakes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"verifyRelayManagerStaked\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionHub\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"withdrawMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TransactionRejectedByPaymaster(address,address,bytes32,address,address,address,bytes4,uint256,bytes)\":{\"params\":{\"reason\":\"contains a revert reason returned from preRelayedCall or forwarder.\"}}},\"kind\":\"dev\",\"methods\":{\"aggregateGasleft()\":{\"returns\":{\"_0\":\"A total measurable amount of gas left to current execution. Same as 'gasleft()' for pure EVMs.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"An account's balance. It can be either a deposit of a `Paymaster`, or a revenue of a Relay Manager.\"}},\"calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"gasUsed\":\"An amount of gas used by the transaction.\",\"relayData\":\"The details of a transaction signed by the sender.\"},\"returns\":{\"_0\":\"The calculated charge, in wei.\"}},\"calculateDevCharge(uint256)\":{\"params\":{\"charge\":\"The amount of Ether in wei the Paymaster will be charged for this transaction.\"},\"returns\":{\"_0\":\"The calculated devFee, in wei.\"}},\"deprecateHub(uint256)\":{\"params\":{\"_deprecationTime\":\"The timestamp in seconds after which the `RelayHub` stops serving transactions.\"}},\"getBatchGateway()\":{\"returns\":{\"_0\":\"The `BatchGateway` address for this `RelayHub`.\"}},\"getConfiguration()\":{\"returns\":{\"config\":\"The configuration of the `RelayHub`.\"}},\"getCreationBlock()\":{\"returns\":{\"_0\":\"The block number in which the contract has been deployed.\"}},\"getDeprecationTime()\":{\"returns\":{\"_0\":\"The timestamp from which the hub no longer allows relaying calls.\"}},\"getMinimumStakePerToken(address)\":{\"params\":{\"token\":\"An address of an ERC-20 compatible tokens.\"},\"returns\":{\"_0\":\"The minimum amount of a given `token` that needs to be staked so that the Relay Manager is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\"}},\"getPenalizer()\":{\"returns\":{\"_0\":\"The `Penalizer` address for this `RelayHub`.\"}},\"getRelayRegistrar()\":{\"returns\":{\"_0\":\"The `RelayRegistrar` address for this `RelayHub`.\"}},\"getStakeManager()\":{\"returns\":{\"_0\":\"The `StakeManager` address for this `RelayHub`.\"}},\"getWorkerCount(address)\":{\"params\":{\"manager\":\"An address of the Relay Manager.\"},\"returns\":{\"_0\":\"The count of Relay Workers associated with this Relay Manager.\"}},\"getWorkerManager(address)\":{\"params\":{\"worker\":\"An address of the Relay Worker.\"},\"returns\":{\"_0\":\"The address of its Relay Manager.\"}},\"isDeprecated()\":{\"returns\":{\"_0\":\"`true` if the `RelayHub` is deprecated, `false` it it is not deprecated and can serve transactions.\"}},\"penalize(address,address)\":{\"params\":{\"beneficiary\":\"The address that called the `Penalizer` and will receive a reward for it.\",\"relayWorker\":\"The address of the Relay Worker that committed a penalizable offense.\"}},\"relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)\":{\"params\":{\"approvalData\":\"The dapp-specific data forwarded to the `Paymaster`'s `preRelayedCall` method. This value is **not** verified by the `RelayHub` in any way. As an example, it can be used to pass some kind of a third-party signature to the `Paymaster` for verification. Emits a `TransactionRelayed` event regardless of whether the transaction succeeded or failed.\",\"domainSeparatorName\":\"The name of the Domain Separator used to verify the EIP-712 signature\",\"maxAcceptanceBudget\":\"The maximum valid value for `paymaster.getGasLimits().acceptanceBudget` to return.\",\"relayRequest\":\"All details of the requested relayed call.\",\"signature\":\"The client's EIP-712 signature over the `relayRequest` struct.\"}},\"setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))\":{\"params\":{\"_config\":\"The new configuration.\"}},\"setMinimumStakes(address[],uint256[])\":{\"params\":{\"minimumStake\":\"An array of minimal amounts necessary for a corresponding token, in wei.\",\"token\":\"An array of addresses of ERC-20 compatible tokens.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"versionHub()\":{\"returns\":{\"_0\":\"a SemVer-compliant version of the `RelayHub` contract.\"}}},\"title\":\"The RelayHub interface\",\"version\":1},\"userdoc\":{\"events\":{\"AbandonedRelayManagerBalanceEscheated(address,uint256)\":{\"notice\":\"This event is emitted in case a `relayManager` has been deemed \\\"abandoned\\\" for being unresponsive for a prolonged period of time.This event means the entire balance of the relay has been transferred to the `devAddress`.\"},\"Deposited(address,address,uint256)\":{\"notice\":\"Emitted when `depositFor` is called, including the amount and account that was funded.\"},\"HubDeprecated(uint256)\":{\"notice\":\"This event is emitted in case this `RelayHub` is deprecated and will stop serving transactions soon.\"},\"RelayHubConfigured((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))\":{\"notice\":\"Emitted when a configuration of the `RelayHub` is changed\"},\"RelayWorkersAdded(address,address[],uint256)\":{\"notice\":\"Emitted when relays are added by a relayManager\"},\"StakingTokenDataChanged(address,uint256)\":{\"notice\":\"Emitted for each token configured for staking in setMinimumStakes\"},\"TransactionRejectedByPaymaster(address,address,bytes32,address,address,address,bytes4,uint256,bytes)\":{\"notice\":\"Emitted when an attempt to relay a call fails and the `Paymaster` does not accept the transaction. The actual relayed call was not executed, and the recipient not charged.\"},\"TransactionRelayed(address,address,bytes32,address,address,address,bytes4,uint8,uint256)\":{\"notice\":\"Emitted when a transaction is relayed. Note that the actual internal function call might be reverted. The reason for a revert will be indicated in the `status` field of a corresponding `RelayCallStatus` value.`charge` is the Ether value deducted from the `Paymaster` balance. The amount added to the `relayManager` balance will be lower if there is an activated `devFee` in the `config`.\"},\"TransactionResult(uint8,bytes)\":{\"notice\":\"This event is emitted in case the internal function returns a value or reverts with a revert string.\"},\"Withdrawn(address,address,uint256)\":{\"notice\":\"Emitted when an account withdraws funds from the `RelayHub`.\"}},\"kind\":\"user\",\"methods\":{\"addRelayWorkers(address[])\":{\"notice\":\"Add new worker addresses controlled by the sender who must be a staked Relay Manager address. Emits a `RelayWorkersAdded` event. This function can be called multiple times, emitting new events.\"},\"calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"The fee is expressed as a base fee in wei plus percentage of the actual charge. For example, a value '40' stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\"},\"calculateDevCharge(uint256)\":{\"notice\":\"The fee is expressed as a  percentage of the actual charge. For example, a value '40' stands for a 40% fee, so the Relay Manager will only get 60% of the `charge`.\"},\"depositFor(address)\":{\"notice\":\"Deposits ether for a `Paymaster`, so that it can and pay for relayed transactions. :warning: **Warning** :warning: Unused balance can only be withdrawn by the holder itself, by calling `withdraw`. Emits a `Deposited` event.\"},\"deprecateHub(uint256)\":{\"notice\":\"Deprecate hub by reverting all incoming `relayCall()` calls starting from a given timestamp\"},\"escheatAbandonedRelayBalance(address)\":{\"notice\":\"@param relayManager\"},\"isRelayEscheatable(address)\":{\"notice\":\"Uses `StakeManager` to check if the Relay Manager can be considered abandoned or not. Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\"},\"onRelayServerRegistered(address)\":{\"notice\":\"The `RelayRegistrar` callback to notify the `RelayHub` that this `relayManager` has updated registration.\"},\"penalize(address,address)\":{\"notice\":\"In case the Relay Worker has been found to be in violation of some rules by the `Penalizer` contract, the `Penalizer` will call this method to execute a penalization. The `RelayHub` will look up the Relay Manager of the given Relay Worker and will forward the call to the `StakeManager` contract. The `RelayHub` does not perform the actual penalization either.\"},\"relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)\":{\"notice\":\"Relays a transaction. For this to succeed, multiple conditions must be met:  - `Paymaster`'s `preRelayCall` method must succeed and not revert.  - the `msg.sender` must be a registered Relay Worker that the user signed to use.  - the transaction's gas fees must be equal or larger than the ones that were signed by the sender.  - the transaction must have enough gas to run all internal transactions if they use all gas available to them.  - the `Paymaster` must have enough balance to pay the Relay Worker if all gas is spent.If all conditions are met, the call will be relayed and the `Paymaster` charged.\"},\"setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))\":{\"notice\":\"Sets or changes the configuration of this `RelayHub`.\"},\"setMinimumStakes(address[],uint256[])\":{\"notice\":\"Sets or changes the minimum amount of a given `token` that needs to be staked so that the Relay Manager is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\"},\"verifyRelayManagerStaked(address)\":{\"notice\":\"Uses `StakeManager` to decide if the Relay Manager can be considered staked or not. Returns if the stake's token, amount and delay satisfy all requirements, reverts otherwise.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws from an account's balance, sending it back to the caller. Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding. Emits a `Withdrawn` event.\"},\"withdrawMultiple(address[],uint256[])\":{\"notice\":\"Withdraws from an account's balance, sending funds to multiple provided addresses. Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding. Emits a `Withdrawn` event for each destination.\"}},\"notice\":\"The implementation of this interface provides all the information the GSN client needs to create a valid `RelayRequest` and also serves as an entry point for such requests.The RelayHub also handles all the related financial records and hold the balances of participants. The Paymasters keep their Ether deposited in the `RelayHub` in order to pay for the `RelayRequest`s that thay choose to pay for, and Relay Servers keep their earned Ether in the `RelayHub` until they choose to `withdraw()`The RelayHub on each supported network only needs a single instance and there is usually no need for dApp developers or Relay Server operators to redeploy, reimplement, modify or override the `RelayHub`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":\"IRelayHub\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"./IStakeManager.sol\\\";\\n\\n/**\\n * @title The RelayHub interface\\n * @notice The implementation of this interface provides all the information the GSN client needs to\\n * create a valid `RelayRequest` and also serves as an entry point for such requests.\\n *\\n * @notice The RelayHub also handles all the related financial records and hold the balances of participants.\\n * The Paymasters keep their Ether deposited in the `RelayHub` in order to pay for the `RelayRequest`s that thay choose\\n * to pay for, and Relay Servers keep their earned Ether in the `RelayHub` until they choose to `withdraw()`\\n *\\n * @notice The RelayHub on each supported network only needs a single instance and there is usually no need for dApp\\n * developers or Relay Server operators to redeploy, reimplement, modify or override the `RelayHub`.\\n */\\ninterface IRelayHub is IERC165 {\\n    /**\\n     * @notice A struct that contains all the parameters of the `RelayHub` that can be modified after the deployment.\\n     */\\n    struct RelayHubConfig {\\n        // maximum number of worker accounts allowed per manager\\n        uint256 maxWorkerCount;\\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\\n        uint256 gasReserve;\\n        // Gas overhead to calculate gasUseWithoutPost\\n        uint256 postOverhead;\\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\\n        uint256 gasOverhead;\\n        // Minimum unstake delay seconds of a relay manager's stake on the StakeManager\\n        uint256 minimumUnstakeDelay;\\n        // Developers address\\n        address devAddress;\\n        // 0 < fee < 100, as percentage of total charge from paymaster to relayer\\n        uint8 devFee;\\n        // baseRelayFee The base fee the Relay Server charges for a single transaction in Ether, in wei.\\n        uint80 baseRelayFee;\\n        // pctRelayFee The percent of the total charge to add as a Relay Server fee to the total charge.\\n        uint16 pctRelayFee;\\n    }\\n\\n    /// @notice Emitted when a configuration of the `RelayHub` is changed\\n    event RelayHubConfigured(RelayHubConfig config);\\n\\n    /// @notice Emitted when relays are added by a relayManager\\n    event RelayWorkersAdded(\\n        address indexed relayManager,\\n        address[] newRelayWorkers,\\n        uint256 workersCount\\n    );\\n\\n    /// @notice Emitted when an account withdraws funds from the `RelayHub`.\\n    event Withdrawn(\\n        address indexed account,\\n        address indexed dest,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted when `depositFor` is called, including the amount and account that was funded.\\n    event Deposited(\\n        address indexed paymaster,\\n        address indexed from,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted for each token configured for staking in setMinimumStakes\\n    event StakingTokenDataChanged(\\n        address token,\\n        uint256 minimumStake\\n    );\\n\\n    /**\\n     * @notice Emitted when an attempt to relay a call fails and the `Paymaster` does not accept the transaction.\\n     * The actual relayed call was not executed, and the recipient not charged.\\n     * @param reason contains a revert reason returned from preRelayedCall or forwarder.\\n     */\\n    event TransactionRejectedByPaymaster(\\n        address indexed relayManager,\\n        address indexed paymaster,\\n        bytes32 indexed relayRequestID,\\n        address from,\\n        address to,\\n        address relayWorker,\\n        bytes4 selector,\\n        uint256 innerGasUsed,\\n        bytes reason\\n    );\\n\\n    /**\\n     * @notice Emitted when a transaction is relayed. Note that the actual internal function call might be reverted.\\n     * The reason for a revert will be indicated in the `status` field of a corresponding `RelayCallStatus` value.\\n     * @notice `charge` is the Ether value deducted from the `Paymaster` balance.\\n     * The amount added to the `relayManager` balance will be lower if there is an activated `devFee` in the `config`.\\n     */\\n    event TransactionRelayed(\\n        address indexed relayManager,\\n        address indexed relayWorker,\\n        bytes32 indexed relayRequestID,\\n        address from,\\n        address to,\\n        address paymaster,\\n        bytes4 selector,\\n        RelayCallStatus status,\\n        uint256 charge\\n    );\\n\\n    /// @notice This event is emitted in case the internal function returns a value or reverts with a revert string.\\n    event TransactionResult(\\n        RelayCallStatus status,\\n        bytes returnValue\\n    );\\n\\n    /// @notice This event is emitted in case this `RelayHub` is deprecated and will stop serving transactions soon.\\n    event HubDeprecated(uint256 deprecationTime);\\n\\n    /**\\n     * @notice This event is emitted in case a `relayManager` has been deemed \\\"abandoned\\\" for being\\n     * unresponsive for a prolonged period of time.\\n     * @notice This event means the entire balance of the relay has been transferred to the `devAddress`.\\n     */\\n    event AbandonedRelayManagerBalanceEscheated(\\n        address indexed relayManager,\\n        uint256 balance\\n    );\\n\\n    /**\\n     * Error codes that describe all possible failure reasons reported in the `TransactionRelayed` event `status` field.\\n     *  @param OK The transaction was successfully relayed and execution successful - never included in the event.\\n     *  @param RelayedCallFailed The transaction was relayed, but the relayed call failed.\\n     *  @param RejectedByPreRelayed The transaction was not relayed due to preRelatedCall reverting.\\n     *  @param RejectedByForwarder The transaction was not relayed due to forwarder check (signature,nonce).\\n     *  @param PostRelayedFailed The transaction was relayed and reverted due to postRelatedCall reverting.\\n     *  @param PaymasterBalanceChanged The transaction was relayed and reverted due to the paymaster balance change.\\n     */\\n    enum RelayCallStatus {\\n        OK,\\n        RelayedCallFailed,\\n        RejectedByPreRelayed,\\n        RejectedByForwarder,\\n        RejectedByRecipientRevert,\\n        PostRelayedFailed,\\n        PaymasterBalanceChanged\\n    }\\n\\n    /**\\n     * @notice Add new worker addresses controlled by the sender who must be a staked Relay Manager address.\\n     * Emits a `RelayWorkersAdded` event.\\n     * This function can be called multiple times, emitting new events.\\n     */\\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\\n\\n    /**\\n     * @notice The `RelayRegistrar` callback to notify the `RelayHub` that this `relayManager` has updated registration.\\n     */\\n    function onRelayServerRegistered(address relayManager) external;\\n\\n    // Balance management\\n\\n    /**\\n     * @notice Deposits ether for a `Paymaster`, so that it can and pay for relayed transactions.\\n     * :warning: **Warning** :warning: Unused balance can only be withdrawn by the holder itself, by calling `withdraw`.\\n     * Emits a `Deposited` event.\\n     */\\n    function depositFor(address target) external payable;\\n\\n    /**\\n     * @notice Withdraws from an account's balance, sending it back to the caller.\\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\\n     * Emits a `Withdrawn` event.\\n     */\\n    function withdraw(address payable dest, uint256 amount) external;\\n\\n    /**\\n     * @notice Withdraws from an account's balance, sending funds to multiple provided addresses.\\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\\n     * Emits a `Withdrawn` event for each destination.\\n     */\\n    function withdrawMultiple(address payable[] memory dest, uint256[] memory amount) external;\\n\\n    // Relaying\\n\\n\\n    /**\\n     * @notice Relays a transaction. For this to succeed, multiple conditions must be met:\\n     *  - `Paymaster`'s `preRelayCall` method must succeed and not revert.\\n     *  - the `msg.sender` must be a registered Relay Worker that the user signed to use.\\n     *  - the transaction's gas fees must be equal or larger than the ones that were signed by the sender.\\n     *  - the transaction must have enough gas to run all internal transactions if they use all gas available to them.\\n     *  - the `Paymaster` must have enough balance to pay the Relay Worker if all gas is spent.\\n     *\\n     * @notice If all conditions are met, the call will be relayed and the `Paymaster` charged.\\n     *\\n     * @param domainSeparatorName The name of the Domain Separator used to verify the EIP-712 signature\\n     * @param maxAcceptanceBudget The maximum valid value for `paymaster.getGasLimits().acceptanceBudget` to return.\\n     * @param relayRequest All details of the requested relayed call.\\n     * @param signature The client's EIP-712 signature over the `relayRequest` struct.\\n     * @param approvalData The dapp-specific data forwarded to the `Paymaster`'s `preRelayedCall` method.\\n     * This value is **not** verified by the `RelayHub` in any way.\\n     * As an example, it can be used to pass some kind of a third-party signature to the `Paymaster` for verification.\\n     *\\n     * Emits a `TransactionRelayed` event regardless of whether the transaction succeeded or failed.\\n     */\\n    function relayCall(\\n        string calldata domainSeparatorName,\\n        uint256 maxAcceptanceBudget,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData\\n    )\\n    external\\n    returns (\\n        bool paymasterAccepted,\\n        uint256 charge,\\n        IRelayHub.RelayCallStatus status,\\n        bytes memory returnValue\\n    );\\n\\n    /**\\n     * @notice In case the Relay Worker has been found to be in violation of some rules by the `Penalizer` contract,\\n     * the `Penalizer` will call this method to execute a penalization.\\n     * The `RelayHub` will look up the Relay Manager of the given Relay Worker and will forward the call to\\n     * the `StakeManager` contract. The `RelayHub` does not perform the actual penalization either.\\n     * @param relayWorker The address of the Relay Worker that committed a penalizable offense.\\n     * @param beneficiary The address that called the `Penalizer` and will receive a reward for it.\\n     */\\n    function penalize(address relayWorker, address payable beneficiary) external;\\n\\n    /**\\n     * @notice Sets or changes the configuration of this `RelayHub`.\\n     * @param _config The new configuration.\\n     */\\n    function setConfiguration(RelayHubConfig memory _config) external;\\n\\n    /**\\n     * @notice Sets or changes the minimum amount of a given `token` that needs to be staked so that the Relay Manager\\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\\n     * @param token An array of addresses of ERC-20 compatible tokens.\\n     * @param minimumStake An array of minimal amounts necessary for a corresponding token, in wei.\\n     */\\n    function setMinimumStakes(IERC20[] memory token, uint256[] memory minimumStake) external;\\n\\n    /**\\n     * @notice Deprecate hub by reverting all incoming `relayCall()` calls starting from a given timestamp\\n     * @param _deprecationTime The timestamp in seconds after which the `RelayHub` stops serving transactions.\\n     */\\n    function deprecateHub(uint256 _deprecationTime) external;\\n\\n    /**\\n     * @notice\\n     * @param relayManager\\n     */\\n    function escheatAbandonedRelayBalance(address relayManager) external;\\n\\n    /**\\n     * @notice The fee is expressed as a base fee in wei plus percentage of the actual charge.\\n     * For example, a value '40' stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\\n     * @param gasUsed An amount of gas used by the transaction.\\n     * @param relayData The details of a transaction signed by the sender.\\n     * @return The calculated charge, in wei.\\n     */\\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\\n\\n    /**\\n     * @notice The fee is expressed as a  percentage of the actual charge.\\n     * For example, a value '40' stands for a 40% fee, so the Relay Manager will only get 60% of the `charge`.\\n     * @param charge The amount of Ether in wei the Paymaster will be charged for this transaction.\\n     * @return The calculated devFee, in wei.\\n     */\\n    function calculateDevCharge(uint256 charge) external view returns (uint256);\\n    /* getters */\\n\\n    /// @return config The configuration of the `RelayHub`.\\n    function getConfiguration() external view returns (RelayHubConfig memory config);\\n\\n    /**\\n     * @param token An address of an ERC-20 compatible tokens.\\n     * @return The minimum amount of a given `token` that needs to be staked so that the Relay Manager\\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\\n     */\\n    function getMinimumStakePerToken(IERC20 token) external view returns (uint256);\\n\\n    /**\\n     * @param worker An address of the Relay Worker.\\n     * @return The address of its Relay Manager.\\n     */\\n    function getWorkerManager(address worker) external view returns (address);\\n\\n    /**\\n     * @param manager An address of the Relay Manager.\\n     * @return The count of Relay Workers associated with this Relay Manager.\\n     */\\n    function getWorkerCount(address manager) external view returns (uint256);\\n\\n    /// @return An account's balance. It can be either a deposit of a `Paymaster`, or a revenue of a Relay Manager.\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    /// @return The `StakeManager` address for this `RelayHub`.\\n    function getStakeManager() external view returns (IStakeManager);\\n\\n    /// @return The `Penalizer` address for this `RelayHub`.\\n    function getPenalizer() external view returns (address);\\n\\n    /// @return The `RelayRegistrar` address for this `RelayHub`.\\n    function getRelayRegistrar() external view returns (address);\\n\\n    /// @return The `BatchGateway` address for this `RelayHub`.\\n    function getBatchGateway() external view returns (address);\\n\\n    /**\\n     * @notice Uses `StakeManager` to decide if the Relay Manager can be considered staked or not.\\n     * Returns if the stake's token, amount and delay satisfy all requirements, reverts otherwise.\\n     */\\n    function verifyRelayManagerStaked(address relayManager) external view;\\n\\n    /**\\n     * @notice Uses `StakeManager` to check if the Relay Manager can be considered abandoned or not.\\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\\n     */\\n    function isRelayEscheatable(address relayManager) external view returns (bool);\\n\\n    /// @return `true` if the `RelayHub` is deprecated, `false` it it is not deprecated and can serve transactions.\\n    function isDeprecated() external view returns (bool);\\n\\n    /// @return The timestamp from which the hub no longer allows relaying calls.\\n    function getDeprecationTime() external view returns (uint256);\\n\\n    /// @return The block number in which the contract has been deployed.\\n    function getCreationBlock() external view returns (uint256);\\n\\n    /// @return a SemVer-compliant version of the `RelayHub` contract.\\n    function versionHub() external view returns (string memory);\\n\\n    /// @return A total measurable amount of gas left to current execution. Same as 'gasleft()' for pure EVMs.\\n    function aggregateGasleft() external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x0ab29ca5985c98f530e5985e3d9dd14f00d34527410ce980b51b26e57bb0121c\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @title The StakeManager Interface\\n * @notice In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires\\n * the Relay Server to maintain a permanently locked stake in the system before being able to register.\\n *\\n * @notice Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract.\\n * In such case, the stake will never be returned to the Relay Server operator and will be slashed.\\n *\\n * @notice An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token.\\n * Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed.\\n */\\ninterface IStakeManager is IERC165 {\\n\\n    /// @notice Emitted when a `stake` or `unstakeDelay` are initialized or increased.\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// @notice Emitted once a stake is scheduled for withdrawal.\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawTime\\n    );\\n\\n    /// @notice Emitted when owner withdraws `relayManager` funds.\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted when an authorized `RelayHub` penalizes a `relayManager`.\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        IERC20 token,\\n        uint256 reward\\n    );\\n\\n    /// @notice Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized.\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    /// @notice Emitted when a `relayManager` removes a `RelayHub` from a list of authorized.\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalTime\\n    );\\n\\n    /// @notice Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking.\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @notice Emitted when a `burnAddress` is changed.\\n    event BurnAddressSet(\\n        address indexed burnAddress\\n    );\\n\\n    /// @notice Emitted when a `devAddress` is changed.\\n    event DevAddressSet(\\n        address indexed devAddress\\n    );\\n\\n    /// @notice Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal.\\n    event RelayServerAbandoned(\\n        address indexed relayManager,\\n        uint256 abandonedTime\\n    );\\n\\n    /// @notice Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned.\\n    event RelayServerKeepalive(\\n        address indexed relayManager,\\n        uint256 keepaliveTime\\n    );\\n\\n    /// @notice Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`.\\n    event AbandonedRelayManagerStakeEscheated(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @param stake - amount of ether staked for this relay\\n     * @param unstakeDelay - number of seconds to elapse before the owner can retrieve the stake after calling 'unlock'\\n     * @param withdrawTime - timestamp in seconds when 'withdraw' will be callable, or zero if the unlock has not been called\\n     * @param owner - address that receives revenue and manages relayManager's stake\\n     */\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawTime;\\n        uint256 abandonedTime;\\n        uint256 keepaliveTime;\\n        IERC20 token;\\n        address owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalTime;\\n    }\\n\\n    /**\\n     * @param devAddress - the address that will receive the 'abandoned' stake\\n     * @param abandonmentDelay - the amount of time after which the relay can be marked as 'abandoned'\\n     * @param escheatmentDelay - the amount of time after which the abandoned relay's stake and balance may be withdrawn to the `devAddress`\\n     */\\n    struct AbandonedRelayServerConfig {\\n        address devAddress;\\n        uint256 abandonmentDelay;\\n        uint256 escheatmentDelay;\\n    }\\n\\n    /**\\n     * @notice Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n     * Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n     * @param owner - owner of the relay (as configured off-chain)\\n     */\\n    function setRelayManagerOwner(address owner) external;\\n\\n    /**\\n     * @notice Put a stake for a relayManager and set its unstake delay.\\n     * Only the owner can call this function. If the entry does not exist, reverts.\\n     * The owner must give allowance of the ERC-20 token to the StakeManager before calling this method.\\n     * It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.\\n     * @param token The address of an ERC-20 token that is used by the relayManager as a stake\\n     * @param relayManager The address that represents a stake entry and controls relay registrations on relay hubs\\n     * @param unstakeDelay The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`\\n     * @param amount The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake\\n     */\\n    function stakeForRelayManager(IERC20 token, address relayManager, uint256 unstakeDelay, uint256 amount) external;\\n\\n    /**\\n     * @notice Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.\\n     * @param relayManager The address of a Relay Manager whose stake is to be unlocked.\\n     */\\n    function unlockStake(address relayManager) external;\\n    /**\\n     * @notice Withdraw the unlocked stake.\\n     * @param relayManager The address of a Relay Manager whose stake is to be withdrawn.\\n     */\\n    function withdrawStake(address relayManager) external;\\n\\n    /**\\n     * @notice Add the `RelayHub` to a list of authorized by this Relay Manager.\\n     * This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.\\n     * @param relayManager The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.\\n     * @param relayHub The address of a `RelayHub` to be authorized.\\n     */\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `authorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * @notice Remove the `RelayHub` from a list of authorized by this Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @param relayHub The address of a `RelayHub` to be unauthorized.\\n     */\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.\\n     * @param relayManager The address of a Relay Manager to be penalized.\\n     * @param beneficiary The address that receives part of the penalty amount.\\n     * @param amount A total amount of penalty to be withdrawn from stake.\\n     */\\n    function penalizeRelayManager(address relayManager, address beneficiary, uint256 amount) external;\\n\\n    /**\\n     * @notice Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay.\\n     * Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned.\\n     */\\n    function markRelayAbandoned(address relayManager) external;\\n\\n    /**\\n     * @notice If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager\\n     * has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and\\n     * balance will be taken from this relay.\\n     */\\n    function escheatAbandonedRelayStake(address relayManager) external;\\n\\n    /**\\n     * @notice Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned.\\n     * Can be called by an authorized `RelayHub` or by the `relayOwner` address.\\n     */\\n    function updateRelayKeepaliveTime(address relayManager) external;\\n\\n    /**\\n     * @notice Check if the Relay Manager can be considered abandoned or not.\\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\\n     */\\n    function isRelayEscheatable(address relayManager) external view returns(bool);\\n\\n    /**\\n     * @notice Get the stake details information for the given Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @return stakeInfo The `StakeInfo` structure.\\n     * @return isSenderAuthorizedHub `true` if the `msg.sender` for this call was a `RelayHub` that is authorized now.\\n     * `false` if the `msg.sender` for this call is not authorized.\\n     */\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo, bool isSenderAuthorizedHub);\\n\\n    /**\\n     * @return The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake.\\n     */\\n    function getMaxUnstakeDelay() external view returns (uint256);\\n\\n    /**\\n     * @notice Change the address that will receive the 'burned' part of the penalized stake.\\n     * This is done to prevent malicious Relay Server from penalizing itself and breaking even.\\n     */\\n    function setBurnAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The address that will receive the 'burned' part of the penalized stake.\\n     */\\n    function getBurnAddress() external view returns (address);\\n\\n    /**\\n     * @notice Change the address that will receive the 'abandoned' stake.\\n     * This is done to prevent Relay Servers that lost their keys from losing access to funds.\\n     */\\n    function setDevAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The structure that contains all configuration values for the 'abandoned' stake.\\n     */\\n    function getAbandonedRelayServerConfig() external view returns (AbandonedRelayServerConfig memory);\\n\\n    /**\\n     * @return the block number in which the contract has been deployed.\\n     */\\n    function getCreationBlock() external view returns (uint256);\\n\\n    /**\\n     * @return a SemVer-compliant version of the `StakeManager` contract.\\n     */\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x77035b55ca4c09cb499bc0cab3f9e791d77597b148dbfee8bf94ca6c0039c3e0\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 maxFeePerGas;\\n        uint256 maxPriorityFeePerGas;\\n        uint256 transactionCalldataGasUsed;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x9fb51c540f32939f1ee291e3fa709be64f7c73485bd7b87c6624c3567dd42a1b\",\"license\":\"GPL-3.0-only\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"AbandonedRelayManagerBalanceEscheated(address,uint256)":{"notice":"This event is emitted in case a `relayManager` has been deemed \"abandoned\" for being unresponsive for a prolonged period of time.This event means the entire balance of the relay has been transferred to the `devAddress`."},"Deposited(address,address,uint256)":{"notice":"Emitted when `depositFor` is called, including the amount and account that was funded."},"HubDeprecated(uint256)":{"notice":"This event is emitted in case this `RelayHub` is deprecated and will stop serving transactions soon."},"RelayHubConfigured((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))":{"notice":"Emitted when a configuration of the `RelayHub` is changed"},"RelayWorkersAdded(address,address[],uint256)":{"notice":"Emitted when relays are added by a relayManager"},"StakingTokenDataChanged(address,uint256)":{"notice":"Emitted for each token configured for staking in setMinimumStakes"},"TransactionRejectedByPaymaster(address,address,bytes32,address,address,address,bytes4,uint256,bytes)":{"notice":"Emitted when an attempt to relay a call fails and the `Paymaster` does not accept the transaction. The actual relayed call was not executed, and the recipient not charged."},"TransactionRelayed(address,address,bytes32,address,address,address,bytes4,uint8,uint256)":{"notice":"Emitted when a transaction is relayed. Note that the actual internal function call might be reverted. The reason for a revert will be indicated in the `status` field of a corresponding `RelayCallStatus` value.`charge` is the Ether value deducted from the `Paymaster` balance. The amount added to the `relayManager` balance will be lower if there is an activated `devFee` in the `config`."},"TransactionResult(uint8,bytes)":{"notice":"This event is emitted in case the internal function returns a value or reverts with a revert string."},"Withdrawn(address,address,uint256)":{"notice":"Emitted when an account withdraws funds from the `RelayHub`."}},"kind":"user","methods":{"addRelayWorkers(address[])":{"notice":"Add new worker addresses controlled by the sender who must be a staked Relay Manager address. Emits a `RelayWorkersAdded` event. This function can be called multiple times, emitting new events."},"calculateCharge(uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"notice":"The fee is expressed as a base fee in wei plus percentage of the actual charge. For example, a value '40' stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount."},"calculateDevCharge(uint256)":{"notice":"The fee is expressed as a  percentage of the actual charge. For example, a value '40' stands for a 40% fee, so the Relay Manager will only get 60% of the `charge`."},"depositFor(address)":{"notice":"Deposits ether for a `Paymaster`, so that it can and pay for relayed transactions. :warning: **Warning** :warning: Unused balance can only be withdrawn by the holder itself, by calling `withdraw`. Emits a `Deposited` event."},"deprecateHub(uint256)":{"notice":"Deprecate hub by reverting all incoming `relayCall()` calls starting from a given timestamp"},"escheatAbandonedRelayBalance(address)":{"notice":"@param relayManager"},"isRelayEscheatable(address)":{"notice":"Uses `StakeManager` to check if the Relay Manager can be considered abandoned or not. Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise."},"onRelayServerRegistered(address)":{"notice":"The `RelayRegistrar` callback to notify the `RelayHub` that this `relayManager` has updated registration."},"penalize(address,address)":{"notice":"In case the Relay Worker has been found to be in violation of some rules by the `Penalizer` contract, the `Penalizer` will call this method to execute a penalization. The `RelayHub` will look up the Relay Manager of the given Relay Worker and will forward the call to the `StakeManager` contract. The `RelayHub` does not perform the actual penalization either."},"relayCall(string,uint256,((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes)":{"notice":"Relays a transaction. For this to succeed, multiple conditions must be met:  - `Paymaster`'s `preRelayCall` method must succeed and not revert.  - the `msg.sender` must be a registered Relay Worker that the user signed to use.  - the transaction's gas fees must be equal or larger than the ones that were signed by the sender.  - the transaction must have enough gas to run all internal transactions if they use all gas available to them.  - the `Paymaster` must have enough balance to pay the Relay Worker if all gas is spent.If all conditions are met, the call will be relayed and the `Paymaster` charged."},"setConfiguration((uint256,uint256,uint256,uint256,uint256,address,uint8,uint80,uint16))":{"notice":"Sets or changes the configuration of this `RelayHub`."},"setMinimumStakes(address[],uint256[])":{"notice":"Sets or changes the minimum amount of a given `token` that needs to be staked so that the Relay Manager is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking."},"verifyRelayManagerStaked(address)":{"notice":"Uses `StakeManager` to decide if the Relay Manager can be considered staked or not. Returns if the stake's token, amount and delay satisfy all requirements, reverts otherwise."},"withdraw(address,uint256)":{"notice":"Withdraws from an account's balance, sending it back to the caller. Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding. Emits a `Withdrawn` event."},"withdrawMultiple(address[],uint256[])":{"notice":"Withdraws from an account's balance, sending funds to multiple provided addresses. Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding. Emits a `Withdrawn` event for each destination."}},"notice":"The implementation of this interface provides all the information the GSN client needs to create a valid `RelayRequest` and also serves as an entry point for such requests.The RelayHub also handles all the related financial records and hold the balances of participants. The Paymasters keep their Ether deposited in the `RelayHub` in order to pay for the `RelayRequest`s that thay choose to pay for, and Relay Servers keep their earned Ether in the `RelayHub` until they choose to `withdraw()`The RelayHub on each supported network only needs a single instance and there is usually no need for dApp developers or Relay Server operators to redeploy, reimplement, modify or override the `RelayHub`.","version":1}}},"@opengsn/contracts/src/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"AbandonedRelayManagerStakeEscheated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"burnAddress","type":"address"}],"name":"BurnAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"devAddress","type":"address"}],"name":"DevAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"relayHub","type":"address"}],"name":"HubAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"relayHub","type":"address"},{"indexed":false,"internalType":"uint256","name":"removalTime","type":"uint256"}],"name":"HubUnauthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"OwnerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":false,"internalType":"uint256","name":"abandonedTime","type":"uint256"}],"name":"RelayServerAbandoned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":false,"internalType":"uint256","name":"keepaliveTime","type":"uint256"}],"name":"RelayServerKeepalive","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"stake","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelay","type":"uint256"}],"name":"StakeAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"StakePenalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayManager","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"relayHub","type":"address"}],"name":"authorizeHubByManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"},{"internalType":"address","name":"relayHub","type":"address"}],"name":"authorizeHubByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"escheatAbandonedRelayStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAbandonedRelayServerConfig","outputs":[{"components":[{"internalType":"address","name":"devAddress","type":"address"},{"internalType":"uint256","name":"abandonmentDelay","type":"uint256"},{"internalType":"uint256","name":"escheatmentDelay","type":"uint256"}],"internalType":"struct IStakeManager.AbandonedRelayServerConfig","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBurnAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCreationBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaxUnstakeDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"getStakeInfo","outputs":[{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelay","type":"uint256"},{"internalType":"uint256","name":"withdrawTime","type":"uint256"},{"internalType":"uint256","name":"abandonedTime","type":"uint256"},{"internalType":"uint256","name":"keepaliveTime","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"},{"internalType":"bool","name":"isSenderAuthorizedHub","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"isRelayEscheatable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"markRelayAbandoned","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"},{"internalType":"address","name":"beneficiary","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"penalizeRelayManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_burnAddress","type":"address"}],"name":"setBurnAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_burnAddress","type":"address"}],"name":"setDevAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"setRelayManagerOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"relayManager","type":"address"},{"internalType":"uint256","name":"unstakeDelay","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stakeForRelayManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayHub","type":"address"}],"name":"unauthorizeHubByManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"},{"internalType":"address","name":"relayHub","type":"address"}],"name":"unauthorizeHubByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"updateRelayKeepaliveTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"versionSM","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayManager","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"authorizeHubByOwner(address,address)":{"params":{"relayHub":"The address of a `RelayHub` to be authorized.","relayManager":"The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`."}},"getAbandonedRelayServerConfig()":{"returns":{"_0":"The structure that contains all configuration values for the 'abandoned' stake."}},"getBurnAddress()":{"returns":{"_0":"The address that will receive the 'burned' part of the penalized stake."}},"getCreationBlock()":{"returns":{"_0":"the block number in which the contract has been deployed."}},"getMaxUnstakeDelay()":{"returns":{"_0":"The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake."}},"getStakeInfo(address)":{"params":{"relayManager":"The address of a Relay Manager."},"returns":{"isSenderAuthorizedHub":"`true` if the `msg.sender` for this call was a `RelayHub` that is authorized now. `false` if the `msg.sender` for this call is not authorized.","stakeInfo":"The `StakeInfo` structure."}},"penalizeRelayManager(address,address,uint256)":{"params":{"amount":"A total amount of penalty to be withdrawn from stake.","beneficiary":"The address that receives part of the penalty amount.","relayManager":"The address of a Relay Manager to be penalized."}},"setRelayManagerOwner(address)":{"params":{"owner":"- owner of the relay (as configured off-chain)"}},"stakeForRelayManager(address,address,uint256,uint256)":{"params":{"amount":"The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake","relayManager":"The address that represents a stake entry and controls relay registrations on relay hubs","token":"The address of an ERC-20 token that is used by the relayManager as a stake","unstakeDelay":"The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"unauthorizeHubByOwner(address,address)":{"params":{"relayHub":"The address of a `RelayHub` to be unauthorized.","relayManager":"The address of a Relay Manager."}},"unlockStake(address)":{"params":{"relayManager":"The address of a Relay Manager whose stake is to be unlocked."}},"versionSM()":{"returns":{"_0":"a SemVer-compliant version of the `StakeManager` contract."}},"withdrawStake(address)":{"params":{"relayManager":"The address of a Relay Manager whose stake is to be withdrawn."}}},"title":"The StakeManager Interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"authorizeHubByManager(address)":"d48a9d43","authorizeHubByOwner(address,address)":"7835d296","escheatAbandonedRelayStake(address)":"a9aadcd7","getAbandonedRelayServerConfig()":"c5f06743","getBurnAddress()":"38b39d29","getCreationBlock()":"20ffd56d","getMaxUnstakeDelay()":"afcb7752","getStakeInfo(address)":"c3453153","isRelayEscheatable(address)":"39622167","markRelayAbandoned(address)":"71fa1faf","penalizeRelayManager(address,address,uint256)":"09a08af4","setBurnAddress(address)":"4b0e7216","setDevAddress(address)":"d0d41fe1","setRelayManagerOwner(address)":"fece3dd4","stakeForRelayManager(address,address,uint256,uint256)":"14080fac","supportsInterface(bytes4)":"01ffc9a7","unauthorizeHubByManager(address)":"f9bce311","unauthorizeHubByOwner(address,address)":"f48f8ac7","unlockStake(address)":"4a1ce599","updateRelayKeepaliveTime(address)":"46dcbf0b","versionSM()":"47116c6e","withdrawStake(address)":"c23a5cea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AbandonedRelayManagerStakeEscheated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burnAddress\",\"type\":\"address\"}],\"name\":\"BurnAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"devAddress\",\"type\":\"address\"}],\"name\":\"DevAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"HubAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removalTime\",\"type\":\"uint256\"}],\"name\":\"HubUnauthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"abandonedTime\",\"type\":\"uint256\"}],\"name\":\"RelayServerAbandoned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"keepaliveTime\",\"type\":\"uint256\"}],\"name\":\"RelayServerKeepalive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelay\",\"type\":\"uint256\"}],\"name\":\"StakeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"StakePenalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"authorizeHubByManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"authorizeHubByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"escheatAbandonedRelayStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAbandonedRelayServerConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"devAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"abandonmentDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escheatmentDelay\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.AbandonedRelayServerConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxUnstakeDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abandonedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"keepaliveTime\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isSenderAuthorizedHub\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"isRelayEscheatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"markRelayAbandoned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"penalizeRelayManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setRelayManagerOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeForRelayManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"unauthorizeHubByManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayHub\",\"type\":\"address\"}],\"name\":\"unauthorizeHubByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"updateRelayKeepaliveTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionSM\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayManager\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeHubByOwner(address,address)\":{\"params\":{\"relayHub\":\"The address of a `RelayHub` to be authorized.\",\"relayManager\":\"The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.\"}},\"getAbandonedRelayServerConfig()\":{\"returns\":{\"_0\":\"The structure that contains all configuration values for the 'abandoned' stake.\"}},\"getBurnAddress()\":{\"returns\":{\"_0\":\"The address that will receive the 'burned' part of the penalized stake.\"}},\"getCreationBlock()\":{\"returns\":{\"_0\":\"the block number in which the contract has been deployed.\"}},\"getMaxUnstakeDelay()\":{\"returns\":{\"_0\":\"The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake.\"}},\"getStakeInfo(address)\":{\"params\":{\"relayManager\":\"The address of a Relay Manager.\"},\"returns\":{\"isSenderAuthorizedHub\":\"`true` if the `msg.sender` for this call was a `RelayHub` that is authorized now. `false` if the `msg.sender` for this call is not authorized.\",\"stakeInfo\":\"The `StakeInfo` structure.\"}},\"penalizeRelayManager(address,address,uint256)\":{\"params\":{\"amount\":\"A total amount of penalty to be withdrawn from stake.\",\"beneficiary\":\"The address that receives part of the penalty amount.\",\"relayManager\":\"The address of a Relay Manager to be penalized.\"}},\"setRelayManagerOwner(address)\":{\"params\":{\"owner\":\"- owner of the relay (as configured off-chain)\"}},\"stakeForRelayManager(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake\",\"relayManager\":\"The address that represents a stake entry and controls relay registrations on relay hubs\",\"token\":\"The address of an ERC-20 token that is used by the relayManager as a stake\",\"unstakeDelay\":\"The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"unauthorizeHubByOwner(address,address)\":{\"params\":{\"relayHub\":\"The address of a `RelayHub` to be unauthorized.\",\"relayManager\":\"The address of a Relay Manager.\"}},\"unlockStake(address)\":{\"params\":{\"relayManager\":\"The address of a Relay Manager whose stake is to be unlocked.\"}},\"versionSM()\":{\"returns\":{\"_0\":\"a SemVer-compliant version of the `StakeManager` contract.\"}},\"withdrawStake(address)\":{\"params\":{\"relayManager\":\"The address of a Relay Manager whose stake is to be withdrawn.\"}}},\"title\":\"The StakeManager Interface\",\"version\":1},\"userdoc\":{\"events\":{\"AbandonedRelayManagerStakeEscheated(address,address,address,uint256)\":{\"notice\":\"Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`.\"},\"BurnAddressSet(address)\":{\"notice\":\"Emitted when a `burnAddress` is changed.\"},\"DevAddressSet(address)\":{\"notice\":\"Emitted when a `devAddress` is changed.\"},\"HubAuthorized(address,address)\":{\"notice\":\"Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized.\"},\"HubUnauthorized(address,address,uint256)\":{\"notice\":\"Emitted when a `relayManager` removes a `RelayHub` from a list of authorized.\"},\"OwnerSet(address,address)\":{\"notice\":\"Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking.\"},\"RelayServerAbandoned(address,uint256)\":{\"notice\":\"Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal.\"},\"RelayServerKeepalive(address,uint256)\":{\"notice\":\"Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned.\"},\"StakeAdded(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when a `stake` or `unstakeDelay` are initialized or increased.\"},\"StakePenalized(address,address,address,uint256)\":{\"notice\":\"Emitted when an authorized `RelayHub` penalizes a `relayManager`.\"},\"StakeUnlocked(address,address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal.\"},\"StakeWithdrawn(address,address,address,uint256)\":{\"notice\":\"Emitted when owner withdraws `relayManager` funds.\"}},\"kind\":\"user\",\"methods\":{\"authorizeHubByManager(address)\":{\"notice\":\"Same as `authorizeHubByOwner` but can be called by the RelayManager itself.\"},\"authorizeHubByOwner(address,address)\":{\"notice\":\"Add the `RelayHub` to a list of authorized by this Relay Manager. This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.\"},\"escheatAbandonedRelayStake(address)\":{\"notice\":\"If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and balance will be taken from this relay.\"},\"getStakeInfo(address)\":{\"notice\":\"Get the stake details information for the given Relay Manager.\"},\"isRelayEscheatable(address)\":{\"notice\":\"Check if the Relay Manager can be considered abandoned or not. Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\"},\"markRelayAbandoned(address)\":{\"notice\":\"Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay. Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned.\"},\"penalizeRelayManager(address,address,uint256)\":{\"notice\":\"Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.\"},\"setBurnAddress(address)\":{\"notice\":\"Change the address that will receive the 'burned' part of the penalized stake. This is done to prevent malicious Relay Server from penalizing itself and breaking even.\"},\"setDevAddress(address)\":{\"notice\":\"Change the address that will receive the 'abandoned' stake. This is done to prevent Relay Servers that lost their keys from losing access to funds.\"},\"setRelayManagerOwner(address)\":{\"notice\":\"Set the owner of a Relay Manager. Called only by the RelayManager itself. Note that owners cannot transfer ownership - if the entry already exists, reverts.\"},\"stakeForRelayManager(address,address,uint256,uint256)\":{\"notice\":\"Put a stake for a relayManager and set its unstake delay. Only the owner can call this function. If the entry does not exist, reverts. The owner must give allowance of the ERC-20 token to the StakeManager before calling this method. It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.\"},\"unauthorizeHubByManager(address)\":{\"notice\":\"Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself.\"},\"unauthorizeHubByOwner(address,address)\":{\"notice\":\"Remove the `RelayHub` from a list of authorized by this Relay Manager.\"},\"unlockStake(address)\":{\"notice\":\"Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.\"},\"updateRelayKeepaliveTime(address)\":{\"notice\":\"Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned. Can be called by an authorized `RelayHub` or by the `relayOwner` address.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the unlocked stake.\"}},\"notice\":\"In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires the Relay Server to maintain a permanently locked stake in the system before being able to register.Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract. In such case, the stake will never be returned to the Relay Server operator and will be slashed.An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token. Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @title The StakeManager Interface\\n * @notice In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires\\n * the Relay Server to maintain a permanently locked stake in the system before being able to register.\\n *\\n * @notice Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract.\\n * In such case, the stake will never be returned to the Relay Server operator and will be slashed.\\n *\\n * @notice An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token.\\n * Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed.\\n */\\ninterface IStakeManager is IERC165 {\\n\\n    /// @notice Emitted when a `stake` or `unstakeDelay` are initialized or increased.\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// @notice Emitted once a stake is scheduled for withdrawal.\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawTime\\n    );\\n\\n    /// @notice Emitted when owner withdraws `relayManager` funds.\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted when an authorized `RelayHub` penalizes a `relayManager`.\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        IERC20 token,\\n        uint256 reward\\n    );\\n\\n    /// @notice Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized.\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    /// @notice Emitted when a `relayManager` removes a `RelayHub` from a list of authorized.\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalTime\\n    );\\n\\n    /// @notice Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking.\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @notice Emitted when a `burnAddress` is changed.\\n    event BurnAddressSet(\\n        address indexed burnAddress\\n    );\\n\\n    /// @notice Emitted when a `devAddress` is changed.\\n    event DevAddressSet(\\n        address indexed devAddress\\n    );\\n\\n    /// @notice Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal.\\n    event RelayServerAbandoned(\\n        address indexed relayManager,\\n        uint256 abandonedTime\\n    );\\n\\n    /// @notice Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned.\\n    event RelayServerKeepalive(\\n        address indexed relayManager,\\n        uint256 keepaliveTime\\n    );\\n\\n    /// @notice Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`.\\n    event AbandonedRelayManagerStakeEscheated(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @param stake - amount of ether staked for this relay\\n     * @param unstakeDelay - number of seconds to elapse before the owner can retrieve the stake after calling 'unlock'\\n     * @param withdrawTime - timestamp in seconds when 'withdraw' will be callable, or zero if the unlock has not been called\\n     * @param owner - address that receives revenue and manages relayManager's stake\\n     */\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawTime;\\n        uint256 abandonedTime;\\n        uint256 keepaliveTime;\\n        IERC20 token;\\n        address owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalTime;\\n    }\\n\\n    /**\\n     * @param devAddress - the address that will receive the 'abandoned' stake\\n     * @param abandonmentDelay - the amount of time after which the relay can be marked as 'abandoned'\\n     * @param escheatmentDelay - the amount of time after which the abandoned relay's stake and balance may be withdrawn to the `devAddress`\\n     */\\n    struct AbandonedRelayServerConfig {\\n        address devAddress;\\n        uint256 abandonmentDelay;\\n        uint256 escheatmentDelay;\\n    }\\n\\n    /**\\n     * @notice Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n     * Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n     * @param owner - owner of the relay (as configured off-chain)\\n     */\\n    function setRelayManagerOwner(address owner) external;\\n\\n    /**\\n     * @notice Put a stake for a relayManager and set its unstake delay.\\n     * Only the owner can call this function. If the entry does not exist, reverts.\\n     * The owner must give allowance of the ERC-20 token to the StakeManager before calling this method.\\n     * It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.\\n     * @param token The address of an ERC-20 token that is used by the relayManager as a stake\\n     * @param relayManager The address that represents a stake entry and controls relay registrations on relay hubs\\n     * @param unstakeDelay The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`\\n     * @param amount The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake\\n     */\\n    function stakeForRelayManager(IERC20 token, address relayManager, uint256 unstakeDelay, uint256 amount) external;\\n\\n    /**\\n     * @notice Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.\\n     * @param relayManager The address of a Relay Manager whose stake is to be unlocked.\\n     */\\n    function unlockStake(address relayManager) external;\\n    /**\\n     * @notice Withdraw the unlocked stake.\\n     * @param relayManager The address of a Relay Manager whose stake is to be withdrawn.\\n     */\\n    function withdrawStake(address relayManager) external;\\n\\n    /**\\n     * @notice Add the `RelayHub` to a list of authorized by this Relay Manager.\\n     * This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.\\n     * @param relayManager The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.\\n     * @param relayHub The address of a `RelayHub` to be authorized.\\n     */\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `authorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * @notice Remove the `RelayHub` from a list of authorized by this Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @param relayHub The address of a `RelayHub` to be unauthorized.\\n     */\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.\\n     * @param relayManager The address of a Relay Manager to be penalized.\\n     * @param beneficiary The address that receives part of the penalty amount.\\n     * @param amount A total amount of penalty to be withdrawn from stake.\\n     */\\n    function penalizeRelayManager(address relayManager, address beneficiary, uint256 amount) external;\\n\\n    /**\\n     * @notice Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay.\\n     * Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned.\\n     */\\n    function markRelayAbandoned(address relayManager) external;\\n\\n    /**\\n     * @notice If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager\\n     * has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and\\n     * balance will be taken from this relay.\\n     */\\n    function escheatAbandonedRelayStake(address relayManager) external;\\n\\n    /**\\n     * @notice Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned.\\n     * Can be called by an authorized `RelayHub` or by the `relayOwner` address.\\n     */\\n    function updateRelayKeepaliveTime(address relayManager) external;\\n\\n    /**\\n     * @notice Check if the Relay Manager can be considered abandoned or not.\\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\\n     */\\n    function isRelayEscheatable(address relayManager) external view returns(bool);\\n\\n    /**\\n     * @notice Get the stake details information for the given Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @return stakeInfo The `StakeInfo` structure.\\n     * @return isSenderAuthorizedHub `true` if the `msg.sender` for this call was a `RelayHub` that is authorized now.\\n     * `false` if the `msg.sender` for this call is not authorized.\\n     */\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo, bool isSenderAuthorizedHub);\\n\\n    /**\\n     * @return The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake.\\n     */\\n    function getMaxUnstakeDelay() external view returns (uint256);\\n\\n    /**\\n     * @notice Change the address that will receive the 'burned' part of the penalized stake.\\n     * This is done to prevent malicious Relay Server from penalizing itself and breaking even.\\n     */\\n    function setBurnAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The address that will receive the 'burned' part of the penalized stake.\\n     */\\n    function getBurnAddress() external view returns (address);\\n\\n    /**\\n     * @notice Change the address that will receive the 'abandoned' stake.\\n     * This is done to prevent Relay Servers that lost their keys from losing access to funds.\\n     */\\n    function setDevAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The structure that contains all configuration values for the 'abandoned' stake.\\n     */\\n    function getAbandonedRelayServerConfig() external view returns (AbandonedRelayServerConfig memory);\\n\\n    /**\\n     * @return the block number in which the contract has been deployed.\\n     */\\n    function getCreationBlock() external view returns (uint256);\\n\\n    /**\\n     * @return a SemVer-compliant version of the `StakeManager` contract.\\n     */\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x77035b55ca4c09cb499bc0cab3f9e791d77597b148dbfee8bf94ca6c0039c3e0\",\"license\":\"GPL-3.0-only\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"AbandonedRelayManagerStakeEscheated(address,address,address,uint256)":{"notice":"Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`."},"BurnAddressSet(address)":{"notice":"Emitted when a `burnAddress` is changed."},"DevAddressSet(address)":{"notice":"Emitted when a `devAddress` is changed."},"HubAuthorized(address,address)":{"notice":"Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized."},"HubUnauthorized(address,address,uint256)":{"notice":"Emitted when a `relayManager` removes a `RelayHub` from a list of authorized."},"OwnerSet(address,address)":{"notice":"Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking."},"RelayServerAbandoned(address,uint256)":{"notice":"Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal."},"RelayServerKeepalive(address,uint256)":{"notice":"Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned."},"StakeAdded(address,address,address,uint256,uint256)":{"notice":"Emitted when a `stake` or `unstakeDelay` are initialized or increased."},"StakePenalized(address,address,address,uint256)":{"notice":"Emitted when an authorized `RelayHub` penalizes a `relayManager`."},"StakeUnlocked(address,address,uint256)":{"notice":"Emitted once a stake is scheduled for withdrawal."},"StakeWithdrawn(address,address,address,uint256)":{"notice":"Emitted when owner withdraws `relayManager` funds."}},"kind":"user","methods":{"authorizeHubByManager(address)":{"notice":"Same as `authorizeHubByOwner` but can be called by the RelayManager itself."},"authorizeHubByOwner(address,address)":{"notice":"Add the `RelayHub` to a list of authorized by this Relay Manager. This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize."},"escheatAbandonedRelayStake(address)":{"notice":"If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and balance will be taken from this relay."},"getStakeInfo(address)":{"notice":"Get the stake details information for the given Relay Manager."},"isRelayEscheatable(address)":{"notice":"Check if the Relay Manager can be considered abandoned or not. Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise."},"markRelayAbandoned(address)":{"notice":"Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay. Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned."},"penalizeRelayManager(address,address,uint256)":{"notice":"Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way."},"setBurnAddress(address)":{"notice":"Change the address that will receive the 'burned' part of the penalized stake. This is done to prevent malicious Relay Server from penalizing itself and breaking even."},"setDevAddress(address)":{"notice":"Change the address that will receive the 'abandoned' stake. This is done to prevent Relay Servers that lost their keys from losing access to funds."},"setRelayManagerOwner(address)":{"notice":"Set the owner of a Relay Manager. Called only by the RelayManager itself. Note that owners cannot transfer ownership - if the entry already exists, reverts."},"stakeForRelayManager(address,address,uint256,uint256)":{"notice":"Put a stake for a relayManager and set its unstake delay. Only the owner can call this function. If the entry does not exist, reverts. The owner must give allowance of the ERC-20 token to the StakeManager before calling this method. It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens."},"unauthorizeHubByManager(address)":{"notice":"Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself."},"unauthorizeHubByOwner(address,address)":{"notice":"Remove the `RelayHub` from a list of authorized by this Relay Manager."},"unlockStake(address)":{"notice":"Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`."},"updateRelayKeepaliveTime(address)":{"notice":"Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned. Can be called by an authorized `RelayHub` or by the `relayOwner` address."},"withdrawStake(address)":{"notice":"Withdraw the unlocked stake."}},"notice":"In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires the Relay Server to maintain a permanently locked stake in the system before being able to register.Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract. In such case, the stake will never be returned to the Relay Server operator and will be slashed.An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token. Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed.","version":1}}},"@opengsn/contracts/src/utils/GsnEip712Library.sol":{"GsnEip712Library":{"abi":[{"inputs":[],"name":"EIP712DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GENERIC_PARAMS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAYDATA_TYPE","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAYDATA_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAY_REQUEST_NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAY_REQUEST_SUFFIX","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAY_REQUEST_TYPE","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAY_REQUEST_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ERC-712 Library for GSN","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61059d61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c8063abf0d3f411610065578063abf0d3f4146100f0578063c46cf83f14610106578063c49f91d31461010e578063cc0c62b21461013557600080fd5b8063066a310c146100975780636225e61b146100b5578063931cd38f146100bd578063987673f7146100c5575b600080fd5b61009f61013d565b6040516100ac9190610354565b60405180910390f35b61009f610159565b61009f6101f1565b61009f6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b81525081565b6100f861021a565b6040519081526020016100ac565b61009f6102b9565b6100f87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6100f86102d5565b6040518060a001604052806061815260200161044b6061913981565b6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b8152506040518060a001604052806061815260200161044b606191396040518060e0016040528060bc81526020016104ac60bc91396040516020016101c0919061036e565b60408051601f19818403018152908290526101df9392916020016103b3565b60405160208183030381529060405281565b6040518060e0016040528060bc81526020016104ac60bc91396040516020016101df919061036e565b6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b8152506040518060a001604052806061815260200161044b606191396040518060e0016040528060bc81526020016104ac60bc9139604051602001610281919061036e565b60408051601f19818403018152908290526102a09392916020016103b3565b6040516020818303038152906040528051906020012081565b6040518060e0016040528060bc81526020016104ac60bc913981565b6040518060e0016040528060bc81526020016104ac60bc91398051906020012081565b60005b838110156103135781810151838201526020016102fb565b83811115610322576000848401525b50505050565b600081518084526103408160208601602086016102f8565b601f01601f19169290920160200192915050565b6020815260006103676020830184610328565b9392505050565b7f52656c6179446174612072656c617944617461290000000000000000000000008152600082516103a68160148501602087016102f8565b9190910160140192915050565b600084516103c58184602089016102f8565b7f280000000000000000000000000000000000000000000000000000000000000090830190815284516103ff8160018401602089016102f8565b7f2c0000000000000000000000000000000000000000000000000000000000000060019290910191820152835161043d8160028401602088016102f8565b016002019594505050505056fe616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c627974657320646174612c75696e743235362076616c6964556e74696c54696d6552656c6179446174612875696e74323536206d61784665655065724761732c75696e74323536206d61785072696f726974794665655065724761732c75696e74323536207472616e73616374696f6e43616c6c64617461476173557365642c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429a2646970667358221220bb363ae01e9443017a78ee57964fc311b4193d9db4eaae20edf316d936b55baf64736f6c63430008080033","opcodes":"PUSH2 0x59D PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABF0D3F4 GT PUSH2 0x65 JUMPI DUP1 PUSH4 0xABF0D3F4 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC46CF83F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xC49F91D3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xCC0C62B2 EQ PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x66A310C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x6225E61B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x931CD38F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x987673F7 EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x159 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x9F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x14995B185E54995C5D595CDD PUSH1 0xA2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0x9F PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0xF8 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x61 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44B PUSH1 0x61 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x14995B185E54995C5D595CDD PUSH1 0xA2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x61 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44B PUSH1 0x61 SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1DF SWAP4 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x14995B185E54995C5D595CDD PUSH1 0xA2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x61 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44B PUSH1 0x61 SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2A0 SWAP4 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x313 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2FB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x340 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x367 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x328 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x52656C6179446174612072656C61794461746129000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3A6 DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x3C5 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH32 0x2800000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD PUSH2 0x3FF DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x43D DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F8 JUMP JUMPDEST ADD PUSH1 0x2 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH2 0x6464 PUSH19 0x6573732066726F6D2C6164647265737320746F 0x2C PUSH22 0x696E743235362076616C75652C75696E743235362067 PUSH2 0x732C PUSH22 0x696E74323536206E6F6E63652C627974657320646174 PUSH2 0x2C75 PUSH10 0x6E743235362076616C69 PUSH5 0x556E74696C SLOAD PUSH10 0x6D6552656C6179446174 PUSH2 0x2875 PUSH10 0x6E74323536206D617846 PUSH6 0x655065724761 PUSH20 0x2C75696E74323536206D61785072696F72697479 CHAINID PUSH6 0x655065724761 PUSH20 0x2C75696E74323536207472616E73616374696F6E NUMBER PUSH2 0x6C6C PUSH5 0x6174614761 PUSH20 0x557365642C616464726573732072656C6179576F PUSH19 0x6B65722C61646472657373207061796D617374 PUSH6 0x722C61646472 PUSH6 0x737320666F72 PUSH24 0x61726465722C6279746573207061796D6173746572446174 PUSH2 0x2C75 PUSH10 0x6E7432353620636C6965 PUSH15 0x74496429A2646970667358221220BB CALLDATASIZE GASPRICE 0xE0 0x1E SWAP5 NUMBER ADD PUSH27 0x78EE57964FC311B4193D9DB4EAAE20EDF316D936B55BAF64736F6C PUSH4 0x43000808 STOP CALLER ","sourceMap":"380:5744:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;380:5744:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@EIP712DOMAIN_TYPEHASH_1458":{"entryPoint":null,"id":1458,"parameterSlots":0,"returnSlots":0},"@GENERIC_PARAMS_1408":{"entryPoint":317,"id":1408,"parameterSlots":0,"returnSlots":0},"@RELAYDATA_TYPEHASH_1439":{"entryPoint":725,"id":1439,"parameterSlots":0,"returnSlots":0},"@RELAYDATA_TYPE_1411":{"entryPoint":697,"id":1411,"parameterSlots":0,"returnSlots":0},"@RELAY_REQUEST_NAME_1414":{"entryPoint":null,"id":1414,"parameterSlots":0,"returnSlots":0},"@RELAY_REQUEST_SUFFIX_1424":{"entryPoint":497,"id":1424,"parameterSlots":0,"returnSlots":0},"@RELAY_REQUEST_TYPEHASH_1444":{"entryPoint":538,"id":1444,"parameterSlots":0,"returnSlots":0},"@RELAY_REQUEST_TYPE_1434":{"entryPoint":345,"id":1434,"parameterSlots":0,"returnSlots":0},"abi_encode_string":{"entryPoint":808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":947,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_t_bytes_memory_ptr__to_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed":{"entryPoint":852,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":760,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2578:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"67:205:27","statements":[{"nodeType":"YulVariableDeclaration","src":"77:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"86:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"81:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"146:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"171:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"176:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"167:3:27"},"nodeType":"YulFunctionCall","src":"167:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"190:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"195:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"186:3:27"},"nodeType":"YulFunctionCall","src":"186:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"180:5:27"},"nodeType":"YulFunctionCall","src":"180:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:27"},"nodeType":"YulFunctionCall","src":"160:39:27"},"nodeType":"YulExpressionStatement","src":"160:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"107:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"110:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"104:2:27"},"nodeType":"YulFunctionCall","src":"104:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"118:19:27","statements":[{"nodeType":"YulAssignment","src":"120:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"129:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"132:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"125:3:27"},"nodeType":"YulFunctionCall","src":"125:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"120:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"100:3:27","statements":[]},"src":"96:113:27"},{"body":{"nodeType":"YulBlock","src":"235:31:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"248:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"253:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"244:3:27"},"nodeType":"YulFunctionCall","src":"244:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"237:6:27"},"nodeType":"YulFunctionCall","src":"237:27:27"},"nodeType":"YulExpressionStatement","src":"237:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"224:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"227:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"221:2:27"},"nodeType":"YulFunctionCall","src":"221:13:27"},"nodeType":"YulIf","src":"218:48:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"45:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"50:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"55:6:27","type":""}],"src":"14:258:27"},{"body":{"nodeType":"YulBlock","src":"327:208:27","statements":[{"nodeType":"YulVariableDeclaration","src":"337:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"357:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"351:5:27"},"nodeType":"YulFunctionCall","src":"351:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"341:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"379:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"384:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"372:6:27"},"nodeType":"YulFunctionCall","src":"372:19:27"},"nodeType":"YulExpressionStatement","src":"372:19:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"426:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"433:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"422:3:27"},"nodeType":"YulFunctionCall","src":"422:16:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"444:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"449:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"440:3:27"},"nodeType":"YulFunctionCall","src":"440:14:27"},{"name":"length","nodeType":"YulIdentifier","src":"456:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"400:21:27"},"nodeType":"YulFunctionCall","src":"400:63:27"},"nodeType":"YulExpressionStatement","src":"400:63:27"},{"nodeType":"YulAssignment","src":"472:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"487:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"500:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"508:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"496:3:27"},"nodeType":"YulFunctionCall","src":"496:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"517:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"513:3:27"},"nodeType":"YulFunctionCall","src":"513:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"492:3:27"},"nodeType":"YulFunctionCall","src":"492:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"483:3:27"},"nodeType":"YulFunctionCall","src":"483:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"524:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"479:3:27"},"nodeType":"YulFunctionCall","src":"479:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"472:3:27"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"304:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"311:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"319:3:27","type":""}],"src":"277:258:27"},{"body":{"nodeType":"YulBlock","src":"669:99:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"686:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"697:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"679:6:27"},"nodeType":"YulFunctionCall","src":"679:21:27"},"nodeType":"YulExpressionStatement","src":"679:21:27"},{"nodeType":"YulAssignment","src":"709:53:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"735:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"747:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"758:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"743:3:27"},"nodeType":"YulFunctionCall","src":"743:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"717:17:27"},"nodeType":"YulFunctionCall","src":"717:45:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"709:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"638:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"649:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"660:4:27","type":""}],"src":"540:228:27"},{"body":{"nodeType":"YulBlock","src":"900:99:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"917:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"928:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"910:6:27"},"nodeType":"YulFunctionCall","src":"910:21:27"},"nodeType":"YulExpressionStatement","src":"910:21:27"},{"nodeType":"YulAssignment","src":"940:53:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"966:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:27"},"nodeType":"YulFunctionCall","src":"974:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"948:17:27"},"nodeType":"YulFunctionCall","src":"948:45:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"940:4:27"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"869:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"880:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"891:4:27","type":""}],"src":"773:226:27"},{"body":{"nodeType":"YulBlock","src":"1113:76:27","statements":[{"nodeType":"YulAssignment","src":"1123:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1135:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1146:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1131:3:27"},"nodeType":"YulFunctionCall","src":"1131:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1123:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1165:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1158:6:27"},"nodeType":"YulFunctionCall","src":"1158:25:27"},"nodeType":"YulExpressionStatement","src":"1158:25:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1082:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1093:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1104:4:27","type":""}],"src":"1004:185:27"},{"body":{"nodeType":"YulBlock","src":"1432:199:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1449:3:27"},{"hexValue":"52656c6179446174612072656c61794461746129","kind":"string","nodeType":"YulLiteral","src":"1454:22:27","type":"","value":"RelayData relayData)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1442:6:27"},"nodeType":"YulFunctionCall","src":"1442:35:27"},"nodeType":"YulExpressionStatement","src":"1442:35:27"},{"nodeType":"YulVariableDeclaration","src":"1486:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1506:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1500:5:27"},"nodeType":"YulFunctionCall","src":"1500:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1490:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1548:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1556:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1544:3:27"},"nodeType":"YulFunctionCall","src":"1544:17:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1567:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1572:2:27","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1563:3:27"},"nodeType":"YulFunctionCall","src":"1563:12:27"},{"name":"length","nodeType":"YulIdentifier","src":"1577:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1522:21:27"},"nodeType":"YulFunctionCall","src":"1522:62:27"},"nodeType":"YulExpressionStatement","src":"1522:62:27"},{"nodeType":"YulAssignment","src":"1593:32:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1608:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1613:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1604:3:27"},"nodeType":"YulFunctionCall","src":"1604:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1622:2:27","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1600:3:27"},"nodeType":"YulFunctionCall","src":"1600:25:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1593:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_t_bytes_memory_ptr__to_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1408:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1413:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1424:3:27","type":""}],"src":"1194:437:27"},{"body":{"nodeType":"YulBlock","src":"2073:503:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2083:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2103:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2097:5:27"},"nodeType":"YulFunctionCall","src":"2097:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2087:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2145:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2153:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2141:3:27"},"nodeType":"YulFunctionCall","src":"2141:17:27"},{"name":"pos","nodeType":"YulIdentifier","src":"2160:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2165:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2119:21:27"},"nodeType":"YulFunctionCall","src":"2119:53:27"},"nodeType":"YulExpressionStatement","src":"2119:53:27"},{"nodeType":"YulVariableDeclaration","src":"2181:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2198:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2203:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2194:3:27"},"nodeType":"YulFunctionCall","src":"2194:16:27"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"2185:5:27","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"2226:5:27"},{"hexValue":"28","kind":"string","nodeType":"YulLiteral","src":"2233:3:27","type":"","value":"("}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2219:6:27"},"nodeType":"YulFunctionCall","src":"2219:18:27"},"nodeType":"YulExpressionStatement","src":"2219:18:27"},{"nodeType":"YulVariableDeclaration","src":"2246:29:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2268:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2262:5:27"},"nodeType":"YulFunctionCall","src":"2262:13:27"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"2250:8:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2310:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2318:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2306:3:27"},"nodeType":"YulFunctionCall","src":"2306:17:27"},{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"2329:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2336:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2325:3:27"},"nodeType":"YulFunctionCall","src":"2325:13:27"},{"name":"length_1","nodeType":"YulIdentifier","src":"2340:8:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2284:21:27"},"nodeType":"YulFunctionCall","src":"2284:65:27"},"nodeType":"YulExpressionStatement","src":"2284:65:27"},{"nodeType":"YulVariableDeclaration","src":"2358:30:27","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"2372:5:27"},{"name":"length_1","nodeType":"YulIdentifier","src":"2379:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2368:3:27"},"nodeType":"YulFunctionCall","src":"2368:20:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2362:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2408:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"2412:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2404:3:27"},"nodeType":"YulFunctionCall","src":"2404:10:27"},{"hexValue":"2c","kind":"string","nodeType":"YulLiteral","src":"2416:3:27","type":"","value":","}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2397:6:27"},"nodeType":"YulFunctionCall","src":"2397:23:27"},"nodeType":"YulExpressionStatement","src":"2397:23:27"},{"nodeType":"YulVariableDeclaration","src":"2429:29:27","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2451:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2445:5:27"},"nodeType":"YulFunctionCall","src":"2445:13:27"},"variables":[{"name":"length_2","nodeType":"YulTypedName","src":"2433:8:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2493:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2501:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2489:3:27"},"nodeType":"YulFunctionCall","src":"2489:17:27"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2512:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"2516:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2508:3:27"},"nodeType":"YulFunctionCall","src":"2508:10:27"},{"name":"length_2","nodeType":"YulIdentifier","src":"2520:8:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2467:21:27"},"nodeType":"YulFunctionCall","src":"2467:62:27"},"nodeType":"YulExpressionStatement","src":"2467:62:27"},{"nodeType":"YulAssignment","src":"2538:32:27","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2553:2:27"},{"name":"length_2","nodeType":"YulIdentifier","src":"2557:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:27"},"nodeType":"YulFunctionCall","src":"2549:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"2568:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2545:3:27"},"nodeType":"YulFunctionCall","src":"2545:25:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2538:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2033:3:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2038:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2046:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2054:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2065:3:27","type":""}],"src":"1636:940:27"}]},"contents":"{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_3fadbea26dd302bcc6197cc8afc00cbc86899723a86835ca1f1216f26949bb7f_t_bytes_memory_ptr__to_t_string_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"RelayData relayData)\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 20), length)\n        end := add(add(pos, length), 20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_484bf06f3118ce360605f902ef526c45207bc469c2b056352f14b8408f9f6f9a_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \"(\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(end_1, 1), length_1)\n        let _1 := add(end_1, length_1)\n        mstore(add(_1, 1), \",\")\n        let length_2 := mload(value2)\n        copy_memory_to_memory(add(value2, 0x20), add(_1, 2), length_2)\n        end := add(add(_1, length_2), 2)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c8063abf0d3f411610065578063abf0d3f4146100f0578063c46cf83f14610106578063c49f91d31461010e578063cc0c62b21461013557600080fd5b8063066a310c146100975780636225e61b146100b5578063931cd38f146100bd578063987673f7146100c5575b600080fd5b61009f61013d565b6040516100ac9190610354565b60405180910390f35b61009f610159565b61009f6101f1565b61009f6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b81525081565b6100f861021a565b6040519081526020016100ac565b61009f6102b9565b6100f87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6100f86102d5565b6040518060a001604052806061815260200161044b6061913981565b6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b8152506040518060a001604052806061815260200161044b606191396040518060e0016040528060bc81526020016104ac60bc91396040516020016101c0919061036e565b60408051601f19818403018152908290526101df9392916020016103b3565b60405160208183030381529060405281565b6040518060e0016040528060bc81526020016104ac60bc91396040516020016101df919061036e565b6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b8152506040518060a001604052806061815260200161044b606191396040518060e0016040528060bc81526020016104ac60bc9139604051602001610281919061036e565b60408051601f19818403018152908290526102a09392916020016103b3565b6040516020818303038152906040528051906020012081565b6040518060e0016040528060bc81526020016104ac60bc913981565b6040518060e0016040528060bc81526020016104ac60bc91398051906020012081565b60005b838110156103135781810151838201526020016102fb565b83811115610322576000848401525b50505050565b600081518084526103408160208601602086016102f8565b601f01601f19169290920160200192915050565b6020815260006103676020830184610328565b9392505050565b7f52656c6179446174612072656c617944617461290000000000000000000000008152600082516103a68160148501602087016102f8565b9190910160140192915050565b600084516103c58184602089016102f8565b7f280000000000000000000000000000000000000000000000000000000000000090830190815284516103ff8160018401602089016102f8565b7f2c0000000000000000000000000000000000000000000000000000000000000060019290910191820152835161043d8160028401602088016102f8565b016002019594505050505056fe616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c627974657320646174612c75696e743235362076616c6964556e74696c54696d6552656c6179446174612875696e74323536206d61784665655065724761732c75696e74323536206d61785072696f726974794665655065724761732c75696e74323536207472616e73616374696f6e43616c6c64617461476173557365642c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429a2646970667358221220bb363ae01e9443017a78ee57964fc311b4193d9db4eaae20edf316d936b55baf64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABF0D3F4 GT PUSH2 0x65 JUMPI DUP1 PUSH4 0xABF0D3F4 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xC46CF83F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xC49F91D3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xCC0C62B2 EQ PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x66A310C EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x6225E61B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x931CD38F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x987673F7 EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x159 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x9F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x14995B185E54995C5D595CDD PUSH1 0xA2 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0x9F PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0xF8 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 JUMP JUMPDEST PUSH2 0xF8 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x61 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44B PUSH1 0x61 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x14995B185E54995C5D595CDD PUSH1 0xA2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x61 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44B PUSH1 0x61 SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x1DF SWAP4 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x14995B185E54995C5D595CDD PUSH1 0xA2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x61 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x44B PUSH1 0x61 SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x2A0 SWAP4 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xBC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4AC PUSH1 0xBC SWAP2 CODECOPY DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x313 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2FB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x340 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x367 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x328 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x52656C6179446174612072656C61794461746129000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3A6 DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F8 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x3C5 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH32 0x2800000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD PUSH2 0x3FF DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x2F8 JUMP JUMPDEST PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x43D DUP2 PUSH1 0x2 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F8 JUMP JUMPDEST ADD PUSH1 0x2 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID PUSH2 0x6464 PUSH19 0x6573732066726F6D2C6164647265737320746F 0x2C PUSH22 0x696E743235362076616C75652C75696E743235362067 PUSH2 0x732C PUSH22 0x696E74323536206E6F6E63652C627974657320646174 PUSH2 0x2C75 PUSH10 0x6E743235362076616C69 PUSH5 0x556E74696C SLOAD PUSH10 0x6D6552656C6179446174 PUSH2 0x2875 PUSH10 0x6E74323536206D617846 PUSH6 0x655065724761 PUSH20 0x2C75696E74323536206D61785072696F72697479 CHAINID PUSH6 0x655065724761 PUSH20 0x2C75696E74323536207472616E73616374696F6E NUMBER PUSH2 0x6C6C PUSH5 0x6174614761 PUSH20 0x557365642C616464726573732072656C6179576F PUSH19 0x6B65722C61646472657373207061796D617374 PUSH6 0x722C61646472 PUSH6 0x737320666F72 PUSH24 0x61726465722C6279746573207061796D6173746572446174 PUSH2 0x2C75 PUSH10 0x6E7432353620636C6965 PUSH15 0x74496429A2646970667358221220BB CALLDATASIZE GASPRICE 0xE0 0x1E SWAP5 NUMBER ADD PUSH27 0x78EE57964FC311B4193D9DB4EAAE20EDF316D936B55BAF64736F6C PUSH4 0x43000808 STOP CALLER ","sourceMap":"380:5744:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:139;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1225:133;;;:::i;1108:110::-;;;:::i;1044:58::-;;;;;;;;;;;;;;;-1:-1:-1;;;1044:58:8;;;;;1441:78;;;:::i;:::-;;;1158:25:27;;;1146:2;1131:18;1441:78:8;1004:185:27;808:229:8;;;:::i;1665:157::-;;1713:109;1665:157;;1365:70;;;:::i;662:139::-;;;;;;;;;;;;;;;;;;;:::o;1225:133::-;1294:18;;;;;;;;;;;;;-1:-1:-1;;;1294:18:8;;;1317:14;;;;;;;;;;;;;;;;;1202;;;;;;;;;;;;;;;;;1161:56;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1161:56:8;;;;;;;;;;1268:90;;;;1161:56;1268:90;;:::i;:::-;;;;;;;;;;;;;1225:133;:::o;1108:110::-;1202:14;;;;;;;;;;;;;;;;;1161:56;;;;;;;;:::i;1441:78::-;1294:18;;;;;;;;;;;;;-1:-1:-1;;;1294:18:8;;;1317:14;;;;;;;;;;;;;;;;;1202;;;;;;;;;;;;;;;;;1161:56;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1161:56:8;;;;;;;;;;1268:90;;;;1161:56;1268:90;;:::i;:::-;;;;;;;;;;;;;1490:29;;;;;;1441:78;:::o;808:229::-;;;;;;;;;;;;;;;;;;;:::o;1365:70::-;1420:14;;;;;;;;;;;;;;;;;1410:25;;;;;;1365:70;:::o;14:258:27:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;262:1;253:6;248:3;244:16;237:27;218:48;;14:258;;;:::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:27;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:27:o;540:228::-;697:2;686:9;679:21;660:4;717:45;758:2;747:9;743:18;735:6;717:45;:::i;:::-;709:53;540:228;-1:-1:-1;;;540:228:27:o;1194:437::-;1454:22;1449:3;1442:35;1424:3;1506:6;1500:13;1522:62;1577:6;1572:2;1567:3;1563:12;1556:4;1548:6;1544:17;1522:62;:::i;:::-;1604:16;;;;1622:2;1600:25;;1194:437;-1:-1:-1;;1194:437:27:o;1636:940::-;2065:3;2103:6;2097:13;2119:53;2165:6;2160:3;2153:4;2145:6;2141:17;2119:53;:::i;:::-;2233:3;2194:16;;;2219:18;;;2262:13;;2284:65;2262:13;2336:1;2325:13;;2318:4;2306:17;;2284:65;:::i;:::-;2416:3;2412:1;2368:20;;;;2404:10;;;2397:23;2445:13;;2467:62;2445:13;2516:1;2508:10;;2501:4;2489:17;;2467:62;:::i;:::-;2549:17;2568:1;2545:25;;1636:940;-1:-1:-1;;;;;1636:940:27:o"},"gasEstimates":{"creation":{"codeDepositCost":"287400","executionCost":"359","totalCost":"287759"},"external":{"EIP712DOMAIN_TYPEHASH()":"223","GENERIC_PARAMS()":"infinite","RELAYDATA_TYPE()":"infinite","RELAYDATA_TYPEHASH()":"infinite","RELAY_REQUEST_NAME()":"infinite","RELAY_REQUEST_SUFFIX()":"infinite","RELAY_REQUEST_TYPE()":"infinite","RELAY_REQUEST_TYPEHASH()":"infinite"},"internal":{"domainSeparator(string memory,address)":"infinite","execute(string memory,struct GsnTypes.RelayRequest calldata,bytes calldata)":"infinite","getChainID()":"infinite","hashDomain(struct GsnEip712Library.EIP712Domain memory)":"infinite","hashRelayData(struct GsnTypes.RelayData calldata)":"infinite","splitRequest(struct GsnTypes.RelayRequest calldata)":"infinite","truncateInPlace(bytes memory)":"infinite","verify(string memory,struct GsnTypes.RelayRequest calldata,bytes calldata)":"infinite","verifyForwarderTrusted(struct GsnTypes.RelayRequest calldata)":"infinite","verifySignature(string memory,struct GsnTypes.RelayRequest calldata,bytes calldata)":"infinite"}},"methodIdentifiers":{"EIP712DOMAIN_TYPEHASH()":"c49f91d3","GENERIC_PARAMS()":"066a310c","RELAYDATA_TYPE()":"c46cf83f","RELAYDATA_TYPEHASH()":"cc0c62b2","RELAY_REQUEST_NAME()":"987673f7","RELAY_REQUEST_SUFFIX()":"931cd38f","RELAY_REQUEST_TYPE()":"6225e61b","RELAY_REQUEST_TYPEHASH()":"abf0d3f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EIP712DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENERIC_PARAMS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYDATA_TYPE\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYDATA_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_SUFFIX\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_TYPE\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_REQUEST_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ERC-712 Library for GSN\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Bridge Library to convert a GSN RelayRequest into a valid `ForwardRequest` for a `Forwarder`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":\"GsnEip712Library\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"../interfaces/IERC2771Recipient.sol\\\";\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\nimport \\\"./GsnUtils.sol\\\";\\n\\n/**\\n * @title The ERC-712 Library for GSN\\n * @notice Bridge Library to convert a GSN RelayRequest into a valid `ForwardRequest` for a `Forwarder`.\\n */\\nlibrary GsnEip712Library {\\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\\n    uint256 private constant MAX_RETURN_SIZE = 1024;\\n\\n    //copied from Forwarder (can't reference string constants even from another library)\\n    string public constant GENERIC_PARAMS = \\\"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntilTime\\\";\\n\\n    bytes public constant RELAYDATA_TYPE = \\\"RelayData(uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 transactionCalldataGasUsed,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\\\";\\n\\n    string public constant RELAY_REQUEST_NAME = \\\"RelayRequest\\\";\\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\\\"RelayData relayData)\\\", RELAYDATA_TYPE));\\n\\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\\n        RELAY_REQUEST_NAME,\\\"(\\\",GENERIC_PARAMS,\\\",\\\", RELAY_REQUEST_SUFFIX);\\n\\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\\n\\n\\n    struct EIP712Domain {\\n        string name;\\n        string version;\\n        uint256 chainId;\\n        address verifyingContract;\\n    }\\n\\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n    );\\n\\n    function splitRequest(\\n        GsnTypes.RelayRequest calldata req\\n    )\\n    internal\\n    pure\\n    returns (\\n        bytes memory suffixData\\n    ) {\\n        suffixData = abi.encode(\\n            hashRelayData(req.relayData));\\n    }\\n\\n    //verify that the recipient trusts the given forwarder\\n    // MUST be called by paymaster\\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\\n            abi.encodeWithSelector(\\n                IERC2771Recipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\\n            )\\n        );\\n        require(success, \\\"isTrustedForwarder: reverted\\\");\\n        require(ret.length == 32, \\\"isTrustedForwarder: bad response\\\");\\n        require(abi.decode(ret, (bool)), \\\"invalid forwarder for recipient\\\");\\n    }\\n\\n    function verifySignature(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal view {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\\n    }\\n\\n    function verify(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal view {\\n        verifyForwarderTrusted(relayRequest);\\n        verifySignature(domainSeparatorName, relayRequest, signature);\\n    }\\n\\n    function execute(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal returns (\\n        bool forwarderSuccess,\\n        bool callSuccess,\\n        bytes memory ret\\n    ) {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\\n        /* solhint-disable-next-line avoid-low-level-calls */\\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\\n            abi.encodeWithSelector(IForwarder.execute.selector,\\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\\n        ));\\n        if ( forwarderSuccess ) {\\n\\n          //decode return value of execute:\\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\\n        }\\n        truncateInPlace(ret);\\n    }\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data) internal pure {\\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\\n    }\\n\\n    function domainSeparator(string memory name, address forwarder) internal view returns (bytes32) {\\n        return hashDomain(EIP712Domain({\\n            name : name,\\n            version : \\\"3\\\",\\n            chainId : getChainID(),\\n            verifyingContract : forwarder\\n            }));\\n    }\\n\\n    function getChainID() internal view returns (uint256 id) {\\n        /* solhint-disable no-inline-assembly */\\n        assembly {\\n            id := chainid()\\n        }\\n    }\\n\\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(bytes(req.name)),\\n                keccak256(bytes(req.version)),\\n                req.chainId,\\n                req.verifyingContract));\\n    }\\n\\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                RELAYDATA_TYPEHASH,\\n                req.maxFeePerGas,\\n                req.maxPriorityFeePerGas,\\n                req.transactionCalldataGasUsed,\\n                req.relayWorker,\\n                req.paymaster,\\n                req.forwarder,\\n                keccak256(req.paymasterData),\\n                req.clientId\\n            ));\\n    }\\n}\\n\",\"keccak256\":\"0x73b5828c2578aea26dbd21cea00f1a245c94f9720ffd95932777ee6121e31972\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 maxFeePerGas;\\n        uint256 maxPriorityFeePerGas;\\n        uint256 transactionCalldataGasUsed;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x9fb51c540f32939f1ee291e3fa709be64f7c73485bd7b87c6624c3567dd42a1b\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\nimport \\\"./GsnTypes.sol\\\";\\n\\n/**\\n * @title The GSN Solidity Utils Library\\n * @notice Some library functions used throughout the GSN Solidity codebase.\\n */\\nlibrary GsnUtils {\\n\\n    bytes32 constant private RELAY_REQUEST_ID_MASK = 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\n    /**\\n     * @notice Calculate an identifier for the meta-transaction in a format similar to a transaction hash.\\n     * Note that uniqueness relies on signature and may not be enforced if meta-transactions are verified\\n     * with a different algorithm, e.g. when batching.\\n     * @param relayRequest The `RelayRequest` for which an ID is being calculated.\\n     * @param signature The signature for the `RelayRequest`. It is not validated here and may even remain empty.\\n     */\\n    function getRelayRequestID(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature)\\n    internal\\n    pure\\n    returns (bytes32) {\\n        return keccak256(abi.encode(relayRequest.request.from, relayRequest.request.nonce, signature)) & RELAY_REQUEST_ID_MASK;\\n    }\\n\\n    /**\\n     * @notice Extract the method identifier signature from the encoded function call.\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * @notice Extract a parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * The return value should be casted to the right type (`uintXXX`/`bytesXXX`/`address`/`bool`/`enum`).\\n     * @param msgData Byte array containing a uint256 value.\\n     * @param index Index in byte array of uint256 value.\\n     * @return result uint256 value from byte array.\\n     */\\n    function getParam(bytes memory msgData, uint256 index) internal pure returns (uint256 result) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    /// @notice Re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7ea79bac2508612eba2c9372a7a4af953218b4ee2721e273f6d368e76b1ae7bb\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity ^0.8.0;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x8063af8e0f134be3d794ad39bdc0041f33a16c91a4ee7abb968d4c15c8d10c54\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Bridge Library to convert a GSN RelayRequest into a valid `ForwardRequest` for a `Forwarder`.","version":1}}},"@opengsn/contracts/src/utils/GsnTypes.sol":{"GsnTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/GsnTypes.sol\":\"GsnTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 maxFeePerGas;\\n        uint256 maxPriorityFeePerGas;\\n        uint256 transactionCalldataGasUsed;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x9fb51c540f32939f1ee291e3fa709be64f7c73485bd7b87c6624c3567dd42a1b\",\"license\":\"GPL-3.0-only\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@opengsn/contracts/src/utils/GsnUtils.sol":{"GsnUtils":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"The GSN Solidity Utils Library","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cbab2380fc2ce02cc4f724f4e3ef4e6323c883f9a6fe8a240c0423b980f7e2a64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xBA 0xB2 CODESIZE 0xF 0xC2 0xCE MUL 0xCC 0x4F PUSH19 0x4F4E3EF4E6323C883F9A6FE8A240C0423B980F PUSH31 0x2A64736F6C6343000808003300000000000000000000000000000000000000 ","sourceMap":"294:1990:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;294:1990:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cbab2380fc2ce02cc4f724f4e3ef4e6323c883f9a6fe8a240c0423b980f7e2a64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xBA 0xB2 CODESIZE 0xF 0xC2 0xCE MUL 0xCC 0x4F PUSH19 0x4F4E3EF4E6323C883F9A6FE8A240C0423B980F PUSH31 0x2A64736F6C6343000808003300000000000000000000000000000000000000 ","sourceMap":"294:1990:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getMethodSig(bytes memory)":"infinite","getParam(bytes memory,uint256)":"infinite","getRelayRequestID(struct GsnTypes.RelayRequest calldata,bytes calldata)":"infinite","revertWithData(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The GSN Solidity Utils Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Some library functions used throughout the GSN Solidity codebase.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/GsnUtils.sol\":\"GsnUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 maxFeePerGas;\\n        uint256 maxPriorityFeePerGas;\\n        uint256 transactionCalldataGasUsed;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x9fb51c540f32939f1ee291e3fa709be64f7c73485bd7b87c6624c3567dd42a1b\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\nimport \\\"./GsnTypes.sol\\\";\\n\\n/**\\n * @title The GSN Solidity Utils Library\\n * @notice Some library functions used throughout the GSN Solidity codebase.\\n */\\nlibrary GsnUtils {\\n\\n    bytes32 constant private RELAY_REQUEST_ID_MASK = 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\n    /**\\n     * @notice Calculate an identifier for the meta-transaction in a format similar to a transaction hash.\\n     * Note that uniqueness relies on signature and may not be enforced if meta-transactions are verified\\n     * with a different algorithm, e.g. when batching.\\n     * @param relayRequest The `RelayRequest` for which an ID is being calculated.\\n     * @param signature The signature for the `RelayRequest`. It is not validated here and may even remain empty.\\n     */\\n    function getRelayRequestID(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature)\\n    internal\\n    pure\\n    returns (bytes32) {\\n        return keccak256(abi.encode(relayRequest.request.from, relayRequest.request.nonce, signature)) & RELAY_REQUEST_ID_MASK;\\n    }\\n\\n    /**\\n     * @notice Extract the method identifier signature from the encoded function call.\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * @notice Extract a parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * The return value should be casted to the right type (`uintXXX`/`bytesXXX`/`address`/`bool`/`enum`).\\n     * @param msgData Byte array containing a uint256 value.\\n     * @param index Index in byte array of uint256 value.\\n     * @return result uint256 value from byte array.\\n     */\\n    function getParam(bytes memory msgData, uint256 index) internal pure returns (uint256 result) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    /// @notice Re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7ea79bac2508612eba2c9372a7a4af953218b4ee2721e273f6d368e76b1ae7bb\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity ^0.8.0;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x8063af8e0f134be3d794ad39bdc0041f33a16c91a4ee7abb968d4c15c8d10c54\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Some library functions used throughout the GSN Solidity codebase.","version":1}}},"@opengsn/contracts/src/utils/MinLibBytes.sol":{"MinLibBytes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5a0e808e3eb8b1a2cdade7d5c2b724d0f6b74617d3fbf2556a522a8d7388e8864736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 LOG0 0xE8 ADDMOD 0xE3 0xEB DUP12 BYTE 0x2C 0xDA 0xDE PUSH30 0x5C2B724D0F6B74617D3FBF2556A522A8D7388E8864736F6C634300080800 CALLER ","sourceMap":"181:2874:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;181:2874:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5a0e808e3eb8b1a2cdade7d5c2b724d0f6b74617d3fbf2556a522a8d7388e8864736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 LOG0 0xE8 ADDMOD 0xE3 0xEB DUP12 BYTE 0x2C 0xDA 0xDE PUSH30 0x5C2B724D0F6B74617D3FBF2556A522A8D7388E8864736F6C634300080800 CALLER ","sourceMap":"181:2874:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"readAddress(bytes memory,uint256)":"infinite","readBytes32(bytes memory,uint256)":"infinite","readBytes4(bytes memory,uint256)":"infinite","readUint256(bytes memory,uint256)":"infinite","truncateInPlace(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/utils/MinLibBytes.sol\":\"MinLibBytes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity ^0.8.0;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x8063af8e0f134be3d794ad39bdc0041f33a16c91a4ee7abb968d4c15c8d10c54\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@opengsn/paymasters/contracts/WhitelistPaymaster.sol":{"WhitelistPaymaster":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"CALLDATA_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FORWARDER_HUB_OVERHEAD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_ACCEPTANCE_BUDGET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"POST_RELAYED_CALL_GAS_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRE_RELAYED_CALL_GAS_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasAndDataLimits","outputs":[{"components":[{"internalType":"uint256","name":"acceptanceBudget","type":"uint256"},{"internalType":"uint256","name":"preRelayedCallGasLimit","type":"uint256"},{"internalType":"uint256","name":"postRelayedCallGasLimit","type":"uint256"},{"internalType":"uint256","name":"calldataSizeLimit","type":"uint256"}],"internalType":"struct IPaymaster.GasAndDataLimits","name":"limits","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRelayHub","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"methodWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"gasUseWithoutPost","type":"uint256"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"name":"postRelayedCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntilTime","type":"uint256"}],"internalType":"struct IForwarder.ForwardRequest","name":"request","type":"tuple"},{"components":[{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"uint256","name":"transactionCalldataGasUsed","type":"uint256"},{"internalType":"address","name":"relayWorker","type":"address"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"bytes","name":"paymasterData","type":"bytes"},{"internalType":"uint256","name":"clientId","type":"uint256"}],"internalType":"struct GsnTypes.RelayData","name":"relayData","type":"tuple"}],"internalType":"struct GsnTypes.RelayRequest","name":"relayRequest","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"approvalData","type":"bytes"},{"internalType":"uint256","name":"maxPossibleGas","type":"uint256"}],"name":"preRelayedCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"senderWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_useSenderWhitelist","type":"bool"},{"internalType":"bool","name":"_useTargetWhitelist","type":"bool"},{"internalType":"bool","name":"_useMethodWhitelist","type":"bool"},{"internalType":"bool","name":"_useRejectOnRecipientRevert","type":"bool"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IRelayHub","name":"hub","type":"address"}],"name":"setRelayHub","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"setTrustedForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"targetWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"useMethodWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"useRejectOnRecipientRevert","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"useSenderWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"useTargetWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"versionPaymaster","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"method","type":"bytes4"},{"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"whitelistMethod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"whitelistSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"whitelistTarget","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"target","type":"address"}],"name":"withdrawRelayHubDepositTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"getGasAndDataLimits()":{"returns":{"limits":"An instance of the `GasAndDataLimits` struct ##### `acceptanceBudget` If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what. Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense. Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request. This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract. :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit` (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions. If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \"griefing\" attack. The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated. From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay, since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts. Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config). ##### `preRelayedCallGasLimit` The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster. As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster. ##### `postRelayedCallGasLimit` The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas. Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway."}},"getRelayHub()":{"returns":{"_0":"The address of the `RelayHub` that is trusted by this Paymaster to execute the requests."}},"getTrustedForwarder()":{"returns":{"_0":"The address of the `Forwarder` that is trusted by this Paymaster to execute the requests."}},"owner()":{"details":"Returns the address of the current owner."},"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"params":{"context":"The call context, as returned by the preRelayedCall","gasUseWithoutPost":"The actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.","relayData":"The relay params of the request. can be used by relayHub.calculateCharge()","success":"`true` if the relayed call succeeded, false if it reverted"}},"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":{"params":{"approvalData":"- extra dapp-specific data (e.g. signature from trusted party)","maxPossibleGas":"- based on values returned from `getGasAndDataLimits` the RelayHub will calculate the maximum possible amount of gas the user may be charged for. In order to convert this value to wei, the Paymaster has to call \"relayHub.calculateCharge()\"","relayRequest":"- the full relay request structure","signature":"- user's EIP712-compatible signature of the `relayRequest`. Note that in most cases the paymaster shouldn't try use it at all. It is always checked by the forwarder immediately after preRelayedCall returns."},"returns":{"_0":"A byte array to be passed to postRelayedCall. Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.","_1":"The flag that allows a Paymaster to \"delegate\" the rejection to the recipient code. It also means the Paymaster trust the recipient to reject fast: both preRelayedCall, forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget, otherwise the TX is paid by the Paymaster. `true` if the Paymaster wants to reject the TX if the recipient reverts. `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"versionPaymaster()":{"returns":{"_0":"version The SemVer string of this Paymaster's version."}},"withdrawRelayHubDepositTo(uint256,address)":{"params":{"amount":"The amount to be subtracted from the sender.","target":"The target to which the amount will be transferred."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2272":{"entryPoint":null,"id":2272,"parameterSlots":0,"returnSlots":0},"@_msgSender_3066":{"entryPoint":null,"id":3066,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_2360":{"entryPoint":31,"id":2360,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1AC9 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8222F07D GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBBDAA3C9 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDF463A66 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDF463A66 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0xE1838F8D EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xF9C002F7 EQ PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBBDAA3C9 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0xCE1B815F EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xDA742228 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xDD1BCAA1 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x921276EA EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xB039A88F EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xB90B41CF EQ PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8222F07D EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x858437B0 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x86C0A9F8 EQ PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F28BFB9 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x76FA01C3 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x7BB05264 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x7BDF2EC7 EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F28BFB9 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x4F33B4DD EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x5C5E3DB1 EQ PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD4CA3A4 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xD4CA3A4 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x12256054 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x2D14C4B7 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x3A0892E3 EQ PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xBE5DD4 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x613FEF8 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2A1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656C6179206875622061646472657373206E6F742073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAA67C91900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA67C919 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x2904 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x87B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x533 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56B PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58D PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xC350 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH3 0x1ADB0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xB65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6C4 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x6CD DUP9 PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x6D6 DUP9 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x6DF DUP9 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x6E9 DUP6 DUP6 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x6F7 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE1AB2DEA00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x769 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE08307600000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x784 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x792 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7C5 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF3FEF3A300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF3FEF3A3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x883 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x88D PUSH1 0x0 PUSH2 0x11D9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x897 PUSH2 0xC50 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x8D9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0xE9FB30F700000000000000000000000000000000000000000000000000000000 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746172676574206973206E6F7420612076616C6964204952656C617948756200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x95C PUSH2 0x117F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA8 SHL SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH32 0xFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xB0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL PUSH32 0xFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xB8 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6B PUSH1 0x29 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA71 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xC350 PUSH3 0x186A0 PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x186A0 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1ADB0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2904 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB7 PUSH2 0x117F JUMP JUMPDEST PUSH2 0xAEA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x25E23E6400000000000000000000000000000000000000000000000000000000 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746172676574206973206E6F7420612076616C69642049466F72776172646572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB74 PUSH2 0xC350 PUSH3 0x186A0 PUSH2 0x197F JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0xB7F PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBC8 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0x11D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E206F6E6C792062652063616C6C65642062792052656C61794875620000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xCB7 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xCC8 SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH1 0xA0 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F72776172646572206973206E6F7420747275737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0xD4C DUP2 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD ISZERO PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C7565207472616E73666572206E6F7420737570706F7274656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xDAA PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xDB8 SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73686F756C642068617665206E6F207061796D61737465724461746100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73686F756C642068617665206E6F20617070726F76616C446174610000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x617070726F76616C446174613A20696E76616C6964206C656E67746800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xEB8 PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xEC6 SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796D6173746572446174613A20696E76616C6964206C656E677468000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 PUSH2 0xF33 DUP10 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xF41 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73656E646572206E6F742077686974656C697374656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x104A JUMPI PUSH1 0x0 PUSH2 0xFCC DUP10 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xFDD SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746172676574206E6F742077686974656C697374656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 PUSH2 0x1068 DUP10 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1079 SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10D2 PUSH2 0x108A DUP12 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1098 SWAP1 PUSH1 0xA0 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1470 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6574686F64206E6F742077686974656C697374656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP8 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1241 DUP4 PUSH2 0x147D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1252 JUMPI POP PUSH2 0x1252 DUP4 DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1266 DUP4 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1277 SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x572B6C0500000000000000000000000000000000000000000000000000000000 PUSH2 0x12AE PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x12BF SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH1 0xA0 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1328 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x697354727573746564466F727761726465723A20726576657274656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 EQ PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x697354727573746564466F727761726465723A2062616420726573706F6E7365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420666F7277617264657220666F7220726563697069656E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP3 PUSH1 0x0 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP3 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x14B0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x784 JUMPI POP PUSH2 0x14A9 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0x14B0 JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x1537 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1543 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155B DUP3 PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726561644279746573343A206461746120746F6F2073686F7274000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP9 ADD SWAP1 PUSH1 0x40 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166E DUP11 DUP4 DUP12 ADD PUSH2 0x15BE JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1694 DUP10 DUP3 DUP11 ADD PUSH2 0x15BE JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP5 SWAP7 SWAP6 PUSH1 0x60 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16AF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16D6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x16F4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x171B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1252 DUP3 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17A5 DUP2 PUSH2 0x1764 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17B5 DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17B5 DUP2 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1803 DUP2 PUSH2 0x1764 JUMP JUMPDEST SWAP2 POP PUSH2 0x1811 PUSH1 0x20 DUP5 ADD PUSH2 0x172C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x184A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1856 DUP10 DUP4 DUP11 ADD PUSH2 0x15BE JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x186B DUP3 PUSH2 0x1779 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 ADD PUSH2 0x100 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x189C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1252 DUP2 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x18E8 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x18F8 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1908 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1918 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1252 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x194B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1956 DUP2 PUSH2 0x1764 JUMP JUMPDEST SWAP3 POP PUSH2 0x1964 PUSH1 0x20 DUP6 ADD PUSH2 0x172C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1974 DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19B9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xFE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xDE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19D4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1252 DUP2 PUSH2 0x1779 JUMP INVALID CALLER 0x2E ADDRESS 0x2E ADDRESS 0x2D PUSH3 0x657461 0x2E CALLER 0x2B PUSH16 0x70656E67736E2E77686974656C697374 0x2E PUSH10 0x7061796D6173746572A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xAB NOT 0x5D 0xB4 PUSH20 0xB741F09E5703868D056C570A9B9B8CC01C7BB8F9 LOG1 SGT SWAP16 DUP4 DUP7 0xCB PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"395:2818:12:-:0;;;;;;;;;;;;-1:-1:-1;936:32:13;719:10:18;936:18:13;:32::i;:::-;395:2818:12;;2433:187:13;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:13;;;-1:-1:-1;;;;;;2541:17:13;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;395:2818:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CALLDATA_SIZE_LIMIT_101":{"entryPoint":null,"id":101,"parameterSlots":0,"returnSlots":0},"@FORWARDER_HUB_OVERHEAD_87":{"entryPoint":null,"id":87,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_ACCEPTANCE_BUDGET_98":{"entryPoint":2917,"id":98,"parameterSlots":0,"returnSlots":0},"@POST_RELAYED_CALL_GAS_LIMIT_93":{"entryPoint":null,"id":93,"parameterSlots":0,"returnSlots":0},"@PRE_RELAYED_CALL_GAS_LIMIT_90":{"entryPoint":null,"id":90,"parameterSlots":0,"returnSlots":0},"@_324":{"entryPoint":null,"id":324,"parameterSlots":0,"returnSlots":0},"@_checkOwner_2303":{"entryPoint":4479,"id":2303,"parameterSlots":0,"returnSlots":0},"@_msgSender_3066":{"entryPoint":null,"id":3066,"parameterSlots":0,"returnSlots":1},"@_postRelayedCall_2247":{"entryPoint":null,"id":2247,"parameterSlots":5,"returnSlots":0},"@_preRelayedCall_2227":{"entryPoint":3673,"id":2227,"parameterSlots":6,"returnSlots":2},"@_transferOwnership_2360":{"entryPoint":4569,"id":2360,"parameterSlots":1,"returnSlots":0},"@_verifyApprovalData_233":{"entryPoint":3591,"id":233,"parameterSlots":2,"returnSlots":0},"@_verifyForwarder_173":{"entryPoint":3242,"id":173,"parameterSlots":1,"returnSlots":0},"@_verifyPaymasterData_219":{"entryPoint":3485,"id":219,"parameterSlots":1,"returnSlots":0},"@_verifyRelayHubOnly_186":{"entryPoint":3152,"id":186,"parameterSlots":0,"returnSlots":0},"@_verifyValue_202":{"entryPoint":3394,"id":202,"parameterSlots":1,"returnSlots":0},"@getGasAndDataLimits_149":{"entryPoint":2630,"id":149,"parameterSlots":0,"returnSlots":1},"@getMethodSig_1859":{"entryPoint":5232,"id":1859,"parameterSlots":1,"returnSlots":1},"@getRelayHub_84":{"entryPoint":null,"id":84,"parameterSlots":0,"returnSlots":1},"@getTrustedForwarder_294":{"entryPoint":null,"id":294,"parameterSlots":0,"returnSlots":1},"@methodWhitelist_2033":{"entryPoint":null,"id":2033,"parameterSlots":0,"returnSlots":0},"@owner_2289":{"entryPoint":null,"id":2289,"parameterSlots":0,"returnSlots":1},"@postRelayedCall_429":{"entryPoint":2191,"id":429,"parameterSlots":5,"returnSlots":0},"@preRelayedCall_387":{"entryPoint":1720,"id":387,"parameterSlots":6,"returnSlots":2},"@readBytes4_2003":{"entryPoint":5454,"id":2003,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_2317":{"entryPoint":2171,"id":2317,"parameterSlots":0,"returnSlots":0},"@senderWhitelist_2023":{"entryPoint":null,"id":2023,"parameterSlots":0,"returnSlots":0},"@setConfiguration_2124":{"entryPoint":2388,"id":2124,"parameterSlots":4,"returnSlots":0},"@setRelayHub_261":{"entryPoint":2206,"id":261,"parameterSlots":1,"returnSlots":0},"@setTrustedForwarder_285":{"entryPoint":2735,"id":285,"parameterSlots":1,"returnSlots":0},"@supportsERC165InterfaceUnchecked_3293":{"entryPoint":5296,"id":3293,"parameterSlots":2,"returnSlots":1},"@supportsERC165_3130":{"entryPoint":5245,"id":3130,"parameterSlots":1,"returnSlots":1},"@supportsInterface_132":{"entryPoint":1798,"id":132,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3099":{"entryPoint":null,"id":3099,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3150":{"entryPoint":4662,"id":3150,"parameterSlots":2,"returnSlots":1},"@targetWhitelist_2027":{"entryPoint":null,"id":2027,"parameterSlots":0,"returnSlots":0},"@transferOwnership_2340":{"entryPoint":3008,"id":2340,"parameterSlots":1,"returnSlots":0},"@useMethodWhitelist_2017":{"entryPoint":null,"id":2017,"parameterSlots":0,"returnSlots":0},"@useRejectOnRecipientRevert_2019":{"entryPoint":null,"id":2019,"parameterSlots":0,"returnSlots":0},"@useSenderWhitelist_2013":{"entryPoint":null,"id":2013,"parameterSlots":0,"returnSlots":0},"@useTargetWhitelist_2015":{"entryPoint":null,"id":2015,"parameterSlots":0,"returnSlots":0},"@verifyForwarderTrusted_1527":{"entryPoint":4697,"id":1527,"parameterSlots":1,"returnSlots":0},"@versionPaymaster_2042":{"entryPoint":2598,"id":2042,"parameterSlots":0,"returnSlots":1},"@whitelistMethod_2094":{"entryPoint":2935,"id":2094,"parameterSlots":3,"returnSlots":0},"@whitelistSender_2058":{"entryPoint":1930,"id":2058,"parameterSlots":2,"returnSlots":0},"@whitelistTarget_2074":{"entryPoint":1981,"id":2074,"parameterSlots":2,"returnSlots":0},"@withdrawRelayHubDepositTo_342":{"entryPoint":2032,"id":342,"parameterSlots":2,"returnSlots":0},"abi_decode_bytes4":{"entryPoint":5932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":5566,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6023,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes4":{"entryPoint":6117,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes4t_bool":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_boolt_boolt_bool":{"entryPoint":6343,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes4":{"entryPoint":5961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptrt_boolt_uint256t_struct$_RelayData_$1801_calldata_ptr":{"entryPoint":6170,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_contract$_IRelayHub_$1104":{"entryPoint":6314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_RelayRequest_$1808_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256":{"entryPoint":5639,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_address_payable":{"entryPoint":6080,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_bytes":{"entryPoint":5852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":5896,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_182b40eb1561ed39a86edc754bf2a5f045daef24c145773d4b18340a470251b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e4bcc216326d2d371e2433ec8e1af9c54827701515af7cd10f9acc79120d313__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f35ce95c64a40a715e95a1b7d3fe84cf613d64347e430eb5f35903ecdb7e24d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7d8c0e673c54c705986df4dd7c55d4166770d9449a60c6ca1c12bca8c8c62ee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b62b61dba941996cba530085b5313ea27667d0ee2b85e1209b8aedd3e5e9398e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bfa8d30daea23bf7e1e8f319983187fd2d1c87718886df4862ba9690a35f1c97__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e16e7b15b3ab333edb68f7b1a990600092795acc5fc3b3a41ef443557f01e8e8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3fe8b8d7a4d7297198f00bec48c1f664c9a2ab21f2fa0d4a68337ee48c21898__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fccc4b6995a94cdc6e6e9a1b088f6ad31bd641a326f5e5ddcc3773886206aa37__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_GasAndDataLimits_$680_memory_ptr__to_t_struct$_GasAndDataLimits_$680_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":6644,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_ForwardRequest_$568_calldata_ptr":{"entryPoint":6622,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_struct$_RelayData_$1801_calldata_ptr":{"entryPoint":6590,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6527,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":5804,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":5988,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":6009,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17199:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:175:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:27"},"nodeType":"YulFunctionCall","src":"198:21:27"},"nodeType":"YulExpressionStatement","src":"198:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:27"},"nodeType":"YulFunctionCall","src":"235:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:27","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:27"},"nodeType":"YulFunctionCall","src":"228:30:27"},"nodeType":"YulExpressionStatement","src":"228:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:27"},"nodeType":"YulFunctionCall","src":"274:18:27"},{"hexValue":"72656c6179206875622061646472657373206e6f7420736574","kind":"string","nodeType":"YulLiteral","src":"294:27:27","type":"","value":"relay hub address not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:27"},"nodeType":"YulFunctionCall","src":"267:55:27"},"nodeType":"YulExpressionStatement","src":"267:55:27"},{"nodeType":"YulAssignment","src":"331:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"343:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"354:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"339:3:27"},"nodeType":"YulFunctionCall","src":"339:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"331:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e4bcc216326d2d371e2433ec8e1af9c54827701515af7cd10f9acc79120d313__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:27","type":""}],"src":"14:349:27"},{"body":{"nodeType":"YulBlock","src":"469:125:27","statements":[{"nodeType":"YulAssignment","src":"479:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"502:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"487:3:27"},"nodeType":"YulFunctionCall","src":"487:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"479:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"521:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"536:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"544:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"532:3:27"},"nodeType":"YulFunctionCall","src":"532:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"514:6:27"},"nodeType":"YulFunctionCall","src":"514:74:27"},"nodeType":"YulExpressionStatement","src":"514:74:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"438:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"449:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"460:4:27","type":""}],"src":"368:226:27"},{"body":{"nodeType":"YulBlock","src":"671:275:27","statements":[{"body":{"nodeType":"YulBlock","src":"720:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"729:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"732:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"722:6:27"},"nodeType":"YulFunctionCall","src":"722:12:27"},"nodeType":"YulExpressionStatement","src":"722:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"699:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"707:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"695:3:27"},"nodeType":"YulFunctionCall","src":"695:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"714:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"691:3:27"},"nodeType":"YulFunctionCall","src":"691:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"684:6:27"},"nodeType":"YulFunctionCall","src":"684:35:27"},"nodeType":"YulIf","src":"681:55:27"},{"nodeType":"YulAssignment","src":"745:30:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"768:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"755:12:27"},"nodeType":"YulFunctionCall","src":"755:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"745:6:27"}]},{"body":{"nodeType":"YulBlock","src":"818:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"827:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"830:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"820:6:27"},"nodeType":"YulFunctionCall","src":"820:12:27"},"nodeType":"YulExpressionStatement","src":"820:12:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"790:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"798:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"787:2:27"},"nodeType":"YulFunctionCall","src":"787:30:27"},"nodeType":"YulIf","src":"784:50:27"},{"nodeType":"YulAssignment","src":"843:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"859:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"867:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"855:3:27"},"nodeType":"YulFunctionCall","src":"855:17:27"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"843:8:27"}]},{"body":{"nodeType":"YulBlock","src":"924:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"933:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"936:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"926:6:27"},"nodeType":"YulFunctionCall","src":"926:12:27"},"nodeType":"YulExpressionStatement","src":"926:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"895:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"903:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"891:3:27"},"nodeType":"YulFunctionCall","src":"891:19:27"},{"kind":"number","nodeType":"YulLiteral","src":"912:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"887:3:27"},"nodeType":"YulFunctionCall","src":"887:30:27"},{"name":"end","nodeType":"YulIdentifier","src":"919:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"884:2:27"},"nodeType":"YulFunctionCall","src":"884:39:27"},"nodeType":"YulIf","src":"881:59:27"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"634:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"642:3:27","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"650:8:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"660:6:27","type":""}],"src":"599:347:27"},{"body":{"nodeType":"YulBlock","src":"1142:864:27","statements":[{"body":{"nodeType":"YulBlock","src":"1189:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1198:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1201:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1191:6:27"},"nodeType":"YulFunctionCall","src":"1191:12:27"},"nodeType":"YulExpressionStatement","src":"1191:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1163:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1172:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1159:3:27"},"nodeType":"YulFunctionCall","src":"1159:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1184:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1155:3:27"},"nodeType":"YulFunctionCall","src":"1155:33:27"},"nodeType":"YulIf","src":"1152:53:27"},{"nodeType":"YulVariableDeclaration","src":"1214:37:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1241:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1228:12:27"},"nodeType":"YulFunctionCall","src":"1228:23:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1218:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1260:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1270:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1264:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1315:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1324:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1327:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1317:6:27"},"nodeType":"YulFunctionCall","src":"1317:12:27"},"nodeType":"YulExpressionStatement","src":"1317:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1303:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1311:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1300:2:27"},"nodeType":"YulFunctionCall","src":"1300:14:27"},"nodeType":"YulIf","src":"1297:34:27"},{"nodeType":"YulVariableDeclaration","src":"1340:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1354:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1365:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1350:3:27"},"nodeType":"YulFunctionCall","src":"1350:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1344:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1410:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1419:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1422:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1412:6:27"},"nodeType":"YulFunctionCall","src":"1412:12:27"},"nodeType":"YulExpressionStatement","src":"1412:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1392:7:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1401:2:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1388:3:27"},"nodeType":"YulFunctionCall","src":"1388:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1406:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1384:3:27"},"nodeType":"YulFunctionCall","src":"1384:25:27"},"nodeType":"YulIf","src":"1381:45:27"},{"nodeType":"YulAssignment","src":"1435:12:27","value":{"name":"_2","nodeType":"YulIdentifier","src":"1445:2:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1435:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1456:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1489:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1500:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1485:3:27"},"nodeType":"YulFunctionCall","src":"1485:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1472:12:27"},"nodeType":"YulFunctionCall","src":"1472:32:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1460:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1533:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1542:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1545:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1535:6:27"},"nodeType":"YulFunctionCall","src":"1535:12:27"},"nodeType":"YulExpressionStatement","src":"1535:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1519:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1529:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1516:2:27"},"nodeType":"YulFunctionCall","src":"1516:16:27"},"nodeType":"YulIf","src":"1513:36:27"},{"nodeType":"YulVariableDeclaration","src":"1558:86:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1625:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:27"},"nodeType":"YulFunctionCall","src":"1610:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1636:7:27"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1584:25:27"},"nodeType":"YulFunctionCall","src":"1584:60:27"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1562:8:27","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1572:8:27","type":""}]},{"nodeType":"YulAssignment","src":"1653:18:27","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1663:8:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1653:6:27"}]},{"nodeType":"YulAssignment","src":"1680:18:27","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1690:8:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1680:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1707:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1740:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1751:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1736:3:27"},"nodeType":"YulFunctionCall","src":"1736:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1723:12:27"},"nodeType":"YulFunctionCall","src":"1723:32:27"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"1711:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1784:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1796:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1786:6:27"},"nodeType":"YulFunctionCall","src":"1786:12:27"},"nodeType":"YulExpressionStatement","src":"1786:12:27"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"1770:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1780:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1767:2:27"},"nodeType":"YulFunctionCall","src":"1767:16:27"},"nodeType":"YulIf","src":"1764:36:27"},{"nodeType":"YulVariableDeclaration","src":"1809:86:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1865:9:27"},{"name":"offset_2","nodeType":"YulIdentifier","src":"1876:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1861:3:27"},"nodeType":"YulFunctionCall","src":"1861:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1887:7:27"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1835:25:27"},"nodeType":"YulFunctionCall","src":"1835:60:27"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"1813:8:27","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"1823:8:27","type":""}]},{"nodeType":"YulAssignment","src":"1904:18:27","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"1914:8:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1904:6:27"}]},{"nodeType":"YulAssignment","src":"1931:18:27","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1941:8:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1931:6:27"}]},{"nodeType":"YulAssignment","src":"1958:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1985:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1996:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:27"},"nodeType":"YulFunctionCall","src":"1981:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1968:12:27"},"nodeType":"YulFunctionCall","src":"1968:32:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1958:6:27"}]}]},"name":"abi_decode_tuple_t_struct$_RelayRequest_$1808_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1079:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1091:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1099:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1107:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1115:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1123:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1131:6:27","type":""}],"src":"951:1055:27"},{"body":{"nodeType":"YulBlock","src":"2064:205:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2074:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2083:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2078:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2143:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2168:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2173:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:27"},"nodeType":"YulFunctionCall","src":"2164:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2187:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"2192:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:27"},"nodeType":"YulFunctionCall","src":"2183:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2177:5:27"},"nodeType":"YulFunctionCall","src":"2177:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2157:6:27"},"nodeType":"YulFunctionCall","src":"2157:39:27"},"nodeType":"YulExpressionStatement","src":"2157:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2104:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2107:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2101:2:27"},"nodeType":"YulFunctionCall","src":"2101:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2115:19:27","statements":[{"nodeType":"YulAssignment","src":"2117:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2126:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"2129:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:27"},"nodeType":"YulFunctionCall","src":"2122:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2117:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"2097:3:27","statements":[]},"src":"2093:113:27"},{"body":{"nodeType":"YulBlock","src":"2232:31:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2245:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2250:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2241:3:27"},"nodeType":"YulFunctionCall","src":"2241:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"2259:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2234:6:27"},"nodeType":"YulFunctionCall","src":"2234:27:27"},"nodeType":"YulExpressionStatement","src":"2234:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2221:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2224:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2218:2:27"},"nodeType":"YulFunctionCall","src":"2218:13:27"},"nodeType":"YulIf","src":"2215:48:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2042:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2047:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"2052:6:27","type":""}],"src":"2011:258:27"},{"body":{"nodeType":"YulBlock","src":"2323:208:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2333:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2353:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2347:5:27"},"nodeType":"YulFunctionCall","src":"2347:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2337:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2375:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2380:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2368:6:27"},"nodeType":"YulFunctionCall","src":"2368:19:27"},"nodeType":"YulExpressionStatement","src":"2368:19:27"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2422:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2429:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2418:3:27"},"nodeType":"YulFunctionCall","src":"2418:16:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2440:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2445:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2436:3:27"},"nodeType":"YulFunctionCall","src":"2436:14:27"},{"name":"length","nodeType":"YulIdentifier","src":"2452:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2396:21:27"},"nodeType":"YulFunctionCall","src":"2396:63:27"},"nodeType":"YulExpressionStatement","src":"2396:63:27"},{"nodeType":"YulAssignment","src":"2468:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2483:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2496:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2504:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:27"},"nodeType":"YulFunctionCall","src":"2492:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2513:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2509:3:27"},"nodeType":"YulFunctionCall","src":"2509:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2488:3:27"},"nodeType":"YulFunctionCall","src":"2488:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2479:3:27"},"nodeType":"YulFunctionCall","src":"2479:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"2520:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:27"},"nodeType":"YulFunctionCall","src":"2475:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2468:3:27"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2300:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2307:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2315:3:27","type":""}],"src":"2274:257:27"},{"body":{"nodeType":"YulBlock","src":"2677:157:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2694:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2705:2:27","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:27"},"nodeType":"YulFunctionCall","src":"2687:21:27"},"nodeType":"YulExpressionStatement","src":"2687:21:27"},{"nodeType":"YulAssignment","src":"2717:52:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2742:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2754:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2765:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2750:3:27"},"nodeType":"YulFunctionCall","src":"2750:18:27"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"2725:16:27"},"nodeType":"YulFunctionCall","src":"2725:44:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2800:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2785:3:27"},"nodeType":"YulFunctionCall","src":"2785:18:27"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2819:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2812:6:27"},"nodeType":"YulFunctionCall","src":"2812:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2805:6:27"},"nodeType":"YulFunctionCall","src":"2805:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2778:6:27"},"nodeType":"YulFunctionCall","src":"2778:50:27"},"nodeType":"YulExpressionStatement","src":"2778:50:27"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2638:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2649:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2657:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2668:4:27","type":""}],"src":"2536:298:27"},{"body":{"nodeType":"YulBlock","src":"2887:171:27","statements":[{"nodeType":"YulAssignment","src":"2897:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2919:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2906:12:27"},"nodeType":"YulFunctionCall","src":"2906:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2897:5:27"}]},{"body":{"nodeType":"YulBlock","src":"3036:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3045:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3048:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3038:6:27"},"nodeType":"YulFunctionCall","src":"3038:12:27"},"nodeType":"YulExpressionStatement","src":"3038:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2948:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2959:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2966:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2955:3:27"},"nodeType":"YulFunctionCall","src":"2955:78:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2945:2:27"},"nodeType":"YulFunctionCall","src":"2945:89:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2938:6:27"},"nodeType":"YulFunctionCall","src":"2938:97:27"},"nodeType":"YulIf","src":"2935:117:27"}]},"name":"abi_decode_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2866:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2877:5:27","type":""}],"src":"2839:219:27"},{"body":{"nodeType":"YulBlock","src":"3132:115:27","statements":[{"body":{"nodeType":"YulBlock","src":"3178:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3187:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3190:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3180:6:27"},"nodeType":"YulFunctionCall","src":"3180:12:27"},"nodeType":"YulExpressionStatement","src":"3180:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3153:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3162:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3149:3:27"},"nodeType":"YulFunctionCall","src":"3149:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3174:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3145:3:27"},"nodeType":"YulFunctionCall","src":"3145:32:27"},"nodeType":"YulIf","src":"3142:52:27"},{"nodeType":"YulAssignment","src":"3203:38:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:27"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"3213:17:27"},"nodeType":"YulFunctionCall","src":"3213:28:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3203:6:27"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3098:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3109:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3121:6:27","type":""}],"src":"3063:184:27"},{"body":{"nodeType":"YulBlock","src":"3347:92:27","statements":[{"nodeType":"YulAssignment","src":"3357:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3369:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3380:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3365:3:27"},"nodeType":"YulFunctionCall","src":"3365:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3357:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3424:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3417:6:27"},"nodeType":"YulFunctionCall","src":"3417:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3410:6:27"},"nodeType":"YulFunctionCall","src":"3410:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3392:6:27"},"nodeType":"YulFunctionCall","src":"3392:41:27"},"nodeType":"YulExpressionStatement","src":"3392:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3316:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3327:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3338:4:27","type":""}],"src":"3252:187:27"},{"body":{"nodeType":"YulBlock","src":"3489:109:27","statements":[{"body":{"nodeType":"YulBlock","src":"3576:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3585:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3588:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3578:6:27"},"nodeType":"YulFunctionCall","src":"3578:12:27"},"nodeType":"YulExpressionStatement","src":"3578:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3512:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3523:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3530:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3519:3:27"},"nodeType":"YulFunctionCall","src":"3519:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3509:2:27"},"nodeType":"YulFunctionCall","src":"3509:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3502:6:27"},"nodeType":"YulFunctionCall","src":"3502:73:27"},"nodeType":"YulIf","src":"3499:93:27"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3478:5:27","type":""}],"src":"3444:154:27"},{"body":{"nodeType":"YulBlock","src":"3645:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"3699:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3708:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3711:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3701:6:27"},"nodeType":"YulFunctionCall","src":"3701:12:27"},"nodeType":"YulExpressionStatement","src":"3701:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3668:5:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3689:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3682:6:27"},"nodeType":"YulFunctionCall","src":"3682:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3675:6:27"},"nodeType":"YulFunctionCall","src":"3675:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3665:2:27"},"nodeType":"YulFunctionCall","src":"3665:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3658:6:27"},"nodeType":"YulFunctionCall","src":"3658:40:27"},"nodeType":"YulIf","src":"3655:60:27"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3634:5:27","type":""}],"src":"3603:118:27"},{"body":{"nodeType":"YulBlock","src":"3810:298:27","statements":[{"body":{"nodeType":"YulBlock","src":"3856:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3868:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3858:6:27"},"nodeType":"YulFunctionCall","src":"3858:12:27"},"nodeType":"YulExpressionStatement","src":"3858:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3831:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3840:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3827:3:27"},"nodeType":"YulFunctionCall","src":"3827:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3852:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3823:3:27"},"nodeType":"YulFunctionCall","src":"3823:32:27"},"nodeType":"YulIf","src":"3820:52:27"},{"nodeType":"YulVariableDeclaration","src":"3881:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3907:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3894:12:27"},"nodeType":"YulFunctionCall","src":"3894:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3885:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3951:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3926:24:27"},"nodeType":"YulFunctionCall","src":"3926:31:27"},"nodeType":"YulExpressionStatement","src":"3926:31:27"},{"nodeType":"YulAssignment","src":"3966:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3976:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3966:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3990:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4033:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4018:3:27"},"nodeType":"YulFunctionCall","src":"4018:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4005:12:27"},"nodeType":"YulFunctionCall","src":"4005:32:27"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3994:7:27","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4068:7:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4046:21:27"},"nodeType":"YulFunctionCall","src":"4046:30:27"},"nodeType":"YulExpressionStatement","src":"4046:30:27"},{"nodeType":"YulAssignment","src":"4085:17:27","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4095:7:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4085:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3768:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3779:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3791:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3799:6:27","type":""}],"src":"3726:382:27"},{"body":{"nodeType":"YulBlock","src":"4208:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"4254:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4263:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4266:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4256:6:27"},"nodeType":"YulFunctionCall","src":"4256:12:27"},"nodeType":"YulExpressionStatement","src":"4256:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4229:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4238:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4225:3:27"},"nodeType":"YulFunctionCall","src":"4225:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4250:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4221:3:27"},"nodeType":"YulFunctionCall","src":"4221:32:27"},"nodeType":"YulIf","src":"4218:52:27"},{"nodeType":"YulAssignment","src":"4279:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4302:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4289:12:27"},"nodeType":"YulFunctionCall","src":"4289:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4279:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"4321:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4351:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4362:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4347:3:27"},"nodeType":"YulFunctionCall","src":"4347:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4334:12:27"},"nodeType":"YulFunctionCall","src":"4334:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4325:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4400:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4375:24:27"},"nodeType":"YulFunctionCall","src":"4375:31:27"},"nodeType":"YulExpressionStatement","src":"4375:31:27"},{"nodeType":"YulAssignment","src":"4415:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4425:5:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4415:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4166:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4177:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4189:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4197:6:27","type":""}],"src":"4113:323:27"},{"body":{"nodeType":"YulBlock","src":"4527:233:27","statements":[{"body":{"nodeType":"YulBlock","src":"4573:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4582:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4585:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4575:6:27"},"nodeType":"YulFunctionCall","src":"4575:12:27"},"nodeType":"YulExpressionStatement","src":"4575:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4548:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4557:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4544:3:27"},"nodeType":"YulFunctionCall","src":"4544:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4569:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4540:3:27"},"nodeType":"YulFunctionCall","src":"4540:32:27"},"nodeType":"YulIf","src":"4537:52:27"},{"nodeType":"YulVariableDeclaration","src":"4598:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4624:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4611:12:27"},"nodeType":"YulFunctionCall","src":"4611:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4602:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4668:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4643:24:27"},"nodeType":"YulFunctionCall","src":"4643:31:27"},"nodeType":"YulExpressionStatement","src":"4643:31:27"},{"nodeType":"YulAssignment","src":"4683:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4693:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4683:6:27"}]},{"nodeType":"YulAssignment","src":"4707:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4739:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4750:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4735:3:27"},"nodeType":"YulFunctionCall","src":"4735:18:27"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"4717:17:27"},"nodeType":"YulFunctionCall","src":"4717:37:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4707:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4485:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4496:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4508:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4516:6:27","type":""}],"src":"4441:319:27"},{"body":{"nodeType":"YulBlock","src":"4866:76:27","statements":[{"nodeType":"YulAssignment","src":"4876:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4888:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4899:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4884:3:27"},"nodeType":"YulFunctionCall","src":"4884:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4876:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4918:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"4929:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4911:6:27"},"nodeType":"YulFunctionCall","src":"4911:25:27"},"nodeType":"YulExpressionStatement","src":"4911:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4835:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4846:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4857:4:27","type":""}],"src":"4765:177:27"},{"body":{"nodeType":"YulBlock","src":"5113:729:27","statements":[{"body":{"nodeType":"YulBlock","src":"5160:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5169:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5172:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5162:6:27"},"nodeType":"YulFunctionCall","src":"5162:12:27"},"nodeType":"YulExpressionStatement","src":"5162:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5134:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5143:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5130:3:27"},"nodeType":"YulFunctionCall","src":"5130:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5155:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5126:3:27"},"nodeType":"YulFunctionCall","src":"5126:33:27"},"nodeType":"YulIf","src":"5123:53:27"},{"nodeType":"YulVariableDeclaration","src":"5185:37:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5212:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5199:12:27"},"nodeType":"YulFunctionCall","src":"5199:23:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5189:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5231:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5241:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5235:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5286:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5295:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5298:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5288:6:27"},"nodeType":"YulFunctionCall","src":"5288:12:27"},"nodeType":"YulExpressionStatement","src":"5288:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5274:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5282:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5271:2:27"},"nodeType":"YulFunctionCall","src":"5271:14:27"},"nodeType":"YulIf","src":"5268:34:27"},{"nodeType":"YulVariableDeclaration","src":"5311:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5367:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5378:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5363:3:27"},"nodeType":"YulFunctionCall","src":"5363:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5387:7:27"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"5337:25:27"},"nodeType":"YulFunctionCall","src":"5337:58:27"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"5315:8:27","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"5325:8:27","type":""}]},{"nodeType":"YulAssignment","src":"5404:18:27","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"5414:8:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5404:6:27"}]},{"nodeType":"YulAssignment","src":"5431:18:27","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"5441:8:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5431:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5458:45:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5488:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5499:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5484:3:27"},"nodeType":"YulFunctionCall","src":"5484:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5471:12:27"},"nodeType":"YulFunctionCall","src":"5471:32:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5462:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5534:5:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"5512:21:27"},"nodeType":"YulFunctionCall","src":"5512:28:27"},"nodeType":"YulExpressionStatement","src":"5512:28:27"},{"nodeType":"YulAssignment","src":"5549:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5559:5:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5549:6:27"}]},{"nodeType":"YulAssignment","src":"5573:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5600:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5611:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:27"},"nodeType":"YulFunctionCall","src":"5596:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5583:12:27"},"nodeType":"YulFunctionCall","src":"5583:32:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5573:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5624:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5657:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5668:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5653:3:27"},"nodeType":"YulFunctionCall","src":"5653:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5640:12:27"},"nodeType":"YulFunctionCall","src":"5640:32:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5628:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5701:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5710:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5713:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5703:6:27"},"nodeType":"YulFunctionCall","src":"5703:12:27"},"nodeType":"YulExpressionStatement","src":"5703:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5687:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5697:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5684:2:27"},"nodeType":"YulFunctionCall","src":"5684:16:27"},"nodeType":"YulIf","src":"5681:36:27"},{"nodeType":"YulVariableDeclaration","src":"5726:34:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5740:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5751:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5736:3:27"},"nodeType":"YulFunctionCall","src":"5736:24:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5730:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5799:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5808:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5811:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5801:6:27"},"nodeType":"YulFunctionCall","src":"5801:12:27"},"nodeType":"YulExpressionStatement","src":"5801:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5780:7:27"},{"name":"_2","nodeType":"YulIdentifier","src":"5789:2:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5776:3:27"},"nodeType":"YulFunctionCall","src":"5776:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"5794:3:27","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5772:3:27"},"nodeType":"YulFunctionCall","src":"5772:26:27"},"nodeType":"YulIf","src":"5769:46:27"},{"nodeType":"YulAssignment","src":"5824:12:27","value":{"name":"_2","nodeType":"YulIdentifier","src":"5834:2:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5824:6:27"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptrt_boolt_uint256t_struct$_RelayData_$1801_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5047:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5058:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5070:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5078:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5086:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5094:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5102:6:27","type":""}],"src":"4947:895:27"},{"body":{"nodeType":"YulBlock","src":"5935:177:27","statements":[{"body":{"nodeType":"YulBlock","src":"5981:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5990:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5993:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5983:6:27"},"nodeType":"YulFunctionCall","src":"5983:12:27"},"nodeType":"YulExpressionStatement","src":"5983:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5956:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5965:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5952:3:27"},"nodeType":"YulFunctionCall","src":"5952:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5977:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5948:3:27"},"nodeType":"YulFunctionCall","src":"5948:32:27"},"nodeType":"YulIf","src":"5945:52:27"},{"nodeType":"YulVariableDeclaration","src":"6006:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6019:12:27"},"nodeType":"YulFunctionCall","src":"6019:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6010:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6076:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6051:24:27"},"nodeType":"YulFunctionCall","src":"6051:31:27"},"nodeType":"YulExpressionStatement","src":"6051:31:27"},{"nodeType":"YulAssignment","src":"6091:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"6101:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6091:6:27"}]}]},"name":"abi_decode_tuple_t_contract$_IRelayHub_$1104","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5901:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5912:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5924:6:27","type":""}],"src":"5847:265:27"},{"body":{"nodeType":"YulBlock","src":"6187:177:27","statements":[{"body":{"nodeType":"YulBlock","src":"6233:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6242:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6245:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6235:6:27"},"nodeType":"YulFunctionCall","src":"6235:12:27"},"nodeType":"YulExpressionStatement","src":"6235:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6208:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6217:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6204:3:27"},"nodeType":"YulFunctionCall","src":"6204:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6229:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6200:3:27"},"nodeType":"YulFunctionCall","src":"6200:32:27"},"nodeType":"YulIf","src":"6197:52:27"},{"nodeType":"YulVariableDeclaration","src":"6258:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6284:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6271:12:27"},"nodeType":"YulFunctionCall","src":"6271:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6262:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6328:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6303:24:27"},"nodeType":"YulFunctionCall","src":"6303:31:27"},"nodeType":"YulExpressionStatement","src":"6303:31:27"},{"nodeType":"YulAssignment","src":"6343:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"6353:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6343:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6153:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6164:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6176:6:27","type":""}],"src":"6117:247:27"},{"body":{"nodeType":"YulBlock","src":"6478:538:27","statements":[{"body":{"nodeType":"YulBlock","src":"6525:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6534:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6537:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6527:6:27"},"nodeType":"YulFunctionCall","src":"6527:12:27"},"nodeType":"YulExpressionStatement","src":"6527:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6499:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6508:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6495:3:27"},"nodeType":"YulFunctionCall","src":"6495:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6520:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6491:3:27"},"nodeType":"YulFunctionCall","src":"6491:33:27"},"nodeType":"YulIf","src":"6488:53:27"},{"nodeType":"YulVariableDeclaration","src":"6550:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6576:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6563:12:27"},"nodeType":"YulFunctionCall","src":"6563:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6554:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6617:5:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6595:21:27"},"nodeType":"YulFunctionCall","src":"6595:28:27"},"nodeType":"YulExpressionStatement","src":"6595:28:27"},{"nodeType":"YulAssignment","src":"6632:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"6642:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6632:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"6656:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6688:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6699:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6684:3:27"},"nodeType":"YulFunctionCall","src":"6684:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6671:12:27"},"nodeType":"YulFunctionCall","src":"6671:32:27"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6660:7:27","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6734:7:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6712:21:27"},"nodeType":"YulFunctionCall","src":"6712:30:27"},"nodeType":"YulExpressionStatement","src":"6712:30:27"},{"nodeType":"YulAssignment","src":"6751:17:27","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6761:7:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6751:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"6777:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6820:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:27"},"nodeType":"YulFunctionCall","src":"6805:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6792:12:27"},"nodeType":"YulFunctionCall","src":"6792:32:27"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"6781:7:27","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"6855:7:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6833:21:27"},"nodeType":"YulFunctionCall","src":"6833:30:27"},"nodeType":"YulExpressionStatement","src":"6833:30:27"},{"nodeType":"YulAssignment","src":"6872:17:27","value":{"name":"value_2","nodeType":"YulIdentifier","src":"6882:7:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6872:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"6898:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6930:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6941:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6926:3:27"},"nodeType":"YulFunctionCall","src":"6926:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6913:12:27"},"nodeType":"YulFunctionCall","src":"6913:32:27"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"6902:7:27","type":""}]},{"expression":{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"6976:7:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6954:21:27"},"nodeType":"YulFunctionCall","src":"6954:30:27"},"nodeType":"YulExpressionStatement","src":"6954:30:27"},{"nodeType":"YulAssignment","src":"6993:17:27","value":{"name":"value_3","nodeType":"YulIdentifier","src":"7003:7:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6993:6:27"}]}]},"name":"abi_decode_tuple_t_boolt_boolt_boolt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6420:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6431:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6443:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6451:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6459:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6467:6:27","type":""}],"src":"6369:647:27"},{"body":{"nodeType":"YulBlock","src":"7142:98:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7159:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7170:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7152:6:27"},"nodeType":"YulFunctionCall","src":"7152:21:27"},"nodeType":"YulExpressionStatement","src":"7152:21:27"},{"nodeType":"YulAssignment","src":"7182:52:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7207:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7219:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7230:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7215:3:27"},"nodeType":"YulFunctionCall","src":"7215:18:27"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"7190:16:27"},"nodeType":"YulFunctionCall","src":"7190:44:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7182:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7111:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7122:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7133:4:27","type":""}],"src":"7021:219:27"},{"body":{"nodeType":"YulBlock","src":"7412:273:27","statements":[{"nodeType":"YulAssignment","src":"7422:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7434:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7445:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7430:3:27"},"nodeType":"YulFunctionCall","src":"7430:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7422:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7465:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7482:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7476:5:27"},"nodeType":"YulFunctionCall","src":"7476:13:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7458:6:27"},"nodeType":"YulFunctionCall","src":"7458:32:27"},"nodeType":"YulExpressionStatement","src":"7458:32:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7510:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7521:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7506:3:27"},"nodeType":"YulFunctionCall","src":"7506:20:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7538:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7546:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7534:3:27"},"nodeType":"YulFunctionCall","src":"7534:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7528:5:27"},"nodeType":"YulFunctionCall","src":"7528:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7499:6:27"},"nodeType":"YulFunctionCall","src":"7499:54:27"},"nodeType":"YulExpressionStatement","src":"7499:54:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7573:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7584:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7569:3:27"},"nodeType":"YulFunctionCall","src":"7569:20:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7601:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7609:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7597:3:27"},"nodeType":"YulFunctionCall","src":"7597:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7591:5:27"},"nodeType":"YulFunctionCall","src":"7591:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7562:6:27"},"nodeType":"YulFunctionCall","src":"7562:54:27"},"nodeType":"YulExpressionStatement","src":"7562:54:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7636:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7647:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7632:3:27"},"nodeType":"YulFunctionCall","src":"7632:20:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7664:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7672:4:27","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7660:3:27"},"nodeType":"YulFunctionCall","src":"7660:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7654:5:27"},"nodeType":"YulFunctionCall","src":"7654:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7625:6:27"},"nodeType":"YulFunctionCall","src":"7625:54:27"},"nodeType":"YulExpressionStatement","src":"7625:54:27"}]},"name":"abi_encode_tuple_t_struct$_GasAndDataLimits_$680_memory_ptr__to_t_struct$_GasAndDataLimits_$680_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7381:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7392:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7403:4:27","type":""}],"src":"7245:440:27"},{"body":{"nodeType":"YulBlock","src":"7790:354:27","statements":[{"body":{"nodeType":"YulBlock","src":"7836:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7845:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7848:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7838:6:27"},"nodeType":"YulFunctionCall","src":"7838:12:27"},"nodeType":"YulExpressionStatement","src":"7838:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7811:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7820:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7807:3:27"},"nodeType":"YulFunctionCall","src":"7807:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7832:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7803:3:27"},"nodeType":"YulFunctionCall","src":"7803:32:27"},"nodeType":"YulIf","src":"7800:52:27"},{"nodeType":"YulVariableDeclaration","src":"7861:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7887:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7874:12:27"},"nodeType":"YulFunctionCall","src":"7874:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7865:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7931:5:27"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7906:24:27"},"nodeType":"YulFunctionCall","src":"7906:31:27"},"nodeType":"YulExpressionStatement","src":"7906:31:27"},{"nodeType":"YulAssignment","src":"7946:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"7956:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7946:6:27"}]},{"nodeType":"YulAssignment","src":"7970:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8002:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8013:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7998:3:27"},"nodeType":"YulFunctionCall","src":"7998:18:27"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"7980:17:27"},"nodeType":"YulFunctionCall","src":"7980:37:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7970:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"8026:47:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8058:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8069:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8054:3:27"},"nodeType":"YulFunctionCall","src":"8054:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8041:12:27"},"nodeType":"YulFunctionCall","src":"8041:32:27"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"8030:7:27","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8104:7:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"8082:21:27"},"nodeType":"YulFunctionCall","src":"8082:30:27"},"nodeType":"YulExpressionStatement","src":"8082:30:27"},{"nodeType":"YulAssignment","src":"8121:17:27","value":{"name":"value_1","nodeType":"YulIdentifier","src":"8131:7:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8121:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_bytes4t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7740:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7751:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7763:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7771:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7779:6:27","type":""}],"src":"7690:454:27"},{"body":{"nodeType":"YulBlock","src":"8294:168:27","statements":[{"nodeType":"YulAssignment","src":"8304:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8316:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8327:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8312:3:27"},"nodeType":"YulFunctionCall","src":"8312:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8304:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8346:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8361:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8369:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8357:3:27"},"nodeType":"YulFunctionCall","src":"8357:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8339:6:27"},"nodeType":"YulFunctionCall","src":"8339:74:27"},"nodeType":"YulExpressionStatement","src":"8339:74:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8433:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8444:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8429:3:27"},"nodeType":"YulFunctionCall","src":"8429:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"8449:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8422:6:27"},"nodeType":"YulFunctionCall","src":"8422:34:27"},"nodeType":"YulExpressionStatement","src":"8422:34:27"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8255:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8266:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8274:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8285:4:27","type":""}],"src":"8149:313:27"},{"body":{"nodeType":"YulBlock","src":"8641:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8658:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8669:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8651:6:27"},"nodeType":"YulFunctionCall","src":"8651:21:27"},"nodeType":"YulExpressionStatement","src":"8651:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8692:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8703:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8688:3:27"},"nodeType":"YulFunctionCall","src":"8688:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8708:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8681:6:27"},"nodeType":"YulFunctionCall","src":"8681:30:27"},"nodeType":"YulExpressionStatement","src":"8681:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8731:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8742:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8727:3:27"},"nodeType":"YulFunctionCall","src":"8727:18:27"},{"hexValue":"746172676574206973206e6f7420612076616c6964204952656c6179487562","kind":"string","nodeType":"YulLiteral","src":"8747:33:27","type":"","value":"target is not a valid IRelayHub"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8720:6:27"},"nodeType":"YulFunctionCall","src":"8720:61:27"},"nodeType":"YulExpressionStatement","src":"8720:61:27"},{"nodeType":"YulAssignment","src":"8790:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8802:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8813:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8798:3:27"},"nodeType":"YulFunctionCall","src":"8798:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8790:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b62b61dba941996cba530085b5313ea27667d0ee2b85e1209b8aedd3e5e9398e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8618:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8632:4:27","type":""}],"src":"8467:355:27"},{"body":{"nodeType":"YulBlock","src":"8875:234:27","statements":[{"body":{"nodeType":"YulBlock","src":"8910:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8931:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8934:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8924:6:27"},"nodeType":"YulFunctionCall","src":"8924:88:27"},"nodeType":"YulExpressionStatement","src":"8924:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9032:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9035:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9025:6:27"},"nodeType":"YulFunctionCall","src":"9025:15:27"},"nodeType":"YulExpressionStatement","src":"9025:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9060:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9063:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9053:6:27"},"nodeType":"YulFunctionCall","src":"9053:15:27"},"nodeType":"YulExpressionStatement","src":"9053:15:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8891:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8898:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8894:3:27"},"nodeType":"YulFunctionCall","src":"8894:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8888:2:27"},"nodeType":"YulFunctionCall","src":"8888:13:27"},"nodeType":"YulIf","src":"8885:193:27"},{"nodeType":"YulAssignment","src":"9087:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9098:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"9101:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9094:3:27"},"nodeType":"YulFunctionCall","src":"9094:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9087:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8858:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"8861:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8867:3:27","type":""}],"src":"8827:282:27"},{"body":{"nodeType":"YulBlock","src":"9288:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9305:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9316:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9298:6:27"},"nodeType":"YulFunctionCall","src":"9298:21:27"},"nodeType":"YulExpressionStatement","src":"9298:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9339:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9350:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9335:3:27"},"nodeType":"YulFunctionCall","src":"9335:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9355:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9328:6:27"},"nodeType":"YulFunctionCall","src":"9328:30:27"},"nodeType":"YulExpressionStatement","src":"9328:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9378:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9389:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9374:3:27"},"nodeType":"YulFunctionCall","src":"9374:18:27"},{"hexValue":"746172676574206973206e6f7420612076616c69642049466f72776172646572","kind":"string","nodeType":"YulLiteral","src":"9394:34:27","type":"","value":"target is not a valid IForwarder"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9367:6:27"},"nodeType":"YulFunctionCall","src":"9367:62:27"},"nodeType":"YulExpressionStatement","src":"9367:62:27"},{"nodeType":"YulAssignment","src":"9438:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9450:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9461:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9446:3:27"},"nodeType":"YulFunctionCall","src":"9446:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9438:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f35ce95c64a40a715e95a1b7d3fe84cf613d64347e430eb5f35903ecdb7e24d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9265:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9279:4:27","type":""}],"src":"9114:356:27"},{"body":{"nodeType":"YulBlock","src":"9649:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9666:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9677:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9659:6:27"},"nodeType":"YulFunctionCall","src":"9659:21:27"},"nodeType":"YulExpressionStatement","src":"9659:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9700:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9711:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9696:3:27"},"nodeType":"YulFunctionCall","src":"9696:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9716:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9689:6:27"},"nodeType":"YulFunctionCall","src":"9689:30:27"},"nodeType":"YulExpressionStatement","src":"9689:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9739:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9750:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9735:3:27"},"nodeType":"YulFunctionCall","src":"9735:18:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"9755:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9728:6:27"},"nodeType":"YulFunctionCall","src":"9728:62:27"},"nodeType":"YulExpressionStatement","src":"9728:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9810:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9821:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9806:3:27"},"nodeType":"YulFunctionCall","src":"9806:18:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"9826:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9799:6:27"},"nodeType":"YulFunctionCall","src":"9799:36:27"},"nodeType":"YulExpressionStatement","src":"9799:36:27"},{"nodeType":"YulAssignment","src":"9844:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9856:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9867:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9852:3:27"},"nodeType":"YulFunctionCall","src":"9852:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9844:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9626:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9640:4:27","type":""}],"src":"9475:402:27"},{"body":{"nodeType":"YulBlock","src":"10056:180:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10073:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10084:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10066:6:27"},"nodeType":"YulFunctionCall","src":"10066:21:27"},"nodeType":"YulExpressionStatement","src":"10066:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10107:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10118:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10103:3:27"},"nodeType":"YulFunctionCall","src":"10103:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10123:2:27","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10096:6:27"},"nodeType":"YulFunctionCall","src":"10096:30:27"},"nodeType":"YulExpressionStatement","src":"10096:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10146:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10157:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10142:3:27"},"nodeType":"YulFunctionCall","src":"10142:18:27"},{"hexValue":"63616e206f6e6c792062652063616c6c65642062792052656c6179487562","kind":"string","nodeType":"YulLiteral","src":"10162:32:27","type":"","value":"can only be called by RelayHub"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10135:6:27"},"nodeType":"YulFunctionCall","src":"10135:60:27"},"nodeType":"YulExpressionStatement","src":"10135:60:27"},{"nodeType":"YulAssignment","src":"10204:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10216:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10227:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10212:3:27"},"nodeType":"YulFunctionCall","src":"10212:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10204:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10033:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10047:4:27","type":""}],"src":"9882:354:27"},{"body":{"nodeType":"YulBlock","src":"10345:223:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:51:27","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"10394:11:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10381:12:27"},"nodeType":"YulFunctionCall","src":"10381:25:27"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"10359:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10496:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10505:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10508:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10498:6:27"},"nodeType":"YulFunctionCall","src":"10498:12:27"},"nodeType":"YulExpressionStatement","src":"10498:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"10429:18:27"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"10457:12:27"},"nodeType":"YulFunctionCall","src":"10457:14:27"},{"name":"base_ref","nodeType":"YulIdentifier","src":"10473:8:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10453:3:27"},"nodeType":"YulFunctionCall","src":"10453:29:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10488:3:27","type":"","value":"254"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10484:3:27"},"nodeType":"YulFunctionCall","src":"10484:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10449:3:27"},"nodeType":"YulFunctionCall","src":"10449:44:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10425:3:27"},"nodeType":"YulFunctionCall","src":"10425:69:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10418:6:27"},"nodeType":"YulFunctionCall","src":"10418:77:27"},"nodeType":"YulIf","src":"10415:97:27"},{"nodeType":"YulAssignment","src":"10521:41:27","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"10533:8:27"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"10543:18:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10529:3:27"},"nodeType":"YulFunctionCall","src":"10529:33:27"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"10521:4:27"}]}]},"name":"access_calldata_tail_t_struct$_RelayData_$1801_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"10310:8:27","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"10320:11:27","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"10336:4:27","type":""}],"src":"10241:327:27"},{"body":{"nodeType":"YulBlock","src":"10747:174:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10775:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10757:6:27"},"nodeType":"YulFunctionCall","src":"10757:21:27"},"nodeType":"YulExpressionStatement","src":"10757:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10798:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10809:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10794:3:27"},"nodeType":"YulFunctionCall","src":"10794:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10814:2:27","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10787:6:27"},"nodeType":"YulFunctionCall","src":"10787:30:27"},"nodeType":"YulExpressionStatement","src":"10787:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10837:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10848:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10833:3:27"},"nodeType":"YulFunctionCall","src":"10833:18:27"},{"hexValue":"466f72776172646572206973206e6f742074727573746564","kind":"string","nodeType":"YulLiteral","src":"10853:26:27","type":"","value":"Forwarder is not trusted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10826:6:27"},"nodeType":"YulFunctionCall","src":"10826:54:27"},"nodeType":"YulExpressionStatement","src":"10826:54:27"},{"nodeType":"YulAssignment","src":"10889:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10901:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10912:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10897:3:27"},"nodeType":"YulFunctionCall","src":"10897:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10889:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10724:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10738:4:27","type":""}],"src":"10573:348:27"},{"body":{"nodeType":"YulBlock","src":"11034:223:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11044:51:27","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"11083:11:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11070:12:27"},"nodeType":"YulFunctionCall","src":"11070:25:27"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"11048:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11185:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11187:6:27"},"nodeType":"YulFunctionCall","src":"11187:12:27"},"nodeType":"YulExpressionStatement","src":"11187:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"11118:18:27"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"11146:12:27"},"nodeType":"YulFunctionCall","src":"11146:14:27"},{"name":"base_ref","nodeType":"YulIdentifier","src":"11162:8:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11142:3:27"},"nodeType":"YulFunctionCall","src":"11142:29:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11177:3:27","type":"","value":"222"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11173:3:27"},"nodeType":"YulFunctionCall","src":"11173:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11138:3:27"},"nodeType":"YulFunctionCall","src":"11138:44:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11114:3:27"},"nodeType":"YulFunctionCall","src":"11114:69:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11107:6:27"},"nodeType":"YulFunctionCall","src":"11107:77:27"},"nodeType":"YulIf","src":"11104:97:27"},{"nodeType":"YulAssignment","src":"11210:41:27","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"11222:8:27"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"11232:18:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:27"},"nodeType":"YulFunctionCall","src":"11218:33:27"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"11210:4:27"}]}]},"name":"access_calldata_tail_t_struct$_ForwardRequest_$568_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"10999:8:27","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"11009:11:27","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"11025:4:27","type":""}],"src":"10926:331:27"},{"body":{"nodeType":"YulBlock","src":"11436:178:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11453:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11464:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11446:6:27"},"nodeType":"YulFunctionCall","src":"11446:21:27"},"nodeType":"YulExpressionStatement","src":"11446:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11487:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11498:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11483:3:27"},"nodeType":"YulFunctionCall","src":"11483:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11503:2:27","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11476:6:27"},"nodeType":"YulFunctionCall","src":"11476:30:27"},"nodeType":"YulExpressionStatement","src":"11476:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11526:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11537:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11522:3:27"},"nodeType":"YulFunctionCall","src":"11522:18:27"},{"hexValue":"76616c7565207472616e73666572206e6f7420737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"11542:30:27","type":"","value":"value transfer not supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11515:6:27"},"nodeType":"YulFunctionCall","src":"11515:58:27"},"nodeType":"YulExpressionStatement","src":"11515:58:27"},{"nodeType":"YulAssignment","src":"11582:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11594:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11605:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11590:3:27"},"nodeType":"YulFunctionCall","src":"11590:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11582:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e16e7b15b3ab333edb68f7b1a990600092795acc5fc3b3a41ef443557f01e8e8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11413:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11427:4:27","type":""}],"src":"11262:352:27"},{"body":{"nodeType":"YulBlock","src":"11713:427:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11723:51:27","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"11762:11:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11749:12:27"},"nodeType":"YulFunctionCall","src":"11749:25:27"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"11727:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11863:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11872:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11875:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11865:6:27"},"nodeType":"YulFunctionCall","src":"11865:12:27"},"nodeType":"YulExpressionStatement","src":"11865:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"11797:18:27"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"11825:12:27"},"nodeType":"YulFunctionCall","src":"11825:14:27"},{"name":"base_ref","nodeType":"YulIdentifier","src":"11841:8:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11821:3:27"},"nodeType":"YulFunctionCall","src":"11821:29:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11856:2:27","type":"","value":"30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11852:3:27"},"nodeType":"YulFunctionCall","src":"11852:7:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11817:3:27"},"nodeType":"YulFunctionCall","src":"11817:43:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11793:3:27"},"nodeType":"YulFunctionCall","src":"11793:68:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11786:6:27"},"nodeType":"YulFunctionCall","src":"11786:76:27"},"nodeType":"YulIf","src":"11783:96:27"},{"nodeType":"YulVariableDeclaration","src":"11888:47:27","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"11906:8:27"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"11916:18:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11902:3:27"},"nodeType":"YulFunctionCall","src":"11902:33:27"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"11892:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11944:30:27","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"11967:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11954:12:27"},"nodeType":"YulFunctionCall","src":"11954:20:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11944:6:27"}]},{"body":{"nodeType":"YulBlock","src":"12017:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12026:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12029:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12019:6:27"},"nodeType":"YulFunctionCall","src":"12019:12:27"},"nodeType":"YulExpressionStatement","src":"12019:12:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11989:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11997:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11986:2:27"},"nodeType":"YulFunctionCall","src":"11986:30:27"},"nodeType":"YulIf","src":"11983:50:27"},{"nodeType":"YulAssignment","src":"12042:25:27","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"12054:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12062:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12050:3:27"},"nodeType":"YulFunctionCall","src":"12050:17:27"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"12042:4:27"}]},{"body":{"nodeType":"YulBlock","src":"12118:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12127:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12130:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12120:6:27"},"nodeType":"YulFunctionCall","src":"12120:12:27"},"nodeType":"YulExpressionStatement","src":"12120:12:27"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"12083:4:27"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"12093:12:27"},"nodeType":"YulFunctionCall","src":"12093:14:27"},{"name":"length","nodeType":"YulIdentifier","src":"12109:6:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12089:3:27"},"nodeType":"YulFunctionCall","src":"12089:27:27"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"12079:3:27"},"nodeType":"YulFunctionCall","src":"12079:38:27"},"nodeType":"YulIf","src":"12076:58:27"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"11670:8:27","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"11680:11:27","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"11696:4:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"11702:6:27","type":""}],"src":"11619:521:27"},{"body":{"nodeType":"YulBlock","src":"12319:178:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12336:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12347:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12329:6:27"},"nodeType":"YulFunctionCall","src":"12329:21:27"},"nodeType":"YulExpressionStatement","src":"12329:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12370:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12381:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12366:3:27"},"nodeType":"YulFunctionCall","src":"12366:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"12386:2:27","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12359:6:27"},"nodeType":"YulFunctionCall","src":"12359:30:27"},"nodeType":"YulExpressionStatement","src":"12359:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12409:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12420:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12405:3:27"},"nodeType":"YulFunctionCall","src":"12405:18:27"},{"hexValue":"73686f756c642068617665206e6f207061796d617374657244617461","kind":"string","nodeType":"YulLiteral","src":"12425:30:27","type":"","value":"should have no paymasterData"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12398:6:27"},"nodeType":"YulFunctionCall","src":"12398:58:27"},"nodeType":"YulExpressionStatement","src":"12398:58:27"},{"nodeType":"YulAssignment","src":"12465:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12488:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:27"},"nodeType":"YulFunctionCall","src":"12473:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12465:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_182b40eb1561ed39a86edc754bf2a5f045daef24c145773d4b18340a470251b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12296:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12310:4:27","type":""}],"src":"12145:352:27"},{"body":{"nodeType":"YulBlock","src":"12676:177:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12693:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12704:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12686:6:27"},"nodeType":"YulFunctionCall","src":"12686:21:27"},"nodeType":"YulExpressionStatement","src":"12686:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12727:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12738:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12723:3:27"},"nodeType":"YulFunctionCall","src":"12723:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"12743:2:27","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12716:6:27"},"nodeType":"YulFunctionCall","src":"12716:30:27"},"nodeType":"YulExpressionStatement","src":"12716:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12766:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12777:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12762:3:27"},"nodeType":"YulFunctionCall","src":"12762:18:27"},{"hexValue":"73686f756c642068617665206e6f20617070726f76616c44617461","kind":"string","nodeType":"YulLiteral","src":"12782:29:27","type":"","value":"should have no approvalData"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12755:6:27"},"nodeType":"YulFunctionCall","src":"12755:57:27"},"nodeType":"YulExpressionStatement","src":"12755:57:27"},{"nodeType":"YulAssignment","src":"12821:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12833:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12844:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12829:3:27"},"nodeType":"YulFunctionCall","src":"12829:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12821:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fccc4b6995a94cdc6e6e9a1b088f6ad31bd641a326f5e5ddcc3773886206aa37__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12653:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12667:4:27","type":""}],"src":"12502:351:27"},{"body":{"nodeType":"YulBlock","src":"13032:178:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13049:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13060:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13042:6:27"},"nodeType":"YulFunctionCall","src":"13042:21:27"},"nodeType":"YulExpressionStatement","src":"13042:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13083:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13094:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13079:3:27"},"nodeType":"YulFunctionCall","src":"13079:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13099:2:27","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13072:6:27"},"nodeType":"YulFunctionCall","src":"13072:30:27"},"nodeType":"YulExpressionStatement","src":"13072:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13122:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13133:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13118:3:27"},"nodeType":"YulFunctionCall","src":"13118:18:27"},{"hexValue":"617070726f76616c446174613a20696e76616c6964206c656e677468","kind":"string","nodeType":"YulLiteral","src":"13138:30:27","type":"","value":"approvalData: invalid length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13111:6:27"},"nodeType":"YulFunctionCall","src":"13111:58:27"},"nodeType":"YulExpressionStatement","src":"13111:58:27"},{"nodeType":"YulAssignment","src":"13178:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13190:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13201:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13186:3:27"},"nodeType":"YulFunctionCall","src":"13186:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13178:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_7d8c0e673c54c705986df4dd7c55d4166770d9449a60c6ca1c12bca8c8c62ee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13009:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13023:4:27","type":""}],"src":"12858:352:27"},{"body":{"nodeType":"YulBlock","src":"13389:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13406:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13417:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13399:6:27"},"nodeType":"YulFunctionCall","src":"13399:21:27"},"nodeType":"YulExpressionStatement","src":"13399:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13440:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13451:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13436:3:27"},"nodeType":"YulFunctionCall","src":"13436:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13456:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13429:6:27"},"nodeType":"YulFunctionCall","src":"13429:30:27"},"nodeType":"YulExpressionStatement","src":"13429:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13479:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13490:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13475:3:27"},"nodeType":"YulFunctionCall","src":"13475:18:27"},{"hexValue":"7061796d6173746572446174613a20696e76616c6964206c656e677468","kind":"string","nodeType":"YulLiteral","src":"13495:31:27","type":"","value":"paymasterData: invalid length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13468:6:27"},"nodeType":"YulFunctionCall","src":"13468:59:27"},"nodeType":"YulExpressionStatement","src":"13468:59:27"},{"nodeType":"YulAssignment","src":"13536:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13548:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13559:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13544:3:27"},"nodeType":"YulFunctionCall","src":"13544:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13536:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13366:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13380:4:27","type":""}],"src":"13215:353:27"},{"body":{"nodeType":"YulBlock","src":"13747:172:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13775:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13757:6:27"},"nodeType":"YulFunctionCall","src":"13757:21:27"},"nodeType":"YulExpressionStatement","src":"13757:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13798:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13809:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13794:3:27"},"nodeType":"YulFunctionCall","src":"13794:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13814:2:27","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13787:6:27"},"nodeType":"YulFunctionCall","src":"13787:30:27"},"nodeType":"YulExpressionStatement","src":"13787:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13837:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13848:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13833:3:27"},"nodeType":"YulFunctionCall","src":"13833:18:27"},{"hexValue":"73656e646572206e6f742077686974656c6973746564","kind":"string","nodeType":"YulLiteral","src":"13853:24:27","type":"","value":"sender not whitelisted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13826:6:27"},"nodeType":"YulFunctionCall","src":"13826:52:27"},"nodeType":"YulExpressionStatement","src":"13826:52:27"},{"nodeType":"YulAssignment","src":"13887:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13899:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13910:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13895:3:27"},"nodeType":"YulFunctionCall","src":"13895:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13887:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13724:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13738:4:27","type":""}],"src":"13573:346:27"},{"body":{"nodeType":"YulBlock","src":"14098:172:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14115:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14126:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14108:6:27"},"nodeType":"YulFunctionCall","src":"14108:21:27"},"nodeType":"YulExpressionStatement","src":"14108:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14149:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14160:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14145:3:27"},"nodeType":"YulFunctionCall","src":"14145:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14165:2:27","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14138:6:27"},"nodeType":"YulFunctionCall","src":"14138:30:27"},"nodeType":"YulExpressionStatement","src":"14138:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14188:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14199:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14184:3:27"},"nodeType":"YulFunctionCall","src":"14184:18:27"},{"hexValue":"746172676574206e6f742077686974656c6973746564","kind":"string","nodeType":"YulLiteral","src":"14204:24:27","type":"","value":"target not whitelisted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14177:6:27"},"nodeType":"YulFunctionCall","src":"14177:52:27"},"nodeType":"YulExpressionStatement","src":"14177:52:27"},{"nodeType":"YulAssignment","src":"14238:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14250:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14261:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14246:3:27"},"nodeType":"YulFunctionCall","src":"14246:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14238:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14075:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14089:4:27","type":""}],"src":"13924:346:27"},{"body":{"nodeType":"YulBlock","src":"14449:172:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14466:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14477:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14459:6:27"},"nodeType":"YulFunctionCall","src":"14459:21:27"},"nodeType":"YulExpressionStatement","src":"14459:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14500:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14511:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14496:3:27"},"nodeType":"YulFunctionCall","src":"14496:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14516:2:27","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14489:6:27"},"nodeType":"YulFunctionCall","src":"14489:30:27"},"nodeType":"YulExpressionStatement","src":"14489:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14539:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14550:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14535:3:27"},"nodeType":"YulFunctionCall","src":"14535:18:27"},{"hexValue":"6d6574686f64206e6f742077686974656c6973746564","kind":"string","nodeType":"YulLiteral","src":"14555:24:27","type":"","value":"method not whitelisted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14528:6:27"},"nodeType":"YulFunctionCall","src":"14528:52:27"},"nodeType":"YulExpressionStatement","src":"14528:52:27"},{"nodeType":"YulAssignment","src":"14589:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14601:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14612:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14597:3:27"},"nodeType":"YulFunctionCall","src":"14597:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14589:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_bfa8d30daea23bf7e1e8f319983187fd2d1c87718886df4862ba9690a35f1c97__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14426:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14440:4:27","type":""}],"src":"14275:346:27"},{"body":{"nodeType":"YulBlock","src":"14800:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14817:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14828:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14810:6:27"},"nodeType":"YulFunctionCall","src":"14810:21:27"},"nodeType":"YulExpressionStatement","src":"14810:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14851:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14862:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14847:3:27"},"nodeType":"YulFunctionCall","src":"14847:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14867:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14840:6:27"},"nodeType":"YulFunctionCall","src":"14840:30:27"},"nodeType":"YulExpressionStatement","src":"14840:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14890:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14901:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14886:3:27"},"nodeType":"YulFunctionCall","src":"14886:18:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"14906:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14879:6:27"},"nodeType":"YulFunctionCall","src":"14879:62:27"},"nodeType":"YulExpressionStatement","src":"14879:62:27"},{"nodeType":"YulAssignment","src":"14950:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14962:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14973:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14958:3:27"},"nodeType":"YulFunctionCall","src":"14958:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14950:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14777:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14791:4:27","type":""}],"src":"14626:356:27"},{"body":{"nodeType":"YulBlock","src":"15124:137:27","statements":[{"nodeType":"YulVariableDeclaration","src":"15134:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15154:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15148:5:27"},"nodeType":"YulFunctionCall","src":"15148:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15138:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15196:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15204:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15192:3:27"},"nodeType":"YulFunctionCall","src":"15192:17:27"},{"name":"pos","nodeType":"YulIdentifier","src":"15211:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"15216:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"15170:21:27"},"nodeType":"YulFunctionCall","src":"15170:53:27"},"nodeType":"YulExpressionStatement","src":"15170:53:27"},{"nodeType":"YulAssignment","src":"15232:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15243:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"15248:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15239:3:27"},"nodeType":"YulFunctionCall","src":"15239:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15232:3:27"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15100:3:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15105:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15116:3:27","type":""}],"src":"14987:274:27"},{"body":{"nodeType":"YulBlock","src":"15440:178:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15457:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15468:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15450:6:27"},"nodeType":"YulFunctionCall","src":"15450:21:27"},"nodeType":"YulExpressionStatement","src":"15450:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15502:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15487:3:27"},"nodeType":"YulFunctionCall","src":"15487:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"15507:2:27","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15480:6:27"},"nodeType":"YulFunctionCall","src":"15480:30:27"},"nodeType":"YulExpressionStatement","src":"15480:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15530:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15541:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15526:3:27"},"nodeType":"YulFunctionCall","src":"15526:18:27"},{"hexValue":"697354727573746564466f727761726465723a207265766572746564","kind":"string","nodeType":"YulLiteral","src":"15546:30:27","type":"","value":"isTrustedForwarder: reverted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15519:6:27"},"nodeType":"YulFunctionCall","src":"15519:58:27"},"nodeType":"YulExpressionStatement","src":"15519:58:27"},{"nodeType":"YulAssignment","src":"15586:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15598:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15609:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15594:3:27"},"nodeType":"YulFunctionCall","src":"15594:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15586:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15417:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15431:4:27","type":""}],"src":"15266:352:27"},{"body":{"nodeType":"YulBlock","src":"15797:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15814:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15825:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15807:6:27"},"nodeType":"YulFunctionCall","src":"15807:21:27"},"nodeType":"YulExpressionStatement","src":"15807:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15848:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15859:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15844:3:27"},"nodeType":"YulFunctionCall","src":"15844:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"15864:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15837:6:27"},"nodeType":"YulFunctionCall","src":"15837:30:27"},"nodeType":"YulExpressionStatement","src":"15837:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15887:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15898:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15883:3:27"},"nodeType":"YulFunctionCall","src":"15883:18:27"},{"hexValue":"697354727573746564466f727761726465723a2062616420726573706f6e7365","kind":"string","nodeType":"YulLiteral","src":"15903:34:27","type":"","value":"isTrustedForwarder: bad response"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15876:6:27"},"nodeType":"YulFunctionCall","src":"15876:62:27"},"nodeType":"YulExpressionStatement","src":"15876:62:27"},{"nodeType":"YulAssignment","src":"15947:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15959:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15970:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15955:3:27"},"nodeType":"YulFunctionCall","src":"15955:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15947:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15774:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15788:4:27","type":""}],"src":"15623:356:27"},{"body":{"nodeType":"YulBlock","src":"16062:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"16108:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16117:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16120:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16110:6:27"},"nodeType":"YulFunctionCall","src":"16110:12:27"},"nodeType":"YulExpressionStatement","src":"16110:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16083:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16092:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16079:3:27"},"nodeType":"YulFunctionCall","src":"16079:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"16104:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16075:3:27"},"nodeType":"YulFunctionCall","src":"16075:32:27"},"nodeType":"YulIf","src":"16072:52:27"},{"nodeType":"YulVariableDeclaration","src":"16133:29:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16152:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16146:5:27"},"nodeType":"YulFunctionCall","src":"16146:16:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16137:5:27","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16193:5:27"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"16171:21:27"},"nodeType":"YulFunctionCall","src":"16171:28:27"},"nodeType":"YulExpressionStatement","src":"16171:28:27"},{"nodeType":"YulAssignment","src":"16208:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"16218:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16208:6:27"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16028:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16039:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16051:6:27","type":""}],"src":"15984:245:27"},{"body":{"nodeType":"YulBlock","src":"16408:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16425:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16436:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16418:6:27"},"nodeType":"YulFunctionCall","src":"16418:21:27"},"nodeType":"YulExpressionStatement","src":"16418:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16459:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16470:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16455:3:27"},"nodeType":"YulFunctionCall","src":"16455:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"16475:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16448:6:27"},"nodeType":"YulFunctionCall","src":"16448:30:27"},"nodeType":"YulExpressionStatement","src":"16448:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16498:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16509:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16494:3:27"},"nodeType":"YulFunctionCall","src":"16494:18:27"},{"hexValue":"696e76616c696420666f7277617264657220666f7220726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"16514:33:27","type":"","value":"invalid forwarder for recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16487:6:27"},"nodeType":"YulFunctionCall","src":"16487:61:27"},"nodeType":"YulExpressionStatement","src":"16487:61:27"},{"nodeType":"YulAssignment","src":"16557:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16569:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16580:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16565:3:27"},"nodeType":"YulFunctionCall","src":"16565:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16557:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16385:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16399:4:27","type":""}],"src":"16234:355:27"},{"body":{"nodeType":"YulBlock","src":"16693:149:27","statements":[{"nodeType":"YulAssignment","src":"16703:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16715:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16726:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16711:3:27"},"nodeType":"YulFunctionCall","src":"16711:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16703:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16745:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16760:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16768:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16756:3:27"},"nodeType":"YulFunctionCall","src":"16756:79:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16738:6:27"},"nodeType":"YulFunctionCall","src":"16738:98:27"},"nodeType":"YulExpressionStatement","src":"16738:98:27"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16662:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16673:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16684:4:27","type":""}],"src":"16594:248:27"},{"body":{"nodeType":"YulBlock","src":"17021:176:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17038:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17049:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17031:6:27"},"nodeType":"YulFunctionCall","src":"17031:21:27"},"nodeType":"YulExpressionStatement","src":"17031:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17072:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17083:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17068:3:27"},"nodeType":"YulFunctionCall","src":"17068:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"17088:2:27","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17061:6:27"},"nodeType":"YulFunctionCall","src":"17061:30:27"},"nodeType":"YulExpressionStatement","src":"17061:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17111:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17122:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17107:3:27"},"nodeType":"YulFunctionCall","src":"17107:18:27"},{"hexValue":"726561644279746573343a206461746120746f6f2073686f7274","kind":"string","nodeType":"YulLiteral","src":"17127:28:27","type":"","value":"readBytes4: data too short"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17100:6:27"},"nodeType":"YulFunctionCall","src":"17100:56:27"},"nodeType":"YulExpressionStatement","src":"17100:56:27"},{"nodeType":"YulAssignment","src":"17165:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17177:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17188:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17173:3:27"},"nodeType":"YulFunctionCall","src":"17173:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17165:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3fe8b8d7a4d7297198f00bec48c1f664c9a2ab21f2fa0d4a68337ee48c21898__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16998:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17012:4:27","type":""}],"src":"16847:350:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_2e4bcc216326d2d371e2433ec8e1af9c54827701515af7cd10f9acc79120d313__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"relay hub address not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_RelayRequest_$1808_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 64) { revert(0, 0) }\n        value0 := _2\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        value5 := calldataload(add(headStart, 96))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bool__to_t_bytes_memory_ptr_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes4(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_bytes4(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_boolt_uint256t_struct$_RelayData_$1801_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset_1)\n        if slt(sub(dataEnd, _2), 256) { revert(0, 0) }\n        value4 := _2\n    }\n    function abi_decode_tuple_t_contract$_IRelayHub_$1104(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_boolt_boolt_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_bool(value_3)\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_GasAndDataLimits_$680_memory_ptr__to_t_struct$_GasAndDataLimits_$680_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_decode_tuple_t_addresst_bytes4t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_bytes4(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_b62b61dba941996cba530085b5313ea27667d0ee2b85e1209b8aedd3e5e9398e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"target is not a valid IRelayHub\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_4f35ce95c64a40a715e95a1b7d3fe84cf613d64347e430eb5f35903ecdb7e24d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"target is not a valid IForwarder\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d169f51e5e283c8c890697eb898c30495d34dbb12b80eb91ce172a0d9c75ebfb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"can only be called by RelayHub\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_struct$_RelayData_$1801_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(254)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function abi_encode_tuple_t_stringliteral_3a2fca03255f31860c82d52f1191f77065f7ff670c017cd47e3568fc231bf429__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Forwarder is not trusted\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_struct$_ForwardRequest_$568_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(222)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function abi_encode_tuple_t_stringliteral_e16e7b15b3ab333edb68f7b1a990600092795acc5fc3b3a41ef443557f01e8e8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"value transfer not supported\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_182b40eb1561ed39a86edc754bf2a5f045daef24c145773d4b18340a470251b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"should have no paymasterData\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fccc4b6995a94cdc6e6e9a1b088f6ad31bd641a326f5e5ddcc3773886206aa37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"should have no approvalData\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d8c0e673c54c705986df4dd7c55d4166770d9449a60c6ca1c12bca8c8c62ee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"approvalData: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f0e0f7202abe3d2a01449ea8ef8fc9c6d541b7841e2ddaf2496bb00930e3bc54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"paymasterData: invalid length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e2c1867c7a7169848f7afd303de5603a0c807d938979b5d9c6964a60c4386eb8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"sender not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_033d36364bde6cb8bbf6777680999d20f88931a816a90ceb423209d9073b7882__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"target not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bfa8d30daea23bf7e1e8f319983187fd2d1c87718886df4862ba9690a35f1c97__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"method not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_29871498aacc097c93f180e11ad1fc7bbe7fd0af33ce4f55cda39c1be559cc5e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"isTrustedForwarder: reverted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8de434f38be4084093951d99ef6ad881eb532d2fda93e085bee354124c9fe325__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"isTrustedForwarder: bad response\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_18a22d77ec00a6a6e3ef02db4f7f7b9054ded7d3fa47898d59b46e9844b2acb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid forwarder for recipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_stringliteral_e3fe8b8d7a4d7297198f00bec48c1f664c9a2ab21f2fa0d4a68337ee48c21898__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"readBytes4: data too short\")\n        tail := add(headStart, 96)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101c55760003560e01c80638222f07d116100f7578063bbdaa3c911610095578063df463a6611610064578063df463a661461064c578063e1838f8d14610661578063f2fde38b14610681578063f9c002f7146106a157600080fd5b8063bbdaa3c9146105d6578063ce1b815f146105ed578063da7422281461060b578063dd1bcaa11461062b57600080fd5b80638da5cb5b116100d15780638da5cb5b14610538578063921276ea14610556578063b039a88f14610578578063b90b41cf146105c057600080fd5b80638222f07d146104b8578063858437b0146104e857806386c0a9f81461051857600080fd5b80634f28bfb911610164578063715018a61161013e578063715018a61461043157806376fa01c3146104465780637bb05264146104665780637bdf2ec71461048657600080fd5b80634f28bfb9146103cb5780634f33b4dd146103ec5780635c5e3db11461040d57600080fd5b80630d4ca3a4116101a05780630d4ca3a41461032f57806312256054146103505780632d14c4b7146103705780633a0892e31461039057600080fd5b8062be5dd4146102a657806301ffc9a7146102dd5780630613fef81461030d57600080fd5b366102a1576001546001600160a01b03166102275760405162461bcd60e51b815260206004820152601960248201527f72656c6179206875622061646472657373206e6f74207365740000000000000060448201526064015b60405180910390fd5b6001546040517faa67c9190000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b039091169063aa67c9199034906024016000604051808303818588803b15801561028657600080fd5b505af115801561029a573d6000803e3d6000fd5b5050505050005b600080fd5b3480156102b257600080fd5b506102c66102c1366004611607565b6106b8565b6040516102d4929190611708565b60405180910390f35b3480156102e957600080fd5b506102fd6102f8366004611749565b610706565b60405190151581526020016102d4565b34801561031957600080fd5b5061032d610328366004611787565b61078a565b005b34801561033b57600080fd5b506002546102fd90600160b01b900460ff1681565b34801561035c57600080fd5b5061032d61036b366004611787565b6107bd565b34801561037c57600080fd5b5061032d61038b3660046117c0565b6107f0565b34801561039c57600080fd5b506102fd6103ab3660046117e5565b600560209081526000928352604080842090915290825290205460ff1681565b3480156103d757600080fd5b506002546102fd90600160a81b900460ff1681565b3480156103f857600080fd5b506002546102fd90600160b81b900460ff1681565b34801561041957600080fd5b5061042361290481565b6040519081526020016102d4565b34801561043d57600080fd5b5061032d61087b565b34801561045257600080fd5b5061032d61046136600461181a565b61088f565b34801561047257600080fd5b5061032d6104813660046118aa565b61089e565b34801561049257600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016102d4565b3480156104c457600080fd5b506102fd6104d33660046118aa565b60036020526000908152604090205460ff1681565b3480156104f457600080fd5b506102fd6105033660046118aa565b60046020526000908152604090205460ff1681565b34801561052457600080fd5b5061032d6105333660046118c7565b610954565b34801561054457600080fd5b506000546001600160a01b03166104a0565b34801561056257600080fd5b5061056b610a26565b6040516102d49190611923565b34801561058457600080fd5b5061058d610a46565b6040516102d491908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b3480156105cc57600080fd5b5061042361c35081565b3480156105e257600080fd5b506104236201adb081565b3480156105f957600080fd5b506002546001600160a01b03166104a0565b34801561061757600080fd5b5061032d6106263660046118aa565b610aaf565b34801561063757600080fd5b506002546102fd90600160a01b900460ff1681565b34801561065857600080fd5b50610423610b65565b34801561066d57600080fd5b5061032d61067c366004611936565b610b77565b34801561068d57600080fd5b5061032d61069c3660046118aa565b610bc0565b3480156106ad57600080fd5b50610423620186a081565b606060006106c4610c50565b6106cd88610caa565b6106d688610d42565b6106df88610d9d565b6106e98585610e07565b6106f7888888888888610e59565b91509150965096945050505050565b60006001600160e01b031982167fe1ab2dea00000000000000000000000000000000000000000000000000000000148061076957506001600160e01b031982167f0e08307600000000000000000000000000000000000000000000000000000000145b8061078457506301ffc9a760e01b6001600160e01b03198316145b92915050565b61079261117f565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6107c561117f565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6107f861117f565b6001546040517ff3fef3a30000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018590529091169063f3fef3a390604401600060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050505050565b61088361117f565b61088d60006111d9565b565b610897610c50565b5050505050565b6108a661117f565b6108d96001600160a01b0382167fe9fb30f700000000000000000000000000000000000000000000000000000000611236565b6109255760405162461bcd60e51b815260206004820152601f60248201527f746172676574206973206e6f7420612076616c6964204952656c617948756200604482015260640161021e565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61095c61117f565b600280547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff16600160a01b951515959095027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1694909417600160a81b93151593909302929092177fffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff16600160b01b911515919091027fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff1617600160b81b91151591909102179055565b6060604051806060016040528060298152602001611a6b60299139905090565b610a716040518060800160405280600081526020016000815260200160008152602001600081525090565b604051806080016040528061c350620186a0610a8d919061197f565b8152602001620186a081526020016201adb08152602001612904815250905090565b610ab761117f565b610aea6001600160a01b0382167f25e23e6400000000000000000000000000000000000000000000000000000000611236565b610b365760405162461bcd60e51b815260206004820181905260248201527f746172676574206973206e6f7420612076616c69642049466f72776172646572604482015260640161021e565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610b7461c350620186a061197f565b81565b610b7f61117f565b6001600160a01b0390921660009081526005602090815260408083206001600160e01b0319909416835292905220805491151560ff19909216919091179055565b610bc861117f565b6001600160a01b038116610c445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161021e565b610c4d816111d9565b50565b6001546001600160a01b0316331461088d5760405162461bcd60e51b815260206004820152601e60248201527f63616e206f6e6c792062652063616c6c65642062792052656c61794875620000604482015260640161021e565b610cb760208201826119be565b610cc89060c081019060a0016118aa565b6001600160a01b0316610ce36002546001600160a01b031690565b6001600160a01b031614610d395760405162461bcd60e51b815260206004820152601860248201527f466f72776172646572206973206e6f7420747275737465640000000000000000604482015260640161021e565b610c4d81611259565b610d4c81806119de565b6040013515610c4d5760405162461bcd60e51b815260206004820152601c60248201527f76616c7565207472616e73666572206e6f7420737570706f7274656400000000604482015260640161021e565b610daa60208201826119be565b610db89060c08101906119f4565b159050610c4d5760405162461bcd60e51b815260206004820152601c60248201527f73686f756c642068617665206e6f207061796d61737465724461746100000000604482015260640161021e565b8015610e555760405162461bcd60e51b815260206004820152601b60248201527f73686f756c642068617665206e6f20617070726f76616c446174610000000000604482015260640161021e565b5050565b606060008315610eab5760405162461bcd60e51b815260206004820152601c60248201527f617070726f76616c446174613a20696e76616c6964206c656e67746800000000604482015260640161021e565b610eb860208901896119be565b610ec69060c08101906119f4565b159050610f155760405162461bcd60e51b815260206004820152601d60248201527f7061796d6173746572446174613a20696e76616c6964206c656e677468000000604482015260640161021e565b600254600160a01b900460ff1615610fae576000610f3389806119de565b610f419060208101906118aa565b6001600160a01b03811660009081526003602052604090205490915060ff16610fac5760405162461bcd60e51b815260206004820152601660248201527f73656e646572206e6f742077686974656c697374656400000000000000000000604482015260640161021e565b505b600254600160a81b900460ff161561104a576000610fcc89806119de565b610fdd9060408101906020016118aa565b6001600160a01b03811660009081526004602052604090205490915060ff166110485760405162461bcd60e51b815260206004820152601660248201527f746172676574206e6f742077686974656c697374656400000000000000000000604482015260640161021e565b505b600254600160b01b900460ff161561115557600061106889806119de565b6110799060408101906020016118aa565b905060006110d261108a8b806119de565b6110989060a08101906119f4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061147092505050565b6001600160a01b03831660009081526005602090815260408083206001600160e01b03198516845290915290205490915060ff166111525760405162461bcd60e51b815260206004820152601660248201527f6d6574686f64206e6f742077686974656c697374656400000000000000000000604482015260640161021e565b50505b505060025460408051602081019091526000815297600160b81b90910460ff169650945050505050565b6000546001600160a01b0316331461088d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021e565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006112418361147d565b8015611252575061125283836114b0565b9392505050565b60008061126683806119de565b6112779060408101906020016118aa565b6001600160a01b03167f572b6c05000000000000000000000000000000000000000000000000000000006112ae60208601866119be565b6112bf9060c081019060a0016118aa565b6040516001600160a01b03909116602482015260440160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199094169390931790925290516113289190611a3b565b600060405180830381855afa9150503d8060008114611363576040519150601f19603f3d011682016040523d82523d6000602084013e611368565b606091505b5091509150816113ba5760405162461bcd60e51b815260206004820152601c60248201527f697354727573746564466f727761726465723a20726576657274656400000000604482015260640161021e565b805160201461140b5760405162461bcd60e51b815260206004820181905260248201527f697354727573746564466f727761726465723a2062616420726573706f6e7365604482015260640161021e565b8080602001905181019061141f9190611a4d565b61146b5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420666f7277617264657220666f7220726563697069656e7400604482015260640161021e565b505050565b600061078482600061154e565b6000611490826301ffc9a760e01b6114b0565b801561078457506114a9826001600160e01b03196114b0565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611537575060208210155b80156115435750600081115b979650505050505050565b600061155b82600461197f565b835110156115ab5760405162461bcd60e51b815260206004820152601a60248201527f726561644279746573343a206461746120746f6f2073686f7274000000000000604482015260640161021e565b5001602001516001600160e01b03191690565b60008083601f8401126115d057600080fd5b50813567ffffffffffffffff8111156115e857600080fd5b60208301915083602082850101111561160057600080fd5b9250929050565b6000806000806000806080878903121561162057600080fd5b863567ffffffffffffffff8082111561163857600080fd5b908801906040828b03121561164c57600080fd5b9096506020880135908082111561166257600080fd5b61166e8a838b016115be565b9097509550604089013591508082111561168757600080fd5b5061169489828a016115be565b979a9699509497949695606090950135949350505050565b60005b838110156116c75781810151838201526020016116af565b838111156116d6576000848401525b50505050565b600081518084526116f48160208601602086016116ac565b601f01601f19169290920160200192915050565b60408152600061171b60408301856116dc565b905082151560208301529392505050565b80356001600160e01b03198116811461174457600080fd5b919050565b60006020828403121561175b57600080fd5b6112528261172c565b6001600160a01b0381168114610c4d57600080fd5b8015158114610c4d57600080fd5b6000806040838503121561179a57600080fd5b82356117a581611764565b915060208301356117b581611779565b809150509250929050565b600080604083850312156117d357600080fd5b8235915060208301356117b581611764565b600080604083850312156117f857600080fd5b823561180381611764565b91506118116020840161172c565b90509250929050565b60008060008060006080868803121561183257600080fd5b853567ffffffffffffffff8082111561184a57600080fd5b61185689838a016115be565b90975095506020880135915061186b82611779565b909350604087013592506060870135908082111561188857600080fd5b508601610100818903121561189c57600080fd5b809150509295509295909350565b6000602082840312156118bc57600080fd5b813561125281611764565b600080600080608085870312156118dd57600080fd5b84356118e881611779565b935060208501356118f881611779565b9250604085013561190881611779565b9150606085013561191881611779565b939692955090935050565b60208152600061125260208301846116dc565b60008060006060848603121561194b57600080fd5b833561195681611764565b92506119646020850161172c565b9150604084013561197481611779565b809150509250925092565b600082198211156119b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000823560fe198336030181126119d457600080fd5b9190910192915050565b6000823560de198336030181126119d457600080fd5b6000808335601e19843603018112611a0b57600080fd5b83018035915067ffffffffffffffff821115611a2657600080fd5b60200191503681900382131561160057600080fd5b600082516119d48184602087016116ac565b600060208284031215611a5f57600080fd5b81516112528161177956fe332e302e302d626574612e332b6f70656e67736e2e77686974656c6973742e697061796d6173746572a26469706673582212201dab195db473b741f09e5703868d056c570a9b9b8cc01c7bb8f9a1139f8386cb64736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8222F07D GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBBDAA3C9 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDF463A66 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDF463A66 EQ PUSH2 0x64C JUMPI DUP1 PUSH4 0xE1838F8D EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xF9C002F7 EQ PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBBDAA3C9 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0xCE1B815F EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xDA742228 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xDD1BCAA1 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x921276EA EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xB039A88F EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xB90B41CF EQ PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8222F07D EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x858437B0 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x86C0A9F8 EQ PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F28BFB9 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x76FA01C3 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x7BB05264 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x7BDF2EC7 EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F28BFB9 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x4F33B4DD EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x5C5E3DB1 EQ PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD4CA3A4 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xD4CA3A4 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x12256054 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x2D14C4B7 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x3A0892E3 EQ PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xBE5DD4 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x613FEF8 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2A1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x72656C6179206875622061646472657373206E6F742073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAA67C91900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAA67C919 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x7BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x2904 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x87B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x89E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x533 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56B PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58D PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xC350 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH3 0x1ADB0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x2FD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xB65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x67C CALLDATASIZE PUSH1 0x4 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x69C CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH3 0x186A0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6C4 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x6CD DUP9 PUSH2 0xCAA JUMP JUMPDEST PUSH2 0x6D6 DUP9 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0x6DF DUP9 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x6E9 DUP6 DUP6 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x6F7 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE1AB2DEA00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x769 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0xE08307600000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x784 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x792 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7C5 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF3FEF3A300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF3FEF3A3 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x873 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x883 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x88D PUSH1 0x0 PUSH2 0x11D9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x897 PUSH2 0xC50 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x117F JUMP JUMPDEST PUSH2 0x8D9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0xE9FB30F700000000000000000000000000000000000000000000000000000000 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746172676574206973206E6F7420612076616C6964204952656C617948756200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x95C PUSH2 0x117F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA8 SHL SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH32 0xFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xB0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL PUSH32 0xFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND OR PUSH1 0x1 PUSH1 0xB8 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A6B PUSH1 0x29 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA71 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xC350 PUSH3 0x186A0 PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x186A0 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1ADB0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2904 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB7 PUSH2 0x117F JUMP JUMPDEST PUSH2 0xAEA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x25E23E6400000000000000000000000000000000000000000000000000000000 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746172676574206973206E6F7420612076616C69642049466F72776172646572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB74 PUSH2 0xC350 PUSH3 0x186A0 PUSH2 0x197F JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0xB7F PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBC8 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0x11D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E206F6E6C792062652063616C6C65642062792052656C61794875620000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xCB7 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xCC8 SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH1 0xA0 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE3 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F72776172646572206973206E6F7420747275737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0xD4C DUP2 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x40 ADD CALLDATALOAD ISZERO PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C7565207472616E73666572206E6F7420737570706F7274656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xDAA PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xDB8 SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xC4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73686F756C642068617665206E6F207061796D61737465724461746100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73686F756C642068617665206E6F20617070726F76616C446174610000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x617070726F76616C446174613A20696E76616C6964206C656E67746800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xEB8 PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xEC6 SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796D6173746572446174613A20696E76616C6964206C656E677468000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 PUSH2 0xF33 DUP10 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xF41 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73656E646572206E6F742077686974656C697374656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x104A JUMPI PUSH1 0x0 PUSH2 0xFCC DUP10 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xFDD SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746172676574206E6F742077686974656C697374656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 PUSH2 0x1068 DUP10 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1079 SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10D2 PUSH2 0x108A DUP12 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1098 SWAP1 PUSH1 0xA0 DUP2 ADD SWAP1 PUSH2 0x19F4 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1470 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6574686F64206E6F742077686974656C697374656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP POP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP8 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x88D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1241 DUP4 PUSH2 0x147D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1252 JUMPI POP PUSH2 0x1252 DUP4 DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1266 DUP4 DUP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1277 SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x572B6C0500000000000000000000000000000000000000000000000000000000 PUSH2 0x12AE PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x12BF SWAP1 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH1 0xA0 ADD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1328 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x697354727573746564466F727761726465723A20726576657274656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 EQ PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x697354727573746564466F727761726465723A2062616420726573706F6E7365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420666F7277617264657220666F7220726563697069656E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784 DUP3 PUSH1 0x0 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP3 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x14B0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x784 JUMPI POP PUSH2 0x14A9 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0x14B0 JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP4 SWAP3 DUP5 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x1537 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1543 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155B DUP3 PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST DUP4 MLOAD LT ISZERO PUSH2 0x15AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726561644279746573343A206461746120746F6F2073686F7274000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP9 ADD SWAP1 PUSH1 0x40 DUP3 DUP12 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x166E DUP11 DUP4 DUP12 ADD PUSH2 0x15BE JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1694 DUP10 DUP3 DUP11 ADD PUSH2 0x15BE JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP5 SWAP7 SWAP6 PUSH1 0x60 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16AF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16D6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x16F4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x171B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16DC JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1252 DUP3 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17A5 DUP2 PUSH2 0x1764 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17B5 DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17B5 DUP2 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1803 DUP2 PUSH2 0x1764 JUMP JUMPDEST SWAP2 POP PUSH2 0x1811 PUSH1 0x20 DUP5 ADD PUSH2 0x172C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x184A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1856 DUP10 DUP4 DUP11 ADD PUSH2 0x15BE JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x186B DUP3 PUSH2 0x1779 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 ADD PUSH2 0x100 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x189C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1252 DUP2 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x18E8 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x18F8 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1908 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1918 DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1252 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x194B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1956 DUP2 PUSH2 0x1764 JUMP JUMPDEST SWAP3 POP PUSH2 0x1964 PUSH1 0x20 DUP6 ADD PUSH2 0x172C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1974 DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19B9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xFE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xDE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1A0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x19D4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1252 DUP2 PUSH2 0x1779 JUMP INVALID CALLER 0x2E ADDRESS 0x2E ADDRESS 0x2D PUSH3 0x657461 0x2E CALLER 0x2B PUSH16 0x70656E67736E2E77686974656C697374 0x2E PUSH10 0x7061796D6173746572A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xAB NOT 0x5D 0xB4 PUSH20 0xB741F09E5703868D056C570A9B9B8CC01C7BB8F9 LOG1 SGT SWAP16 DUP4 DUP7 0xCB PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"395:2818:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4641:8:1;;-1:-1:-1;;;;;4641:8:1;4625:69;;;;-1:-1:-1;;;4625:69:1;;216:2:27;4625:69:1;;;198:21:27;255:2;235:18;;;228:30;294:27;274:18;;;267:55;339:18;;4625:69:1;;;;;;;;;4704:8;;:51;;;;;4749:4;4704:51;;;514:74:27;-1:-1:-1;;;;;4704:8:1;;;;:19;;4730:9;;487:18:27;;4704:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;395:2818:12;;;;;5153:533:1;;;;;;;;;;-1:-1:-1;5153:533:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1460:283;;;;;;;;;;-1:-1:-1;1460:283:1;;;;;:::i;:::-;;:::i;:::-;;;3417:14:27;;3410:22;3392:41;;3380:2;3365:18;1460:283:1;3252:187:27;933:126:12;;;;;;;;;;-1:-1:-1;933:126:12;;;;;:::i;:::-;;:::i;:::-;;519:30;;;;;;;;;;-1:-1:-1;519:30:12;;;;-1:-1:-1;;;519:30:12;;;;;;1065:126;;;;;;;;;;-1:-1:-1;1065:126:12;;;;;:::i;:::-;;:::i;4974:142:1:-;;;;;;;;;;-1:-1:-1;4974:142:1;;;;;:::i;:::-;;:::i;705:66:12:-;;;;;;;;;;-1:-1:-1;705:66:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;483:30;;;;;;;;;;-1:-1:-1;483:30:12;;;;-1:-1:-1;;;483:30:12;;;;;;555:38;;;;;;;;;;-1:-1:-1;555:38:12;;;;-1:-1:-1;;;555:38:12;;;;;;1374:51:1;;;;;;;;;;;;1420:5;1374:51;;;;;4911:25:27;;;4899:2;4884:18;1374:51:1;4765:177:27;1831:101:13;;;;;;;;;;;;;:::i;6140:309:1:-;;;;;;;;;;-1:-1:-1;6140:309:1;;;;;:::i;:::-;;:::i;3550:197::-;;;;;;;;;;-1:-1:-1;3550:197:1;;;;;:::i;:::-;;:::i;828:103::-;;;;;;;;;;-1:-1:-1;915:8:1;;-1:-1:-1;;;;;915:8:1;828:103;;;-1:-1:-1;;;;;532:55:27;;;514:74;;502:2;487:18;828:103:1;368:226:27;599:47:12;;;;;;;;;;-1:-1:-1;599:47:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;652;;;;;;;;;;-1:-1:-1;652:47:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;1352:416;;;;;;;;;;-1:-1:-1;1352:416:12;;;;;:::i;:::-;;:::i;1201:85:13:-;;;;;;;;;;-1:-1:-1;1247:7:13;1273:6;-1:-1:-1;;;;;1273:6:13;1201:85;;778:149:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1780:362:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;7476:13:27;;7458:32;;7546:4;7534:17;;;7528:24;7506:20;;;7499:54;7609:4;7597:17;;;7591:24;7569:20;;;7562:54;7672:4;7660:17;;;7654:24;7632:20;;;7625:54;;;;7445:3;7430:19;;7245:440;1002:54:1;;;;;;;;;;;;1051:5;1002:54;;1197:60;;;;;;;;;;;;1251:6;1197:60;;4233:118;;;;;;;;;;-1:-1:-1;4327:17:1;;-1:-1:-1;;;;;4327:17:1;4233:118;;3996:231;;;;;;;;;;-1:-1:-1;3996:231:1;;;;;:::i;:::-;;:::i;447:30:12:-;;;;;;;;;;-1:-1:-1;447:30:12;;;;-1:-1:-1;;;447:30:12;;;;;;1263:105:1;;;;;;;;;;;;;:::i;1197:149:12:-;;;;;;;;;;-1:-1:-1;1197:149:12;;;;;:::i;:::-;;:::i;2081:198:13:-;;;;;;;;;;-1:-1:-1;2081:198:13;;;;;:::i;:::-;;:::i;1132:59:1:-;;;;;;;;;;;;1185:6;1132:59;;5153:533;5378:12;5392:4;5408:21;:19;:21::i;:::-;5439:30;5456:12;5439:16;:30::i;:::-;5479:26;5492:12;5479;:26::i;:::-;5515:34;5536:12;5515:20;:34::i;:::-;5559:33;5579:12;;5559:19;:33::i;:::-;5609:70;5625:12;5639:9;;5650:12;;5664:14;5609:15;:70::i;:::-;5602:77;;;;5153:533;;;;;;;;;:::o;1460:283::-;1562:4;-1:-1:-1;;;;;;1585:43:1;;1600:28;1585:43;;:99;;-1:-1:-1;;;;;;;1644:40:1;;1659:25;1644:40;1585:99;:151;;;-1:-1:-1;;;;;;;;;;937:40:19;;;1700:36:1;1578:158;1460:283;-1:-1:-1;;1460:283:1:o;933:126:12:-;1094:13:13;:11;:13::i;:::-;-1:-1:-1;;;;;1017:23:12;;;::::1;;::::0;;;:15:::1;:23;::::0;;;;:35;;-1:-1:-1;;1017:35:12::1;::::0;::::1;;::::0;;;::::1;::::0;;933:126::o;1065:::-;1094:13:13;:11;:13::i;:::-;-1:-1:-1;;;;;1149:23:12;;;::::1;;::::0;;;:15:::1;:23;::::0;;;;:35;;-1:-1:-1;;1149:35:12::1;::::0;::::1;;::::0;;;::::1;::::0;;1065:126::o;4974:142:1:-;1094:13:13;:11;:13::i;:::-;5076:8:1::1;::::0;:33:::1;::::0;;;;-1:-1:-1;;;;;8357:55:27;;;5076:33:1::1;::::0;::::1;8339:74:27::0;8429:18;;;8422:34;;;5076:8:1;;::::1;::::0;:17:::1;::::0;8312:18:27;;5076:33:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4974:142:::0;;:::o;1831:101:13:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6140:309:1:-;6347:21;:19;:21::i;:::-;6140:309;;;;;:::o;3550:197::-;1094:13:13;:11;:13::i;:::-;3621:59:1::1;-1:-1:-1::0;;;;;3621:30:1;::::1;3652:27;3621:30;:59::i;:::-;3613:103;;;::::0;-1:-1:-1;;;3613:103:1;;8669:2:27;3613:103:1::1;::::0;::::1;8651:21:27::0;8708:2;8688:18;;;8681:30;8747:33;8727:18;;;8720:61;8798:18;;3613:103:1::1;8467:355:27::0;3613:103:1::1;3726:8;:14:::0;;-1:-1:-1;;3726:14:1::1;-1:-1:-1::0;;;;;3726:14:1;;;::::1;::::0;;;::::1;::::0;;3550:197::o;1352:416:12:-;1094:13:13;:11;:13::i;:::-;1555:18:12::1;:40:::0;;1605;;-1:-1:-1;;;1555:40:12;::::1;;::::0;;;::::1;1605::::0;;;;;;-1:-1:-1;;;1605:40:12;::::1;;::::0;;;::::1;::::0;;;::::1;1705:56:::0;;-1:-1:-1;;;1655:40:12;::::1;;::::0;;;::::1;1705:56:::0;;;-1:-1:-1;;;1705:56:12;::::1;;::::0;;;::::1;;::::0;;1352:416::o;778:149::-;846:13;870:50;;;;;;;;;;;;;;;;;;;778:149;:::o;1780:362:1:-;1878:41;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1878:41:1;1943:192;;;;;;;;1051:5;1185:6;1317:51;;;;:::i;:::-;1943:192;;;;1185:6;1943:192;;;;1251:6;1943:192;;;;1420:5;1943:192;;;1936:199;;1780:362;:::o;3996:231::-;1094:13:13;:11;:13::i;:::-;4087:57:1::1;-1:-1:-1::0;;;;;4087:27:1;::::1;4115:28;4087:27;:57::i;:::-;4079:102;;;::::0;-1:-1:-1;;;4079:102:1;;9316:2:27;4079:102:1::1;::::0;::::1;9298:21:27::0;;;9335:18;;;9328:30;9394:34;9374:18;;;9367:62;9446:18;;4079:102:1::1;9114:356:27::0;4079:102:1::1;4191:17;:29:::0;;-1:-1:-1;;4191:29:1::1;-1:-1:-1::0;;;;;4191:29:1;;;::::1;::::0;;;::::1;::::0;;3996:231::o;1263:105::-;1317:51;1051:5;1185:6;1317:51;:::i;:::-;1263:105;:::o;1197:149:12:-;1094:13:13;:11;:13::i;:::-;-1:-1:-1;;;;;1296:23:12;;::::1;;::::0;;;:15:::1;:23;::::0;;;;;;;-1:-1:-1;;;;;;1296:31:12;;::::1;::::0;;;;;;:43;;;::::1;;-1:-1:-1::0;;1296:43:12;;::::1;::::0;;;::::1;::::0;;1197:149::o;2081:198:13:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:13;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:13;;9677:2:27;2161:73:13::1;::::0;::::1;9659:21:27::0;9716:2;9696:18;;;9689:30;9755:34;9735:18;;;9728:62;9826:8;9806:18;;;9799:36;9852:19;;2161:73:13::1;9475:402:27::0;2161:73:13::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2620:140:1:-;915:8;;-1:-1:-1;;;;;915:8:1;2691:10;:27;2683:70;;;;-1:-1:-1;;;2683:70:1;;10084:2:27;2683:70:1;;;10066:21:27;10123:2;10103:18;;;10096:30;10162:32;10142:18;;;10135:60;10212:18;;2683:70:1;9882:354:27;2331:283:1;2483:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2458:57:1;:21;4327:17;;-1:-1:-1;;;;;4327:17:1;;4233:118;2458:21;-1:-1:-1;;;;;2458:57:1;;2450:94;;;;-1:-1:-1;;;2450:94:1;;10775:2:27;2450:94:1;;;10757:21:27;10814:2;10794:18;;;10787:30;10853:26;10833:18;;;10826:54;10897:18;;2450:94:1;10573:348:27;2450:94:1;2554:53;2594:12;2554:39;:53::i;2766:177::-;2872:20;:12;;:20;:::i;:::-;:26;;;:31;2864:72;;;;-1:-1:-1;;;2864:72:1;;11464:2:27;2864:72:1;;;11446:21:27;11503:2;11483:18;;;11476:30;11542;11522:18;;;11515:58;11590:18;;2864:72:1;11262:352:27;2949:203:1;3064:22;;;;:12;:22;:::i;:::-;:36;;;;;;;:::i;:::-;:48;;-1:-1:-1;3056:89:1;;;;-1:-1:-1;;;3056:89:1;;12347:2:27;3056:89:1;;;12329:21:27;12386:2;12366:18;;;12359:30;12425;12405:18;;;12398:58;12473:18;;3056:89:1;12145:352:27;3158:160:1;3255:24;;3247:64;;;;-1:-1:-1;;;3247:64:1;;12704:2:27;3247:64:1;;;12686:21:27;12743:2;12723:18;;;12716:30;12782:29;12762:18;;;12755:57;12829:18;;3247:64:1;12502:351:27;3247:64:1;3158:160;;:::o;1774:1160:12:-;2012:20;2034:28;2119:24;;2111:65;;;;-1:-1:-1;;;2111:65:12;;13060:2:27;2111:65:12;;;13042:21:27;13099:2;13079:18;;;13072:30;13138;13118:18;;;13111:58;13186:18;;2111:65:12;12858:352:27;2111:65:12;2194:22;;;;:12;:22;:::i;:::-;:36;;;;;;;:::i;:::-;:48;;-1:-1:-1;2186:90:12;;;;-1:-1:-1;;;2186:90:12;;13417:2:27;2186:90:12;;;13399:21:27;13456:2;13436:18;;;13429:30;13495:31;13475:18;;;13468:59;13544:18;;2186:90:12;13215:353:27;2186:90:12;2291:18;;-1:-1:-1;;;2291:18:12;;;;2287:163;;;2325:14;2342:20;:12;;:20;:::i;:::-;:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;2389:23:12;;;;;;:15;:23;;;;;;2325:42;;-1:-1:-1;2389:23:12;;2381:58;;;;-1:-1:-1;;;2381:58:12;;13775:2:27;2381:58:12;;;13757:21:27;13814:2;13794:18;;;13787:30;13853:24;13833:18;;;13826:52;13895:18;;2381:58:12;13573:346:27;2381:58:12;2311:139;2287:163;2464:18;;-1:-1:-1;;;2464:18:12;;;;2460:161;;;2498:14;2515:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2560:23:12;;;;;;:15;:23;;;;;;2498:40;;-1:-1:-1;2560:23:12;;2552:58;;;;-1:-1:-1;;;2552:58:12;;14126:2:27;2552:58:12;;;14108:21:27;14165:2;14145:18;;;14138:30;14204:24;14184:18;;;14177:52;14246:18;;2552:58:12;13924:346:27;2552:58:12;2484:137;2460:161;2635:18;;-1:-1:-1;;;2635:18:12;;;;2631:247;;;2669:14;2686:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;2669:40;-1:-1:-1;2723:13:12;2739:48;2761:20;:12;;:20;:::i;:::-;:25;;;;;;;:::i;:::-;2739:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2739:21:12;;-1:-1:-1;;;2739:48:12:i;:::-;-1:-1:-1;;;;;2809:23:12;;;;;;:15;:23;;;;;;;;-1:-1:-1;;;;;;2809:31:12;;;;;;;;;;2723:64;;-1:-1:-1;2809:31:12;;2801:66;;;;-1:-1:-1;;;2801:66:12;;14477:2:27;2801:66:12;;;14459:21:27;14516:2;14496:18;;;14489:30;14555:24;14535:18;;;14528:52;14597:18;;2801:66:12;14275:346:27;2801:66:12;2655:223;;2631:247;-1:-1:-1;;2900:26:12;;2888:39;;;;;;;;;-1:-1:-1;2888:39:12;;;-1:-1:-1;;;2900:26:12;;;;;;-1:-1:-1;1774:1160:12;-1:-1:-1;;;;;1774:1160:12:o;1359:130:13:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:13;719:10:18;1422:23:13;1414:68;;;;-1:-1:-1;;;1414:68:13;;14828:2:27;1414:68:13;;;14810:21:27;;;14847:18;;;14840:30;14906:34;14886:18;;;14879:62;14958:18;;1414:68:13;14626:356:27;2433:187:13;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:13;;;-1:-1:-1;;2541:17:13;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1349:282:20:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;;1570:54;1603:7;1612:11;1570:32;:54::i;:::-;1536:88;1349:282;-1:-1:-1;;;1349:282:20:o;2158:540:8:-;2260:12;;2294:20;:12;;:20;:::i;:::-;:23;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2294:34:8;2382:45;2429:22;;;;:12;:22;:::i;:::-;:32;;;;;;;;;:::i;:::-;2342:133;;-1:-1:-1;;;;;532:55:27;;;2342:133:8;;;514:74:27;487:18;;2342:133:8;;;-1:-1:-1;;2342:133:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2342:133:8;;;;;;;;;;2294:191;;;;2342:133;2294:191;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2259:226;;;;2503:7;2495:48;;;;-1:-1:-1;;;2495:48:8;;15468:2:27;2495:48:8;;;15450:21:27;15507:2;15487:18;;;15480:30;15546;15526:18;;;15519:58;15594:18;;2495:48:8;15266:352:27;2495:48:8;2561:3;:10;2575:2;2561:16;2553:61;;;;-1:-1:-1;;;2553:61:8;;15825:2:27;2553:61:8;;;15807:21:27;;;15844:18;;;15837:30;15903:34;15883:18;;;15876:62;15955:18;;2553:61:8;15623:356:27;2553:61:8;2643:3;2632:23;;;;;;;;;;;;:::i;:::-;2624:67;;;;-1:-1:-1;;;2624:67:8;;16436:2:27;2624:67:8;;;16418:21:27;16475:2;16455:18;;;16448:30;16514:33;16494:18;;;16487:61;16565:18;;2624:67:8;16234:355:27;2624:67:8;2249:449;;2158:540;:::o;1307:133:10:-;1374:6;1399:34;1422:7;1431:1;1399:22;:34::i;704:427:20:-;768:4;975:68;1008:7;-1:-1:-1;;;975:32:20;:68::i;:::-;:149;;;;-1:-1:-1;1060:64:20;1093:7;-1:-1:-1;;;;;;1060:32:20;:64::i;:::-;1059:65;956:168;704:427;-1:-1:-1;;704:427:20:o;4262:647::-;4433:71;;;-1:-1:-1;;;;;;16756:79:27;;4433:71:20;;;;16738:98:27;;;;4433:71:20;;;;;;;;;;16711:18:27;;;;4433:71:20;;;;;;;;;;;-1:-1:-1;;;4433:71:20;;;4712:20;;4364:4;;4433:71;4364:4;;;;;;4433:71;4364:4;;4712:20;4677:7;4670:5;4659:86;4648:97;;4772:16;4758:30;;4822:4;4816:11;4801:26;;4854:7;:29;;;;;4879:4;4865:10;:18;;4854:29;:48;;;;;4901:1;4887:11;:15;4854:48;4847:55;4262:647;-1:-1:-1;;;;;;;4262:647:20:o;2482:571:11:-;2602:13;2651:9;:5;2659:1;2651:9;:::i;:::-;2639:1;:8;:21;;2631:60;;;;-1:-1:-1;;;2631:60:11;;17049:2:27;2631:60:11;;;17031:21:27;17088:2;17068:18;;;17061:30;17127:28;17107:18;;;17100:56;17173:18;;2631:60:11;16847:350:27;2631:60:11;-1:-1:-1;2786:21:11;2803:2;2786:21;2780:28;-1:-1:-1;;;;;;2935:79:11;;2482:571::o;599:347:27:-;650:8;660:6;714:3;707:4;699:6;695:17;691:27;681:55;;732:1;729;722:12;681:55;-1:-1:-1;755:20:27;;798:18;787:30;;784:50;;;830:1;827;820:12;784:50;867:4;859:6;855:17;843:29;;919:3;912:4;903:6;895;891:19;887:30;884:39;881:59;;;936:1;933;926:12;881:59;599:347;;;;;:::o;951:1055::-;1091:6;1099;1107;1115;1123;1131;1184:3;1172:9;1163:7;1159:23;1155:33;1152:53;;;1201:1;1198;1191:12;1152:53;1241:9;1228:23;1270:18;1311:2;1303:6;1300:14;1297:34;;;1327:1;1324;1317:12;1297:34;1350:22;;;;1406:2;1388:16;;;1384:25;1381:45;;;1422:1;1419;1412:12;1381:45;1445:2;;-1:-1:-1;1500:2:27;1485:18;;1472:32;;1516:16;;;1513:36;;;1545:1;1542;1535:12;1513:36;1584:60;1636:7;1625:8;1614:9;1610:24;1584:60;:::i;:::-;1663:8;;-1:-1:-1;1558:86:27;-1:-1:-1;1751:2:27;1736:18;;1723:32;;-1:-1:-1;1767:16:27;;;1764:36;;;1796:1;1793;1786:12;1764:36;;1835:60;1887:7;1876:8;1865:9;1861:24;1835:60;:::i;:::-;951:1055;;;;-1:-1:-1;951:1055:27;;;;;1996:2;1981:18;;;1968:32;;951:1055;-1:-1:-1;;;;951:1055:27:o;2011:258::-;2083:1;2093:113;2107:6;2104:1;2101:13;2093:113;;;2183:11;;;2177:18;2164:11;;;2157:39;2129:2;2122:10;2093:113;;;2224:6;2221:1;2218:13;2215:48;;;2259:1;2250:6;2245:3;2241:16;2234:27;2215:48;;2011:258;;;:::o;2274:257::-;2315:3;2353:5;2347:12;2380:6;2375:3;2368:19;2396:63;2452:6;2445:4;2440:3;2436:14;2429:4;2422:5;2418:16;2396:63;:::i;:::-;2513:2;2492:15;-1:-1:-1;;2488:29:27;2479:39;;;;2520:4;2475:50;;2274:257;-1:-1:-1;;2274:257:27:o;2536:298::-;2705:2;2694:9;2687:21;2668:4;2725:44;2765:2;2754:9;2750:18;2742:6;2725:44;:::i;:::-;2717:52;;2819:6;2812:14;2805:22;2800:2;2789:9;2785:18;2778:50;2536:298;;;;;:::o;2839:219::-;2906:20;;-1:-1:-1;;;;;;2955:78:27;;2945:89;;2935:117;;3048:1;3045;3038:12;2935:117;2839:219;;;:::o;3063:184::-;3121:6;3174:2;3162:9;3153:7;3149:23;3145:32;3142:52;;;3190:1;3187;3180:12;3142:52;3213:28;3231:9;3213:28;:::i;3444:154::-;-1:-1:-1;;;;;3523:5:27;3519:54;3512:5;3509:65;3499:93;;3588:1;3585;3578:12;3603:118;3689:5;3682:13;3675:21;3668:5;3665:32;3655:60;;3711:1;3708;3701:12;3726:382;3791:6;3799;3852:2;3840:9;3831:7;3827:23;3823:32;3820:52;;;3868:1;3865;3858:12;3820:52;3907:9;3894:23;3926:31;3951:5;3926:31;:::i;:::-;3976:5;-1:-1:-1;4033:2:27;4018:18;;4005:32;4046:30;4005:32;4046:30;:::i;:::-;4095:7;4085:17;;;3726:382;;;;;:::o;4113:323::-;4189:6;4197;4250:2;4238:9;4229:7;4225:23;4221:32;4218:52;;;4266:1;4263;4256:12;4218:52;4302:9;4289:23;4279:33;;4362:2;4351:9;4347:18;4334:32;4375:31;4400:5;4375:31;:::i;4441:319::-;4508:6;4516;4569:2;4557:9;4548:7;4544:23;4540:32;4537:52;;;4585:1;4582;4575:12;4537:52;4624:9;4611:23;4643:31;4668:5;4643:31;:::i;:::-;4693:5;-1:-1:-1;4717:37:27;4750:2;4735:18;;4717:37;:::i;:::-;4707:47;;4441:319;;;;;:::o;4947:895::-;5070:6;5078;5086;5094;5102;5155:3;5143:9;5134:7;5130:23;5126:33;5123:53;;;5172:1;5169;5162:12;5123:53;5212:9;5199:23;5241:18;5282:2;5274:6;5271:14;5268:34;;;5298:1;5295;5288:12;5268:34;5337:58;5387:7;5378:6;5367:9;5363:22;5337:58;:::i;:::-;5414:8;;-1:-1:-1;5311:84:27;-1:-1:-1;5499:2:27;5484:18;;5471:32;;-1:-1:-1;5512:28:27;5471:32;5512:28;:::i;:::-;5559:5;;-1:-1:-1;5611:2:27;5596:18;;5583:32;;-1:-1:-1;5668:2:27;5653:18;;5640:32;;5684:16;;;5681:36;;;5713:1;5710;5703:12;5681:36;-1:-1:-1;5736:24:27;;5794:3;5776:16;;;5772:26;5769:46;;;5811:1;5808;5801:12;5769:46;5834:2;5824:12;;;4947:895;;;;;;;;:::o;5847:265::-;5924:6;5977:2;5965:9;5956:7;5952:23;5948:32;5945:52;;;5993:1;5990;5983:12;5945:52;6032:9;6019:23;6051:31;6076:5;6051:31;:::i;6369:647::-;6443:6;6451;6459;6467;6520:3;6508:9;6499:7;6495:23;6491:33;6488:53;;;6537:1;6534;6527:12;6488:53;6576:9;6563:23;6595:28;6617:5;6595:28;:::i;:::-;6642:5;-1:-1:-1;6699:2:27;6684:18;;6671:32;6712:30;6671:32;6712:30;:::i;:::-;6761:7;-1:-1:-1;6820:2:27;6805:18;;6792:32;6833:30;6792:32;6833:30;:::i;:::-;6882:7;-1:-1:-1;6941:2:27;6926:18;;6913:32;6954:30;6913:32;6954:30;:::i;:::-;6369:647;;;;-1:-1:-1;6369:647:27;;-1:-1:-1;;6369:647:27:o;7021:219::-;7170:2;7159:9;7152:21;7133:4;7190:44;7230:2;7219:9;7215:18;7207:6;7190:44;:::i;7690:454::-;7763:6;7771;7779;7832:2;7820:9;7811:7;7807:23;7803:32;7800:52;;;7848:1;7845;7838:12;7800:52;7887:9;7874:23;7906:31;7931:5;7906:31;:::i;:::-;7956:5;-1:-1:-1;7980:37:27;8013:2;7998:18;;7980:37;:::i;:::-;7970:47;;8069:2;8058:9;8054:18;8041:32;8082:30;8104:7;8082:30;:::i;:::-;8131:7;8121:17;;;7690:454;;;;;:::o;8827:282::-;8867:3;8898:1;8894:6;8891:1;8888:13;8885:193;;;8934:77;8931:1;8924:88;9035:4;9032:1;9025:15;9063:4;9060:1;9053:15;8885:193;-1:-1:-1;9094:9:27;;8827:282::o;10241:327::-;10336:4;10394:11;10381:25;10488:3;10484:8;10473;10457:14;10453:29;10449:44;10429:18;10425:69;10415:97;;10508:1;10505;10498:12;10415:97;10529:33;;;;;10241:327;-1:-1:-1;;10241:327:27:o;10926:331::-;11025:4;11083:11;11070:25;11177:3;11173:8;11162;11146:14;11142:29;11138:44;11118:18;11114:69;11104:97;;11197:1;11194;11187:12;11619:521;11696:4;11702:6;11762:11;11749:25;11856:2;11852:7;11841:8;11825:14;11821:29;11817:43;11797:18;11793:68;11783:96;;11875:1;11872;11865:12;11783:96;11902:33;;11954:20;;;-1:-1:-1;11997:18:27;11986:30;;11983:50;;;12029:1;12026;12019:12;11983:50;12062:4;12050:17;;-1:-1:-1;12093:14:27;12089:27;;;12079:38;;12076:58;;;12130:1;12127;12120:12;14987:274;15116:3;15154:6;15148:13;15170:53;15216:6;15211:3;15204:4;15196:6;15192:17;15170:53;:::i;15984:245::-;16051:6;16104:2;16092:9;16083:7;16079:23;16075:32;16072:52;;;16120:1;16117;16110:12;16072:52;16152:9;16146:16;16171:28;16193:5;16171:28;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1371400","executionCost":"27272","totalCost":"1398672"},"external":{"CALLDATA_SIZE_LIMIT()":"285","FORWARDER_HUB_OVERHEAD()":"306","PAYMASTER_ACCEPTANCE_BUDGET()":"318","POST_RELAYED_CALL_GAS_LIMIT()":"240","PRE_RELAYED_CALL_GAS_LIMIT()":"305","getGasAndDataLimits()":"681","getRelayHub()":"2431","getTrustedForwarder()":"2398","methodWhitelist(address,bytes4)":"2814","owner()":"2376","postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":"2980","preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":"infinite","renounceOwnership()":"infinite","senderWhitelist(address)":"2571","setConfiguration(bool,bool,bool,bool)":"infinite","setRelayHub(address)":"infinite","setTrustedForwarder(address)":"infinite","supportsInterface(bytes4)":"584","targetWhitelist(address)":"2593","transferOwnership(address)":"infinite","useMethodWhitelist()":"2373","useRejectOnRecipientRevert()":"2395","useSenderWhitelist()":"2438","useTargetWhitelist()":"2373","versionPaymaster()":"infinite","whitelistMethod(address,bytes4,bool)":"infinite","whitelistSender(address,bool)":"infinite","whitelistTarget(address,bool)":"infinite","withdrawRelayHubDepositTo(uint256,address)":"infinite"},"internal":{"_postRelayedCall(bytes calldata,bool,uint256,struct GsnTypes.RelayData calldata)":"infinite","_preRelayedCall(struct GsnTypes.RelayRequest calldata,bytes calldata,bytes calldata,uint256)":"infinite"}},"methodIdentifiers":{"CALLDATA_SIZE_LIMIT()":"5c5e3db1","FORWARDER_HUB_OVERHEAD()":"b90b41cf","PAYMASTER_ACCEPTANCE_BUDGET()":"df463a66","POST_RELAYED_CALL_GAS_LIMIT()":"bbdaa3c9","PRE_RELAYED_CALL_GAS_LIMIT()":"f9c002f7","getGasAndDataLimits()":"b039a88f","getRelayHub()":"7bdf2ec7","getTrustedForwarder()":"ce1b815f","methodWhitelist(address,bytes4)":"3a0892e3","owner()":"8da5cb5b","postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":"76fa01c3","preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":"00be5dd4","renounceOwnership()":"715018a6","senderWhitelist(address)":"8222f07d","setConfiguration(bool,bool,bool,bool)":"86c0a9f8","setRelayHub(address)":"7bb05264","setTrustedForwarder(address)":"da742228","supportsInterface(bytes4)":"01ffc9a7","targetWhitelist(address)":"858437b0","transferOwnership(address)":"f2fde38b","useMethodWhitelist()":"0d4ca3a4","useRejectOnRecipientRevert()":"4f33b4dd","useSenderWhitelist()":"dd1bcaa1","useTargetWhitelist()":"4f28bfb9","versionPaymaster()":"921276ea","whitelistMethod(address,bytes4,bool)":"e1838f8d","whitelistSender(address,bool)":"0613fef8","whitelistTarget(address,bool)":"12256054","withdrawRelayHubDepositTo(uint256,address)":"2d14c4b7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLDATA_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORWARDER_HUB_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_ACCEPTANCE_BUDGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POST_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRE_RELAYED_CALL_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAndDataLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"acceptanceBudget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postRelayedCallGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataSizeLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymaster.GasAndDataLimits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelayHub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"methodWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasUseWithoutPost\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionCalldataGasUsed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayWorker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"paymasterData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"clientId\",\"type\":\"uint256\"}],\"internalType\":\"struct GsnTypes.RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"internalType\":\"struct GsnTypes.RelayRequest\",\"name\":\"relayRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"approvalData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxPossibleGas\",\"type\":\"uint256\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_useSenderWhitelist\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_useTargetWhitelist\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_useMethodWhitelist\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_useRejectOnRecipientRevert\",\"type\":\"bool\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRelayHub\",\"name\":\"hub\",\"type\":\"address\"}],\"name\":\"setRelayHub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"targetWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useMethodWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useRejectOnRecipientRevert\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useSenderWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useTargetWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionPaymaster\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"whitelistMethod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"whitelistSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"whitelistTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"withdrawRelayHubDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getGasAndDataLimits()\":{\"returns\":{\"limits\":\"An instance of the `GasAndDataLimits` struct ##### `acceptanceBudget` If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what. Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense. Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request. This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract. :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit` (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions. If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \\\"griefing\\\" attack. The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated. From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay, since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts. Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config). ##### `preRelayedCallGasLimit` The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster. As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster. ##### `postRelayedCallGasLimit` The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas. Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway.\"}},\"getRelayHub()\":{\"returns\":{\"_0\":\"The address of the `RelayHub` that is trusted by this Paymaster to execute the requests.\"}},\"getTrustedForwarder()\":{\"returns\":{\"_0\":\"The address of the `Forwarder` that is trusted by this Paymaster to execute the requests.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"params\":{\"context\":\"The call context, as returned by the preRelayedCall\",\"gasUseWithoutPost\":\"The actual amount of gas used by the entire transaction, EXCEPT        the gas used by the postRelayedCall itself.\",\"relayData\":\"The relay params of the request. can be used by relayHub.calculateCharge()\",\"success\":\"`true` if the relayed call succeeded, false if it reverted\"}},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"params\":{\"approvalData\":\"- extra dapp-specific data (e.g. signature from trusted party)\",\"maxPossibleGas\":\"- based on values returned from `getGasAndDataLimits` the RelayHub will calculate the maximum possible amount of gas the user may be charged for. In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\",\"relayRequest\":\"- the full relay request structure\",\"signature\":\"- user's EIP712-compatible signature of the `relayRequest`. Note that in most cases the paymaster shouldn't try use it at all. It is always checked by the forwarder immediately after preRelayedCall returns.\"},\"returns\":{\"_0\":\"A byte array to be passed to postRelayedCall. Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\",\"_1\":\"The flag that allows a Paymaster to \\\"delegate\\\" the rejection to the recipient code. It also means the Paymaster trust the recipient to reject fast: both preRelayedCall, forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget, otherwise the TX is paid by the Paymaster. `true` if the Paymaster wants to reject the TX if the recipient reverts. `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"versionPaymaster()\":{\"returns\":{\"_0\":\"version The SemVer string of this Paymaster's version.\"}},\"withdrawRelayHubDepositTo(uint256,address)\":{\"params\":{\"amount\":\"The amount to be subtracted from the sender.\",\"target\":\"The target to which the amount will be transferred.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGasAndDataLimits()\":{\"notice\":\"Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster. This function allows different paymasters to have different properties without changes to the RelayHub.\"},\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\"},\"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))\":{\"notice\":\"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction.\"},\"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)\":{\"notice\":\"Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that the Paymaster agrees to pay for this call. The request is considered to be rejected by the Paymaster in one of the following conditions:  - `preRelayedCall()` method reverts  - the `Forwarder` reverts because of nonce or signature error  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted    (and all that did not consume more than `acceptanceBudget` gas). In any of the above cases, all Paymaster calls and the recipient call are reverted. In any other case the Paymaster will pay for the gas cost of the transaction. Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\"},\"setRelayHub(address)\":{\"notice\":\"The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with. :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first.\"},\"setTrustedForwarder(address)\":{\"notice\":\"The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.the Recipients must trust this Forwarder as well in order for the configuration to remain functional.\"},\"withdrawRelayHubDepositTo(uint256,address)\":{\"notice\":\"Withdraw deposit from the RelayHub.\"}},\"notice\":\"A sample paymaster that has whitelists for senders, targets and methods. - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed. - if at least one target is whitelisted, then ONLY whitelisted targets are allowed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/paymasters/contracts/WhitelistPaymaster.sol\":\"WhitelistPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/BasePaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\\\";\\n\\nimport \\\"./utils/GsnTypes.sol\\\";\\nimport \\\"./interfaces/IPaymaster.sol\\\";\\nimport \\\"./interfaces/IRelayHub.sol\\\";\\nimport \\\"./utils/GsnEip712Library.sol\\\";\\nimport \\\"./forwarder/IForwarder.sol\\\";\\n\\n/**\\n * @notice An abstract base class to be inherited by a concrete Paymaster.\\n * A subclass must implement:\\n *  - preRelayedCall\\n *  - postRelayedCall\\n */\\nabstract contract BasePaymaster is IPaymaster, Ownable, ERC165 {\\n    using ERC165Checker for address;\\n\\n    IRelayHub internal relayHub;\\n    address private _trustedForwarder;\\n\\n    /// @inheritdoc IPaymaster\\n    function getRelayHub() public override view returns (address) {\\n        return address(relayHub);\\n    }\\n\\n    //overhead of forwarder verify+signature, plus hub overhead.\\n    uint256 constant public FORWARDER_HUB_OVERHEAD = 50000;\\n\\n    //These parameters are documented in IPaymaster.GasAndDataLimits\\n    uint256 constant public PRE_RELAYED_CALL_GAS_LIMIT = 100000;\\n    uint256 constant public POST_RELAYED_CALL_GAS_LIMIT = 110000;\\n    uint256 constant public PAYMASTER_ACCEPTANCE_BUDGET = PRE_RELAYED_CALL_GAS_LIMIT + FORWARDER_HUB_OVERHEAD;\\n    uint256 constant public CALLDATA_SIZE_LIMIT = 10500;\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\\n        return interfaceId == type(IPaymaster).interfaceId ||\\n            interfaceId == type(Ownable).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /// @inheritdoc IPaymaster\\n    function getGasAndDataLimits()\\n    public\\n    override\\n    virtual\\n    view\\n    returns (\\n        IPaymaster.GasAndDataLimits memory limits\\n    ) {\\n        return IPaymaster.GasAndDataLimits(\\n            PAYMASTER_ACCEPTANCE_BUDGET,\\n            PRE_RELAYED_CALL_GAS_LIMIT,\\n            POST_RELAYED_CALL_GAS_LIMIT,\\n            CALLDATA_SIZE_LIMIT\\n        );\\n    }\\n\\n    /**\\n     * @notice this method must be called from preRelayedCall to validate that the forwarder\\n     * is approved by the paymaster as well as by the recipient contract.\\n     */\\n    function _verifyForwarder(GsnTypes.RelayRequest calldata relayRequest)\\n    internal\\n    virtual\\n    view\\n    {\\n        require(getTrustedForwarder() == relayRequest.relayData.forwarder, \\\"Forwarder is not trusted\\\");\\n        GsnEip712Library.verifyForwarderTrusted(relayRequest);\\n    }\\n\\n    function _verifyRelayHubOnly() internal virtual view {\\n        require(msg.sender == getRelayHub(), \\\"can only be called by RelayHub\\\");\\n    }\\n\\n    function _verifyValue(GsnTypes.RelayRequest calldata relayRequest) internal virtual view{\\n        require(relayRequest.request.value == 0, \\\"value transfer not supported\\\");\\n    }\\n\\n    function _verifyPaymasterData(GsnTypes.RelayRequest calldata relayRequest) internal virtual view {\\n        require(relayRequest.relayData.paymasterData.length == 0, \\\"should have no paymasterData\\\");\\n    }\\n\\n    function _verifyApprovalData(bytes calldata approvalData) internal virtual view{\\n        require(approvalData.length == 0, \\\"should have no approvalData\\\");\\n    }\\n\\n    /**\\n     * @notice The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with.\\n     * :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first.\\n     */\\n    function setRelayHub(IRelayHub hub) public onlyOwner {\\n        require(address(hub).supportsInterface(type(IRelayHub).interfaceId), \\\"target is not a valid IRelayHub\\\");\\n        relayHub = hub;\\n    }\\n\\n    /**\\n     * @notice The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.\\n     * @notice the Recipients must trust this Forwarder as well in order for the configuration to remain functional.\\n     */\\n    function setTrustedForwarder(address forwarder) public virtual onlyOwner {\\n        require(forwarder.supportsInterface(type(IForwarder).interfaceId), \\\"target is not a valid IForwarder\\\");\\n        _trustedForwarder = forwarder;\\n    }\\n\\n    function getTrustedForwarder() public virtual view override returns (address){\\n        return _trustedForwarder;\\n    }\\n\\n    /**\\n     * @notice Any native Ether transferred into the paymaster is transferred as a deposit to the RelayHub.\\n     * This way, we don't need to understand the RelayHub API in order to replenish the paymaster.\\n     */\\n    receive() external virtual payable {\\n        require(address(relayHub) != address(0), \\\"relay hub address not set\\\");\\n        relayHub.depositFor{value:msg.value}(address(this));\\n    }\\n\\n    /**\\n     * @notice Withdraw deposit from the RelayHub.\\n     * @param amount The amount to be subtracted from the sender.\\n     * @param target The target to which the amount will be transferred.\\n     */\\n    function withdrawRelayHubDepositTo(uint256 amount, address payable target) public onlyOwner {\\n        relayHub.withdraw(target, amount);\\n    }\\n\\n    /// @inheritdoc IPaymaster\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    override\\n    returns (bytes memory, bool) {\\n        _verifyRelayHubOnly();\\n        _verifyForwarder(relayRequest);\\n        _verifyValue(relayRequest);\\n        _verifyPaymasterData(relayRequest);\\n        _verifyApprovalData(approvalData);\\n        return _preRelayedCall(relayRequest, signature, approvalData, maxPossibleGas);\\n    }\\n\\n\\n    /**\\n     * @notice internal logic the paymasters need to provide to select which transactions they are willing to pay for\\n     * @notice see the documentation for `IPaymaster::preRelayedCall` for details\\n     */\\n    function _preRelayedCall(\\n        GsnTypes.RelayRequest calldata,\\n        bytes calldata,\\n        bytes calldata,\\n        uint256\\n    )\\n    internal\\n    virtual\\n    returns (bytes memory, bool);\\n\\n    /// @inheritdoc IPaymaster\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    )\\n    external\\n    override\\n    {\\n        _verifyRelayHubOnly();\\n        _postRelayedCall(context, success, gasUseWithoutPost, relayData);\\n    }\\n\\n    /**\\n     * @notice internal logic the paymasters need to provide if they need to take some action after the transaction\\n     * @notice see the documentation for `IPaymaster::postRelayedCall` for details\\n     */\\n    function _postRelayedCall(\\n        bytes calldata,\\n        bool,\\n        uint256,\\n        GsnTypes.RelayData calldata\\n    )\\n    internal\\n    virtual;\\n}\\n\",\"keccak256\":\"0xcd6a501e35d31a1732c1c1bcdd8d32e7f4ddbd4018dcbde4db7220efa4ec3e13\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/forwarder/IForwarder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title The Forwarder Interface\\n * @notice The contracts implementing this interface take a role of authorization, authentication and replay protection\\n * for contracts that choose to trust a `Forwarder`, instead of relying on a mechanism built into the Ethereum protocol.\\n *\\n * @notice if the `Forwarder` contract decides that an incoming `ForwardRequest` is valid, it must append 20 bytes that\\n * represent the caller to the `data` field of the request and send this new data to the target address (the `to` field)\\n *\\n * :warning: **Warning** :warning: The Forwarder can have a full control over a `Recipient` contract.\\n * Any vulnerability in a `Forwarder` implementation can make all of its `Recipient` contracts susceptible!\\n * Recipient contracts should only trust forwarders that passed through security audit,\\n * otherwise they are susceptible to identity theft.\\n */\\ninterface IForwarder is IERC165 {\\n\\n    /**\\n     * @notice A representation of a request for a `Forwarder` to send `data` on behalf of a `from` to a target (`to`).\\n     */\\n    struct ForwardRequest {\\n        address from;\\n        address to;\\n        uint256 value;\\n        uint256 gas;\\n        uint256 nonce;\\n        bytes data;\\n        uint256 validUntilTime;\\n    }\\n\\n    event DomainRegistered(bytes32 indexed domainSeparator, bytes domainValue);\\n\\n    event RequestTypeRegistered(bytes32 indexed typeHash, string typeStr);\\n\\n    /**\\n     * @param from The address of a sender.\\n     * @return The nonce for this address.\\n     */\\n    function getNonce(address from)\\n    external view\\n    returns(uint256);\\n\\n    /**\\n     * @notice Verify the transaction is valid and can be executed.\\n     * Implementations must validate the signature and the nonce of the request are correct.\\n     * Does not revert and returns successfully if the input is valid.\\n     * Reverts if any validation has failed. For instance, if either signature or nonce are incorrect.\\n     * Reverts if `domainSeparator` or `requestTypeHash` are not registered as well.\\n     */\\n    function verify(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    ) external view;\\n\\n    /**\\n     * @notice Executes a transaction specified by the `ForwardRequest`.\\n     * The transaction is first verified and then executed.\\n     * The success flag and returned bytes array of the `CALL` are returned as-is.\\n     *\\n     * This method would revert only in case of a verification error.\\n     *\\n     * All the target errors are reported using the returned success flag and returned bytes array.\\n     *\\n     * @param forwardRequest All requested transaction parameters.\\n     * @param domainSeparator The domain used when signing this request.\\n     * @param requestTypeHash The request type used when signing this request.\\n     * @param suffixData The ABI-encoded extension data for the current `RequestType` used when signing this request.\\n     * @param signature The client signature to be validated.\\n     *\\n     * @return success The success flag of the underlying `CALL` to the target address.\\n     * @return ret The byte array returned by the underlying `CALL` to the target address.\\n     */\\n    function execute(\\n        ForwardRequest calldata forwardRequest,\\n        bytes32 domainSeparator,\\n        bytes32 requestTypeHash,\\n        bytes calldata suffixData,\\n        bytes calldata signature\\n    )\\n    external payable\\n    returns (bool success, bytes memory ret);\\n\\n    /**\\n     * @notice Register a new Request typehash.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @param typeName The name of the request type.\\n     * @param typeSuffix Any extra data after the generic params. Must contain add at least one param.\\n     * The generic ForwardRequest type is always registered by the constructor.\\n     */\\n    function registerRequestType(string calldata typeName, string calldata typeSuffix) external;\\n\\n    /**\\n     * @notice Register a new domain separator.\\n     *\\n     * @notice This is necessary for the Forwarder to be able to verify the signatures conforming to the ERC-712.\\n     *\\n     * @notice The domain separator must have the following fields: `name`, `version`, `chainId`, `verifyingContract`.\\n     * The `chainId` is the current network's `chainId`, and the `verifyingContract` is this Forwarder's address.\\n     * This method accepts the domain name and version to create and register the domain separator value.\\n     * @param name The domain's display name.\\n     * @param version The domain/protocol version.\\n     */\\n    function registerDomainSeparator(string calldata name, string calldata version) external;\\n}\\n\",\"keccak256\":\"0x28669953bd3dcc98a5f959fa3cac97444584b6fbe59341681b9a59f11a83b171\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IPaymaster.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\n\\n/**\\n * @title The Paymaster Interface\\n * @notice Contracts implementing this interface exist to make decision about paying the transaction fee to the relay.\\n *\\n * @notice There are two callbacks here that are executed by the RelayHub: `preRelayedCall` and `postRelayedCall`.\\n *\\n * @notice It is recommended that your implementation inherits from the abstract BasePaymaster contract.\\n*/\\ninterface IPaymaster is IERC165 {\\n    /**\\n     * @notice The limits this Paymaster wants to be imposed by the RelayHub on user input. See `getGasAndDataLimits`.\\n     */\\n    struct GasAndDataLimits {\\n        uint256 acceptanceBudget;\\n        uint256 preRelayedCallGasLimit;\\n        uint256 postRelayedCallGasLimit;\\n        uint256 calldataSizeLimit;\\n    }\\n\\n    /**\\n     * @notice Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster.\\n     * This function allows different paymasters to have different properties without changes to the RelayHub.\\n     * @return limits An instance of the `GasAndDataLimits` struct\\n     *\\n     * ##### `acceptanceBudget`\\n     * If the transactions consumes more than `acceptanceBudget` this Paymaster will be charged for gas no matter what.\\n     * Transaction that gets rejected after consuming more than `acceptanceBudget` gas is on this Paymaster's expense.\\n     *\\n     * Should be set to an amount gas this Paymaster expects to spend deciding whether to accept or reject a request.\\n     * This includes gas consumed by calculations in the `preRelayedCall`, `Forwarder` and the recipient contract.\\n     *\\n     * :warning: **Warning** :warning: As long this value is above `preRelayedCallGasLimit`\\n     * (see defaults in `BasePaymaster`), the Paymaster is guaranteed it will never pay for rejected transactions.\\n     * If this value is below `preRelayedCallGasLimit`, it might might make Paymaster open to a \\\"griefing\\\" attack.\\n     *\\n     * The relayers should prefer lower `acceptanceBudget`, as it improves their chances of being compensated.\\n     * From a Relay's point of view, this is the highest gas value a bad Paymaster may cost the relay,\\n     * since the paymaster will pay anything above that value regardless of whether the transaction succeeds or reverts.\\n     * Specifying value too high might make the call rejected by relayers (see `maxAcceptanceBudget` in server config).\\n     *\\n     * ##### `preRelayedCallGasLimit`\\n     * The max gas usage of preRelayedCall. Any revert of the `preRelayedCall` is a request rejection by the paymaster.\\n     * As long as `acceptanceBudget` is above `preRelayedCallGasLimit`, any such revert is not payed by the paymaster.\\n     *\\n     * ##### `postRelayedCallGasLimit`\\n     * The max gas usage of postRelayedCall. The Paymaster is not charged for the maximum, only for actually used gas.\\n     * Note that an OOG will revert the inner transaction, but the paymaster will be charged for it anyway.\\n     */\\n    function getGasAndDataLimits()\\n    external\\n    view\\n    returns (\\n        GasAndDataLimits memory limits\\n    );\\n\\n    /**\\n     * @notice :warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions.\\n     * @return trustedForwarder The address of the `Forwarder` that is trusted by this Paymaster to execute the requests.\\n     */\\n    function getTrustedForwarder() external view returns (address trustedForwarder);\\n\\n    /**\\n     * @return relayHub The address of the `RelayHub` that is trusted by this Paymaster to execute the requests.\\n     */\\n    function getRelayHub() external view returns (address relayHub);\\n\\n    /**\\n     * @notice Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that\\n     * the Paymaster agrees to pay for this call.\\n     *\\n     * The request is considered to be rejected by the Paymaster in one of the following conditions:\\n     *  - `preRelayedCall()` method reverts\\n     *  - the `Forwarder` reverts because of nonce or signature error\\n     *  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted\\n     *    (and all that did not consume more than `acceptanceBudget` gas).\\n     *\\n     * In any of the above cases, all Paymaster calls and the recipient call are reverted.\\n     * In any other case the Paymaster will pay for the gas cost of the transaction.\\n     * Note that even if `postRelayedCall` is reverted the Paymaster will be charged.\\n     *\\n\\n     * @param relayRequest - the full relay request structure\\n     * @param signature - user's EIP712-compatible signature of the `relayRequest`.\\n     * Note that in most cases the paymaster shouldn't try use it at all. It is always checked\\n     * by the forwarder immediately after preRelayedCall returns.\\n     * @param approvalData - extra dapp-specific data (e.g. signature from trusted party)\\n     * @param maxPossibleGas - based on values returned from `getGasAndDataLimits`\\n     * the RelayHub will calculate the maximum possible amount of gas the user may be charged for.\\n     * In order to convert this value to wei, the Paymaster has to call \\\"relayHub.calculateCharge()\\\"\\n     *\\n     * @return context\\n     * A byte array to be passed to postRelayedCall.\\n     * Can contain any data needed by this Paymaster in any form or be empty if no extra data is needed.\\n     * @return rejectOnRecipientRevert\\n     * The flag that allows a Paymaster to \\\"delegate\\\" the rejection to the recipient code.\\n     * It also means the Paymaster trust the recipient to reject fast: both preRelayedCall,\\n     * forwarder check and recipient checks must fit into the GasLimits.acceptanceBudget,\\n     * otherwise the TX is paid by the Paymaster.\\n     * `true` if the Paymaster wants to reject the TX if the recipient reverts.\\n     * `false` if the Paymaster wants rejects by the recipient to be completed on chain and paid by the Paymaster.\\n     */\\n    function preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    external\\n    returns (bytes memory context, bool rejectOnRecipientRevert);\\n\\n    /**\\n     * @notice This method is called after the actual relayed function call.\\n     * It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call.\\n     *\\n     * Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster\\n     * is still committed to pay the relay for the entire transaction.\\n     *\\n     * @param context The call context, as returned by the preRelayedCall\\n     * @param success `true` if the relayed call succeeded, false if it reverted\\n     * @param gasUseWithoutPost The actual amount of gas used by the entire transaction, EXCEPT\\n     *        the gas used by the postRelayedCall itself.\\n     * @param relayData The relay params of the request. can be used by relayHub.calculateCharge()\\n     *\\n     */\\n    function postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    ) external;\\n\\n    /**\\n     * @return version The SemVer string of this Paymaster's version.\\n     */\\n    function versionPaymaster() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xeedb6d83ce600a97a4abbb614d24c65cb2ebc06a1784cc6a81afa9233d1331b6\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IRelayHub.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"./IStakeManager.sol\\\";\\n\\n/**\\n * @title The RelayHub interface\\n * @notice The implementation of this interface provides all the information the GSN client needs to\\n * create a valid `RelayRequest` and also serves as an entry point for such requests.\\n *\\n * @notice The RelayHub also handles all the related financial records and hold the balances of participants.\\n * The Paymasters keep their Ether deposited in the `RelayHub` in order to pay for the `RelayRequest`s that thay choose\\n * to pay for, and Relay Servers keep their earned Ether in the `RelayHub` until they choose to `withdraw()`\\n *\\n * @notice The RelayHub on each supported network only needs a single instance and there is usually no need for dApp\\n * developers or Relay Server operators to redeploy, reimplement, modify or override the `RelayHub`.\\n */\\ninterface IRelayHub is IERC165 {\\n    /**\\n     * @notice A struct that contains all the parameters of the `RelayHub` that can be modified after the deployment.\\n     */\\n    struct RelayHubConfig {\\n        // maximum number of worker accounts allowed per manager\\n        uint256 maxWorkerCount;\\n        // Gas set aside for all relayCall() instructions to prevent unexpected out-of-gas exceptions\\n        uint256 gasReserve;\\n        // Gas overhead to calculate gasUseWithoutPost\\n        uint256 postOverhead;\\n        // Gas cost of all relayCall() instructions after actual 'calculateCharge()'\\n        // Assume that relay has non-zero balance (costs 15'000 more otherwise).\\n        uint256 gasOverhead;\\n        // Minimum unstake delay seconds of a relay manager's stake on the StakeManager\\n        uint256 minimumUnstakeDelay;\\n        // Developers address\\n        address devAddress;\\n        // 0 < fee < 100, as percentage of total charge from paymaster to relayer\\n        uint8 devFee;\\n        // baseRelayFee The base fee the Relay Server charges for a single transaction in Ether, in wei.\\n        uint80 baseRelayFee;\\n        // pctRelayFee The percent of the total charge to add as a Relay Server fee to the total charge.\\n        uint16 pctRelayFee;\\n    }\\n\\n    /// @notice Emitted when a configuration of the `RelayHub` is changed\\n    event RelayHubConfigured(RelayHubConfig config);\\n\\n    /// @notice Emitted when relays are added by a relayManager\\n    event RelayWorkersAdded(\\n        address indexed relayManager,\\n        address[] newRelayWorkers,\\n        uint256 workersCount\\n    );\\n\\n    /// @notice Emitted when an account withdraws funds from the `RelayHub`.\\n    event Withdrawn(\\n        address indexed account,\\n        address indexed dest,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted when `depositFor` is called, including the amount and account that was funded.\\n    event Deposited(\\n        address indexed paymaster,\\n        address indexed from,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted for each token configured for staking in setMinimumStakes\\n    event StakingTokenDataChanged(\\n        address token,\\n        uint256 minimumStake\\n    );\\n\\n    /**\\n     * @notice Emitted when an attempt to relay a call fails and the `Paymaster` does not accept the transaction.\\n     * The actual relayed call was not executed, and the recipient not charged.\\n     * @param reason contains a revert reason returned from preRelayedCall or forwarder.\\n     */\\n    event TransactionRejectedByPaymaster(\\n        address indexed relayManager,\\n        address indexed paymaster,\\n        bytes32 indexed relayRequestID,\\n        address from,\\n        address to,\\n        address relayWorker,\\n        bytes4 selector,\\n        uint256 innerGasUsed,\\n        bytes reason\\n    );\\n\\n    /**\\n     * @notice Emitted when a transaction is relayed. Note that the actual internal function call might be reverted.\\n     * The reason for a revert will be indicated in the `status` field of a corresponding `RelayCallStatus` value.\\n     * @notice `charge` is the Ether value deducted from the `Paymaster` balance.\\n     * The amount added to the `relayManager` balance will be lower if there is an activated `devFee` in the `config`.\\n     */\\n    event TransactionRelayed(\\n        address indexed relayManager,\\n        address indexed relayWorker,\\n        bytes32 indexed relayRequestID,\\n        address from,\\n        address to,\\n        address paymaster,\\n        bytes4 selector,\\n        RelayCallStatus status,\\n        uint256 charge\\n    );\\n\\n    /// @notice This event is emitted in case the internal function returns a value or reverts with a revert string.\\n    event TransactionResult(\\n        RelayCallStatus status,\\n        bytes returnValue\\n    );\\n\\n    /// @notice This event is emitted in case this `RelayHub` is deprecated and will stop serving transactions soon.\\n    event HubDeprecated(uint256 deprecationTime);\\n\\n    /**\\n     * @notice This event is emitted in case a `relayManager` has been deemed \\\"abandoned\\\" for being\\n     * unresponsive for a prolonged period of time.\\n     * @notice This event means the entire balance of the relay has been transferred to the `devAddress`.\\n     */\\n    event AbandonedRelayManagerBalanceEscheated(\\n        address indexed relayManager,\\n        uint256 balance\\n    );\\n\\n    /**\\n     * Error codes that describe all possible failure reasons reported in the `TransactionRelayed` event `status` field.\\n     *  @param OK The transaction was successfully relayed and execution successful - never included in the event.\\n     *  @param RelayedCallFailed The transaction was relayed, but the relayed call failed.\\n     *  @param RejectedByPreRelayed The transaction was not relayed due to preRelatedCall reverting.\\n     *  @param RejectedByForwarder The transaction was not relayed due to forwarder check (signature,nonce).\\n     *  @param PostRelayedFailed The transaction was relayed and reverted due to postRelatedCall reverting.\\n     *  @param PaymasterBalanceChanged The transaction was relayed and reverted due to the paymaster balance change.\\n     */\\n    enum RelayCallStatus {\\n        OK,\\n        RelayedCallFailed,\\n        RejectedByPreRelayed,\\n        RejectedByForwarder,\\n        RejectedByRecipientRevert,\\n        PostRelayedFailed,\\n        PaymasterBalanceChanged\\n    }\\n\\n    /**\\n     * @notice Add new worker addresses controlled by the sender who must be a staked Relay Manager address.\\n     * Emits a `RelayWorkersAdded` event.\\n     * This function can be called multiple times, emitting new events.\\n     */\\n    function addRelayWorkers(address[] calldata newRelayWorkers) external;\\n\\n    /**\\n     * @notice The `RelayRegistrar` callback to notify the `RelayHub` that this `relayManager` has updated registration.\\n     */\\n    function onRelayServerRegistered(address relayManager) external;\\n\\n    // Balance management\\n\\n    /**\\n     * @notice Deposits ether for a `Paymaster`, so that it can and pay for relayed transactions.\\n     * :warning: **Warning** :warning: Unused balance can only be withdrawn by the holder itself, by calling `withdraw`.\\n     * Emits a `Deposited` event.\\n     */\\n    function depositFor(address target) external payable;\\n\\n    /**\\n     * @notice Withdraws from an account's balance, sending it back to the caller.\\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\\n     * Emits a `Withdrawn` event.\\n     */\\n    function withdraw(address payable dest, uint256 amount) external;\\n\\n    /**\\n     * @notice Withdraws from an account's balance, sending funds to multiple provided addresses.\\n     * Relay Managers call this to retrieve their revenue, and `Paymasters` can also use it to reduce their funding.\\n     * Emits a `Withdrawn` event for each destination.\\n     */\\n    function withdrawMultiple(address payable[] memory dest, uint256[] memory amount) external;\\n\\n    // Relaying\\n\\n\\n    /**\\n     * @notice Relays a transaction. For this to succeed, multiple conditions must be met:\\n     *  - `Paymaster`'s `preRelayCall` method must succeed and not revert.\\n     *  - the `msg.sender` must be a registered Relay Worker that the user signed to use.\\n     *  - the transaction's gas fees must be equal or larger than the ones that were signed by the sender.\\n     *  - the transaction must have enough gas to run all internal transactions if they use all gas available to them.\\n     *  - the `Paymaster` must have enough balance to pay the Relay Worker if all gas is spent.\\n     *\\n     * @notice If all conditions are met, the call will be relayed and the `Paymaster` charged.\\n     *\\n     * @param domainSeparatorName The name of the Domain Separator used to verify the EIP-712 signature\\n     * @param maxAcceptanceBudget The maximum valid value for `paymaster.getGasLimits().acceptanceBudget` to return.\\n     * @param relayRequest All details of the requested relayed call.\\n     * @param signature The client's EIP-712 signature over the `relayRequest` struct.\\n     * @param approvalData The dapp-specific data forwarded to the `Paymaster`'s `preRelayedCall` method.\\n     * This value is **not** verified by the `RelayHub` in any way.\\n     * As an example, it can be used to pass some kind of a third-party signature to the `Paymaster` for verification.\\n     *\\n     * Emits a `TransactionRelayed` event regardless of whether the transaction succeeded or failed.\\n     */\\n    function relayCall(\\n        string calldata domainSeparatorName,\\n        uint256 maxAcceptanceBudget,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData\\n    )\\n    external\\n    returns (\\n        bool paymasterAccepted,\\n        uint256 charge,\\n        IRelayHub.RelayCallStatus status,\\n        bytes memory returnValue\\n    );\\n\\n    /**\\n     * @notice In case the Relay Worker has been found to be in violation of some rules by the `Penalizer` contract,\\n     * the `Penalizer` will call this method to execute a penalization.\\n     * The `RelayHub` will look up the Relay Manager of the given Relay Worker and will forward the call to\\n     * the `StakeManager` contract. The `RelayHub` does not perform the actual penalization either.\\n     * @param relayWorker The address of the Relay Worker that committed a penalizable offense.\\n     * @param beneficiary The address that called the `Penalizer` and will receive a reward for it.\\n     */\\n    function penalize(address relayWorker, address payable beneficiary) external;\\n\\n    /**\\n     * @notice Sets or changes the configuration of this `RelayHub`.\\n     * @param _config The new configuration.\\n     */\\n    function setConfiguration(RelayHubConfig memory _config) external;\\n\\n    /**\\n     * @notice Sets or changes the minimum amount of a given `token` that needs to be staked so that the Relay Manager\\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\\n     * @param token An array of addresses of ERC-20 compatible tokens.\\n     * @param minimumStake An array of minimal amounts necessary for a corresponding token, in wei.\\n     */\\n    function setMinimumStakes(IERC20[] memory token, uint256[] memory minimumStake) external;\\n\\n    /**\\n     * @notice Deprecate hub by reverting all incoming `relayCall()` calls starting from a given timestamp\\n     * @param _deprecationTime The timestamp in seconds after which the `RelayHub` stops serving transactions.\\n     */\\n    function deprecateHub(uint256 _deprecationTime) external;\\n\\n    /**\\n     * @notice\\n     * @param relayManager\\n     */\\n    function escheatAbandonedRelayBalance(address relayManager) external;\\n\\n    /**\\n     * @notice The fee is expressed as a base fee in wei plus percentage of the actual charge.\\n     * For example, a value '40' stands for a 40% fee, so the recipient will be charged for 1.4 times the spent amount.\\n     * @param gasUsed An amount of gas used by the transaction.\\n     * @param relayData The details of a transaction signed by the sender.\\n     * @return The calculated charge, in wei.\\n     */\\n    function calculateCharge(uint256 gasUsed, GsnTypes.RelayData calldata relayData) external view returns (uint256);\\n\\n    /**\\n     * @notice The fee is expressed as a  percentage of the actual charge.\\n     * For example, a value '40' stands for a 40% fee, so the Relay Manager will only get 60% of the `charge`.\\n     * @param charge The amount of Ether in wei the Paymaster will be charged for this transaction.\\n     * @return The calculated devFee, in wei.\\n     */\\n    function calculateDevCharge(uint256 charge) external view returns (uint256);\\n    /* getters */\\n\\n    /// @return config The configuration of the `RelayHub`.\\n    function getConfiguration() external view returns (RelayHubConfig memory config);\\n\\n    /**\\n     * @param token An address of an ERC-20 compatible tokens.\\n     * @return The minimum amount of a given `token` that needs to be staked so that the Relay Manager\\n     * is considered to be 'staked' by this `RelayHub`. Zero value means this token is not allowed for staking.\\n     */\\n    function getMinimumStakePerToken(IERC20 token) external view returns (uint256);\\n\\n    /**\\n     * @param worker An address of the Relay Worker.\\n     * @return The address of its Relay Manager.\\n     */\\n    function getWorkerManager(address worker) external view returns (address);\\n\\n    /**\\n     * @param manager An address of the Relay Manager.\\n     * @return The count of Relay Workers associated with this Relay Manager.\\n     */\\n    function getWorkerCount(address manager) external view returns (uint256);\\n\\n    /// @return An account's balance. It can be either a deposit of a `Paymaster`, or a revenue of a Relay Manager.\\n    function balanceOf(address target) external view returns (uint256);\\n\\n    /// @return The `StakeManager` address for this `RelayHub`.\\n    function getStakeManager() external view returns (IStakeManager);\\n\\n    /// @return The `Penalizer` address for this `RelayHub`.\\n    function getPenalizer() external view returns (address);\\n\\n    /// @return The `RelayRegistrar` address for this `RelayHub`.\\n    function getRelayRegistrar() external view returns (address);\\n\\n    /// @return The `BatchGateway` address for this `RelayHub`.\\n    function getBatchGateway() external view returns (address);\\n\\n    /**\\n     * @notice Uses `StakeManager` to decide if the Relay Manager can be considered staked or not.\\n     * Returns if the stake's token, amount and delay satisfy all requirements, reverts otherwise.\\n     */\\n    function verifyRelayManagerStaked(address relayManager) external view;\\n\\n    /**\\n     * @notice Uses `StakeManager` to check if the Relay Manager can be considered abandoned or not.\\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\\n     */\\n    function isRelayEscheatable(address relayManager) external view returns (bool);\\n\\n    /// @return `true` if the `RelayHub` is deprecated, `false` it it is not deprecated and can serve transactions.\\n    function isDeprecated() external view returns (bool);\\n\\n    /// @return The timestamp from which the hub no longer allows relaying calls.\\n    function getDeprecationTime() external view returns (uint256);\\n\\n    /// @return The block number in which the contract has been deployed.\\n    function getCreationBlock() external view returns (uint256);\\n\\n    /// @return a SemVer-compliant version of the `RelayHub` contract.\\n    function versionHub() external view returns (string memory);\\n\\n    /// @return A total measurable amount of gas left to current execution. Same as 'gasleft()' for pure EVMs.\\n    function aggregateGasleft() external view returns (uint256);\\n}\\n\\n\",\"keccak256\":\"0x0ab29ca5985c98f530e5985e3d9dd14f00d34527410ce980b51b26e57bb0121c\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/interfaces/IStakeManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @title The StakeManager Interface\\n * @notice In order to prevent an attacker from registering a large number of unresponsive relays, the GSN requires\\n * the Relay Server to maintain a permanently locked stake in the system before being able to register.\\n *\\n * @notice Also, in some cases the behavior of a Relay Server may be found to be illegal by a `Penalizer` contract.\\n * In such case, the stake will never be returned to the Relay Server operator and will be slashed.\\n *\\n * @notice An implementation of this interface is tasked with keeping Relay Servers' stakes, made in any ERC-20 token.\\n * Note that the `RelayHub` chooses which ERC-20 tokens to support and how much stake is needed.\\n */\\ninterface IStakeManager is IERC165 {\\n\\n    /// @notice Emitted when a `stake` or `unstakeDelay` are initialized or increased.\\n    event StakeAdded(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 stake,\\n        uint256 unstakeDelay\\n    );\\n\\n    /// @notice Emitted once a stake is scheduled for withdrawal.\\n    event StakeUnlocked(\\n        address indexed relayManager,\\n        address indexed owner,\\n        uint256 withdrawTime\\n    );\\n\\n    /// @notice Emitted when owner withdraws `relayManager` funds.\\n    event StakeWithdrawn(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /// @notice Emitted when an authorized `RelayHub` penalizes a `relayManager`.\\n    event StakePenalized(\\n        address indexed relayManager,\\n        address indexed beneficiary,\\n        IERC20 token,\\n        uint256 reward\\n    );\\n\\n    /// @notice Emitted when a `relayManager` adds a new `RelayHub` to a list of authorized.\\n    event HubAuthorized(\\n        address indexed relayManager,\\n        address indexed relayHub\\n    );\\n\\n    /// @notice Emitted when a `relayManager` removes a `RelayHub` from a list of authorized.\\n    event HubUnauthorized(\\n        address indexed relayManager,\\n        address indexed relayHub,\\n        uint256 removalTime\\n    );\\n\\n    /// @notice Emitted when a `relayManager` sets its `owner`. This is necessary to prevent stake hijacking.\\n    event OwnerSet(\\n        address indexed relayManager,\\n        address indexed owner\\n    );\\n\\n    /// @notice Emitted when a `burnAddress` is changed.\\n    event BurnAddressSet(\\n        address indexed burnAddress\\n    );\\n\\n    /// @notice Emitted when a `devAddress` is changed.\\n    event DevAddressSet(\\n        address indexed devAddress\\n    );\\n\\n    /// @notice Emitted if Relay Server is inactive for an `abandonmentDelay` and contract owner initiates its removal.\\n    event RelayServerAbandoned(\\n        address indexed relayManager,\\n        uint256 abandonedTime\\n    );\\n\\n    /// @notice Emitted to indicate an action performed by a relay server to prevent it from being marked as abandoned.\\n    event RelayServerKeepalive(\\n        address indexed relayManager,\\n        uint256 keepaliveTime\\n    );\\n\\n    /// @notice Emitted when the stake of an abandoned relayer has been confiscated and transferred to the `devAddress`.\\n    event AbandonedRelayManagerStakeEscheated(\\n        address indexed relayManager,\\n        address indexed owner,\\n        IERC20 token,\\n        uint256 amount\\n    );\\n\\n    /**\\n     * @param stake - amount of ether staked for this relay\\n     * @param unstakeDelay - number of seconds to elapse before the owner can retrieve the stake after calling 'unlock'\\n     * @param withdrawTime - timestamp in seconds when 'withdraw' will be callable, or zero if the unlock has not been called\\n     * @param owner - address that receives revenue and manages relayManager's stake\\n     */\\n    struct StakeInfo {\\n        uint256 stake;\\n        uint256 unstakeDelay;\\n        uint256 withdrawTime;\\n        uint256 abandonedTime;\\n        uint256 keepaliveTime;\\n        IERC20 token;\\n        address owner;\\n    }\\n\\n    struct RelayHubInfo {\\n        uint256 removalTime;\\n    }\\n\\n    /**\\n     * @param devAddress - the address that will receive the 'abandoned' stake\\n     * @param abandonmentDelay - the amount of time after which the relay can be marked as 'abandoned'\\n     * @param escheatmentDelay - the amount of time after which the abandoned relay's stake and balance may be withdrawn to the `devAddress`\\n     */\\n    struct AbandonedRelayServerConfig {\\n        address devAddress;\\n        uint256 abandonmentDelay;\\n        uint256 escheatmentDelay;\\n    }\\n\\n    /**\\n     * @notice Set the owner of a Relay Manager. Called only by the RelayManager itself.\\n     * Note that owners cannot transfer ownership - if the entry already exists, reverts.\\n     * @param owner - owner of the relay (as configured off-chain)\\n     */\\n    function setRelayManagerOwner(address owner) external;\\n\\n    /**\\n     * @notice Put a stake for a relayManager and set its unstake delay.\\n     * Only the owner can call this function. If the entry does not exist, reverts.\\n     * The owner must give allowance of the ERC-20 token to the StakeManager before calling this method.\\n     * It is the RelayHub who has a configurable list of minimum stakes per token. StakeManager accepts all tokens.\\n     * @param token The address of an ERC-20 token that is used by the relayManager as a stake\\n     * @param relayManager The address that represents a stake entry and controls relay registrations on relay hubs\\n     * @param unstakeDelay The number of seconds to elapse before an owner can retrieve the stake after calling `unlock`\\n     * @param amount The amount of tokens to be taken from the relayOwner and locked in the StakeManager as a stake\\n     */\\n    function stakeForRelayManager(IERC20 token, address relayManager, uint256 unstakeDelay, uint256 amount) external;\\n\\n    /**\\n     * @notice Schedule the unlocking of the stake. The `unstakeDelay` must pass before owner can call `withdrawStake`.\\n     * @param relayManager The address of a Relay Manager whose stake is to be unlocked.\\n     */\\n    function unlockStake(address relayManager) external;\\n    /**\\n     * @notice Withdraw the unlocked stake.\\n     * @param relayManager The address of a Relay Manager whose stake is to be withdrawn.\\n     */\\n    function withdrawStake(address relayManager) external;\\n\\n    /**\\n     * @notice Add the `RelayHub` to a list of authorized by this Relay Manager.\\n     * This allows the RelayHub to penalize this Relay Manager. The `RelayHub` cannot trust a Relay it cannot penalize.\\n     * @param relayManager The address of a Relay Manager whose stake is to be authorized for the new `RelayHub`.\\n     * @param relayHub The address of a `RelayHub` to be authorized.\\n     */\\n    function authorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `authorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function authorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * @notice Remove the `RelayHub` from a list of authorized by this Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @param relayHub The address of a `RelayHub` to be unauthorized.\\n     */\\n    function unauthorizeHubByOwner(address relayManager, address relayHub) external;\\n\\n    /**\\n     * @notice Same as `unauthorizeHubByOwner` but can be called by the RelayManager itself.\\n     */\\n    function unauthorizeHubByManager(address relayHub) external;\\n\\n    /**\\n     * Slash the stake of the relay relayManager. In order to prevent stake kidnapping, burns part of stake on the way.\\n     * @param relayManager The address of a Relay Manager to be penalized.\\n     * @param beneficiary The address that receives part of the penalty amount.\\n     * @param amount A total amount of penalty to be withdrawn from stake.\\n     */\\n    function penalizeRelayManager(address relayManager, address beneficiary, uint256 amount) external;\\n\\n    /**\\n     * @notice Allows the contract owner to set the given `relayManager` as abandoned after a configurable delay.\\n     * Its entire stake and balance will be taken from a relay if it does not respond to being marked as abandoned.\\n     */\\n    function markRelayAbandoned(address relayManager) external;\\n\\n    /**\\n     * @notice If more than `abandonmentDelay` has passed since the last Keepalive transaction, and relay manager\\n     * has been marked as abandoned, and after that more that `escheatmentDelay` have passed, entire stake and\\n     * balance will be taken from this relay.\\n     */\\n    function escheatAbandonedRelayStake(address relayManager) external;\\n\\n    /**\\n     * @notice Sets a new `keepaliveTime` for the given `relayManager`, preventing it from being marked as abandoned.\\n     * Can be called by an authorized `RelayHub` or by the `relayOwner` address.\\n     */\\n    function updateRelayKeepaliveTime(address relayManager) external;\\n\\n    /**\\n     * @notice Check if the Relay Manager can be considered abandoned or not.\\n     * Returns true if the stake's abandonment time is in the past including the escheatment delay, false otherwise.\\n     */\\n    function isRelayEscheatable(address relayManager) external view returns(bool);\\n\\n    /**\\n     * @notice Get the stake details information for the given Relay Manager.\\n     * @param relayManager The address of a Relay Manager.\\n     * @return stakeInfo The `StakeInfo` structure.\\n     * @return isSenderAuthorizedHub `true` if the `msg.sender` for this call was a `RelayHub` that is authorized now.\\n     * `false` if the `msg.sender` for this call is not authorized.\\n     */\\n    function getStakeInfo(address relayManager) external view returns (StakeInfo memory stakeInfo, bool isSenderAuthorizedHub);\\n\\n    /**\\n     * @return The maximum unstake delay this `StakeManger` allows. This is to prevent locking money forever by mistake.\\n     */\\n    function getMaxUnstakeDelay() external view returns (uint256);\\n\\n    /**\\n     * @notice Change the address that will receive the 'burned' part of the penalized stake.\\n     * This is done to prevent malicious Relay Server from penalizing itself and breaking even.\\n     */\\n    function setBurnAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The address that will receive the 'burned' part of the penalized stake.\\n     */\\n    function getBurnAddress() external view returns (address);\\n\\n    /**\\n     * @notice Change the address that will receive the 'abandoned' stake.\\n     * This is done to prevent Relay Servers that lost their keys from losing access to funds.\\n     */\\n    function setDevAddress(address _burnAddress) external;\\n\\n    /**\\n     * @return The structure that contains all configuration values for the 'abandoned' stake.\\n     */\\n    function getAbandonedRelayServerConfig() external view returns (AbandonedRelayServerConfig memory);\\n\\n    /**\\n     * @return the block number in which the contract has been deployed.\\n     */\\n    function getCreationBlock() external view returns (uint256);\\n\\n    /**\\n     * @return a SemVer-compliant version of the `StakeManager` contract.\\n     */\\n    function versionSM() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x77035b55ca4c09cb499bc0cab3f9e791d77597b148dbfee8bf94ca6c0039c3e0\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnEip712Library.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"../utils/GsnTypes.sol\\\";\\nimport \\\"../interfaces/IERC2771Recipient.sol\\\";\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\nimport \\\"./GsnUtils.sol\\\";\\n\\n/**\\n * @title The ERC-712 Library for GSN\\n * @notice Bridge Library to convert a GSN RelayRequest into a valid `ForwardRequest` for a `Forwarder`.\\n */\\nlibrary GsnEip712Library {\\n    // maximum length of return value/revert reason for 'execute' method. Will truncate result if exceeded.\\n    uint256 private constant MAX_RETURN_SIZE = 1024;\\n\\n    //copied from Forwarder (can't reference string constants even from another library)\\n    string public constant GENERIC_PARAMS = \\\"address from,address to,uint256 value,uint256 gas,uint256 nonce,bytes data,uint256 validUntilTime\\\";\\n\\n    bytes public constant RELAYDATA_TYPE = \\\"RelayData(uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 transactionCalldataGasUsed,address relayWorker,address paymaster,address forwarder,bytes paymasterData,uint256 clientId)\\\";\\n\\n    string public constant RELAY_REQUEST_NAME = \\\"RelayRequest\\\";\\n    string public constant RELAY_REQUEST_SUFFIX = string(abi.encodePacked(\\\"RelayData relayData)\\\", RELAYDATA_TYPE));\\n\\n    bytes public constant RELAY_REQUEST_TYPE = abi.encodePacked(\\n        RELAY_REQUEST_NAME,\\\"(\\\",GENERIC_PARAMS,\\\",\\\", RELAY_REQUEST_SUFFIX);\\n\\n    bytes32 public constant RELAYDATA_TYPEHASH = keccak256(RELAYDATA_TYPE);\\n    bytes32 public constant RELAY_REQUEST_TYPEHASH = keccak256(RELAY_REQUEST_TYPE);\\n\\n\\n    struct EIP712Domain {\\n        string name;\\n        string version;\\n        uint256 chainId;\\n        address verifyingContract;\\n    }\\n\\n    bytes32 public constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n    );\\n\\n    function splitRequest(\\n        GsnTypes.RelayRequest calldata req\\n    )\\n    internal\\n    pure\\n    returns (\\n        bytes memory suffixData\\n    ) {\\n        suffixData = abi.encode(\\n            hashRelayData(req.relayData));\\n    }\\n\\n    //verify that the recipient trusts the given forwarder\\n    // MUST be called by paymaster\\n    function verifyForwarderTrusted(GsnTypes.RelayRequest calldata relayRequest) internal view {\\n        (bool success, bytes memory ret) = relayRequest.request.to.staticcall(\\n            abi.encodeWithSelector(\\n                IERC2771Recipient.isTrustedForwarder.selector, relayRequest.relayData.forwarder\\n            )\\n        );\\n        require(success, \\\"isTrustedForwarder: reverted\\\");\\n        require(ret.length == 32, \\\"isTrustedForwarder: bad response\\\");\\n        require(abi.decode(ret, (bool)), \\\"invalid forwarder for recipient\\\");\\n    }\\n\\n    function verifySignature(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal view {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\\n        IForwarder forwarder = IForwarder(payable(relayRequest.relayData.forwarder));\\n        forwarder.verify(relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature);\\n    }\\n\\n    function verify(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal view {\\n        verifyForwarderTrusted(relayRequest);\\n        verifySignature(domainSeparatorName, relayRequest, signature);\\n    }\\n\\n    function execute(\\n        string memory domainSeparatorName,\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature\\n    ) internal returns (\\n        bool forwarderSuccess,\\n        bool callSuccess,\\n        bytes memory ret\\n    ) {\\n        (bytes memory suffixData) = splitRequest(relayRequest);\\n        bytes32 _domainSeparator = domainSeparator(domainSeparatorName, relayRequest.relayData.forwarder);\\n        /* solhint-disable-next-line avoid-low-level-calls */\\n        (forwarderSuccess, ret) = relayRequest.relayData.forwarder.call(\\n            abi.encodeWithSelector(IForwarder.execute.selector,\\n            relayRequest.request, _domainSeparator, RELAY_REQUEST_TYPEHASH, suffixData, signature\\n        ));\\n        if ( forwarderSuccess ) {\\n\\n          //decode return value of execute:\\n          (callSuccess, ret) = abi.decode(ret, (bool, bytes));\\n        }\\n        truncateInPlace(ret);\\n    }\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data) internal pure {\\n        MinLibBytes.truncateInPlace(data, MAX_RETURN_SIZE);\\n    }\\n\\n    function domainSeparator(string memory name, address forwarder) internal view returns (bytes32) {\\n        return hashDomain(EIP712Domain({\\n            name : name,\\n            version : \\\"3\\\",\\n            chainId : getChainID(),\\n            verifyingContract : forwarder\\n            }));\\n    }\\n\\n    function getChainID() internal view returns (uint256 id) {\\n        /* solhint-disable no-inline-assembly */\\n        assembly {\\n            id := chainid()\\n        }\\n    }\\n\\n    function hashDomain(EIP712Domain memory req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(bytes(req.name)),\\n                keccak256(bytes(req.version)),\\n                req.chainId,\\n                req.verifyingContract));\\n    }\\n\\n    function hashRelayData(GsnTypes.RelayData calldata req) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n                RELAYDATA_TYPEHASH,\\n                req.maxFeePerGas,\\n                req.maxPriorityFeePerGas,\\n                req.transactionCalldataGasUsed,\\n                req.relayWorker,\\n                req.paymaster,\\n                req.forwarder,\\n                keccak256(req.paymasterData),\\n                req.clientId\\n            ));\\n    }\\n}\\n\",\"keccak256\":\"0x73b5828c2578aea26dbd21cea00f1a245c94f9720ffd95932777ee6121e31972\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../forwarder/IForwarder.sol\\\";\\n\\ninterface GsnTypes {\\n    /// @notice maxFeePerGas, maxPriorityFeePerGas, pctRelayFee and baseRelayFee must be validated inside of the paymaster's preRelayedCall in order not to overpay\\n    struct RelayData {\\n        uint256 maxFeePerGas;\\n        uint256 maxPriorityFeePerGas;\\n        uint256 transactionCalldataGasUsed;\\n        address relayWorker;\\n        address paymaster;\\n        address forwarder;\\n        bytes paymasterData;\\n        uint256 clientId;\\n    }\\n\\n    //note: must start with the ForwardRequest to be an extension of the generic forwarder\\n    struct RelayRequest {\\n        IForwarder.ForwardRequest request;\\n        RelayData relayData;\\n    }\\n}\\n\",\"keccak256\":\"0x9fb51c540f32939f1ee291e3fa709be64f7c73485bd7b87c6624c3567dd42a1b\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/GsnUtils.sol\":{\"content\":\"/* solhint-disable no-inline-assembly */\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/MinLibBytes.sol\\\";\\nimport \\\"./GsnTypes.sol\\\";\\n\\n/**\\n * @title The GSN Solidity Utils Library\\n * @notice Some library functions used throughout the GSN Solidity codebase.\\n */\\nlibrary GsnUtils {\\n\\n    bytes32 constant private RELAY_REQUEST_ID_MASK = 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n\\n    /**\\n     * @notice Calculate an identifier for the meta-transaction in a format similar to a transaction hash.\\n     * Note that uniqueness relies on signature and may not be enforced if meta-transactions are verified\\n     * with a different algorithm, e.g. when batching.\\n     * @param relayRequest The `RelayRequest` for which an ID is being calculated.\\n     * @param signature The signature for the `RelayRequest`. It is not validated here and may even remain empty.\\n     */\\n    function getRelayRequestID(GsnTypes.RelayRequest calldata relayRequest, bytes calldata signature)\\n    internal\\n    pure\\n    returns (bytes32) {\\n        return keccak256(abi.encode(relayRequest.request.from, relayRequest.request.nonce, signature)) & RELAY_REQUEST_ID_MASK;\\n    }\\n\\n    /**\\n     * @notice Extract the method identifier signature from the encoded function call.\\n     */\\n    function getMethodSig(bytes memory msgData) internal pure returns (bytes4) {\\n        return MinLibBytes.readBytes4(msgData, 0);\\n    }\\n\\n    /**\\n     * @notice Extract a parameter from encoded-function block.\\n     * see: https://solidity.readthedocs.io/en/develop/abi-spec.html#formal-specification-of-the-encoding\\n     * The return value should be casted to the right type (`uintXXX`/`bytesXXX`/`address`/`bool`/`enum`).\\n     * @param msgData Byte array containing a uint256 value.\\n     * @param index Index in byte array of uint256 value.\\n     * @return result uint256 value from byte array.\\n     */\\n    function getParam(bytes memory msgData, uint256 index) internal pure returns (uint256 result) {\\n        return MinLibBytes.readUint256(msgData, 4 + index * 32);\\n    }\\n\\n    /// @notice Re-throw revert with the same revert data.\\n    function revertWithData(bytes memory data) internal pure {\\n        assembly {\\n            revert(add(data,32), mload(data))\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7ea79bac2508612eba2c9372a7a4af953218b4ee2721e273f6d368e76b1ae7bb\",\"license\":\"GPL-3.0-only\"},\"@opengsn/contracts/src/utils/MinLibBytes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// minimal bytes manipulation required by GSN\\n// a minimal subset from 0x/LibBytes\\n/* solhint-disable no-inline-assembly */\\npragma solidity ^0.8.0;\\n\\nlibrary MinLibBytes {\\n\\n    //truncate the given parameter (in-place) if its length is above the given maximum length\\n    // do nothing otherwise.\\n    //NOTE: solidity warns unless the method is marked \\\"pure\\\", but it DOES modify its parameter.\\n    function truncateInPlace(bytes memory data, uint256 maxlen) internal pure {\\n        if (data.length > maxlen) {\\n            assembly { mstore(data, maxlen) }\\n        }\\n    }\\n\\n    /// @dev Reads an address from a position in a byte array.\\n    /// @param b Byte array containing an address.\\n    /// @param index Index in byte array of address.\\n    /// @return result address from byte array.\\n    function readAddress(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (address result)\\n    {\\n        require (b.length >= index + 20, \\\"readAddress: data too short\\\");\\n\\n        // Add offset to index:\\n        // 1. Arrays are prefixed by 32-byte length parameter (add 32 to index)\\n        // 2. Account for size difference between address length and 32-byte storage word (subtract 12 from index)\\n        index += 20;\\n\\n        // Read address from array memory\\n        assembly {\\n            // 1. Add index to address of bytes array\\n            // 2. Load 32-byte word from memory\\n            // 3. Apply 20-byte mask to obtain address\\n            result := and(mload(add(b, index)), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n        return result;\\n    }\\n\\n    function readBytes32(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes32 result)\\n    {\\n        require(b.length >= index + 32, \\\"readBytes32: data too short\\\" );\\n\\n        // Read the bytes32 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n        }\\n        return result;\\n    }\\n\\n    /// @dev Reads a uint256 value from a position in a byte array.\\n    /// @param b Byte array containing a uint256 value.\\n    /// @param index Index in byte array of uint256 value.\\n    /// @return result uint256 value from byte array.\\n    function readUint256(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (uint256 result)\\n    {\\n        result = uint256(readBytes32(b, index));\\n        return result;\\n    }\\n\\n    function readBytes4(\\n        bytes memory b,\\n        uint256 index\\n    )\\n        internal\\n        pure\\n        returns (bytes4 result)\\n    {\\n        require(b.length >= index + 4, \\\"readBytes4: data too short\\\");\\n\\n        // Read the bytes4 from array memory\\n        assembly {\\n            result := mload(add(b, add(index,32)))\\n            // Solidity does not require us to clean the trailing bytes.\\n            // We do it anyway\\n            result := and(result, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x8063af8e0f134be3d794ad39bdc0041f33a16c91a4ee7abb968d4c15c8d10c54\",\"license\":\"MIT\"},\"@opengsn/paymasters/contracts/WhitelistPaymaster.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@opengsn/contracts/src/BasePaymaster.sol\\\";\\n\\n/// A sample paymaster that has whitelists for senders, targets and methods.\\n/// - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed.\\n/// - if at least one target is whitelisted, then ONLY whitelisted targets are allowed.\\ncontract WhitelistPaymaster is BasePaymaster {\\n\\n    bool public useSenderWhitelist;\\n    bool public useTargetWhitelist;\\n    bool public useMethodWhitelist;\\n    bool public useRejectOnRecipientRevert;\\n    mapping(address => bool) public senderWhitelist;\\n    mapping(address => bool) public targetWhitelist;\\n    mapping(address => mapping(bytes4 => bool)) public methodWhitelist;\\n\\n    function versionPaymaster() external view override virtual returns (string memory){\\n        return \\\"3.0.0-beta.3+opengsn.whitelist.ipaymaster\\\";\\n    }\\n\\n    function whitelistSender(address sender, bool isAllowed) public onlyOwner {\\n        senderWhitelist[sender] = isAllowed;\\n    }\\n\\n    function whitelistTarget(address target, bool isAllowed) public onlyOwner {\\n        targetWhitelist[target] = isAllowed;\\n    }\\n\\n    function whitelistMethod(address target, bytes4 method, bool isAllowed) public onlyOwner {\\n        methodWhitelist[target][method] = isAllowed;\\n    }\\n\\n    function setConfiguration(\\n        bool _useSenderWhitelist,\\n        bool _useTargetWhitelist,\\n        bool _useMethodWhitelist,\\n        bool _useRejectOnRecipientRevert\\n    ) public onlyOwner {\\n        useSenderWhitelist = _useSenderWhitelist;\\n        useTargetWhitelist = _useTargetWhitelist;\\n        useMethodWhitelist = _useMethodWhitelist;\\n        useRejectOnRecipientRevert = _useRejectOnRecipientRevert;\\n    }\\n\\n    function _preRelayedCall(\\n        GsnTypes.RelayRequest calldata relayRequest,\\n        bytes calldata signature,\\n        bytes calldata approvalData,\\n        uint256 maxPossibleGas\\n    )\\n    internal\\n    override\\n    virtual\\n    returns (bytes memory context, bool revertOnRecipientRevert) {\\n        (signature, maxPossibleGas);\\n        require(approvalData.length == 0, \\\"approvalData: invalid length\\\");\\n        require(relayRequest.relayData.paymasterData.length == 0, \\\"paymasterData: invalid length\\\");\\n\\n        if (useSenderWhitelist) {\\n            address sender = relayRequest.request.from;\\n            require(senderWhitelist[sender], \\\"sender not whitelisted\\\");\\n        }\\n\\n        if (useTargetWhitelist) {\\n            address target = relayRequest.request.to;\\n            require(targetWhitelist[target], \\\"target not whitelisted\\\");\\n        }\\n\\n        if (useMethodWhitelist) {\\n            address target = relayRequest.request.to;\\n            bytes4 method = GsnUtils.getMethodSig(relayRequest.request.data);\\n            require(methodWhitelist[target][method], \\\"method not whitelisted\\\");\\n        }\\n\\n        return (\\\"\\\", useRejectOnRecipientRevert);\\n    }\\n\\n    function _postRelayedCall(\\n        bytes calldata context,\\n        bool success,\\n        uint256 gasUseWithoutPost,\\n        GsnTypes.RelayData calldata relayData\\n    )\\n    internal\\n    override\\n    virtual {\\n        (context, success, gasUseWithoutPost, relayData);\\n    }\\n}\\n\",\"keccak256\":\"0x36e9d7f5fdaebc07164c4a86f8083d47f07b0fcefe6351cc4594c3e679a6c7d9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/introspection/ERC165Checker.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Library used to query support of an interface declared via {IERC165}.\\n *\\n * Note that these functions return the actual result of the query: they do not\\n * `revert` if an interface is not supported. It is up to the caller to decide\\n * what to do in these cases.\\n */\\nlibrary ERC165Checker {\\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\\n\\n    /**\\n     * @dev Returns true if `account` supports the {IERC165} interface.\\n     */\\n    function supportsERC165(address account) internal view returns (bool) {\\n        // Any contract that implements ERC165 must explicitly indicate support of\\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\\n        return\\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\\n    }\\n\\n    /**\\n     * @dev Returns true if `account` supports the interface defined by\\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\\n        // query support of both ERC165 as per the spec and support of _interfaceId\\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns a boolean array where each value corresponds to the\\n     * interfaces passed in and whether they're supported or not. This allows\\n     * you to batch check interfaces for a contract where your expectation\\n     * is that some interfaces may not be supported.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds)\\n        internal\\n        view\\n        returns (bool[] memory)\\n    {\\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\\n\\n        // query support of ERC165 itself\\n        if (supportsERC165(account)) {\\n            // query support of each interface in interfaceIds\\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\\n            }\\n        }\\n\\n        return interfaceIdsSupported;\\n    }\\n\\n    /**\\n     * @dev Returns true if `account` supports all the interfaces defined in\\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\\n     *\\n     * Batch-querying can lead to gas savings by skipping repeated checks for\\n     * {IERC165} support.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     */\\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\\n        // query support of ERC165 itself\\n        if (!supportsERC165(account)) {\\n            return false;\\n        }\\n\\n        // query support of each interface in interfaceIds\\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\\n                return false;\\n            }\\n        }\\n\\n        // all interfaces supported\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Query if a contract implements an interface, does not check ERC165 support\\n     * @param account The address of the contract to query for support of an interface\\n     * @param interfaceId The interface identifier, as specified in ERC-165\\n     * @return true if the contract at account indicates support of the interface with\\n     * identifier interfaceId, false otherwise\\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\\n     * the behavior of this method is undefined. This precondition can be checked\\n     * with {supportsERC165}.\\n     * Interface identification is specified in ERC-165.\\n     */\\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\\n        // prepare call\\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\\n\\n        // perform static call\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly {\\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0x00)\\n        }\\n\\n        return success && returnSize >= 0x20 && returnValue > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2256,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":69,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"relayHub","offset":0,"slot":"1","type":"t_contract(IRelayHub)1104"},{"astId":71,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"_trustedForwarder","offset":0,"slot":"2","type":"t_address"},{"astId":2013,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"useSenderWhitelist","offset":20,"slot":"2","type":"t_bool"},{"astId":2015,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"useTargetWhitelist","offset":21,"slot":"2","type":"t_bool"},{"astId":2017,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"useMethodWhitelist","offset":22,"slot":"2","type":"t_bool"},{"astId":2019,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"useRejectOnRecipientRevert","offset":23,"slot":"2","type":"t_bool"},{"astId":2023,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"senderWhitelist","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"},{"astId":2027,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"targetWhitelist","offset":0,"slot":"4","type":"t_mapping(t_address,t_bool)"},{"astId":2033,"contract":"@opengsn/paymasters/contracts/WhitelistPaymaster.sol:WhitelistPaymaster","label":"methodWhitelist","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_bytes4,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_contract(IRelayHub)1104":{"encoding":"inplace","label":"contract IRelayHub","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_bytes4,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(bytes4 => bool))","numberOfBytes":"32","value":"t_mapping(t_bytes4,t_bool)"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{"getGasAndDataLimits()":{"notice":"Return the Gas Limits for Paymaster's functions and maximum msg.data length values for this Paymaster. This function allows different paymasters to have different properties without changes to the RelayHub."},"getTrustedForwarder()":{"notice":":warning: **Warning** :warning: using incorrect Forwarder may cause the Paymaster to agreeing to pay for invalid transactions."},"postRelayedCall(bytes,bool,uint256,(uint256,uint256,uint256,address,address,address,bytes,uint256))":{"notice":"This method is called after the actual relayed function call. It may be used to record the transaction (e.g. charge the caller by some contract logic) for this call. Revert in this functions causes a revert of the client's relayed call (and preRelayedCall(), but the Paymaster is still committed to pay the relay for the entire transaction."},"preRelayedCall(((address,address,uint256,uint256,uint256,bytes,uint256),(uint256,uint256,uint256,address,address,address,bytes,uint256)),bytes,bytes,uint256)":{"notice":"Called by the Relay in view mode and later by the `RelayHub` on-chain to validate that the Paymaster agrees to pay for this call. The request is considered to be rejected by the Paymaster in one of the following conditions:  - `preRelayedCall()` method reverts  - the `Forwarder` reverts because of nonce or signature error  - the `Paymaster` returned `rejectOnRecipientRevert: true` and the recipient contract reverted    (and all that did not consume more than `acceptanceBudget` gas). In any of the above cases, all Paymaster calls and the recipient call are reverted. In any other case the Paymaster will pay for the gas cost of the transaction. Note that even if `postRelayedCall` is reverted the Paymaster will be charged."},"setRelayHub(address)":{"notice":"The owner of the Paymaster can change the instance of the RelayHub this Paymaster works with. :warning: **Warning** :warning: The deposit on the previous RelayHub must be withdrawn first."},"setTrustedForwarder(address)":{"notice":"The owner of the Paymaster can change the instance of the Forwarder this Paymaster works with.the Recipients must trust this Forwarder as well in order for the configuration to remain functional."},"withdrawRelayHubDepositTo(uint256,address)":{"notice":"Withdraw deposit from the RelayHub."}},"notice":"A sample paymaster that has whitelists for senders, targets and methods. - if at least one sender is whitelisted, then ONLY whitelisted senders are allowed. - if at least one target is whitelisted, then ONLY whitelisted targets are allowed.","version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2256,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2409":{"entryPoint":null,"id":2409,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":270,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:27"},"nodeType":"YulFunctionCall","src":"66:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:27"},"nodeType":"YulFunctionCall","src":"56:31:27"},"nodeType":"YulExpressionStatement","src":"56:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:27"},"nodeType":"YulFunctionCall","src":"96:15:27"},"nodeType":"YulExpressionStatement","src":"96:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:27"},"nodeType":"YulFunctionCall","src":"120:15:27"},"nodeType":"YulExpressionStatement","src":"120:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:27"},{"body":{"nodeType":"YulBlock","src":"210:821:27","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:27"},"nodeType":"YulFunctionCall","src":"261:12:27"},"nodeType":"YulExpressionStatement","src":"261:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:27"},"nodeType":"YulFunctionCall","src":"234:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:27"},"nodeType":"YulFunctionCall","src":"230:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:27"},"nodeType":"YulFunctionCall","src":"223:35:27"},"nodeType":"YulIf","src":"220:55:27"},{"nodeType":"YulVariableDeclaration","src":"284:23:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:27"},"nodeType":"YulFunctionCall","src":"294:13:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:27"},"nodeType":"YulFunctionCall","src":"330:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:27"},"nodeType":"YulFunctionCall","src":"326:18:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:27"},"nodeType":"YulFunctionCall","src":"369:18:27"},"nodeType":"YulExpressionStatement","src":"369:18:27"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:27"},"nodeType":"YulFunctionCall","src":"356:10:27"},"nodeType":"YulIf","src":"353:36:27"},{"nodeType":"YulVariableDeclaration","src":"398:17:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:27"},"nodeType":"YulFunctionCall","src":"408:7:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:27"},"nodeType":"YulFunctionCall","src":"438:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:27"},"nodeType":"YulFunctionCall","src":"498:13:27"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:27"},"nodeType":"YulFunctionCall","src":"494:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:27"},"nodeType":"YulFunctionCall","src":"490:31:27"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:27"},"nodeType":"YulFunctionCall","src":"486:40:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:27"},"nodeType":"YulFunctionCall","src":"474:53:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:27"},"nodeType":"YulFunctionCall","src":"588:18:27"},"nodeType":"YulExpressionStatement","src":"588:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:27"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:27"},"nodeType":"YulFunctionCall","src":"542:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:27"},"nodeType":"YulFunctionCall","src":"562:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:27"},"nodeType":"YulFunctionCall","src":"539:46:27"},"nodeType":"YulIf","src":"536:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:27"},"nodeType":"YulFunctionCall","src":"617:22:27"},"nodeType":"YulExpressionStatement","src":"617:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:27"},"nodeType":"YulFunctionCall","src":"648:18:27"},"nodeType":"YulExpressionStatement","src":"648:18:27"},{"nodeType":"YulVariableDeclaration","src":"675:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:27","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:27"},"nodeType":"YulFunctionCall","src":"737:12:27"},"nodeType":"YulExpressionStatement","src":"737:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:27"},"nodeType":"YulFunctionCall","src":"708:15:27"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:27"},"nodeType":"YulFunctionCall","src":"704:24:27"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:27"},"nodeType":"YulFunctionCall","src":"701:33:27"},"nodeType":"YulIf","src":"698:53:27"},{"nodeType":"YulVariableDeclaration","src":"760:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:27"},"nodeType":"YulFunctionCall","src":"850:14:27"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:27"},"nodeType":"YulFunctionCall","src":"846:23:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:27"},"nodeType":"YulFunctionCall","src":"881:14:27"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:27"},"nodeType":"YulFunctionCall","src":"877:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:27"},"nodeType":"YulFunctionCall","src":"871:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:27"},"nodeType":"YulFunctionCall","src":"839:63:27"},"nodeType":"YulExpressionStatement","src":"839:63:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:27"},"nodeType":"YulFunctionCall","src":"787:9:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:27","statements":[{"nodeType":"YulAssignment","src":"799:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:27"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:27"},"nodeType":"YulFunctionCall","src":"804:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:27","statements":[]},"src":"779:133:27"},{"body":{"nodeType":"YulBlock","src":"942:59:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:27"},"nodeType":"YulFunctionCall","src":"967:15:27"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:27"},"nodeType":"YulFunctionCall","src":"963:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:27"},"nodeType":"YulFunctionCall","src":"956:35:27"},"nodeType":"YulExpressionStatement","src":"956:35:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:27"},"nodeType":"YulFunctionCall","src":"924:9:27"},"nodeType":"YulIf","src":"921:80:27"},{"nodeType":"YulAssignment","src":"1010:15:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:27"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:27","type":""}],"src":"146:885:27"},{"body":{"nodeType":"YulBlock","src":"1154:444:27","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:27"},"nodeType":"YulFunctionCall","src":"1202:12:27"},"nodeType":"YulExpressionStatement","src":"1202:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:27"},"nodeType":"YulFunctionCall","src":"1171:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:27"},"nodeType":"YulFunctionCall","src":"1167:32:27"},"nodeType":"YulIf","src":"1164:52:27"},{"nodeType":"YulVariableDeclaration","src":"1225:30:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:27"},"nodeType":"YulFunctionCall","src":"1239:16:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:27"},"nodeType":"YulFunctionCall","src":"1278:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:27"},"nodeType":"YulFunctionCall","src":"1274:18:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:27"},"nodeType":"YulFunctionCall","src":"1321:12:27"},"nodeType":"YulExpressionStatement","src":"1321:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:27"},"nodeType":"YulFunctionCall","src":"1304:14:27"},"nodeType":"YulIf","src":"1301:34:27"},{"nodeType":"YulAssignment","src":"1344:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:27"},"nodeType":"YulFunctionCall","src":"1383:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:27"},"nodeType":"YulFunctionCall","src":"1354:61:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:27"},"nodeType":"YulFunctionCall","src":"1446:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:27"},"nodeType":"YulFunctionCall","src":"1440:25:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:27"},"nodeType":"YulFunctionCall","src":"1496:12:27"},"nodeType":"YulExpressionStatement","src":"1496:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:27"},"nodeType":"YulFunctionCall","src":"1477:16:27"},"nodeType":"YulIf","src":"1474:36:27"},{"nodeType":"YulAssignment","src":"1519:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:27"},"nodeType":"YulFunctionCall","src":"1558:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:27"},"nodeType":"YulFunctionCall","src":"1529:63:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:27"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:27","type":""}],"src":"1036:562:27"},{"body":{"nodeType":"YulBlock","src":"1658:325:27","statements":[{"nodeType":"YulAssignment","src":"1668:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:27"},"nodeType":"YulFunctionCall","src":"1678:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:27"},"nodeType":"YulFunctionCall","src":"1725:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:27","statements":[{"nodeType":"YulAssignment","src":"1778:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:27"},"nodeType":"YulFunctionCall","src":"1788:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:27"},"nodeType":"YulFunctionCall","src":"1749:26:27"},"nodeType":"YulIf","src":"1746:61:27"},{"body":{"nodeType":"YulBlock","src":"1866:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:27"},"nodeType":"YulFunctionCall","src":"1890:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:27"},"nodeType":"YulFunctionCall","src":"1880:31:27"},"nodeType":"YulExpressionStatement","src":"1880:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:27"},"nodeType":"YulFunctionCall","src":"1924:15:27"},"nodeType":"YulExpressionStatement","src":"1924:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:27"},"nodeType":"YulFunctionCall","src":"1952:15:27"},"nodeType":"YulExpressionStatement","src":"1952:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:27"},"nodeType":"YulFunctionCall","src":"1842:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:27"},"nodeType":"YulFunctionCall","src":"1819:38:27"},"nodeType":"YulIf","src":"1816:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:27","type":""}],"src":"1603:380:27"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000beb38038062000beb8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61095980620002926000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e39190610796565b60405180910390f35b6100ff6100fa366004610807565b610278565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610831565b610290565b604051601281526020016100e3565b6100ff610151366004610807565b6102b4565b61011361016436600461086d565b6001600160a01b031660009081526020819052604090205490565b6100d66102f3565b6100ff610195366004610807565b610302565b6100ff6101a8366004610807565b6103b1565b6101136101bb36600461088f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f5906108c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610221906108c2565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103bf565b5060019392505050565b60003361029e858285610517565b6102a98585856105a9565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee9087906108fd565b6103bf565b6060600480546101f5906108c2565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102a982868684036103bf565b6000336102868185856105a9565b6001600160a01b03831661043a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166104b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105a357818110156105965760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039b565b6105a384848484036103bf565b50505050565b6001600160a01b0383166106255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166106a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b038316600090815260208190526040902054818110156107305760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a3565b600060208083528351808285015260005b818110156107c3578581018301518582016040015282016107a7565b818111156107d5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461080257600080fd5b919050565b6000806040838503121561081a57600080fd5b610823836107eb565b946020939093013593505050565b60008060006060848603121561084657600080fd5b61084f846107eb565b925061085d602085016107eb565b9150604084013590509250925092565b60006020828403121561087f57600080fd5b610888826107eb565b9392505050565b600080604083850312156108a257600080fd5b6108ab836107eb565b91506108b9602084016107eb565b90509250929050565b600181811c908216806108d657607f821691505b602082108114156108f757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220ffe837626dec88a47f13b337a03dcac3508cd28315b695902ff7059987a2d77d64736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBEB CODESIZE SUB DUP1 PUSH3 0xBEB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x959 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29E DUP6 DUP3 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2A9 DUP6 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x286 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2EE SWAP1 DUP8 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5A3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x5A3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x823 DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84F DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 POP PUSH2 0x85D PUSH1 0x20 DUP6 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AB DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B9 PUSH1 0x20 DUP5 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x91E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE8 CALLDATACOPY PUSH3 0x6DEC88 LOG4 PUSH32 0x13B337A03DCAC3508CD28315B695902FF7059987A2D77D64736F6C6343000808 STOP CALLER ","sourceMap":"1401:11610:15:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2065:17:15;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:11610:15;;;-1:-1:-1;1401:11610:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:27;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:27;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:27;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:27:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:27;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1401:11610:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2950":{"entryPoint":null,"id":2950,"parameterSlots":3,"returnSlots":0},"@_approve_2885":{"entryPoint":959,"id":2885,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2939":{"entryPoint":null,"id":2939,"parameterSlots":3,"returnSlots":0},"@_msgSender_3066":{"entryPoint":null,"id":3066,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2928":{"entryPoint":1303,"id":2928,"parameterSlots":3,"returnSlots":0},"@_transfer_2711":{"entryPoint":1449,"id":2711,"parameterSlots":3,"returnSlots":0},"@allowance_2506":{"entryPoint":null,"id":2506,"parameterSlots":2,"returnSlots":1},"@approve_2531":{"entryPoint":632,"id":2531,"parameterSlots":2,"returnSlots":1},"@balanceOf_2463":{"entryPoint":null,"id":2463,"parameterSlots":1,"returnSlots":1},"@decimals_2439":{"entryPoint":null,"id":2439,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2634":{"entryPoint":770,"id":2634,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2593":{"entryPoint":692,"id":2593,"parameterSlots":2,"returnSlots":1},"@name_2419":{"entryPoint":486,"id":2419,"parameterSlots":0,"returnSlots":1},"@symbol_2429":{"entryPoint":755,"id":2429,"parameterSlots":0,"returnSlots":1},"@totalSupply_2449":{"entryPoint":null,"id":2449,"parameterSlots":0,"returnSlots":1},"@transferFrom_2564":{"entryPoint":656,"id":2564,"parameterSlots":3,"returnSlots":1},"@transfer_2488":{"entryPoint":945,"id":2488,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2191,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2055,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2301,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2242,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5943:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:27","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:27"},"nodeType":"YulFunctionCall","src":"166:21:27"},"nodeType":"YulExpressionStatement","src":"166:21:27"},{"nodeType":"YulVariableDeclaration","src":"196:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:27"},"nodeType":"YulFunctionCall","src":"210:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:27"},"nodeType":"YulFunctionCall","src":"239:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:27"},"nodeType":"YulFunctionCall","src":"232:34:27"},"nodeType":"YulExpressionStatement","src":"232:34:27"},{"nodeType":"YulVariableDeclaration","src":"275:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:27"},"nodeType":"YulFunctionCall","src":"369:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:27"},"nodeType":"YulFunctionCall","src":"365:26:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:27"},"nodeType":"YulFunctionCall","src":"403:14:27"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:27"},"nodeType":"YulFunctionCall","src":"393:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:27"},"nodeType":"YulFunctionCall","src":"358:66:27"},"nodeType":"YulExpressionStatement","src":"358:66:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:27"},"nodeType":"YulFunctionCall","src":"302:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:27","statements":[{"nodeType":"YulAssignment","src":"318:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:27"},"nodeType":"YulFunctionCall","src":"323:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:27","statements":[]},"src":"294:140:27"},{"body":{"nodeType":"YulBlock","src":"468:66:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:27"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:27"},"nodeType":"YulFunctionCall","src":"493:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:27"},"nodeType":"YulFunctionCall","src":"489:31:27"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:27"},"nodeType":"YulFunctionCall","src":"482:42:27"},"nodeType":"YulExpressionStatement","src":"482:42:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:27"},"nodeType":"YulFunctionCall","src":"446:13:27"},"nodeType":"YulIf","src":"443:91:27"},{"nodeType":"YulAssignment","src":"543:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:27"},"nodeType":"YulFunctionCall","src":"574:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:27"},"nodeType":"YulFunctionCall","src":"591:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:27"},"nodeType":"YulFunctionCall","src":"570:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:27"},"nodeType":"YulFunctionCall","src":"555:45:27"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:27"},"nodeType":"YulFunctionCall","src":"551:54:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:27","type":""}],"src":"14:597:27"},{"body":{"nodeType":"YulBlock","src":"665:147:27","statements":[{"nodeType":"YulAssignment","src":"675:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:27"},"nodeType":"YulFunctionCall","src":"684:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:27"}]},{"body":{"nodeType":"YulBlock","src":"790:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"799:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"802:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"792:6:27"},"nodeType":"YulFunctionCall","src":"792:12:27"},"nodeType":"YulExpressionStatement","src":"792:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"744:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:27"},"nodeType":"YulFunctionCall","src":"733:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:27"},"nodeType":"YulFunctionCall","src":"723:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:27"},"nodeType":"YulFunctionCall","src":"716:73:27"},"nodeType":"YulIf","src":"713:93:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:27","type":""}],"src":"616:196:27"},{"body":{"nodeType":"YulBlock","src":"904:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"950:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"959:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"962:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"952:6:27"},"nodeType":"YulFunctionCall","src":"952:12:27"},"nodeType":"YulExpressionStatement","src":"952:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"925:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"921:3:27"},"nodeType":"YulFunctionCall","src":"921:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"946:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"917:3:27"},"nodeType":"YulFunctionCall","src":"917:32:27"},"nodeType":"YulIf","src":"914:52:27"},{"nodeType":"YulAssignment","src":"975:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1004:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"985:18:27"},"nodeType":"YulFunctionCall","src":"985:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"975:6:27"}]},{"nodeType":"YulAssignment","src":"1023:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1050:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1061:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:27"},"nodeType":"YulFunctionCall","src":"1046:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1033:12:27"},"nodeType":"YulFunctionCall","src":"1033:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1023:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"862:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"873:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"885:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"893:6:27","type":""}],"src":"817:254:27"},{"body":{"nodeType":"YulBlock","src":"1171:92:27","statements":[{"nodeType":"YulAssignment","src":"1181:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1204:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1189:3:27"},"nodeType":"YulFunctionCall","src":"1189:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1181:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1223:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1248:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1241:6:27"},"nodeType":"YulFunctionCall","src":"1241:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1234:6:27"},"nodeType":"YulFunctionCall","src":"1234:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1216:6:27"},"nodeType":"YulFunctionCall","src":"1216:41:27"},"nodeType":"YulExpressionStatement","src":"1216:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1140:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1151:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1162:4:27","type":""}],"src":"1076:187:27"},{"body":{"nodeType":"YulBlock","src":"1369:76:27","statements":[{"nodeType":"YulAssignment","src":"1379:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1391:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1402:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1387:3:27"},"nodeType":"YulFunctionCall","src":"1387:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1421:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1432:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1414:6:27"},"nodeType":"YulFunctionCall","src":"1414:25:27"},"nodeType":"YulExpressionStatement","src":"1414:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1338:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1349:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1360:4:27","type":""}],"src":"1268:177:27"},{"body":{"nodeType":"YulBlock","src":"1554:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"1600:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1609:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1612:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1602:6:27"},"nodeType":"YulFunctionCall","src":"1602:12:27"},"nodeType":"YulExpressionStatement","src":"1602:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1575:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1571:3:27"},"nodeType":"YulFunctionCall","src":"1571:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1596:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1567:3:27"},"nodeType":"YulFunctionCall","src":"1567:32:27"},"nodeType":"YulIf","src":"1564:52:27"},{"nodeType":"YulAssignment","src":"1625:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1654:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1635:18:27"},"nodeType":"YulFunctionCall","src":"1635:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1625:6:27"}]},{"nodeType":"YulAssignment","src":"1673:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1706:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1717:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1702:3:27"},"nodeType":"YulFunctionCall","src":"1702:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1683:18:27"},"nodeType":"YulFunctionCall","src":"1683:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1673:6:27"}]},{"nodeType":"YulAssignment","src":"1730:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1768:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:27"},"nodeType":"YulFunctionCall","src":"1753:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1740:12:27"},"nodeType":"YulFunctionCall","src":"1740:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1730:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1504:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1515:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1527:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1535:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1543:6:27","type":""}],"src":"1450:328:27"},{"body":{"nodeType":"YulBlock","src":"1880:87:27","statements":[{"nodeType":"YulAssignment","src":"1890:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1913:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:27"},"nodeType":"YulFunctionCall","src":"1898:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1890:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1932:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1947:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1955:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1943:3:27"},"nodeType":"YulFunctionCall","src":"1943:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1925:6:27"},"nodeType":"YulFunctionCall","src":"1925:36:27"},"nodeType":"YulExpressionStatement","src":"1925:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1849:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1860:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1871:4:27","type":""}],"src":"1783:184:27"},{"body":{"nodeType":"YulBlock","src":"2042:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"2088:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2100:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2090:6:27"},"nodeType":"YulFunctionCall","src":"2090:12:27"},"nodeType":"YulExpressionStatement","src":"2090:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2063:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2072:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2059:3:27"},"nodeType":"YulFunctionCall","src":"2059:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2084:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2055:3:27"},"nodeType":"YulFunctionCall","src":"2055:32:27"},"nodeType":"YulIf","src":"2052:52:27"},{"nodeType":"YulAssignment","src":"2113:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2142:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2123:18:27"},"nodeType":"YulFunctionCall","src":"2123:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2113:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2008:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2019:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2031:6:27","type":""}],"src":"1972:186:27"},{"body":{"nodeType":"YulBlock","src":"2250:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"2296:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2305:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2308:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2298:6:27"},"nodeType":"YulFunctionCall","src":"2298:12:27"},"nodeType":"YulExpressionStatement","src":"2298:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2271:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2280:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2267:3:27"},"nodeType":"YulFunctionCall","src":"2267:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2292:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2263:3:27"},"nodeType":"YulFunctionCall","src":"2263:32:27"},"nodeType":"YulIf","src":"2260:52:27"},{"nodeType":"YulAssignment","src":"2321:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2350:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2331:18:27"},"nodeType":"YulFunctionCall","src":"2331:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2321:6:27"}]},{"nodeType":"YulAssignment","src":"2369:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2413:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2398:3:27"},"nodeType":"YulFunctionCall","src":"2398:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2379:18:27"},"nodeType":"YulFunctionCall","src":"2379:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2369:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2208:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2219:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2231:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2239:6:27","type":""}],"src":"2163:260:27"},{"body":{"nodeType":"YulBlock","src":"2483:382:27","statements":[{"nodeType":"YulAssignment","src":"2493:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2507:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2510:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2503:3:27"},"nodeType":"YulFunctionCall","src":"2503:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2493:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2524:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2554:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2550:3:27"},"nodeType":"YulFunctionCall","src":"2550:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2528:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2601:31:27","statements":[{"nodeType":"YulAssignment","src":"2603:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2617:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2625:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2613:3:27"},"nodeType":"YulFunctionCall","src":"2613:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2603:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2581:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2574:6:27"},"nodeType":"YulFunctionCall","src":"2574:26:27"},"nodeType":"YulIf","src":"2571:61:27"},{"body":{"nodeType":"YulBlock","src":"2691:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:27"},"nodeType":"YulFunctionCall","src":"2705:88:27"},"nodeType":"YulExpressionStatement","src":"2705:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2813:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2816:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2806:6:27"},"nodeType":"YulFunctionCall","src":"2806:15:27"},"nodeType":"YulExpressionStatement","src":"2806:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2841:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2844:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2834:6:27"},"nodeType":"YulFunctionCall","src":"2834:15:27"},"nodeType":"YulExpressionStatement","src":"2834:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2647:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2670:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2678:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2667:2:27"},"nodeType":"YulFunctionCall","src":"2667:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2644:2:27"},"nodeType":"YulFunctionCall","src":"2644:38:27"},"nodeType":"YulIf","src":"2641:218:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2463:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2472:6:27","type":""}],"src":"2428:437:27"},{"body":{"nodeType":"YulBlock","src":"2918:234:27","statements":[{"body":{"nodeType":"YulBlock","src":"2953:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2974:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2977:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2967:6:27"},"nodeType":"YulFunctionCall","src":"2967:88:27"},"nodeType":"YulExpressionStatement","src":"2967:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3075:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3078:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3068:6:27"},"nodeType":"YulFunctionCall","src":"3068:15:27"},"nodeType":"YulExpressionStatement","src":"3068:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3103:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3106:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3096:6:27"},"nodeType":"YulFunctionCall","src":"3096:15:27"},"nodeType":"YulExpressionStatement","src":"3096:15:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2934:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2941:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2937:3:27"},"nodeType":"YulFunctionCall","src":"2937:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2931:2:27"},"nodeType":"YulFunctionCall","src":"2931:13:27"},"nodeType":"YulIf","src":"2928:193:27"},{"nodeType":"YulAssignment","src":"3130:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3141:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3144:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3137:3:27"},"nodeType":"YulFunctionCall","src":"3137:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3130:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2901:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"2904:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2910:3:27","type":""}],"src":"2870:282:27"},{"body":{"nodeType":"YulBlock","src":"3331:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3359:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3341:6:27"},"nodeType":"YulFunctionCall","src":"3341:21:27"},"nodeType":"YulExpressionStatement","src":"3341:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3382:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3393:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3378:3:27"},"nodeType":"YulFunctionCall","src":"3378:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3398:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3371:6:27"},"nodeType":"YulFunctionCall","src":"3371:30:27"},"nodeType":"YulExpressionStatement","src":"3371:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:27"},"nodeType":"YulFunctionCall","src":"3417:18:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3437:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3410:6:27"},"nodeType":"YulFunctionCall","src":"3410:62:27"},"nodeType":"YulExpressionStatement","src":"3410:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3503:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3488:3:27"},"nodeType":"YulFunctionCall","src":"3488:18:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3508:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3481:6:27"},"nodeType":"YulFunctionCall","src":"3481:35:27"},"nodeType":"YulExpressionStatement","src":"3481:35:27"},{"nodeType":"YulAssignment","src":"3525:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3537:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3548:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3533:3:27"},"nodeType":"YulFunctionCall","src":"3533:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3525:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3308:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3322:4:27","type":""}],"src":"3157:401:27"},{"body":{"nodeType":"YulBlock","src":"3737:226:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3754:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3765:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:27"},"nodeType":"YulFunctionCall","src":"3747:21:27"},"nodeType":"YulExpressionStatement","src":"3747:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3788:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3799:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3784:3:27"},"nodeType":"YulFunctionCall","src":"3784:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3804:2:27","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3777:6:27"},"nodeType":"YulFunctionCall","src":"3777:30:27"},"nodeType":"YulExpressionStatement","src":"3777:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3827:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3838:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3823:3:27"},"nodeType":"YulFunctionCall","src":"3823:18:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3843:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3816:6:27"},"nodeType":"YulFunctionCall","src":"3816:62:27"},"nodeType":"YulExpressionStatement","src":"3816:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3909:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:27"},"nodeType":"YulFunctionCall","src":"3894:18:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3914:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3887:6:27"},"nodeType":"YulFunctionCall","src":"3887:34:27"},"nodeType":"YulExpressionStatement","src":"3887:34:27"},{"nodeType":"YulAssignment","src":"3930:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3942:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3953:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3938:3:27"},"nodeType":"YulFunctionCall","src":"3938:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3930:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3714:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3728:4:27","type":""}],"src":"3563:400:27"},{"body":{"nodeType":"YulBlock","src":"4142:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4159:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4170:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4152:6:27"},"nodeType":"YulFunctionCall","src":"4152:21:27"},"nodeType":"YulExpressionStatement","src":"4152:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4204:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4189:3:27"},"nodeType":"YulFunctionCall","src":"4189:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4209:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4182:6:27"},"nodeType":"YulFunctionCall","src":"4182:30:27"},"nodeType":"YulExpressionStatement","src":"4182:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4232:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4243:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4228:3:27"},"nodeType":"YulFunctionCall","src":"4228:18:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4248:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4221:6:27"},"nodeType":"YulFunctionCall","src":"4221:62:27"},"nodeType":"YulExpressionStatement","src":"4221:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4303:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4314:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4299:3:27"},"nodeType":"YulFunctionCall","src":"4299:18:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4319:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4292:6:27"},"nodeType":"YulFunctionCall","src":"4292:32:27"},"nodeType":"YulExpressionStatement","src":"4292:32:27"},{"nodeType":"YulAssignment","src":"4333:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4345:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4356:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4341:3:27"},"nodeType":"YulFunctionCall","src":"4341:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4333:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4119:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4133:4:27","type":""}],"src":"3968:398:27"},{"body":{"nodeType":"YulBlock","src":"4545:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4562:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4573:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4555:6:27"},"nodeType":"YulFunctionCall","src":"4555:21:27"},"nodeType":"YulExpressionStatement","src":"4555:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4596:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4607:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4592:3:27"},"nodeType":"YulFunctionCall","src":"4592:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4612:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4585:6:27"},"nodeType":"YulFunctionCall","src":"4585:30:27"},"nodeType":"YulExpressionStatement","src":"4585:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4635:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4646:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4631:3:27"},"nodeType":"YulFunctionCall","src":"4631:18:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4651:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4624:6:27"},"nodeType":"YulFunctionCall","src":"4624:59:27"},"nodeType":"YulExpressionStatement","src":"4624:59:27"},{"nodeType":"YulAssignment","src":"4692:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:27"},"nodeType":"YulFunctionCall","src":"4700:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4692:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4522:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4536:4:27","type":""}],"src":"4371:353:27"},{"body":{"nodeType":"YulBlock","src":"4903:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4931:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4913:6:27"},"nodeType":"YulFunctionCall","src":"4913:21:27"},"nodeType":"YulExpressionStatement","src":"4913:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4954:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4965:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:27"},"nodeType":"YulFunctionCall","src":"4950:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4970:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4943:6:27"},"nodeType":"YulFunctionCall","src":"4943:30:27"},"nodeType":"YulExpressionStatement","src":"4943:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4993:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5004:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4989:3:27"},"nodeType":"YulFunctionCall","src":"4989:18:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5009:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4982:6:27"},"nodeType":"YulFunctionCall","src":"4982:62:27"},"nodeType":"YulExpressionStatement","src":"4982:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5064:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5075:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5060:3:27"},"nodeType":"YulFunctionCall","src":"5060:18:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5080:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:27"},"nodeType":"YulFunctionCall","src":"5053:35:27"},"nodeType":"YulExpressionStatement","src":"5053:35:27"},{"nodeType":"YulAssignment","src":"5097:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5120:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5105:3:27"},"nodeType":"YulFunctionCall","src":"5105:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5097:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4880:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4894:4:27","type":""}],"src":"4729:401:27"},{"body":{"nodeType":"YulBlock","src":"5309:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5326:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5337:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5319:6:27"},"nodeType":"YulFunctionCall","src":"5319:21:27"},"nodeType":"YulExpressionStatement","src":"5319:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5360:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5371:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5356:3:27"},"nodeType":"YulFunctionCall","src":"5356:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5376:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5349:6:27"},"nodeType":"YulFunctionCall","src":"5349:30:27"},"nodeType":"YulExpressionStatement","src":"5349:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5399:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5410:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:27"},"nodeType":"YulFunctionCall","src":"5395:18:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5415:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5388:6:27"},"nodeType":"YulFunctionCall","src":"5388:62:27"},"nodeType":"YulExpressionStatement","src":"5388:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5470:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5481:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5466:3:27"},"nodeType":"YulFunctionCall","src":"5466:18:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5486:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5459:6:27"},"nodeType":"YulFunctionCall","src":"5459:33:27"},"nodeType":"YulExpressionStatement","src":"5459:33:27"},{"nodeType":"YulAssignment","src":"5501:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5513:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5524:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:27"},"nodeType":"YulFunctionCall","src":"5509:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5501:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5286:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5300:4:27","type":""}],"src":"5135:399:27"},{"body":{"nodeType":"YulBlock","src":"5713:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5730:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5741:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5723:6:27"},"nodeType":"YulFunctionCall","src":"5723:21:27"},"nodeType":"YulExpressionStatement","src":"5723:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5775:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:27"},"nodeType":"YulFunctionCall","src":"5760:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5780:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5753:6:27"},"nodeType":"YulFunctionCall","src":"5753:30:27"},"nodeType":"YulExpressionStatement","src":"5753:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5803:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5814:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5799:3:27"},"nodeType":"YulFunctionCall","src":"5799:18:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5819:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5792:6:27"},"nodeType":"YulFunctionCall","src":"5792:62:27"},"nodeType":"YulExpressionStatement","src":"5792:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5885:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5870:3:27"},"nodeType":"YulFunctionCall","src":"5870:18:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5890:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5863:6:27"},"nodeType":"YulFunctionCall","src":"5863:36:27"},"nodeType":"YulExpressionStatement","src":"5863:36:27"},{"nodeType":"YulAssignment","src":"5908:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5920:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5931:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5916:3:27"},"nodeType":"YulFunctionCall","src":"5916:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5908:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5690:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5704:4:27","type":""}],"src":"5539:402:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e39190610796565b60405180910390f35b6100ff6100fa366004610807565b610278565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610831565b610290565b604051601281526020016100e3565b6100ff610151366004610807565b6102b4565b61011361016436600461086d565b6001600160a01b031660009081526020819052604090205490565b6100d66102f3565b6100ff610195366004610807565b610302565b6100ff6101a8366004610807565b6103b1565b6101136101bb36600461088f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f5906108c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610221906108c2565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103bf565b5060019392505050565b60003361029e858285610517565b6102a98585856105a9565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee9087906108fd565b6103bf565b6060600480546101f5906108c2565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102a982868684036103bf565b6000336102868185856105a9565b6001600160a01b03831661043a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166104b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105a357818110156105965760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039b565b6105a384848484036103bf565b50505050565b6001600160a01b0383166106255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166106a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b038316600090815260208190526040902054818110156107305760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a3565b600060208083528351808285015260005b818110156107c3578581018301518582016040015282016107a7565b818111156107d5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461080257600080fd5b919050565b6000806040838503121561081a57600080fd5b610823836107eb565b946020939093013593505050565b60008060006060848603121561084657600080fd5b61084f846107eb565b925061085d602085016107eb565b9150604084013590509250925092565b60006020828403121561087f57600080fd5b610888826107eb565b9392505050565b600080604083850312156108a257600080fd5b6108ab836107eb565b91506108b9602084016107eb565b90509250929050565b600181811c908216806108d657607f821691505b602082108114156108f757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220ffe837626dec88a47f13b337a03dcac3508cd28315b695902ff7059987a2d77d64736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29E DUP6 DUP3 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2A9 DUP6 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x286 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2EE SWAP1 DUP8 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5A3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x5A3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x823 DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84F DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 POP PUSH2 0x85D PUSH1 0x20 DUP6 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AB DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B9 PUSH1 0x20 DUP5 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x91E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE8 CALLDATACOPY PUSH3 0x6DEC88 LOG4 PUSH32 0x13B337A03DCAC3508CD28315B695902FF7059987A2D77D64736F6C6343000808 STOP CALLER ","sourceMap":"1401:11610:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1241:14:27;;1234:22;1216:41;;1204:2;1189:18;4431:197:15;1076:187:27;3242:106:15;3329:12;;3242:106;;;1414:25:27;;;1402:2;1387:18;3242:106:15;1268:177:27;5190:286:15;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1925:36:27;;1913:2;1898:18;3091:91:15;1783:184:27;5871:234:15;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:15;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:18;4568:32:15;719:10:18;4584:7:15;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:15;;4431:197;-1:-1:-1;;;4431:197:15:o;5190:286::-;5317:4;719:10:18;5373:38:15;5389:4;719:10:18;5404:6:15;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:15;;5190:286;-1:-1:-1;;;;5190:286:15:o;5871:234::-;719:10:18;5959:4:15;4089:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4089:27:15;;;;;;;;;;5959:4;;719:10:18;6013:64:15;;719:10:18;;4089:27:15;;6038:38;;6066:10;;6038:38;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;719:10:18;6685:4:15;4089:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4089:27:15;;;;;;;;;;6685:4;;719:10:18;6829:15:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:15;;3359:2:27;6801:85:15;;;3341:21:27;3398:2;3378:18;;;3371:30;3437:34;3417:18;;;3410:62;3508:7;3488:18;;;3481:35;3533:19;;6801:85:15;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:18;3860:28:15;719:10:18;3877:2:15;3881:6;3860:9;:28::i;10504:370::-;-1:-1:-1;;;;;10635:19:15;;10627:68;;;;-1:-1:-1;;;10627:68:15;;3765:2:27;10627:68:15;;;3747:21:27;3804:2;3784:18;;;3777:30;3843:34;3823:18;;;3816:62;3914:6;3894:18;;;3887:34;3938:19;;10627:68:15;3563:400:27;10627:68:15;-1:-1:-1;;;;;10713:21:15;;10705:68;;;;-1:-1:-1;;;10705:68:15;;4170:2:27;10705:68:15;;;4152:21:27;4209:2;4189:18;;;4182:30;4248:34;4228:18;;;4221:62;4319:4;4299:18;;;4292:32;4341:19;;10705:68:15;3968:398:27;10705:68:15;-1:-1:-1;;;;;10784:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1414:25:27;;;10835:32:15;;1387:18:27;10835:32:15;;;;;;;10504:370;;;:::o;11155:441::-;-1:-1:-1;;;;;4089:18:15;;;11285:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11351:37:15;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:15;;4573:2:27;11404:68:15;;;4555:21:27;4612:2;4592:18;;;4585:30;4651:31;4631:18;;;4624:59;4700:18;;11404:68:15;4371:353:27;11404:68:15;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;4931:2:27;7591:68:15;;;4913:21:27;4970:2;4950:18;;;4943:30;5009:34;4989:18;;;4982:62;5080:7;5060:18;;;5053:35;5105:19;;7591:68:15;4729:401:27;7591:68:15;-1:-1:-1;;;;;7677:16:15;;7669:64;;;;-1:-1:-1;;;7669:64:15;;5337:2:27;7669:64:15;;;5319:21:27;5376:2;5356:18;;;5349:30;5415:34;5395:18;;;5388:62;5486:5;5466:18;;;5459:33;5509:19;;7669:64:15;5135:399:27;7669:64:15;-1:-1:-1;;;;;7815:15:15;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:15;;5741:2:27;7840:72:15;;;5723:21:27;5780:2;5760:18;;;5753:30;5819:34;5799:18;;;5792:62;5890:8;5870:18;;;5863:36;5916:19;;7840:72:15;5539:402:27;7840:72:15;-1:-1:-1;;;;;7946:15:15;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1414:25:27;;;8161:13:15;;8210:26;;1387:18:27;8210:26:15;;;;;;;8247:37;12180:121;14:597:27;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:27;574:15;-1:-1:-1;;570:29:27;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:27:o;616:196::-;684:20;;-1:-1:-1;;;;;733:54:27;;723:65;;713:93;;802:1;799;792:12;713:93;616:196;;;:::o;817:254::-;885:6;893;946:2;934:9;925:7;921:23;917:32;914:52;;;962:1;959;952:12;914:52;985:29;1004:9;985:29;:::i;:::-;975:39;1061:2;1046:18;;;;1033:32;;-1:-1:-1;;;817:254:27:o;1450:328::-;1527:6;1535;1543;1596:2;1584:9;1575:7;1571:23;1567:32;1564:52;;;1612:1;1609;1602:12;1564:52;1635:29;1654:9;1635:29;:::i;:::-;1625:39;;1683:38;1717:2;1706:9;1702:18;1683:38;:::i;:::-;1673:48;;1768:2;1757:9;1753:18;1740:32;1730:42;;1450:328;;;;;:::o;1972:186::-;2031:6;2084:2;2072:9;2063:7;2059:23;2055:32;2052:52;;;2100:1;2097;2090:12;2052:52;2123:29;2142:9;2123:29;:::i;:::-;2113:39;1972:186;-1:-1:-1;;;1972:186:27:o;2163:260::-;2231:6;2239;2292:2;2280:9;2271:7;2267:23;2263:32;2260:52;;;2308:1;2305;2298:12;2260:52;2331:29;2350:9;2331:29;:::i;:::-;2321:39;;2379:38;2413:2;2402:9;2398:18;2379:38;:::i;:::-;2369:48;;2163:260;;;;;:::o;2428:437::-;2507:1;2503:12;;;;2550;;;2571:61;;2625:4;2617:6;2613:17;2603:27;;2571:61;2678:2;2670:6;2667:14;2647:18;2644:38;2641:218;;;-1:-1:-1;;;2712:1:27;2705:88;2816:4;2813:1;2806:15;2844:4;2841:1;2834:15;2641:218;;2428:437;;;:::o;2870:282::-;2910:3;2941:1;2937:6;2934:1;2931:13;2928:193;;;-1:-1:-1;;;2974:1:27;2967:88;3078:4;3075:1;3068:15;3106:4;3103:1;3096:15;2928:193;-1:-1:-1;3137:9:27;;2870:282::o"},"gasEstimates":{"creation":{"codeDepositCost":"478600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24647","balanceOf(address)":"2585","decimals()":"244","decreaseAllowance(address,uint256)":"26922","increaseAllowance(address,uint256)":"26968","name()":"infinite","symbol()":"infinite","totalSupply()":"2304","transfer(address,uint256)":"51090","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2380,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":2386,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2388,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":2390,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2392,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"devdoc":{"details":"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084e11caa0d6680fdfe91fff2217703af37ce92bdd49c28885e6e40218c66634d64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE1 SHR 0xAA 0xD PUSH7 0x80FDFE91FFF221 PUSH24 0x3AF37CE92BDD49C28885E6E40218C66634D64736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"449:4462:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:4462:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084e11caa0d6680fdfe91fff2217703af37ce92bdd49c28885e6e40218c66634d64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE1 SHR 0xAA 0xD PUSH7 0x80FDFE91FFF221 PUSH24 0x3AF37CE92BDD49C28885E6E40218C66634D64736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"449:4462:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getSupportedInterfaces(address,bytes4[] memory)":"infinite","supportsAllInterfaces(address,bytes4[] memory)":"infinite","supportsERC165(address)":"infinite","supportsERC165InterfaceUnchecked(address,bytes4)":"infinite","supportsInterface(address,bytes4)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/introspection/ERC165Checker.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Library used to query support of an interface declared via {IERC165}.\\n *\\n * Note that these functions return the actual result of the query: they do not\\n * `revert` if an interface is not supported. It is up to the caller to decide\\n * what to do in these cases.\\n */\\nlibrary ERC165Checker {\\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\\n\\n    /**\\n     * @dev Returns true if `account` supports the {IERC165} interface.\\n     */\\n    function supportsERC165(address account) internal view returns (bool) {\\n        // Any contract that implements ERC165 must explicitly indicate support of\\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\\n        return\\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\\n    }\\n\\n    /**\\n     * @dev Returns true if `account` supports the interface defined by\\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\\n        // query support of both ERC165 as per the spec and support of _interfaceId\\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns a boolean array where each value corresponds to the\\n     * interfaces passed in and whether they're supported or not. This allows\\n     * you to batch check interfaces for a contract where your expectation\\n     * is that some interfaces may not be supported.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds)\\n        internal\\n        view\\n        returns (bool[] memory)\\n    {\\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\\n\\n        // query support of ERC165 itself\\n        if (supportsERC165(account)) {\\n            // query support of each interface in interfaceIds\\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\\n            }\\n        }\\n\\n        return interfaceIdsSupported;\\n    }\\n\\n    /**\\n     * @dev Returns true if `account` supports all the interfaces defined in\\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\\n     *\\n     * Batch-querying can lead to gas savings by skipping repeated checks for\\n     * {IERC165} support.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     */\\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\\n        // query support of ERC165 itself\\n        if (!supportsERC165(account)) {\\n            return false;\\n        }\\n\\n        // query support of each interface in interfaceIds\\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\\n                return false;\\n            }\\n        }\\n\\n        // all interfaces supported\\n        return true;\\n    }\\n\\n    /**\\n     * @notice Query if a contract implements an interface, does not check ERC165 support\\n     * @param account The address of the contract to query for support of an interface\\n     * @param interfaceId The interface identifier, as specified in ERC-165\\n     * @return true if the contract at account indicates support of the interface with\\n     * identifier interfaceId, false otherwise\\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\\n     * the behavior of this method is undefined. This precondition can be checked\\n     * with {supportsERC165}.\\n     * Interface identification is specified in ERC-165.\\n     */\\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\\n        // prepare call\\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\\n\\n        // perform static call\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly {\\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0x00)\\n        }\\n\\n        return success && returnSize >= 0x20 && returnValue > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/EnergyToken.sol":{"Energy_Token":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2409":{"entryPoint":null,"id":2409,"parameterSlots":2,"returnSlots":0},"@_3319":{"entryPoint":null,"id":3319,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":275,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:396:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"69:325:27","statements":[{"nodeType":"YulAssignment","src":"79:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"93:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"96:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"89:3:27"},"nodeType":"YulFunctionCall","src":"89:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"79:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"110:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"140:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"146:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"136:3:27"},"nodeType":"YulFunctionCall","src":"136:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"114:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"187:31:27","statements":[{"nodeType":"YulAssignment","src":"189:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"203:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"211:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"199:3:27"},"nodeType":"YulFunctionCall","src":"199:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"189:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"167:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"160:6:27"},"nodeType":"YulFunctionCall","src":"160:26:27"},"nodeType":"YulIf","src":"157:61:27"},{"body":{"nodeType":"YulBlock","src":"277:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"305:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"310:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"301:3:27"},"nodeType":"YulFunctionCall","src":"301:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"291:6:27"},"nodeType":"YulFunctionCall","src":"291:31:27"},"nodeType":"YulExpressionStatement","src":"291:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"342:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"345:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"335:6:27"},"nodeType":"YulFunctionCall","src":"335:15:27"},"nodeType":"YulExpressionStatement","src":"335:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"370:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"373:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"363:6:27"},"nodeType":"YulFunctionCall","src":"363:15:27"},"nodeType":"YulExpressionStatement","src":"363:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"233:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"256:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"264:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"253:2:27"},"nodeType":"YulFunctionCall","src":"253:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"230:2:27"},"nodeType":"YulFunctionCall","src":"230:38:27"},"nodeType":"YulIf","src":"227:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"49:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"58:6:27","type":""}],"src":"14:380:27"}]},"contents":"{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604080518082018252600b81526a22b732b93c902a37b5b2b760a91b6020808301918252835180850190945260048452631553925560e21b90840152815191929161005e9160039161007a565b50805161007290600490602084019061007a565b50505061014e565b82805461008690610113565b90600052602060002090601f0160209004810192826100a857600085556100ee565b82601f106100c157805160ff19168380011785556100ee565b828001600101855582156100ee579182015b828111156100ee5782518255916020019190600101906100d3565b506100fa9291506100fe565b5090565b5b808211156100fa57600081556001016100ff565b600181811c9082168061012757607f821691505b6020821081141561014857634e487b7160e01b600052602260045260246000fd5b50919050565b6109598061015d6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e39190610796565b60405180910390f35b6100ff6100fa366004610807565b610278565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610831565b610290565b604051601281526020016100e3565b6100ff610151366004610807565b6102b4565b61011361016436600461086d565b6001600160a01b031660009081526020819052604090205490565b6100d66102f3565b6100ff610195366004610807565b610302565b6100ff6101a8366004610807565b6103b1565b6101136101bb36600461088f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f5906108c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610221906108c2565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103bf565b5060019392505050565b60003361029e858285610517565b6102a98585856105a9565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee9087906108fd565b6103bf565b6060600480546101f5906108c2565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102a982868684036103bf565b6000336102868185856105a9565b6001600160a01b03831661043a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166104b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105a357818110156105965760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039b565b6105a384848484036103bf565b50505050565b6001600160a01b0383166106255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166106a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b038316600090815260208190526040902054818110156107305760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a3565b600060208083528351808285015260005b818110156107c3578581018301518582016040015282016107a7565b818111156107d5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461080257600080fd5b919050565b6000806040838503121561081a57600080fd5b610823836107eb565b946020939093013593505050565b60008060006060848603121561084657600080fd5b61084f846107eb565b925061085d602085016107eb565b9150604084013590509250925092565b60006020828403121561087f57600080fd5b610888826107eb565b9392505050565b600080604083850312156108a257600080fd5b6108ab836107eb565b91506108b9602084016107eb565b90509250929050565b600181811c908216806108d657607f821691505b602082108114156108f757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201c9b00d9a40aaffa94c3326048751116c13dba4464e8e136c3dcf028139fe64364736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x22B732B93C902A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x15539255 PUSH1 0xE2 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x5E SWAP2 PUSH1 0x3 SWAP2 PUSH2 0x7A JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x72 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x7A JUMP JUMPDEST POP POP POP PUSH2 0x14E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x86 SWAP1 PUSH2 0x113 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xA8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xEE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xC1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xEE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xEE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD3 JUMP JUMPDEST POP PUSH2 0xFA SWAP3 SWAP2 POP PUSH2 0xFE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x127 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x148 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x959 DUP1 PUSH2 0x15D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29E DUP6 DUP3 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2A9 DUP6 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x286 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2EE SWAP1 DUP8 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5A3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x5A3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x823 DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84F DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 POP PUSH2 0x85D PUSH1 0x20 DUP6 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AB DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B9 PUSH1 0x20 DUP5 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x91E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP12 STOP 0xD9 LOG4 EXP 0xAF STATICCALL SWAP5 0xC3 ORIGIN PUSH1 0x48 PUSH22 0x1116C13DBA4464E8E136C3DCF028139FE64364736F6C PUSH4 0x43000808 STOP CALLER ","sourceMap":"121:188:22:-:0;;;262:45;;;;;;;;;-1:-1:-1;1976:113:15;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;;2042:13;;1976:113;;;2042:13;;:5;;:13;:::i;:::-;-1:-1:-1;2065:17:15;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;121:188:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;121:188:22;;;-1:-1:-1;121:188:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:27;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;121:188:22;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2950":{"entryPoint":null,"id":2950,"parameterSlots":3,"returnSlots":0},"@_approve_2885":{"entryPoint":959,"id":2885,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2939":{"entryPoint":null,"id":2939,"parameterSlots":3,"returnSlots":0},"@_msgSender_3066":{"entryPoint":null,"id":3066,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2928":{"entryPoint":1303,"id":2928,"parameterSlots":3,"returnSlots":0},"@_transfer_2711":{"entryPoint":1449,"id":2711,"parameterSlots":3,"returnSlots":0},"@allowance_2506":{"entryPoint":null,"id":2506,"parameterSlots":2,"returnSlots":1},"@approve_2531":{"entryPoint":632,"id":2531,"parameterSlots":2,"returnSlots":1},"@balanceOf_2463":{"entryPoint":null,"id":2463,"parameterSlots":1,"returnSlots":1},"@decimals_2439":{"entryPoint":null,"id":2439,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2634":{"entryPoint":770,"id":2634,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2593":{"entryPoint":692,"id":2593,"parameterSlots":2,"returnSlots":1},"@name_2419":{"entryPoint":486,"id":2419,"parameterSlots":0,"returnSlots":1},"@symbol_2429":{"entryPoint":755,"id":2429,"parameterSlots":0,"returnSlots":1},"@totalSupply_2449":{"entryPoint":null,"id":2449,"parameterSlots":0,"returnSlots":1},"@transferFrom_2564":{"entryPoint":656,"id":2564,"parameterSlots":3,"returnSlots":1},"@transfer_2488":{"entryPoint":945,"id":2488,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2191,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2055,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2301,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2242,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5943:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:27","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:27"},"nodeType":"YulFunctionCall","src":"166:21:27"},"nodeType":"YulExpressionStatement","src":"166:21:27"},{"nodeType":"YulVariableDeclaration","src":"196:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:27"},"nodeType":"YulFunctionCall","src":"210:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:27"},"nodeType":"YulFunctionCall","src":"239:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:27"},"nodeType":"YulFunctionCall","src":"232:34:27"},"nodeType":"YulExpressionStatement","src":"232:34:27"},{"nodeType":"YulVariableDeclaration","src":"275:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:27"},"nodeType":"YulFunctionCall","src":"369:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:27"},"nodeType":"YulFunctionCall","src":"365:26:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:27"},"nodeType":"YulFunctionCall","src":"403:14:27"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:27"},"nodeType":"YulFunctionCall","src":"393:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:27"},"nodeType":"YulFunctionCall","src":"358:66:27"},"nodeType":"YulExpressionStatement","src":"358:66:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:27"},"nodeType":"YulFunctionCall","src":"302:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:27","statements":[{"nodeType":"YulAssignment","src":"318:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:27"},"nodeType":"YulFunctionCall","src":"323:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:27","statements":[]},"src":"294:140:27"},{"body":{"nodeType":"YulBlock","src":"468:66:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:27"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:27"},"nodeType":"YulFunctionCall","src":"493:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:27"},"nodeType":"YulFunctionCall","src":"489:31:27"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:27"},"nodeType":"YulFunctionCall","src":"482:42:27"},"nodeType":"YulExpressionStatement","src":"482:42:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:27"},"nodeType":"YulFunctionCall","src":"446:13:27"},"nodeType":"YulIf","src":"443:91:27"},{"nodeType":"YulAssignment","src":"543:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:27"},"nodeType":"YulFunctionCall","src":"574:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:27"},"nodeType":"YulFunctionCall","src":"591:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:27"},"nodeType":"YulFunctionCall","src":"570:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:27"},"nodeType":"YulFunctionCall","src":"555:45:27"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:27"},"nodeType":"YulFunctionCall","src":"551:54:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:27","type":""}],"src":"14:597:27"},{"body":{"nodeType":"YulBlock","src":"665:147:27","statements":[{"nodeType":"YulAssignment","src":"675:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:27"},"nodeType":"YulFunctionCall","src":"684:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:27"}]},{"body":{"nodeType":"YulBlock","src":"790:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"799:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"802:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"792:6:27"},"nodeType":"YulFunctionCall","src":"792:12:27"},"nodeType":"YulExpressionStatement","src":"792:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"744:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:27"},"nodeType":"YulFunctionCall","src":"733:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:27"},"nodeType":"YulFunctionCall","src":"723:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:27"},"nodeType":"YulFunctionCall","src":"716:73:27"},"nodeType":"YulIf","src":"713:93:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:27","type":""}],"src":"616:196:27"},{"body":{"nodeType":"YulBlock","src":"904:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"950:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"959:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"962:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"952:6:27"},"nodeType":"YulFunctionCall","src":"952:12:27"},"nodeType":"YulExpressionStatement","src":"952:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"925:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"921:3:27"},"nodeType":"YulFunctionCall","src":"921:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"946:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"917:3:27"},"nodeType":"YulFunctionCall","src":"917:32:27"},"nodeType":"YulIf","src":"914:52:27"},{"nodeType":"YulAssignment","src":"975:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1004:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"985:18:27"},"nodeType":"YulFunctionCall","src":"985:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"975:6:27"}]},{"nodeType":"YulAssignment","src":"1023:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1050:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1061:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:27"},"nodeType":"YulFunctionCall","src":"1046:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1033:12:27"},"nodeType":"YulFunctionCall","src":"1033:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1023:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"862:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"873:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"885:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"893:6:27","type":""}],"src":"817:254:27"},{"body":{"nodeType":"YulBlock","src":"1171:92:27","statements":[{"nodeType":"YulAssignment","src":"1181:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1204:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1189:3:27"},"nodeType":"YulFunctionCall","src":"1189:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1181:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1223:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1248:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1241:6:27"},"nodeType":"YulFunctionCall","src":"1241:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1234:6:27"},"nodeType":"YulFunctionCall","src":"1234:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1216:6:27"},"nodeType":"YulFunctionCall","src":"1216:41:27"},"nodeType":"YulExpressionStatement","src":"1216:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1140:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1151:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1162:4:27","type":""}],"src":"1076:187:27"},{"body":{"nodeType":"YulBlock","src":"1369:76:27","statements":[{"nodeType":"YulAssignment","src":"1379:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1391:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1402:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1387:3:27"},"nodeType":"YulFunctionCall","src":"1387:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1421:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1432:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1414:6:27"},"nodeType":"YulFunctionCall","src":"1414:25:27"},"nodeType":"YulExpressionStatement","src":"1414:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1338:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1349:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1360:4:27","type":""}],"src":"1268:177:27"},{"body":{"nodeType":"YulBlock","src":"1554:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"1600:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1609:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1612:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1602:6:27"},"nodeType":"YulFunctionCall","src":"1602:12:27"},"nodeType":"YulExpressionStatement","src":"1602:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1575:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1571:3:27"},"nodeType":"YulFunctionCall","src":"1571:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1596:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1567:3:27"},"nodeType":"YulFunctionCall","src":"1567:32:27"},"nodeType":"YulIf","src":"1564:52:27"},{"nodeType":"YulAssignment","src":"1625:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1654:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1635:18:27"},"nodeType":"YulFunctionCall","src":"1635:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1625:6:27"}]},{"nodeType":"YulAssignment","src":"1673:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1706:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1717:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1702:3:27"},"nodeType":"YulFunctionCall","src":"1702:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1683:18:27"},"nodeType":"YulFunctionCall","src":"1683:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1673:6:27"}]},{"nodeType":"YulAssignment","src":"1730:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1768:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:27"},"nodeType":"YulFunctionCall","src":"1753:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1740:12:27"},"nodeType":"YulFunctionCall","src":"1740:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1730:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1504:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1515:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1527:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1535:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1543:6:27","type":""}],"src":"1450:328:27"},{"body":{"nodeType":"YulBlock","src":"1880:87:27","statements":[{"nodeType":"YulAssignment","src":"1890:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1913:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:27"},"nodeType":"YulFunctionCall","src":"1898:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1890:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1932:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1947:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1955:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1943:3:27"},"nodeType":"YulFunctionCall","src":"1943:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1925:6:27"},"nodeType":"YulFunctionCall","src":"1925:36:27"},"nodeType":"YulExpressionStatement","src":"1925:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1849:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1860:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1871:4:27","type":""}],"src":"1783:184:27"},{"body":{"nodeType":"YulBlock","src":"2042:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"2088:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2097:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2100:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2090:6:27"},"nodeType":"YulFunctionCall","src":"2090:12:27"},"nodeType":"YulExpressionStatement","src":"2090:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2063:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2072:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2059:3:27"},"nodeType":"YulFunctionCall","src":"2059:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2084:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2055:3:27"},"nodeType":"YulFunctionCall","src":"2055:32:27"},"nodeType":"YulIf","src":"2052:52:27"},{"nodeType":"YulAssignment","src":"2113:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2142:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2123:18:27"},"nodeType":"YulFunctionCall","src":"2123:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2113:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2008:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2019:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2031:6:27","type":""}],"src":"1972:186:27"},{"body":{"nodeType":"YulBlock","src":"2250:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"2296:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2305:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2308:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2298:6:27"},"nodeType":"YulFunctionCall","src":"2298:12:27"},"nodeType":"YulExpressionStatement","src":"2298:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2271:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2280:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2267:3:27"},"nodeType":"YulFunctionCall","src":"2267:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2292:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2263:3:27"},"nodeType":"YulFunctionCall","src":"2263:32:27"},"nodeType":"YulIf","src":"2260:52:27"},{"nodeType":"YulAssignment","src":"2321:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2350:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2331:18:27"},"nodeType":"YulFunctionCall","src":"2331:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2321:6:27"}]},{"nodeType":"YulAssignment","src":"2369:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2413:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2398:3:27"},"nodeType":"YulFunctionCall","src":"2398:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2379:18:27"},"nodeType":"YulFunctionCall","src":"2379:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2369:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2208:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2219:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2231:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2239:6:27","type":""}],"src":"2163:260:27"},{"body":{"nodeType":"YulBlock","src":"2483:382:27","statements":[{"nodeType":"YulAssignment","src":"2493:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2507:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2510:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2503:3:27"},"nodeType":"YulFunctionCall","src":"2503:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2493:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2524:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2554:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2550:3:27"},"nodeType":"YulFunctionCall","src":"2550:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2528:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2601:31:27","statements":[{"nodeType":"YulAssignment","src":"2603:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2617:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2625:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2613:3:27"},"nodeType":"YulFunctionCall","src":"2613:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2603:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2581:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2574:6:27"},"nodeType":"YulFunctionCall","src":"2574:26:27"},"nodeType":"YulIf","src":"2571:61:27"},{"body":{"nodeType":"YulBlock","src":"2691:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:27"},"nodeType":"YulFunctionCall","src":"2705:88:27"},"nodeType":"YulExpressionStatement","src":"2705:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2813:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2816:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2806:6:27"},"nodeType":"YulFunctionCall","src":"2806:15:27"},"nodeType":"YulExpressionStatement","src":"2806:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2841:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2844:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2834:6:27"},"nodeType":"YulFunctionCall","src":"2834:15:27"},"nodeType":"YulExpressionStatement","src":"2834:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2647:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2670:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2678:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2667:2:27"},"nodeType":"YulFunctionCall","src":"2667:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2644:2:27"},"nodeType":"YulFunctionCall","src":"2644:38:27"},"nodeType":"YulIf","src":"2641:218:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2463:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2472:6:27","type":""}],"src":"2428:437:27"},{"body":{"nodeType":"YulBlock","src":"2918:234:27","statements":[{"body":{"nodeType":"YulBlock","src":"2953:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2974:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2977:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2967:6:27"},"nodeType":"YulFunctionCall","src":"2967:88:27"},"nodeType":"YulExpressionStatement","src":"2967:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3075:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3078:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3068:6:27"},"nodeType":"YulFunctionCall","src":"3068:15:27"},"nodeType":"YulExpressionStatement","src":"3068:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3103:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3106:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3096:6:27"},"nodeType":"YulFunctionCall","src":"3096:15:27"},"nodeType":"YulExpressionStatement","src":"3096:15:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2934:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2941:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2937:3:27"},"nodeType":"YulFunctionCall","src":"2937:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2931:2:27"},"nodeType":"YulFunctionCall","src":"2931:13:27"},"nodeType":"YulIf","src":"2928:193:27"},{"nodeType":"YulAssignment","src":"3130:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3141:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3144:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3137:3:27"},"nodeType":"YulFunctionCall","src":"3137:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3130:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2901:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"2904:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2910:3:27","type":""}],"src":"2870:282:27"},{"body":{"nodeType":"YulBlock","src":"3331:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3359:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3341:6:27"},"nodeType":"YulFunctionCall","src":"3341:21:27"},"nodeType":"YulExpressionStatement","src":"3341:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3382:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3393:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3378:3:27"},"nodeType":"YulFunctionCall","src":"3378:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3398:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3371:6:27"},"nodeType":"YulFunctionCall","src":"3371:30:27"},"nodeType":"YulExpressionStatement","src":"3371:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:27"},"nodeType":"YulFunctionCall","src":"3417:18:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3437:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3410:6:27"},"nodeType":"YulFunctionCall","src":"3410:62:27"},"nodeType":"YulExpressionStatement","src":"3410:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3503:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3488:3:27"},"nodeType":"YulFunctionCall","src":"3488:18:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3508:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3481:6:27"},"nodeType":"YulFunctionCall","src":"3481:35:27"},"nodeType":"YulExpressionStatement","src":"3481:35:27"},{"nodeType":"YulAssignment","src":"3525:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3537:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3548:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3533:3:27"},"nodeType":"YulFunctionCall","src":"3533:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3525:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3308:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3322:4:27","type":""}],"src":"3157:401:27"},{"body":{"nodeType":"YulBlock","src":"3737:226:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3754:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3765:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:27"},"nodeType":"YulFunctionCall","src":"3747:21:27"},"nodeType":"YulExpressionStatement","src":"3747:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3788:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3799:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3784:3:27"},"nodeType":"YulFunctionCall","src":"3784:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3804:2:27","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3777:6:27"},"nodeType":"YulFunctionCall","src":"3777:30:27"},"nodeType":"YulExpressionStatement","src":"3777:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3827:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3838:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3823:3:27"},"nodeType":"YulFunctionCall","src":"3823:18:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3843:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3816:6:27"},"nodeType":"YulFunctionCall","src":"3816:62:27"},"nodeType":"YulExpressionStatement","src":"3816:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3909:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:27"},"nodeType":"YulFunctionCall","src":"3894:18:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3914:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3887:6:27"},"nodeType":"YulFunctionCall","src":"3887:34:27"},"nodeType":"YulExpressionStatement","src":"3887:34:27"},{"nodeType":"YulAssignment","src":"3930:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3942:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3953:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3938:3:27"},"nodeType":"YulFunctionCall","src":"3938:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3930:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3714:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3728:4:27","type":""}],"src":"3563:400:27"},{"body":{"nodeType":"YulBlock","src":"4142:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4159:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4170:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4152:6:27"},"nodeType":"YulFunctionCall","src":"4152:21:27"},"nodeType":"YulExpressionStatement","src":"4152:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4193:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4204:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4189:3:27"},"nodeType":"YulFunctionCall","src":"4189:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4209:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4182:6:27"},"nodeType":"YulFunctionCall","src":"4182:30:27"},"nodeType":"YulExpressionStatement","src":"4182:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4232:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4243:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4228:3:27"},"nodeType":"YulFunctionCall","src":"4228:18:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4248:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4221:6:27"},"nodeType":"YulFunctionCall","src":"4221:62:27"},"nodeType":"YulExpressionStatement","src":"4221:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4303:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4314:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4299:3:27"},"nodeType":"YulFunctionCall","src":"4299:18:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4319:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4292:6:27"},"nodeType":"YulFunctionCall","src":"4292:32:27"},"nodeType":"YulExpressionStatement","src":"4292:32:27"},{"nodeType":"YulAssignment","src":"4333:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4345:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4356:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4341:3:27"},"nodeType":"YulFunctionCall","src":"4341:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4333:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4119:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4133:4:27","type":""}],"src":"3968:398:27"},{"body":{"nodeType":"YulBlock","src":"4545:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4562:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4573:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4555:6:27"},"nodeType":"YulFunctionCall","src":"4555:21:27"},"nodeType":"YulExpressionStatement","src":"4555:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4596:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4607:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4592:3:27"},"nodeType":"YulFunctionCall","src":"4592:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4612:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4585:6:27"},"nodeType":"YulFunctionCall","src":"4585:30:27"},"nodeType":"YulExpressionStatement","src":"4585:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4635:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4646:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4631:3:27"},"nodeType":"YulFunctionCall","src":"4631:18:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4651:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4624:6:27"},"nodeType":"YulFunctionCall","src":"4624:59:27"},"nodeType":"YulExpressionStatement","src":"4624:59:27"},{"nodeType":"YulAssignment","src":"4692:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:27"},"nodeType":"YulFunctionCall","src":"4700:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4692:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4522:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4536:4:27","type":""}],"src":"4371:353:27"},{"body":{"nodeType":"YulBlock","src":"4903:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4931:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4913:6:27"},"nodeType":"YulFunctionCall","src":"4913:21:27"},"nodeType":"YulExpressionStatement","src":"4913:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4954:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4965:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:27"},"nodeType":"YulFunctionCall","src":"4950:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4970:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4943:6:27"},"nodeType":"YulFunctionCall","src":"4943:30:27"},"nodeType":"YulExpressionStatement","src":"4943:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4993:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5004:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4989:3:27"},"nodeType":"YulFunctionCall","src":"4989:18:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5009:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4982:6:27"},"nodeType":"YulFunctionCall","src":"4982:62:27"},"nodeType":"YulExpressionStatement","src":"4982:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5064:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5075:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5060:3:27"},"nodeType":"YulFunctionCall","src":"5060:18:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5080:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:27"},"nodeType":"YulFunctionCall","src":"5053:35:27"},"nodeType":"YulExpressionStatement","src":"5053:35:27"},{"nodeType":"YulAssignment","src":"5097:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5120:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5105:3:27"},"nodeType":"YulFunctionCall","src":"5105:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5097:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4880:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4894:4:27","type":""}],"src":"4729:401:27"},{"body":{"nodeType":"YulBlock","src":"5309:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5326:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5337:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5319:6:27"},"nodeType":"YulFunctionCall","src":"5319:21:27"},"nodeType":"YulExpressionStatement","src":"5319:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5360:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5371:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5356:3:27"},"nodeType":"YulFunctionCall","src":"5356:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5376:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5349:6:27"},"nodeType":"YulFunctionCall","src":"5349:30:27"},"nodeType":"YulExpressionStatement","src":"5349:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5399:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5410:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:27"},"nodeType":"YulFunctionCall","src":"5395:18:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5415:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5388:6:27"},"nodeType":"YulFunctionCall","src":"5388:62:27"},"nodeType":"YulExpressionStatement","src":"5388:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5470:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5481:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5466:3:27"},"nodeType":"YulFunctionCall","src":"5466:18:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5486:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5459:6:27"},"nodeType":"YulFunctionCall","src":"5459:33:27"},"nodeType":"YulExpressionStatement","src":"5459:33:27"},{"nodeType":"YulAssignment","src":"5501:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5513:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5524:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:27"},"nodeType":"YulFunctionCall","src":"5509:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5501:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5286:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5300:4:27","type":""}],"src":"5135:399:27"},{"body":{"nodeType":"YulBlock","src":"5713:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5730:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5741:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5723:6:27"},"nodeType":"YulFunctionCall","src":"5723:21:27"},"nodeType":"YulExpressionStatement","src":"5723:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5775:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:27"},"nodeType":"YulFunctionCall","src":"5760:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5780:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5753:6:27"},"nodeType":"YulFunctionCall","src":"5753:30:27"},"nodeType":"YulExpressionStatement","src":"5753:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5803:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5814:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5799:3:27"},"nodeType":"YulFunctionCall","src":"5799:18:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5819:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5792:6:27"},"nodeType":"YulFunctionCall","src":"5792:62:27"},"nodeType":"YulExpressionStatement","src":"5792:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5885:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5870:3:27"},"nodeType":"YulFunctionCall","src":"5870:18:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5890:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5863:6:27"},"nodeType":"YulFunctionCall","src":"5863:36:27"},"nodeType":"YulExpressionStatement","src":"5863:36:27"},{"nodeType":"YulAssignment","src":"5908:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5920:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5931:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5916:3:27"},"nodeType":"YulFunctionCall","src":"5916:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5908:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5690:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5704:4:27","type":""}],"src":"5539:402:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461017f57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e6565b6040516100e39190610796565b60405180910390f35b6100ff6100fa366004610807565b610278565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610831565b610290565b604051601281526020016100e3565b6100ff610151366004610807565b6102b4565b61011361016436600461086d565b6001600160a01b031660009081526020819052604090205490565b6100d66102f3565b6100ff610195366004610807565b610302565b6100ff6101a8366004610807565b6103b1565b6101136101bb36600461088f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f5906108c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610221906108c2565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000336102868185856103bf565b5060019392505050565b60003361029e858285610517565b6102a98585856105a9565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102ee9087906108fd565b6103bf565b6060600480546101f5906108c2565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103a45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102a982868684036103bf565b6000336102868185856105a9565b6001600160a01b03831661043a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166104b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105a357818110156105965760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039b565b6105a384848484036103bf565b50505050565b6001600160a01b0383166106255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b0382166106a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b038316600090815260208190526040902054818110156107305760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161039b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105a3565b600060208083528351808285015260005b818110156107c3578581018301518582016040015282016107a7565b818111156107d5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461080257600080fd5b919050565b6000806040838503121561081a57600080fd5b610823836107eb565b946020939093013593505050565b60008060006060848603121561084657600080fd5b61084f846107eb565b925061085d602085016107eb565b9150604084013590509250925092565b60006020828403121561087f57600080fd5b610888826107eb565b9392505050565b600080604083850312156108a257600080fd5b6108ab836107eb565b91506108b9602084016107eb565b90509250929050565b600181811c908216806108d657607f821691505b602082108114156108f757634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561091e57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212201c9b00d9a40aaffa94c3326048751116c13dba4464e8e136c3dcf028139fe64364736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x221 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x243 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x251 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x3BF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x29E DUP6 DUP3 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x2A9 DUP6 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x286 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2EE SWAP1 DUP8 SWAP1 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F5 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x286 DUP2 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5A3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39B JUMP JUMPDEST PUSH2 0x5A3 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x3BF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x730 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x823 DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84F DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 POP PUSH2 0x85D PUSH1 0x20 DUP6 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AB DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B9 PUSH1 0x20 DUP5 ADD PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x91E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP12 STOP 0xD9 LOG4 EXP 0xAF STATICCALL SWAP5 0xC3 ORIGIN PUSH1 0x48 PUSH22 0x1116C13DBA4464E8E136C3DCF028139FE64364736F6C PUSH4 0x43000808 STOP CALLER ","sourceMap":"121:188:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1241:14:27;;1234:22;1216:41;;1204:2;1189:18;4431:197:15;1076:187:27;3242:106:15;3329:12;;3242:106;;;1414:25:27;;;1402:2;1387:18;3242:106:15;1268:177:27;5190:286:15;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1925:36:27;;1913:2;1898:18;3091:91:15;1783:184:27;5871:234:15;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:15;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:18;4568:32:15;719:10:18;4584:7:15;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:15;;4431:197;-1:-1:-1;;;4431:197:15:o;5190:286::-;5317:4;719:10:18;5373:38:15;5389:4;719:10:18;5404:6:15;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:15;;5190:286;-1:-1:-1;;;;5190:286:15:o;5871:234::-;719:10:18;5959:4:15;4089:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4089:27:15;;;;;;;;;;5959:4;;719:10:18;6013:64:15;;719:10:18;;4089:27:15;;6038:38;;6066:10;;6038:38;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;719:10:18;6685:4:15;4089:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4089:27:15;;;;;;;;;;6685:4;;719:10:18;6829:15:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:15;;3359:2:27;6801:85:15;;;3341:21:27;3398:2;3378:18;;;3371:30;3437:34;3417:18;;;3410:62;3508:7;3488:18;;;3481:35;3533:19;;6801:85:15;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:18;3860:28:15;719:10:18;3877:2:15;3881:6;3860:9;:28::i;10504:370::-;-1:-1:-1;;;;;10635:19:15;;10627:68;;;;-1:-1:-1;;;10627:68:15;;3765:2:27;10627:68:15;;;3747:21:27;3804:2;3784:18;;;3777:30;3843:34;3823:18;;;3816:62;3914:6;3894:18;;;3887:34;3938:19;;10627:68:15;3563:400:27;10627:68:15;-1:-1:-1;;;;;10713:21:15;;10705:68;;;;-1:-1:-1;;;10705:68:15;;4170:2:27;10705:68:15;;;4152:21:27;4209:2;4189:18;;;4182:30;4248:34;4228:18;;;4221:62;4319:4;4299:18;;;4292:32;4341:19;;10705:68:15;3968:398:27;10705:68:15;-1:-1:-1;;;;;10784:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1414:25:27;;;10835:32:15;;1387:18:27;10835:32:15;;;;;;;10504:370;;;:::o;11155:441::-;-1:-1:-1;;;;;4089:18:15;;;11285:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11351:37:15;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:15;;4573:2:27;11404:68:15;;;4555:21:27;4612:2;4592:18;;;4585:30;4651:31;4631:18;;;4624:59;4700:18;;11404:68:15;4371:353:27;11404:68:15;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;4931:2:27;7591:68:15;;;4913:21:27;4970:2;4950:18;;;4943:30;5009:34;4989:18;;;4982:62;5080:7;5060:18;;;5053:35;5105:19;;7591:68:15;4729:401:27;7591:68:15;-1:-1:-1;;;;;7677:16:15;;7669:64;;;;-1:-1:-1;;;7669:64:15;;5337:2:27;7669:64:15;;;5319:21:27;5376:2;5356:18;;;5349:30;5415:34;5395:18;;;5388:62;5486:5;5466:18;;;5459:33;5509:19;;7669:64:15;5135:399:27;7669:64:15;-1:-1:-1;;;;;7815:15:15;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:15;;5741:2:27;7840:72:15;;;5723:21:27;5780:2;5760:18;;;5753:30;5819:34;5799:18;;;5792:62;5890:8;5870:18;;;5863:36;5916:19;;7840:72:15;5539:402:27;7840:72:15;-1:-1:-1;;;;;7946:15:15;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1414:25:27;;;8161:13:15;;8210:26;;1387:18:27;8210:26:15;;;;;;;8247:37;12180:121;14:597:27;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:27;574:15;-1:-1:-1;;570:29:27;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:27:o;616:196::-;684:20;;-1:-1:-1;;;;;733:54:27;;723:65;;713:93;;802:1;799;792:12;713:93;616:196;;;:::o;817:254::-;885:6;893;946:2;934:9;925:7;921:23;917:32;914:52;;;962:1;959;952:12;914:52;985:29;1004:9;985:29;:::i;:::-;975:39;1061:2;1046:18;;;;1033:32;;-1:-1:-1;;;817:254:27:o;1450:328::-;1527:6;1535;1543;1596:2;1584:9;1575:7;1571:23;1567:32;1564:52;;;1612:1;1609;1602:12;1564:52;1635:29;1654:9;1635:29;:::i;:::-;1625:39;;1683:38;1717:2;1706:9;1702:18;1683:38;:::i;:::-;1673:48;;1768:2;1757:9;1753:18;1740:32;1730:42;;1450:328;;;;;:::o;1972:186::-;2031:6;2084:2;2072:9;2063:7;2059:23;2055:32;2052:52;;;2100:1;2097;2090:12;2052:52;2123:29;2142:9;2123:29;:::i;:::-;2113:39;1972:186;-1:-1:-1;;;1972:186:27:o;2163:260::-;2231:6;2239;2292:2;2280:9;2271:7;2267:23;2263:32;2260:52;;;2308:1;2305;2298:12;2260:52;2331:29;2350:9;2331:29;:::i;:::-;2321:39;;2379:38;2413:2;2402:9;2398:18;2379:38;:::i;:::-;2369:48;;2163:260;;;;;:::o;2428:437::-;2507:1;2503:12;;;;2550;;;2571:61;;2625:4;2617:6;2613:17;2603:27;;2571:61;2678:2;2670:6;2667:14;2647:18;2644:38;2641:218;;;-1:-1:-1;;;2712:1:27;2705:88;2816:4;2813:1;2806:15;2844:4;2841:1;2834:15;2641:218;;2428:437;;;:::o;2870:282::-;2910:3;2941:1;2937:6;2934:1;2931:13;2928:193;;;-1:-1:-1;;;2974:1:27;2967:88;3078:4;3075:1;3068:15;3106:4;3103:1;3096:15;2928:193;-1:-1:-1;3137:9:27;;2870:282::o"},"gasEstimates":{"creation":{"codeDepositCost":"478600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24647","balanceOf(address)":"2585","decimals()":"244","decreaseAllowance(address,uint256)":"26922","increaseAllowance(address,uint256)":"26968","name()":"infinite","symbol()":"infinite","totalSupply()":"2304","transfer(address,uint256)":"51090","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnergyToken.sol\":\"Energy_Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/EnergyToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract Energy_Token is ERC20 {\\n    /*\\n        Initial Supply is 50 ,- 50 WEI\\n        Initial supply 50e18\\n        or, 50*10**18\\n    */\\n    constructor() ERC20(\\\"Enery Token\\\", \\\"UNIT\\\") {}\\n}\\n\",\"keccak256\":\"0x24d14ddec5c363f3efab2fbb5fa79cd38dd94217bb1134d3d7bd621c40c5b842\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2380,"contract":"contracts/EnergyToken.sol:Energy_Token","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":2386,"contract":"contracts/EnergyToken.sol:Energy_Token","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2388,"contract":"contracts/EnergyToken.sol:Energy_Token","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":2390,"contract":"contracts/EnergyToken.sol:Energy_Token","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2392,"contract":"contracts/EnergyToken.sol:Energy_Token","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/EnergyTrade.sol":{"EnergyTrade":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_required","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sellerID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"buyerID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"unitEnergyPriceUSD","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unitEnergyPriceMatic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"boughtEnergyToken","type":"uint256"}],"name":"EnergyBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sellerID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unitEnergyPriceUSD","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unitEnergyPriceMatic","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"listedEnergyToken","type":"uint256"}],"name":"EnergyListed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"ApprovedProsumers","outputs":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_unApprovedProsumerID","type":"uint256"}],"name":"DisApproveProsumer_OwnerSpecific","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"approvalCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_unApprovedProsumerID","type":"uint256"}],"name":"approveProsumer_OwnerSpecific","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"approved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"energyBurned","type":"uint256"}],"name":"burnEnergy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"producerID","type":"uint256"},{"internalType":"uint256","name":"energy_need","type":"uint256"}],"name":"buyEnergy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"complainCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"complains","outputs":[{"internalType":"uint256","name":"_complainID","type":"uint256"},{"internalType":"uint256","name":"_complainant","type":"uint256"},{"internalType":"uint256","name":"_accused","type":"uint256"},{"internalType":"string","name":"_complain","type":"string"},{"internalType":"bool","name":"_resolved","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"disapprovalCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"disapproved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedForwarder","outputs":[{"internalType":"address","name":"forwarder","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isProsumer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"unitEnergyPrice","type":"uint256"},{"internalType":"uint256","name":"excessEnergyToken","type":"uint256"}],"name":"listEnergy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxComplains","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mySetUnitPrice_Matic","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mySetUnitPrice_USD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"energyProduced","type":"uint256"}],"name":"produceEnergy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"prosumerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"prosumerID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_prosumerId","type":"uint256"},{"internalType":"string","name":"_complainBody","type":"string"}],"name":"raiseComplain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"regFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_aadharNo","type":"uint256"}],"name":"req_Registration","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"required","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_regFee","type":"uint256"}],"name":"setRegFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_unapprovedProsumerAddress","type":"address"}],"name":"showApprovalStatus_OwnerSpecific","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"show_Approved_Prosumers","outputs":[{"components":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"internalType":"struct MultiSig.prosumer[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"show_Unapproved_Prosumers","outputs":[{"components":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"internalType":"struct MultiSig.prosumer[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_prosumerId","type":"uint256"},{"internalType":"uint256","name":"_complainId","type":"uint256"}],"name":"suspendProsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"suspended","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"suspensionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"unApprovedProsumers","outputs":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_prosumerId","type":"uint256"},{"internalType":"uint256","name":"_complainId","type":"uint256"}],"name":"unSuspendProsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"unSuspended","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"unSuspensionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"versionRecipient","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"viewEnergyBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"viewEscrowBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"viewMaticBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getTrustedForwarder()":{"returns":{"forwarder":"The address of the Forwarder contract that is being used."}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isTrustedForwarder(address)":{"params":{"forwarder":"The address of the Forwarder contract that is being used."},"returns":{"_0":"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."}},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2409":{"entryPoint":null,"id":2409,"parameterSlots":2,"returnSlots":0},"@_3319":{"entryPoint":null,"id":3319,"parameterSlots":0,"returnSlots":0},"@_3360":{"entryPoint":null,"id":3360,"parameterSlots":3,"returnSlots":0},"@_3975":{"entryPoint":null,"id":3975,"parameterSlots":3,"returnSlots":0},"@_4923":{"entryPoint":null,"id":4923,"parameterSlots":0,"returnSlots":0},"@_setTrustedForwarder_470":{"entryPoint":null,"id":470,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":1018,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory":{"entryPoint":1069,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1375,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1333,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1311,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1047,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3795:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:27","statements":[{"nodeType":"YulAssignment","src":"84:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:27"},"nodeType":"YulFunctionCall","src":"93:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:27"}]},{"body":{"nodeType":"YulBlock","src":"169:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:27"},"nodeType":"YulFunctionCall","src":"171:12:27"},"nodeType":"YulExpressionStatement","src":"171:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:27"},"nodeType":"YulFunctionCall","src":"150:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:27"},"nodeType":"YulFunctionCall","src":"146:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:27"},"nodeType":"YulFunctionCall","src":"135:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:27"},"nodeType":"YulFunctionCall","src":"125:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:27"},"nodeType":"YulFunctionCall","src":"118:50:27"},"nodeType":"YulIf","src":"115:70:27"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:27","type":""}],"src":"14:177:27"},{"body":{"nodeType":"YulBlock","src":"228:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:27"},"nodeType":"YulFunctionCall","src":"248:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:27"},"nodeType":"YulFunctionCall","src":"238:31:27"},"nodeType":"YulExpressionStatement","src":"238:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:27"},"nodeType":"YulFunctionCall","src":"278:15:27"},"nodeType":"YulExpressionStatement","src":"278:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:27"},"nodeType":"YulFunctionCall","src":"302:15:27"},"nodeType":"YulExpressionStatement","src":"302:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"196:127:27"},{"body":{"nodeType":"YulBlock","src":"468:1135:27","statements":[{"body":{"nodeType":"YulBlock","src":"514:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"523:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"526:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"516:6:27"},"nodeType":"YulFunctionCall","src":"516:12:27"},"nodeType":"YulExpressionStatement","src":"516:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"489:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:27"},"nodeType":"YulFunctionCall","src":"485:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"481:3:27"},"nodeType":"YulFunctionCall","src":"481:32:27"},"nodeType":"YulIf","src":"478:52:27"},{"nodeType":"YulAssignment","src":"539:50:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"579:9:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"549:29:27"},"nodeType":"YulFunctionCall","src":"549:40:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"539:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"598:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"608:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"602:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"619:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"654:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"639:3:27"},"nodeType":"YulFunctionCall","src":"639:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"633:5:27"},"nodeType":"YulFunctionCall","src":"633:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"623:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"667:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"685:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"689:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"681:3:27"},"nodeType":"YulFunctionCall","src":"681:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"693:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"677:3:27"},"nodeType":"YulFunctionCall","src":"677:18:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"671:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"722:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"731:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"734:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"724:6:27"},"nodeType":"YulFunctionCall","src":"724:12:27"},"nodeType":"YulExpressionStatement","src":"724:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"710:6:27"},{"name":"_2","nodeType":"YulIdentifier","src":"718:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"707:2:27"},"nodeType":"YulFunctionCall","src":"707:14:27"},"nodeType":"YulIf","src":"704:34:27"},{"nodeType":"YulVariableDeclaration","src":"747:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"761:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"772:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"757:3:27"},"nodeType":"YulFunctionCall","src":"757:22:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"751:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"827:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"836:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"839:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"829:6:27"},"nodeType":"YulFunctionCall","src":"829:12:27"},"nodeType":"YulExpressionStatement","src":"829:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"806:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"810:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"802:3:27"},"nodeType":"YulFunctionCall","src":"802:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"817:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"798:3:27"},"nodeType":"YulFunctionCall","src":"798:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"791:6:27"},"nodeType":"YulFunctionCall","src":"791:35:27"},"nodeType":"YulIf","src":"788:55:27"},{"nodeType":"YulVariableDeclaration","src":"852:19:27","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"868:2:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"862:5:27"},"nodeType":"YulFunctionCall","src":"862:9:27"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"856:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"894:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"896:16:27"},"nodeType":"YulFunctionCall","src":"896:18:27"},"nodeType":"YulExpressionStatement","src":"896:18:27"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"886:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"890:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"883:2:27"},"nodeType":"YulFunctionCall","src":"883:10:27"},"nodeType":"YulIf","src":"880:36:27"},{"nodeType":"YulVariableDeclaration","src":"925:20:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"939:1:27","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"942:2:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"935:3:27"},"nodeType":"YulFunctionCall","src":"935:10:27"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"929:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"954:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"974:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"968:5:27"},"nodeType":"YulFunctionCall","src":"968:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"958:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"986:56:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1008:6:27"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1024:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"1028:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1020:3:27"},"nodeType":"YulFunctionCall","src":"1020:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1033:3:27"},"nodeType":"YulFunctionCall","src":"1033:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1016:3:27"},"nodeType":"YulFunctionCall","src":"1016:25:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1004:3:27"},"nodeType":"YulFunctionCall","src":"1004:38:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"990:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1101:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1103:16:27"},"nodeType":"YulFunctionCall","src":"1103:18:27"},"nodeType":"YulExpressionStatement","src":"1103:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1060:10:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1072:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1057:2:27"},"nodeType":"YulFunctionCall","src":"1057:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1080:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1092:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1077:2:27"},"nodeType":"YulFunctionCall","src":"1077:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1054:2:27"},"nodeType":"YulFunctionCall","src":"1054:46:27"},"nodeType":"YulIf","src":"1051:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1139:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1143:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1132:6:27"},"nodeType":"YulFunctionCall","src":"1132:22:27"},"nodeType":"YulExpressionStatement","src":"1132:22:27"},{"nodeType":"YulVariableDeclaration","src":"1163:17:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1174:6:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1167:3:27","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1196:6:27"},{"name":"_4","nodeType":"YulIdentifier","src":"1204:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1189:6:27"},"nodeType":"YulFunctionCall","src":"1189:18:27"},"nodeType":"YulExpressionStatement","src":"1189:18:27"},{"nodeType":"YulAssignment","src":"1216:22:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1227:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1235:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1223:3:27"},"nodeType":"YulFunctionCall","src":"1223:15:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1216:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"1247:34:27","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1269:2:27"},{"name":"_5","nodeType":"YulIdentifier","src":"1273:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1265:3:27"},"nodeType":"YulFunctionCall","src":"1265:11:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1278:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1261:3:27"},"nodeType":"YulFunctionCall","src":"1261:20:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1251:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1313:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1322:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1325:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1315:6:27"},"nodeType":"YulFunctionCall","src":"1315:12:27"},"nodeType":"YulExpressionStatement","src":"1315:12:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1296:6:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1304:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1293:2:27"},"nodeType":"YulFunctionCall","src":"1293:19:27"},"nodeType":"YulIf","src":"1290:39:27"},{"nodeType":"YulVariableDeclaration","src":"1338:22:27","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1353:2:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1357:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:27"},"nodeType":"YulFunctionCall","src":"1349:11:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1342:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1425:103:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1446:3:27"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1481:3:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1451:29:27"},"nodeType":"YulFunctionCall","src":"1451:34:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1439:6:27"},"nodeType":"YulFunctionCall","src":"1439:47:27"},"nodeType":"YulExpressionStatement","src":"1439:47:27"},{"nodeType":"YulAssignment","src":"1499:19:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1510:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1515:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1506:3:27"},"nodeType":"YulFunctionCall","src":"1506:12:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1499:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1380:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1385:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1377:2:27"},"nodeType":"YulFunctionCall","src":"1377:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1393:23:27","statements":[{"nodeType":"YulAssignment","src":"1395:19:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1406:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1411:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1402:3:27"},"nodeType":"YulFunctionCall","src":"1402:12:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1395:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1373:3:27","statements":[]},"src":"1369:159:27"},{"nodeType":"YulAssignment","src":"1537:16:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1547:6:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1537:6:27"}]},{"nodeType":"YulAssignment","src":"1562:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1593:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:27"},"nodeType":"YulFunctionCall","src":"1578:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1572:5:27"},"nodeType":"YulFunctionCall","src":"1572:25:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1562:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"418:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"429:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"441:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"449:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"457:6:27","type":""}],"src":"328:1275:27"},{"body":{"nodeType":"YulBlock","src":"1782:165:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1799:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1810:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1792:6:27"},"nodeType":"YulFunctionCall","src":"1792:21:27"},"nodeType":"YulExpressionStatement","src":"1792:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1833:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1844:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1829:3:27"},"nodeType":"YulFunctionCall","src":"1829:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"1849:2:27","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1822:6:27"},"nodeType":"YulFunctionCall","src":"1822:30:27"},"nodeType":"YulExpressionStatement","src":"1822:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1872:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1883:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:27"},"nodeType":"YulFunctionCall","src":"1868:18:27"},{"hexValue":"4f776e657273205265717569726564","kind":"string","nodeType":"YulLiteral","src":"1888:17:27","type":"","value":"Owners Required"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1861:6:27"},"nodeType":"YulFunctionCall","src":"1861:45:27"},"nodeType":"YulExpressionStatement","src":"1861:45:27"},{"nodeType":"YulAssignment","src":"1915:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1927:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1938:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1923:3:27"},"nodeType":"YulFunctionCall","src":"1923:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1915:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1759:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1773:4:27","type":""}],"src":"1608:339:27"},{"body":{"nodeType":"YulBlock","src":"2126:223:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2143:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2154:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2136:6:27"},"nodeType":"YulFunctionCall","src":"2136:21:27"},"nodeType":"YulExpressionStatement","src":"2136:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2177:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2188:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2173:3:27"},"nodeType":"YulFunctionCall","src":"2173:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"2193:2:27","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2166:6:27"},"nodeType":"YulFunctionCall","src":"2166:30:27"},"nodeType":"YulExpressionStatement","src":"2166:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2216:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2227:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2212:3:27"},"nodeType":"YulFunctionCall","src":"2212:18:27"},{"hexValue":"496e76616c6964207265717569726564206e756d626572206f66206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2232:34:27","type":"","value":"Invalid required number of owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2205:6:27"},"nodeType":"YulFunctionCall","src":"2205:62:27"},"nodeType":"YulExpressionStatement","src":"2205:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2287:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2298:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2283:3:27"},"nodeType":"YulFunctionCall","src":"2283:18:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"2303:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2276:6:27"},"nodeType":"YulFunctionCall","src":"2276:31:27"},"nodeType":"YulExpressionStatement","src":"2276:31:27"},{"nodeType":"YulAssignment","src":"2316:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2328:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2339:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2324:3:27"},"nodeType":"YulFunctionCall","src":"2324:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2316:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2103:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2117:4:27","type":""}],"src":"1952:397:27"},{"body":{"nodeType":"YulBlock","src":"2386:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2403:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2410:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2415:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2406:3:27"},"nodeType":"YulFunctionCall","src":"2406:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2396:6:27"},"nodeType":"YulFunctionCall","src":"2396:31:27"},"nodeType":"YulExpressionStatement","src":"2396:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2443:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2446:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2436:6:27"},"nodeType":"YulFunctionCall","src":"2436:15:27"},"nodeType":"YulExpressionStatement","src":"2436:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2467:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2460:6:27"},"nodeType":"YulFunctionCall","src":"2460:15:27"},"nodeType":"YulExpressionStatement","src":"2460:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"2354:127:27"},{"body":{"nodeType":"YulBlock","src":"2660:163:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2677:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2688:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2670:6:27"},"nodeType":"YulFunctionCall","src":"2670:21:27"},"nodeType":"YulExpressionStatement","src":"2670:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2711:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2722:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:27"},"nodeType":"YulFunctionCall","src":"2707:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"2727:2:27","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:27"},"nodeType":"YulFunctionCall","src":"2700:30:27"},"nodeType":"YulExpressionStatement","src":"2700:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2750:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2761:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2746:3:27"},"nodeType":"YulFunctionCall","src":"2746:18:27"},{"hexValue":"696e76616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2766:15:27","type":"","value":"invalid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2739:6:27"},"nodeType":"YulFunctionCall","src":"2739:43:27"},"nodeType":"YulExpressionStatement","src":"2739:43:27"},{"nodeType":"YulAssignment","src":"2791:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2803:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2814:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2799:3:27"},"nodeType":"YulFunctionCall","src":"2799:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2791:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2637:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2651:4:27","type":""}],"src":"2486:337:27"},{"body":{"nodeType":"YulBlock","src":"3002:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3019:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3030:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3012:6:27"},"nodeType":"YulFunctionCall","src":"3012:21:27"},"nodeType":"YulExpressionStatement","src":"3012:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3053:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3064:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3049:3:27"},"nodeType":"YulFunctionCall","src":"3049:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3069:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3042:6:27"},"nodeType":"YulFunctionCall","src":"3042:30:27"},"nodeType":"YulExpressionStatement","src":"3042:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3092:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3103:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3088:3:27"},"nodeType":"YulFunctionCall","src":"3088:18:27"},{"hexValue":"4f776e6572206973206e6f7420756e69717565","kind":"string","nodeType":"YulLiteral","src":"3108:21:27","type":"","value":"Owner is not unique"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3081:6:27"},"nodeType":"YulFunctionCall","src":"3081:49:27"},"nodeType":"YulExpressionStatement","src":"3081:49:27"},{"nodeType":"YulAssignment","src":"3139:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3151:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3162:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3147:3:27"},"nodeType":"YulFunctionCall","src":"3147:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3139:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2979:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2993:4:27","type":""}],"src":"2828:343:27"},{"body":{"nodeType":"YulBlock","src":"3223:185:27","statements":[{"body":{"nodeType":"YulBlock","src":"3262:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3283:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3295:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3286:3:27"},"nodeType":"YulFunctionCall","src":"3286:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3276:6:27"},"nodeType":"YulFunctionCall","src":"3276:31:27"},"nodeType":"YulExpressionStatement","src":"3276:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3327:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3330:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3320:6:27"},"nodeType":"YulFunctionCall","src":"3320:15:27"},"nodeType":"YulExpressionStatement","src":"3320:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3348:6:27"},"nodeType":"YulFunctionCall","src":"3348:15:27"},"nodeType":"YulExpressionStatement","src":"3348:15:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3239:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3250:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3246:3:27"},"nodeType":"YulFunctionCall","src":"3246:6:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3236:2:27"},"nodeType":"YulFunctionCall","src":"3236:17:27"},"nodeType":"YulIf","src":"3233:140:27"},{"nodeType":"YulAssignment","src":"3382:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3393:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3400:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:27"},"nodeType":"YulFunctionCall","src":"3389:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3382:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3205:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3215:3:27","type":""}],"src":"3176:232:27"},{"body":{"nodeType":"YulBlock","src":"3468:325:27","statements":[{"nodeType":"YulAssignment","src":"3478:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3492:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3495:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3488:3:27"},"nodeType":"YulFunctionCall","src":"3488:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3478:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3509:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3539:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3545:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3535:3:27"},"nodeType":"YulFunctionCall","src":"3535:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3513:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3586:31:27","statements":[{"nodeType":"YulAssignment","src":"3588:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3602:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3598:3:27"},"nodeType":"YulFunctionCall","src":"3598:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3588:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3566:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3559:6:27"},"nodeType":"YulFunctionCall","src":"3559:26:27"},"nodeType":"YulIf","src":"3556:61:27"},{"body":{"nodeType":"YulBlock","src":"3676:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3697:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3704:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3709:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3700:3:27"},"nodeType":"YulFunctionCall","src":"3700:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3690:6:27"},"nodeType":"YulFunctionCall","src":"3690:31:27"},"nodeType":"YulExpressionStatement","src":"3690:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3741:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3744:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3734:6:27"},"nodeType":"YulFunctionCall","src":"3734:15:27"},"nodeType":"YulExpressionStatement","src":"3734:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3769:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3772:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3762:6:27"},"nodeType":"YulFunctionCall","src":"3762:15:27"},"nodeType":"YulExpressionStatement","src":"3762:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3632:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3655:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3663:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3652:2:27"},"nodeType":"YulFunctionCall","src":"3652:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3629:2:27"},"nodeType":"YulFunctionCall","src":"3629:38:27"},"nodeType":"YulIf","src":"3626:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3448:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3457:6:27","type":""}],"src":"3413:380:27"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Owners Required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Invalid required number of owner\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Owner is not unique\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"600a60195560c060405260056080819052640332e302e360dc1b60a09081526200002d91601b919062000354565b503480156200003b57600080fd5b5060405162004e5938038062004e598339810160408190526200005e916200042d565b604080518082018252600b81526a22b732b93c902a37b5b2b760a91b6020808301918252835180850190945260048452631553925560e21b9084015281518693869386939092620000b29160039162000354565b508051620000c890600490602084019062000354565b5050600580546001600160a01b03191673d0d5e3db44de05e9f294bb0a3beeaf030de24ada179055506200011883600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000825111620001615760405162461bcd60e51b815260206004820152600f60248201526e13dddb995c9cc814995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b60008111801562000173575081518111155b620001cb5760405162461bcd60e51b815260206004820152602160248201527f496e76616c6964207265717569726564206e756d626572206f66206f776e65726044820152607360f81b606482015260840162000158565b60005b825181101562000332576000838281518110620001ef57620001ef6200051f565b6020026020010151905060006001600160a01b0316816001600160a01b031614156200024e5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b604482015260640162000158565b6001600160a01b0381166000908152600a602052604090205460ff1615620002b95760405162461bcd60e51b815260206004820152601360248201527f4f776e6572206973206e6f7420756e6971756500000000000000000000000000604482015260640162000158565b6001600160a01b03166000818152600a60205260408120805460ff191660019081179091556009805491820181559091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b031916909117905580620003298162000535565b915050620001ce565b506007555050601c80546001600160a01b03191630179055506200059c915050565b82805462000362906200055f565b90600052602060002090601f016020900481019282620003865760008555620003d1565b82601f10620003a157805160ff1916838001178555620003d1565b82800160010185558215620003d1579182015b82811115620003d1578251825591602001919060010190620003b4565b50620003df929150620003e3565b5090565b5b80821115620003df5760008155600101620003e4565b80516001600160a01b03811681146200041257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200044357600080fd5b6200044e84620003fa565b602085810151919450906001600160401b03808211156200046e57600080fd5b818701915087601f8301126200048357600080fd5b81518181111562000498576200049862000417565b8060051b604051601f19603f83011681018181108582111715620004c057620004c062000417565b60405291825284820192508381018501918a831115620004df57600080fd5b938501935b828510156200050857620004f885620003fa565b84529385019392850192620004e4565b809750505050505050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200055857634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200057457607f821691505b602082108114156200059657634e487b7160e01b600052602260045260246000fd5b50919050565b6148ad80620005ac6000396000f3fe60806040526004361061036a5760003560e01c80637b78bc6b116101c6578063c7a7275e116100f7578063e706d56811610095578063f2fde38b1161006f578063f2fde38b14610ae8578063f4b1604514610b08578063f85bae7814610b43578063fdbd2e8b14610b7e57600080fd5b8063e706d56814610a93578063e7e4f9d914610aa8578063e814db5914610ac857600080fd5b8063cdb6d52d116100d1578063cdb6d52d14610a06578063ce1b815f14610a19578063dc8452cd14610a37578063dd62ed3e14610a4d57600080fd5b8063c7a7275e146109a6578063c8a9fb5e146109c6578063c8b6ba49146109e657600080fd5b806390f8ba3c116101645780639c01a6df1161013e5780639c01a6df146109335780639ff3411514610953578063a457c2d714610966578063a9059cbb1461098657600080fd5b806390f8ba3c146108c457806395d89b41146108f15780639a9ddd161461090657600080fd5b80638bda812f116101a05780638bda812f1461084f5780638e15f473146108635780638fac6371146108785780638fff20f3146108ae57600080fd5b80637b78bc6b146107ed5780637fb400f91461080d57806383ae03671461082d57600080fd5b8063476343ee116102a0578063572b6c051161023e57806366cc771f1161021857806366cc771f1461073957806370a082311461076657806373de8ce81461079c57806375ae81b3146107b257600080fd5b8063572b6c05146106ad5780635f81b606146106dc578063612536fc1461071757600080fd5b80634ea30b2f1161027a5780634ea30b2f146105ec5780634ec9dd8d1461061d5780634ef8ab771461063257806350a7ac251461069757600080fd5b8063476343ee146105a2578063486ff0cd146105b75780634ca46d19146105cc57600080fd5b806318160ddd1161030d578063313ce567116102e7578063313ce567146105025780633628c3331461051e578063395093511461056257806340cb33421461058257600080fd5b806318160ddd1461049d57806323b872dd146104b25780632f54bf6e146104d257600080fd5b8063095ea7b311610349578063095ea7b3146104095780630b6d83e2146104395780630e264f801461045b578063143859eb1461047057600080fd5b80621cfdce1461036f578063025e7c27146103af57806306fdde03146103e7575b600080fd5b34801561037b57600080fd5b5061039c61038a3660046143d8565b60136020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156103bb57600080fd5b506103cf6103ca3660046143fa565b610bae565b6040516001600160a01b0390911681526020016103a6565b3480156103f357600080fd5b506103fc610bd8565b6040516103a69190614460565b34801561041557600080fd5b50610429610424366004614473565b610c6a565b60405190151581526020016103a6565b34801561044557600080fd5b506104596104543660046143fa565b610c8c565b005b34801561046757600080fd5b5061039c610d7b565b34801561047c57600080fd5b5061039c61048b3660046143d8565b60176020526000908152604090205481565b3480156104a957600080fd5b5060025461039c565b3480156104be57600080fd5b506104296104cd36600461449d565b610e0f565b3480156104de57600080fd5b506104296104ed3660046143d8565b600a6020526000908152604090205460ff1681565b34801561050e57600080fd5b50604051601281526020016103a6565b34801561052a57600080fd5b5061054d601c546001600160a01b03166000908152602081905260409020544791565b604080519283526020830191909152016103a6565b34801561056e57600080fd5b5061042961057d366004614473565b610e3d565b34801561058e57600080fd5b5061045961059d3660046144d9565b610e8f565b3480156105ae57600080fd5b506104596111ec565b3480156105c357600080fd5b506103fc611342565b3480156105d857600080fd5b506104596105e73660046143fa565b6113d0565b3480156105f857600080fd5b5061060c6106073660046143fa565b61182d565b6040516103a69594939291906144fb565b34801561062957600080fd5b5061039c6118fe565b34801561063e57600080fd5b5061065261064d3660046143fa565b611992565b604080519889526001600160a01b0390971660208901529587019490945291151560608601521515608085015260a084015260c083015260e0820152610100016103a6565b3480156106a357600080fd5b5061039c60195481565b3480156106b957600080fd5b506104296106c83660046143d8565b6006546001600160a01b0391821691161490565b3480156106e857600080fd5b506104296106f7366004614534565b600d60209081526000928352604080842090915290825290205460ff1681565b34801561072357600080fd5b5061072c6119f6565b6040516103a69190614567565b34801561074557600080fd5b5061039c6107543660046143d8565b60156020526000908152604090205481565b34801561077257600080fd5b5061039c6107813660046143d8565b6001600160a01b031660009081526020819052604090205490565b3480156107a857600080fd5b5061039c60185481565b3480156107be57600080fd5b506104296107cd366004614534565b600e60209081526000928352604080842090915290825290205460ff1681565b3480156107f957600080fd5b506103fc6108083660046143d8565b611ab6565b34801561081957600080fd5b506104596108283660046143fa565b611c4c565b34801561083957600080fd5b503360009081526020819052604090205461039c565b34801561085b57600080fd5b50333161039c565b34801561086f57600080fd5b5061039c611d38565b34801561088457600080fd5b506103cf6108933660046143fa565b6012602052600090815260409020546001600160a01b031681565b3480156108ba57600080fd5b5061039c60085481565b3480156108d057600080fd5b5061039c6108df3660046143d8565b60166020526000908152604090205481565b3480156108fd57600080fd5b506103fc611dcc565b34801561091257600080fd5b5061039c6109213660046143d8565b60146020526000908152604090205481565b34801561093f57600080fd5b5061065261094e3660046143fa565b611ddb565b6104596109613660046143fa565b611deb565b34801561097257600080fd5b50610429610981366004614473565b6121db565b34801561099257600080fd5b506104296109a1366004614473565b612292565b3480156109b257600080fd5b506104596109c13660046143fa565b6122aa565b3480156109d257600080fd5b5061039c6109e13660046144d9565b61289b565b3480156109f257600080fd5b50610459610a01366004614617565b612b75565b610459610a143660046144d9565b6130b6565b348015610a2557600080fd5b506006546001600160a01b03166103cf565b348015610a4357600080fd5b5061039c60075481565b348015610a5957600080fd5b5061039c610a68366004614534565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b348015610a9f57600080fd5b5061072c6134ae565b348015610ab457600080fd5b50610459610ac33660046144d9565b6135c1565b348015610ad457600080fd5b50610459610ae33660046143fa565b613876565b348015610af457600080fd5b50610459610b033660046143d8565b6138dc565b348015610b1457600080fd5b50610429610b23366004614534565b600b60209081526000928352604080842090915290825290205460ff1681565b348015610b4f57600080fd5b50610429610b5e366004614534565b600c60209081526000928352604080842090915290825290205460ff1681565b348015610b8a57600080fd5b50610429610b993660046143d8565b60116020526000908152604090205460ff1681565b60098181548110610bbe57600080fd5b6000918252602090912001546001600160a01b0316905081565b606060038054610be7906146d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c13906146d2565b8015610c605780601f10610c3557610100808354040283529160200191610c60565b820191906000526020600020905b815481529060010190602001808311610c4357829003601f168201915b5050505050905090565b600080610c756139e1565b9050610c828185856139eb565b5060019392505050565b3360009081526011602052604090205460ff16610cdf5760405162461bcd60e51b815260206004820152600c60248201526b2737ba10283937b9bab6b2b960a11b60448201526064015b60405180910390fd5b33600090815260136020526040902054600f90610cfe90600190614723565b81548110610d0e57610d0e61473a565b906000526020600020906007020160030160019054906101000a900460ff1615610d6e5760405162461bcd60e51b8152602060048201526011602482015270165bdd48185c994814dd5cdc195b991959607a1b6044820152606401610cd6565b610d783382613b43565b50565b3360009081526011602052604081205460ff16610dc95760405162461bcd60e51b815260206004820152600c60248201526b2737ba10283937b9bab6b2b960a11b6044820152606401610cd6565b33600090815260136020526040902054600f90610de890600190614723565b81548110610df857610df861473a565b906000526020600020906007020160040154905090565b600080610e1a6139e1565b9050610e27858285613c02565b610e32858585613c8e565b506001949350505050565b600080610e486139e1565b9050610c82818585610e8085896001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610e8a9190614750565b6139eb565b600a6000610e9b6139e1565b6001600160a01b0316815260208101919091526040016000205460ff16610ef05760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b6000828152601260209081526040808320546001600160a01b03168352601190915290205460ff16610f645760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420612050726f73756d65720000000000000000000000000000000000006044820152606401610cd6565b6000828152601260209081526040808320546001600160a01b03168352600e909152812090610f916139e1565b6001600160a01b0316815260208101919091526040016000205460ff1615610ffb5760405162461bcd60e51b815260206004820152601360248201527f416c726561647920556e73757370656e646564000000000000000000000000006044820152606401610cd6565b6000828152601260209081526040808320546001600160a01b0316808452600e909252822090916001919061102e6139e1565b6001600160a01b03908116825260208083019390935260409182016000908120805460ff19169515159590951790945584168352600d9091528120906110726139e1565b6001600160a01b0316815260208101919091526040016000205460ff1615611102576001600160a01b0381166000908152600d60205260408120816110b56139e1565b6001600160a01b03908116825260208083019390935260409182016000908120805460ff19169515159590951790945584168352601690915281208054916110fc83614768565b91905055505b6001600160a01b0381166000908152601760205260408120805490826111278361477f565b9190505590506007548111156111e6576001600160a01b038216600090815260176020908152604080832083905560169091528120819055600f61116c600187614723565b8154811061117c5761117c61473a565b6000918252602090912060036007909202010180549115156101000261ff00199092169190911790556001601a6111b38286614723565b815481106111c3576111c361473a565b60009182526020909120600590910201600401805460ff19169115159190911790555b50505050565b600a60006111f86139e1565b6001600160a01b0316815260208101919091526040016000205460ff1661124d5760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b60095460009061125d90476147b0565b905060005b60095481101561133e576000600982815481106112815761128161473a565b60009182526020822001546040516001600160a01b039091169185919081818185875af1925050503d80600081146112d5576040519150601f19603f3d011682016040523d82523d6000602084013e6112da565b606091505b505090508061132b5760405162461bcd60e51b815260206004820152600b60248201527f43616c6c204661696c65640000000000000000000000000000000000000000006044820152606401610cd6565b50806113368161477f565b915050611262565b5050565b601b805461134f906146d2565b80601f016020809104026020016040519081016040528092919081815260200182805461137b906146d2565b80156113c85780601f1061139d576101008083540402835291602001916113c8565b820191906000526020600020905b8154815290600101906020018083116113ab57829003601f168201915b505050505081565b600a60006113dc6139e1565b6001600160a01b0316815260208101919091526040016000205460ff166114315760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b60105481106114825760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420556e617070726f7665642050726f73756d657220494400006044820152606401610cd6565b600c6000601083815481106114995761149961473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906114cf6139e1565b6001600160a01b0316815260208101919091526040016000205460ff161561155f5760405162461bcd60e51b815260206004820152602360248201527f50726f73756d657220416c726561647920646973617070726f7665642062792060448201527f796f7500000000000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600c6000601084815481106115785761157861473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906115ae6139e1565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550600c6000601083815481106115fc576115fc61473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906116326139e1565b6001600160a01b0316815260208101919091526040016000205460ff1615611730576000600b60006010848154811061166d5761166d61473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906116a36139e1565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555060146000601083815481106116f1576116f161473a565b60009182526020808320600160079093020191909101546001600160a01b03168352820192909252604001812080549161172a83614768565b91905055505b600060156000601084815481106117495761174961473a565b60009182526020808320600160079093020191909101546001600160a01b0316835282019290925260400181208054916117828361477f565b91905055905060075481111561133e5761179b82613e7b565b60156000601084815481106117b2576117b261473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120819055601080546014929190859081106117fb576117fb61473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120555050565b601a818154811061183d57600080fd5b9060005260206000209060050201600091509050806000015490806001015490806002015490806003018054611872906146d2565b80601f016020809104026020016040519081016040528092919081815260200182805461189e906146d2565b80156118eb5780601f106118c0576101008083540402835291602001916118eb565b820191906000526020600020905b8154815290600101906020018083116118ce57829003601f168201915b5050506004909301549192505060ff1685565b3360009081526011602052604081205460ff1661194c5760405162461bcd60e51b815260206004820152600c60248201526b2737ba10283937b9bab6b2b960a11b6044820152606401610cd6565b33600090815260136020526040902054600f9061196b90600190614723565b8154811061197b5761197b61473a565b906000526020600020906007020160050154905090565b600f81815481106119a257600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549496506001600160a01b0390931694919360ff8083169461010090930416929088565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015611aad57600084815260209081902060408051610100808201835260078702909301805482526001808201546001600160a01b031683870152600282015493830193909352600381015460ff8082161515606085015294900490931615156080820152600483015460a0820152600583015460c082015260069092015460e08301529083529092019101611a1a565b50505050905090565b6060600a6000611ac46139e1565b6001600160a01b0316815260208101919091526040016000205460ff16611b195760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b6001600160a01b0382166000908152600b6020526040812090611b3a6139e1565b6001600160a01b0316815260208101919091526040016000205460ff1615611b9557505060408051808201909152601181527f50726f73756d657220417070726f766564000000000000000000000000000000602082015290565b6001600160a01b0382166000908152600c6020526040812090611bb66139e1565b6001600160a01b0316815260208101919091526040016000205460ff1615611c1157505060408051808201909152601481527f50726f73756d657220446973617070726f766564000000000000000000000000602082015290565b5060408051808201909152601981527f50726f73756d6572204e6f74205665726966696564205965740000000000000060208201525b919050565b3360009081526011602052604090205460ff16611c9a5760405162461bcd60e51b815260206004820152600c60248201526b2737ba10283937b9bab6b2b960a11b6044820152606401610cd6565b33600090815260136020526040902054600f90611cb990600190614723565b81548110611cc957611cc961473a565b906000526020600020906007020160030160019054906101000a900460ff1615611d295760405162461bcd60e51b8152602060048201526011602482015270165bdd48185c994814dd5cdc195b991959607a1b6044820152606401610cd6565b610d7833826140a0565b905090565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611d8957600080fd5b505afa158015611d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc191906147de565b509195945050505050565b606060048054610be7906146d2565b601081815481106119a257600080fd5b336000908152600a602052604090205460ff1615611e4b5760405162461bcd60e51b815260206004820152601060248201527f596f752061726520616e204f776e6572000000000000000000000000000000006044820152606401610cd6565b600854341015611ec35760405162461bcd60e51b815260206004820152602560248201527f526567697374726174696f6e204661696c65642c20496e73756666696369656e60448201527f74204665650000000000000000000000000000000000000000000000000000006064820152608401610cd6565b3360009081526011602052604090205460ff1615611f495760405162461bcd60e51b815260206004820152602960248201527f596f752061726520616c726561647920612050726f73756d657220696e20746860448201527f65204e6574776f726b00000000000000000000000000000000000000000000006064820152608401610cd6565b611f51614209565b15611fc45760405162461bcd60e51b815260206004820152602b60248201527f596f75206861766520616c72656164792072657175657374656420666f72205260448201527f6567697374726174696f6e0000000000000000000000000000000000000000006064820152608401610cd6565b8060005b8115611fed57611fd9600a836147b0565b915080611fe58161477f565b915050611fc8565b80600c1461203d5760405162461bcd60e51b815260206004820152601b60248201527f456e746572206120313220646967697420416164686172204e6f2e00000000006044820152606401610cd6565b505060408051610100808201835260008083523360208401908152938301948552606083018181526080840182815260a0850183815260c0860184815260e0870185815260108054600181018255965296517f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67260079096029586015596517f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae673850180546001600160a01b0319166001600160a01b0390921691909117905596517f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67484015590517f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67583018054925161ffff1990931691151561ff001916919091179115159093021790915592517f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67684015590517f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae677830155517f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67890910155565b6000806121e66139e1565b6001600160a01b03818116600090815260016020908152604080832093891683529290522054909150838110156122855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610cd6565b610e3282868684036139eb565b60008061229d6139e1565b9050610c82818585613c8e565b600a60006122b66139e1565b6001600160a01b0316815260208101919091526040016000205460ff1661230b5760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b601054811061235c5760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420556e617070726f7665642050726f73756d657220494400006044820152606401610cd6565b600b6000601083815481106123735761237361473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906123a96139e1565b6001600160a01b0316815260208101919091526040016000205460ff16156124135760405162461bcd60e51b815260206004820181905260248201527f50726f73756d657220416c726561647920617070726f76656420627920796f756044820152606401610cd6565b6001600b60006010848154811061242c5761242c61473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906124626139e1565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550600c6000601083815481106124b0576124b061473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906124e66139e1565b6001600160a01b0316815260208101919091526040016000205460ff16156125e4576000600c6000601084815481106125215761252161473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040018120906125576139e1565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555060156000601083815481106125a5576125a561473a565b60009182526020808320600160079093020191909101546001600160a01b0316835282019290925260400181208054916125de83614768565b91905055505b600060146000601084815481106125fd576125fd61473a565b60009182526020808320600160079093020191909101546001600160a01b0316835282019290925260400181208054916126368361477f565b91905055905060075481111561133e5760016010838154811061265b5761265b61473a565b60009182526020909120600790910201600301805460ff1916911515919091179055600f5461268b906001614750565b6010838154811061269e5761269e61473a565b906000526020600020906007020160000181905550600160116000601085815481106126cc576126cc61473a565b60009182526020808320600792909202909101600101546001600160a01b031683528201929092526040019020805460ff191691151591909117905560108054600f9190849081106127205761272061473a565b600091825260208083208454600181810187559585529190932060079283029093018054919092029092019182558281015492820180546001600160a01b0319166001600160a01b03909416939093179092556002808301549082015560038083018054918301805460ff938416151560ff19821681178355925461010090819004909416151590930261ff001990921661ffff199093169290921717905560048083015490820155600580830154908201556006918201549101556127e582613e7b565b600f80546127f590600190614723565b815481106128055761280561473a565b600091825260208083206001600790930201820154600f8054855260129092526040842080546001600160a01b0319166001600160a01b039092169190911790558054926013929091906128599085614723565b815481106128695761286961473a565b60009182526020808320600160079093020191909101546001600160a01b031683528201929092526040019020555050565b3360009081526011602052604081205460ff166128e95760405162461bcd60e51b815260206004820152600c60248201526b2737ba10283937b9bab6b2b960a11b6044820152606401610cd6565b33600090815260136020526040902054600f9061290890600190614723565b815481106129185761291861473a565b906000526020600020906007020160030160019054906101000a900460ff16156129785760405162461bcd60e51b8152602060048201526011602482015270165bdd48185c994814dd5cdc195b991959607a1b6044820152606401610cd6565b33600090815260136020526040902054600f9061299790600190614723565b815481106129a7576129a761473a565b906000526020600020906007020160060154600014612a085760405162461bcd60e51b815260206004820152601e60248201527f596f75206861766520416c7265616479205374616b656420456e6572677900006044820152606401610cd6565b3360009081526013602052604090205483600f612a26600184614723565b81548110612a3657612a3661473a565b906000526020600020906007020160040181905550612a5484614270565b600f612a61600184614723565b81548110612a7157612a7161473a565b600091825260209091206005600790920201015582600f612a93600184614723565b81548110612aa357612aa361473a565b6000918252602090912060066007909202010155601c54612acd906001600160a01b031684612292565b50807f4007ce7dab5a51b53d861f6a858af463890cd224c3b719792961be0e13d482ac600f612afd600184614723565b81548110612b0d57612b0d61473a565b906000526020600020906007020160040154600f600185612b2e9190614723565b81548110612b3e57612b3e61473a565b6000918252602091829020600560079092020101546040805193845291830152810186905260600160405180910390a29392505050565b60116000612b816139e1565b6001600160a01b0316815260208101919091526040016000205460ff16612bea5760405162461bcd60e51b815260206004820152601260248201527f596f75206e6f7420612050726f73756d657200000000000000000000000000006044820152606401610cd6565b6000828152601260209081526040808320546001600160a01b03168352601190915290205460ff16612c5e5760405162461bcd60e51b815260206004820152601660248201527f41636375736564206e6f7420612050726f73756d6572000000000000000000006044820152606401610cd6565b6000828152601260209081526040808320546001600160a01b03168352600d909152812090612c8b6139e1565b6001600160a01b0316815260208101919091526040016000205460ff1615612cf55760405162461bcd60e51b815260206004820152601d60248201527f416363757365642050726f73756d65722069732053757370656e6465640000006044820152606401610cd6565b600d6000612d016139e1565b6001600160a01b0390811682526020808301939093526040918201600090812086825260128552838220549092168152925290205460ff1615612d7a5760405162461bcd60e51b8152602060048201526011602482015270165bdd48185c994814dd5cdc195b991959607a1b6044820152606401610cd6565b6000828152601260209081526040808320546001600160a01b03168352600c909152812090612da76139e1565b6001600160a01b0316815260208101919091526040016000205460ff1615612e115760405162461bcd60e51b815260206004820152601760248201527f50726f73756d657220697320446973617070726f7665640000000000000000006044820152606401610cd6565b600c6000612e1d6139e1565b6001600160a01b0390811682526020808301939093526040918201600090812086825260128552838220549092168152925290205460ff1615612ea25760405162461bcd60e51b815260206004820152601360248201527f596f752061726520446973617070726f766564000000000000000000000000006044820152606401610cd6565b60006040518060a00160405280601a805490506001612ec19190614750565b815260200160136000612ed26139e1565b6001600160a01b03166001600160a01b03168152602001908152602001600020548152602001848152602001838152602001600015158152509050601954601a80549050101561300757601a8054600181018255600091909152815160059091027f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e81019182556020808401517f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63f83015560408401517f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff64083015560608401518051859493612fe6937f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff641909101920190614328565b50608091909101516004909101805460ff191691151591909117905561308f565b80601a60195460185461301a919061482e565b8154811061302a5761302a61473a565b90600052602060002090600502016000820151816000015560208201518160010155604082015181600201556060820151816003019080519060200190613072929190614328565b50608091909101516004909101805460ff19169115159190911790555b60195460185410156130b157601880549060006130ab8361477f565b91905055505b505050565b3360009081526011602052604090205460ff166131045760405162461bcd60e51b815260206004820152600c60248201526b2737ba10283937b9bab6b2b960a11b6044820152606401610cd6565b33600090815260136020526040902054600f9061312390600190614723565b815481106131335761313361473a565b906000526020600020906007020160030160019054906101000a900460ff16156131935760405162461bcd60e51b8152602060048201526011602482015270165bdd48185c994814dd5cdc195b991959607a1b6044820152606401610cd6565b600081600f6131a3600186614723565b815481106131b3576131b361473a565b9060005260206000209060070201600501546131cf9190614842565b9050803410156132215760405162461bcd60e51b815260206004820152601960248201527f4469646e27742073656e6420656e6f756768204d6174696321000000000000006044820152606401610cd6565b600f61322e600185614723565b8154811061323e5761323e61473a565b9060005260206000209060070201600601548211156132c55760405162461bcd60e51b815260206004820152603660248201527f53656c65637465642050726f647563657220646f206861766520656e6f75676860448201527f20456e6f75676820456e657267792042616c616e6365000000000000000000006064820152608401610cd6565b81600f6132d3600186614723565b815481106132e3576132e361473a565b9060005260206000209060070201600601546132ff9190614723565b600f61330c600186614723565b8154811061331c5761331c61473a565b6000918252602090912060066007909202010155601c54613347906001600160a01b03163384613c8e565b6000838152601260205260408082205490516001600160a01b039091169083908381818185875af1925050503d806000811461339f576040519150601f19603f3d011682016040523d82523d6000602084013e6133a4565b606091505b50509050806133f55760405162461bcd60e51b815260206004820152600b60248201527f63616c6c206661696c65640000000000000000000000000000000000000000006044820152606401610cd6565b600f613402600186614723565b815481106134125761341261473a565b60009182526020808320600460079093020191909101543383526013909152604090912054857fa46b53c1e4323dcbd0cc304fa8e1718a9e400f89e5ce26b321e4edb32bfdad0b600f613466600184614723565b815481106134765761347661473a565b906000526020600020906007020160050154876040516134a0929190918252602082015260400190565b60405180910390a450505050565b6060600a60006134bc6139e1565b6001600160a01b0316815260208101919091526040016000205460ff166135115760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b601080546040805160208084028201810190925282815292919060009084018215611aad57600084815260209081902060408051610100808201835260078702909301805482526001808201546001600160a01b031683870152600282015493830193909352600381015460ff8082161515606085015294900490931615156080820152600483015460a0820152600583015460c082015260069092015460e08301529083529092019101611a1a565b600a60006135cd6139e1565b6001600160a01b0316815260208101919091526040016000205460ff166136225760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b6000828152601260209081526040808320546001600160a01b031680845260119092529091205460ff166136985760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420612050726f73756d65720000000000000000000000000000000000006044820152606401610cd6565b6001600160a01b0381166000908152600d60205260408120906136b96139e1565b6001600160a01b0316815260208101919091526040016000205460ff16156137235760405162461bcd60e51b815260206004820152601160248201527f416c72656164792053757370656e6465640000000000000000000000000000006044820152606401610cd6565b6001600160a01b0381166000908152600d602052604081206001916137466139e1565b6001600160a01b03908116825260208083019390935260409182016000908120805460ff19169515159590951790945584168352600e90915281209061378a6139e1565b6001600160a01b0316815260208101919091526040016000205460ff161561381a576001600160a01b0381166000908152600e60205260408120816137cd6139e1565b6001600160a01b03908116825260208083019390935260409182016000908120805460ff191695151595909517909455841683526017909152812080549161381483614768565b91905055505b6001600160a01b03811660009081526016602052604081208054908261383f8361477f565b9190505590506007548111156111e6576001600160a01b0382166000908152601660205260408120556001600f61116c8287614723565b600a60006138826139e1565b6001600160a01b0316815260208101919091526040016000205460ff166138d75760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b600855565b600a60006138e86139e1565b6001600160a01b0316815260208101919091526040016000205460ff1661393d5760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b60005b60095481101561133e576139526139e1565b6001600160a01b03166009828154811061396e5761396e61473a565b6000918252602090912001546001600160a01b031614156139cf57816009828154811061399d5761399d61473a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b806139d98161477f565b915050613940565b6000611d336142f4565b6001600160a01b038316613a665760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600160a01b038216613ae25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216613b995760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610cd6565b8060026000828254613bab9190614750565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146111e65781811015613c815760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610cd6565b6111e684848484036139eb565b6001600160a01b038316613d0a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600160a01b038216613d865760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600160a01b03831660009081526020819052604090205481811015613e155760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36111e6565b600a6000613e876139e1565b6001600160a01b0316815260208101919091526040016000205460ff16613edc5760405162461bcd60e51b81526020600482015260096024820152682737ba1027bbb732b960b91b6044820152606401610cd6565b6010548110613f2d5760405162461bcd60e51b815260206004820181905260248201527f496e76616c696420756e617070726f76656450726f73756d657220496e6465786044820152606401610cd6565b805b601054613f3e90600190614723565b811015614039576010613f52826001614750565b81548110613f6257613f6261473a565b906000526020600020906007020160108281548110613f8357613f8361473a565b60009182526020909120825460079092020190815560018083015490820180546001600160a01b0319166001600160a01b039092169190911790556002808301549082015560038083018054918301805460ff938416151560ff19821681178355925461010090819004909416151590930261ff001990921661ffff19909316929092171790556004808301549082015560058083015490820155600691820154910155806140318161477f565b915050613f2f565b50601080548061404b5761404b614861565b6000828152602081206007600019909301928302018181556001810180546001600160a01b03191690556002810182905560038101805461ffff19169055600481018290556005810182905560060155905550565b6001600160a01b03821661411c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600160a01b038216600090815260208190526040902054818110156141ab5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610cd6565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000805b601054811015614268576010818154811061422a5761422a61473a565b60009182526020909120600790910201600101546001600160a01b031633141561425657600191505090565b806142608161477f565b91505061420d565b506000905090565b3360009081526011602052604081205460ff166142be5760405162461bcd60e51b815260206004820152600c60248201526b2737ba10283937b9bab6b2b960a11b6044820152606401610cd6565b601d82905560006142cd611d38565b90506142d981846147b0565b6142e8906402540be400614842565b601e8190559392505050565b60006014361080159061431157506006546001600160a01b031633145b15614323575060131936013560601c90565b503390565b828054614334906146d2565b90600052602060002090601f016020900481019282614356576000855561439c565b82601f1061436f57805160ff191683800117855561439c565b8280016001018555821561439c579182015b8281111561439c578251825591602001919060010190614381565b506143a89291506143ac565b5090565b5b808211156143a857600081556001016143ad565b80356001600160a01b0381168114611c4757600080fd5b6000602082840312156143ea57600080fd5b6143f3826143c1565b9392505050565b60006020828403121561440c57600080fd5b5035919050565b6000815180845260005b818110156144395760208185018101518683018201520161441d565b8181111561444b576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006143f36020830184614413565b6000806040838503121561448657600080fd5b61448f836143c1565b946020939093013593505050565b6000806000606084860312156144b257600080fd5b6144bb846143c1565b92506144c9602085016143c1565b9150604084013590509250925092565b600080604083850312156144ec57600080fd5b50508035926020909101359150565b85815284602082015283604082015260a06060820152600061452060a0830185614413565b905082151560808301529695505050505050565b6000806040838503121561454757600080fd5b614550836143c1565b915061455e602084016143c1565b90509250929050565b602080825282518282018190526000919060409081850190868401855b828110156145f457815180518552868101516001600160a01b031687860152858101518686015260608082015115159086015260808082015115159086015260a0808201519086015260c0808201519086015260e090810151908501526101009093019290850190600101614584565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561462a57600080fd5b82359150602083013567ffffffffffffffff8082111561464957600080fd5b818501915085601f83011261465d57600080fd5b81358181111561466f5761466f614601565b604051601f8201601f19908116603f0116810190838211818310171561469757614697614601565b816040528281528860208487010111156146b057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c908216806146e657607f821691505b6020821081141561470757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156147355761473561470d565b500390565b634e487b7160e01b600052603260045260246000fd5b600082198211156147635761476361470d565b500190565b6000816147775761477761470d565b506000190190565b60006000198214156147935761479361470d565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826147bf576147bf61479a565b500490565b805169ffffffffffffffffffff81168114611c4757600080fd5b600080600080600060a086880312156147f657600080fd5b6147ff866147c4565b9450602086015193506040860151925060608601519150614822608087016147c4565b90509295509295909350565b60008261483d5761483d61479a565b500690565b600081600019048311821515161561485c5761485c61470d565b500290565b634e487b7160e01b600052603160045260246000fdfea26469706673582212204ddb7c72959aebb404f79b7848bf9c5b49b9e44e26267b40572d7b45e88e09c164736f6c63430008080033","opcodes":"PUSH1 0xA PUSH1 0x19 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH5 0x332E302E3 PUSH1 0xDC SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x2D SWAP2 PUSH1 0x1B SWAP2 SWAP1 PUSH3 0x354 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4E59 CODESIZE SUB DUP1 PUSH3 0x4E59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x5E SWAP2 PUSH3 0x42D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x22B732B93C902A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x15539255 PUSH1 0xE2 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP7 SWAP4 DUP7 SWAP4 DUP7 SWAP4 SWAP1 SWAP3 PUSH3 0xB2 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x354 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xC8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x354 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xD0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA OR SWAP1 SSTORE POP PUSH3 0x118 DUP4 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH3 0x161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DDDB995C9CC814995C5D5A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH3 0x173 JUMPI POP DUP2 MLOAD DUP2 GT ISZERO JUMPDEST PUSH3 0x1CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265717569726564206E756D626572206F66206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x158 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x332 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x1EF JUMPI PUSH3 0x1EF PUSH3 0x51F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x24E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x158 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x2B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E6572206973206E6F7420756E6971756500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x158 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0x329 DUP2 PUSH3 0x535 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1CE JUMP JUMPDEST POP PUSH1 0x7 SSTORE POP POP PUSH1 0x1C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND ADDRESS OR SWAP1 SSTORE POP PUSH3 0x59C SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x362 SWAP1 PUSH3 0x55F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x386 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x3D1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3A1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3D1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3D1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3D1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3B4 JUMP JUMPDEST POP PUSH3 0x3DF SWAP3 SWAP2 POP PUSH3 0x3E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3DF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3E4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x44E DUP5 PUSH3 0x3FA JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD SWAP2 SWAP5 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x498 JUMPI PUSH3 0x498 PUSH3 0x417 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x4C0 JUMPI PUSH3 0x4C0 PUSH3 0x417 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP11 DUP4 GT ISZERO PUSH3 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x508 JUMPI PUSH3 0x4F8 DUP6 PUSH3 0x3FA JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x4E4 JUMP JUMPDEST DUP1 SWAP8 POP POP POP POP POP POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x558 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x574 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x596 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48AD DUP1 PUSH3 0x5AC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B78BC6B GT PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC7A7275E GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE706D568 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAE8 JUMPI DUP1 PUSH4 0xF4B16045 EQ PUSH2 0xB08 JUMPI DUP1 PUSH4 0xF85BAE78 EQ PUSH2 0xB43 JUMPI DUP1 PUSH4 0xFDBD2E8B EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE706D568 EQ PUSH2 0xA93 JUMPI DUP1 PUSH4 0xE7E4F9D9 EQ PUSH2 0xAA8 JUMPI DUP1 PUSH4 0xE814DB59 EQ PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCDB6D52D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xCDB6D52D EQ PUSH2 0xA06 JUMPI DUP1 PUSH4 0xCE1B815F EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0xA37 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC7A7275E EQ PUSH2 0x9A6 JUMPI DUP1 PUSH4 0xC8A9FB5E EQ PUSH2 0x9C6 JUMPI DUP1 PUSH4 0xC8B6BA49 EQ PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x90F8BA3C GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x9C01A6DF GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x9C01A6DF EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x9FF34115 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x966 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x90F8BA3C EQ PUSH2 0x8C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x9A9DDD16 EQ PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BDA812F GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8BDA812F EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x863 JUMPI DUP1 PUSH4 0x8FAC6371 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x8FFF20F3 EQ PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B78BC6B EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x7FB400F9 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0x83AE0367 EQ PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x476343EE GT PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x572B6C05 GT PUSH2 0x23E JUMPI DUP1 PUSH4 0x66CC771F GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x66CC771F EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x766 JUMPI DUP1 PUSH4 0x73DE8CE8 EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0x75AE81B3 EQ PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0x5F81B606 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x612536FC EQ PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EA30B2F GT PUSH2 0x27A JUMPI DUP1 PUSH4 0x4EA30B2F EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0x4EC9DD8D EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x4EF8AB77 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x50A7AC25 EQ PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x476343EE EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x486FF0CD EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x4CA46D19 EQ PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x30D JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x3628C333 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x40CB3342 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x349 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB6D83E2 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xE264F80 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x143859EB EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x1CFDCE EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xD7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x449D JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54D PUSH1 0x1C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SELFBALANCE SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0xE8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x11EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x1342 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60C PUSH2 0x607 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x18FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x652 PUSH2 0x64D CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x6C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x6F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x4567 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x754 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x781 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x7CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH2 0x1AB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x828 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1C4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER BALANCE PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x1D38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH2 0x893 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x8DF CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x1DCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x921 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x652 PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x459 PUSH2 0x961 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x981 CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0x21DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x9A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0x2292 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x9E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0x289B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA01 CALLDATASIZE PUSH1 0x4 PUSH2 0x4617 JUMP JUMPDEST PUSH2 0x2B75 JUMP JUMPDEST PUSH2 0x459 PUSH2 0xA14 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0x30B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xA68 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH2 0x34AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0x35C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x3876 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xB03 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH2 0x38DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB23 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB5E CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB99 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xBE7 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC13 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC75 PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP6 DUP6 PUSH2 0x39EB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0xCFE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD0E JUMPI PUSH2 0xD0E PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xD78 CALLER DUP3 PUSH2 0x3B43 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0xDE8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xDF8 JUMPI PUSH2 0xDF8 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE1A PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE27 DUP6 DUP3 DUP6 PUSH2 0x3C02 JUMP JUMPDEST PUSH2 0xE32 DUP6 DUP6 DUP6 PUSH2 0x3C8E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE48 PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP6 DUP6 PUSH2 0xE80 DUP6 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x4750 JUMP JUMPDEST PUSH2 0x39EB JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0xE9B PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0xF91 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920556E73757370656E64656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x102E PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x1072 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x10B5 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x16 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x10FC DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x1127 DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x16 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0xF PUSH2 0x116C PUSH1 0x1 DUP8 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x117C JUMPI PUSH2 0x117C PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1A PUSH2 0x11B3 DUP3 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x11C3 JUMPI PUSH2 0x11C3 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x11F8 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x125D SWAP1 SELFBALANCE PUSH2 0x47B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x133E JUMPI PUSH1 0x0 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1281 JUMPI PUSH2 0x1281 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x132B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST POP DUP1 PUSH2 0x1336 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1262 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH2 0x134F SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x137B SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x139D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x13DC PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0x1482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x14CF PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920646973617070726F76656420627920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x796F750000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1578 JUMPI PUSH2 0x1578 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x15AE PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15FC JUMPI PUSH2 0x15FC PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1632 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x166D JUMPI PUSH2 0x166D PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x16A3 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16F1 JUMPI PUSH2 0x16F1 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x172A DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1749 JUMPI PUSH2 0x1749 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1782 DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x133E JUMPI PUSH2 0x179B DUP3 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x17B2 JUMPI PUSH2 0x17B2 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x14 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x17FB JUMPI PUSH2 0x17FB PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1A DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x183D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1872 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x189E SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x194C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x196B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x197B JUMPI PUSH2 0x197B PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP3 SWAP1 DUP9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A1A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 PUSH2 0x1AC4 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1B3A PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B95 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH32 0x50726F73756D657220417070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1BB6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C11 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH32 0x50726F73756D657220446973617070726F766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x50726F73756D6572204E6F742056657269666965642059657400000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1C9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x1CB9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CC9 JUMPI PUSH2 0x1CC9 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xD78 CALLER DUP3 PUSH2 0x40A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DC1 SWAP2 SWAP1 PUSH2 0x47DE JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBE7 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616E204F776E657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0x1EC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E204661696C65642C20496E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420466565000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C726561647920612050726F73756D657220696E207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65204E6574776F726B0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x1F51 PUSH2 0x4209 JUMP JUMPDEST ISZERO PUSH2 0x1FC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C72656164792072657175657374656420666F722052 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6567697374726174696F6E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1FED JUMPI PUSH2 0x1FD9 PUSH1 0xA DUP4 PUSH2 0x47B0 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1FE5 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FC8 JUMP JUMPDEST DUP1 PUSH1 0xC EQ PUSH2 0x203D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E746572206120313220646967697420416164686172204E6F2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP5 DUP2 MSTORE PUSH1 0xE0 DUP8 ADD DUP6 DUP2 MSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP7 MSTORE SWAP7 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 PUSH1 0x7 SWAP1 SWAP7 MUL SWAP6 DUP7 ADD SSTORE SWAP7 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE673 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP7 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE674 DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE675 DUP4 ADD DUP1 SLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP2 ISZERO ISZERO SWAP1 SWAP4 MUL OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE676 DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE677 DUP4 ADD SSTORE MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE678 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21E6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 DUP2 LT ISZERO PUSH2 0x2285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xE32 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x39EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x229D PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP6 DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x22B6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x230B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0x235C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2373 JUMPI PUSH2 0x2373 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x23A9 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920617070726F76656420627920796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x242C JUMPI PUSH2 0x242C PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x2462 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24B0 JUMPI PUSH2 0x24B0 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x24E6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x25E4 JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2521 JUMPI PUSH2 0x2521 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x2557 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25A5 JUMPI PUSH2 0x25A5 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x25DE DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x25FD JUMPI PUSH2 0x25FD PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2636 DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x133E JUMPI PUSH1 0x1 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x265B JUMPI PUSH2 0x265B PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xF SLOAD PUSH2 0x268B SWAP1 PUSH1 0x1 PUSH2 0x4750 JUMP JUMPDEST PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x269E JUMPI PUSH2 0x269E PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x11 PUSH1 0x0 PUSH1 0x10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x26CC JUMPI PUSH2 0x26CC PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x7 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0xF SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2720 JUMPI PUSH2 0x2720 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP8 SSTORE SWAP6 DUP6 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 PUSH1 0x7 SWAP3 DUP4 MUL SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP2 DUP3 SSTORE DUP3 DUP2 ADD SLOAD SWAP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0x27E5 DUP3 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x27F5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2805 JUMPI PUSH2 0x2805 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0xF DUP1 SLOAD DUP6 MSTORE PUSH1 0x12 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0x13 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2859 SWAP1 DUP6 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2869 JUMPI PUSH2 0x2869 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x28E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x2908 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2918 JUMPI PUSH2 0x2918 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x2997 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29A7 JUMPI PUSH2 0x29A7 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD PUSH1 0x0 EQ PUSH2 0x2A08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520416C7265616479205374616B656420456E657267790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 PUSH1 0xF PUSH2 0x2A26 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2A36 JUMPI PUSH2 0x2A36 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2A54 DUP5 PUSH2 0x4270 JUMP JUMPDEST PUSH1 0xF PUSH2 0x2A61 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2A71 JUMPI PUSH2 0x2A71 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE DUP3 PUSH1 0xF PUSH2 0x2A93 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2AA3 JUMPI PUSH2 0x2AA3 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1C SLOAD PUSH2 0x2ACD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2292 JUMP JUMPDEST POP DUP1 PUSH32 0x4007CE7DAB5A51B53D861F6A858AF463890CD224C3B719792961BE0E13D482AC PUSH1 0xF PUSH2 0x2AFD PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2B0D JUMPI PUSH2 0x2B0D PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0xF PUSH1 0x1 DUP6 PUSH2 0x2B2E SWAP2 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2B3E JUMPI PUSH2 0x2B3E PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD MSTORE DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 PUSH2 0x2B81 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2BEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E6F7420612050726F73756D65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2C5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41636375736564206E6F7420612050726F73756D657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2C8B PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2CF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363757365642050726F73756D65722069732053757370656E646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 PUSH2 0x2D01 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x12 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2DA7 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2E11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220697320446973617070726F766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 PUSH2 0x2E1D PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x12 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2EA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520446973617070726F76656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH2 0x2EC1 SWAP2 SWAP1 PUSH2 0x4750 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x13 PUSH1 0x0 PUSH2 0x2ED2 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x19 SLOAD PUSH1 0x1A DUP1 SLOAD SWAP1 POP LT ISZERO PUSH2 0x3007 JUMPI PUSH1 0x1A DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x5 SWAP1 SWAP2 MUL PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF63E DUP2 ADD SWAP2 DUP3 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF63F DUP4 ADD SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF640 DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH2 0x2FE6 SWAP4 PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF641 SWAP1 SWAP2 ADD SWAP3 ADD SWAP1 PUSH2 0x4328 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x308F JUMP JUMPDEST DUP1 PUSH1 0x1A PUSH1 0x19 SLOAD PUSH1 0x18 SLOAD PUSH2 0x301A SWAP2 SWAP1 PUSH2 0x482E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x302A JUMPI PUSH2 0x302A PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3072 SWAP3 SWAP2 SWAP1 PUSH2 0x4328 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x18 SLOAD LT ISZERO PUSH2 0x30B1 JUMPI PUSH1 0x18 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x30AB DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x3123 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3133 JUMPI PUSH2 0x3133 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF PUSH2 0x31A3 PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x31B3 JUMPI PUSH2 0x31B3 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD PUSH2 0x31CF SWAP2 SWAP1 PUSH2 0x4842 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x3221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469646E27742073656E6420656E6F756768204D617469632100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xF PUSH2 0x322E PUSH1 0x1 DUP6 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x323E JUMPI PUSH2 0x323E PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD DUP3 GT ISZERO PUSH2 0x32C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C65637465642050726F647563657220646F206861766520656E6F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20456E6F75676820456E657267792042616C616E636500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP2 PUSH1 0xF PUSH2 0x32D3 PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x32E3 JUMPI PUSH2 0x32E3 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x32FF SWAP2 SWAP1 PUSH2 0x4723 JUMP JUMPDEST PUSH1 0xF PUSH2 0x330C PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x331C JUMPI PUSH2 0x331C PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1C SLOAD PUSH2 0x3347 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x3C8E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x339F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xF PUSH2 0x3402 PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3412 JUMPI PUSH2 0x3412 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x13 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP6 PUSH32 0xA46B53C1E4323DCBD0CC304FA8E1718A9E400F89E5CE26B321E4EDB32BFDAD0B PUSH1 0xF PUSH2 0x3466 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3476 JUMPI PUSH2 0x3476 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0x34A0 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 PUSH2 0x34BC PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x35CD PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x36B9 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792053757370656E646564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 PUSH2 0x3746 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x378A PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x381A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x37CD PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x17 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x3814 DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x383F DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xF PUSH2 0x116C DUP3 DUP8 PUSH2 0x4723 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x3882 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x38D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x38E8 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x393D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x133E JUMPI PUSH2 0x3952 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x396E JUMPI PUSH2 0x396E PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x39CF JUMPI DUP2 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x399D JUMPI PUSH2 0x399D PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x39D9 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3940 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D33 PUSH2 0x42F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3AE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3BAB SWAP2 SWAP1 PUSH2 0x4750 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x11E6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3C81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x11E6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x39EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3D0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3E15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x3E87 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3EDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0x3F2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420756E617070726F76656450726F73756D657220496E646578 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x3F3E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x4039 JUMPI PUSH1 0x10 PUSH2 0x3F52 DUP3 PUSH1 0x1 PUSH2 0x4750 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3F62 JUMPI PUSH2 0x3F62 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x10 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F83 JUMPI PUSH2 0x3F83 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x4031 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3F2F JUMP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD DUP1 PUSH2 0x404B JUMPI PUSH2 0x404B PUSH2 0x4861 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x7 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x411C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x41AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x4268 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422A JUMPI PUSH2 0x422A PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x4256 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x4260 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x420D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x42BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1D DUP3 SWAP1 SSTORE PUSH1 0x0 PUSH2 0x42CD PUSH2 0x1D38 JUMP JUMPDEST SWAP1 POP PUSH2 0x42D9 DUP2 DUP5 PUSH2 0x47B0 JUMP JUMPDEST PUSH2 0x42E8 SWAP1 PUSH5 0x2540BE400 PUSH2 0x4842 JUMP JUMPDEST PUSH1 0x1E DUP2 SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 CALLDATASIZE LT DUP1 ISZERO SWAP1 PUSH2 0x4311 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0x4323 JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4334 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4356 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x439C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x436F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x439C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x439C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x439C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4381 JUMP JUMPDEST POP PUSH2 0x43A8 SWAP3 SWAP2 POP PUSH2 0x43AC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x43A8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x43AD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43F3 DUP3 PUSH2 0x43C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x440C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4439 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x441D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x444B JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x43F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4413 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x448F DUP4 PUSH2 0x43C1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44BB DUP5 PUSH2 0x43C1 JUMP JUMPDEST SWAP3 POP PUSH2 0x44C9 PUSH1 0x20 DUP6 ADD PUSH2 0x43C1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4520 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x4413 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4550 DUP4 PUSH2 0x43C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x455E PUSH1 0x20 DUP5 ADD PUSH2 0x43C1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45F4 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4584 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x462A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x465D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x466F JUMPI PUSH2 0x466F PUSH2 0x4601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4697 JUMPI PUSH2 0x4697 PUSH2 0x4601 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x46B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x46E6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4707 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4735 JUMPI PUSH2 0x4735 PUSH2 0x470D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4763 JUMPI PUSH2 0x4763 PUSH2 0x470D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4777 JUMPI PUSH2 0x4777 PUSH2 0x470D JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4793 JUMPI PUSH2 0x4793 PUSH2 0x470D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x47BF JUMPI PUSH2 0x47BF PUSH2 0x479A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x47F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47FF DUP7 PUSH2 0x47C4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x4822 PUSH1 0x80 DUP8 ADD PUSH2 0x47C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x483D JUMPI PUSH2 0x483D PUSH2 0x479A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x485C JUMPI PUSH2 0x485C PUSH2 0x470D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xDB PUSH29 0x72959AEBB404F79B7848BF9C5B49B9E44E26267B40572D7B45E88E09C1 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"2058:2:24:-:0;2028:32;;2881:40;156:6002:23;2881:40:24;;156:6002:23;2881:40:24;;;-1:-1:-1;;;2881:40:24;;;;;;;;;;:::i;:::-;;467:198:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:15;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;;2042:13;;586:9:23;;597:7;;606:9;;1976:113:15;;2042:13;;:5;;:13;:::i;:::-;-1:-1:-1;2065:17:15;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;385:9:25;:77;;-1:-1:-1;;;;;;385:77:25;419:42;385:77;;;-1:-1:-1;2265:31:24;2286:9;1212:17:2;:30;;-1:-1:-1;;;;;;1212:30:2;-1:-1:-1;;;;;1212:30:2;;;;;;;;;;1143:106;2265:31:24;2429:1;2412:7;:14;:18;2404:46;;;;-1:-1:-1;;;2404:46:24;;1810:2:27;2404:46:24;;;1792:21:27;1849:2;1829:18;;;1822:30;-1:-1:-1;;;1868:18:27;;;1861:45;1923:18;;2404:46:24;;;;;;;;;2480:1;2468:9;:13;:44;;;;;2498:7;:14;2485:9;:27;;2468:44;2460:90;;;;-1:-1:-1;;;2460:90:24;;2154:2:27;2460:90:24;;;2136:21:27;2193:2;2173:18;;;2166:30;2232:34;2212:18;;;2205:62;-1:-1:-1;;;2283:18:27;;;2276:31;2324:19;;2460:90:24;1952:397:27;2460:90:24;2566:6;2561:277;2578:7;:14;2574:1;:18;2561:277;;;2613:13;2629:7;2637:1;2629:10;;;;;;;;:::i;:::-;;;;;;;2613:26;;2678:1;-1:-1:-1;;;;;2661:19:24;:5;-1:-1:-1;;;;;2661:19:24;;;2653:45;;;;-1:-1:-1;;;2653:45:24;;2688:2:27;2653:45:24;;;2670:21:27;2727:2;2707:18;;;2700:30;-1:-1:-1;;;2746:18:27;;;2739:43;2799:18;;2653:45:24;2486:337:27;2653:45:24;-1:-1:-1;;;;;2721:14:24;;;;;;:7;:14;;;;;;;;2720:15;2712:47;;;;-1:-1:-1;;;2712:47:24;;3030:2:27;2712:47:24;;;3012:21:27;3069:2;3049:18;;;3042:30;3108:21;3088:18;;;3081:49;3147:18;;2712:47:24;2828:343:27;2712:47:24;-1:-1:-1;;;;;2774:14:24;;;;;:7;:14;;;;;:21;;-1:-1:-1;;2774:21:24;2791:4;2774:21;;;;;;2809:6;:18;;;;;;;;;;;;;;-1:-1:-1;;;;;;2809:18:24;;;;;;2594:3;;;;:::i;:::-;;;;2561:277;;;-1:-1:-1;2848:8:24;:20;-1:-1:-1;;628:13:23::1;:29:::0;;-1:-1:-1;;;;;;628:29:23::1;652:4;628:29;::::0;;-1:-1:-1;156:6002:23;;-1:-1:-1;;156:6002:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:6002:23;;;-1:-1:-1;156:6002:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:27;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1275;441:6;449;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:40;579:9;549:40;:::i;:::-;608:2;639:18;;;633:25;539:50;;-1:-1:-1;608:2:27;-1:-1:-1;;;;;707:14:27;;;704:34;;;734:1;731;724:12;704:34;772:6;761:9;757:22;747:32;;817:7;810:4;806:2;802:13;798:27;788:55;;839:1;836;829:12;788:55;868:2;862:9;890:2;886;883:10;880:36;;;896:18;;:::i;:::-;942:2;939:1;935:10;974:2;968:9;1037:2;1033:7;1028:2;1024;1020:11;1016:25;1008:6;1004:38;1092:6;1080:10;1077:22;1072:2;1060:10;1057:18;1054:46;1051:72;;;1103:18;;:::i;:::-;1139:2;1132:22;1189:18;;;1223:15;;;;-1:-1:-1;1265:11:27;;;1261:20;;;1293:19;;;1290:39;;;1325:1;1322;1315:12;1290:39;1349:11;;;;1369:159;1385:6;1380:3;1377:15;1369:159;;;1451:34;1481:3;1451:34;:::i;:::-;1439:47;;1402:12;;;;1506;;;;1369:159;;;1547:6;1537:16;;;;;;;;1593:2;1582:9;1578:18;1572:25;1562:35;;328:1275;;;;;:::o;2354:127::-;2415:10;2410:3;2406:20;2403:1;2396:31;2446:4;2443:1;2436:15;2470:4;2467:1;2460:15;3176:232;3215:3;-1:-1:-1;;3236:17:27;;3233:140;;;3295:10;3290:3;3286:20;3283:1;3276:31;3330:4;3327:1;3320:15;3358:4;3355:1;3348:15;3233:140;-1:-1:-1;3400:1:27;3389:13;;3176:232::o;3413:380::-;3492:1;3488:12;;;;3535;;;3556:61;;3610:4;3602:6;3598:17;3588:27;;3556:61;3663:2;3655:6;3652:14;3632:18;3629:38;3626:161;;;3709:10;3704:3;3700:20;3697:1;3690:31;3744:4;3741:1;3734:15;3772:4;3769:1;3762:15;3626:161;;3413:380;;;:::o;:::-;156:6002:23;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ApprovedProsumers_3836":{"entryPoint":6546,"id":3836,"parameterSlots":0,"returnSlots":0},"@DisApproveProsumer_OwnerSpecific_4599":{"entryPoint":5072,"id":4599,"parameterSlots":1,"returnSlots":0},"@_afterTokenTransfer_2950":{"entryPoint":null,"id":2950,"parameterSlots":3,"returnSlots":0},"@_approve_2885":{"entryPoint":14827,"id":2885,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_2939":{"entryPoint":null,"id":2939,"parameterSlots":3,"returnSlots":0},"@_burn_2840":{"entryPoint":16544,"id":2840,"parameterSlots":2,"returnSlots":0},"@_mint_2768":{"entryPoint":15171,"id":2768,"parameterSlots":2,"returnSlots":0},"@_msgSender_3395":{"entryPoint":14817,"id":3395,"parameterSlots":0,"returnSlots":1},"@_msgSender_511":{"entryPoint":17140,"id":511,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2928":{"entryPoint":15362,"id":2928,"parameterSlots":3,"returnSlots":0},"@_transfer_2711":{"entryPoint":15502,"id":2711,"parameterSlots":3,"returnSlots":0},"@allowance_2506":{"entryPoint":null,"id":2506,"parameterSlots":2,"returnSlots":1},"@approvalCount_3856":{"entryPoint":null,"id":3856,"parameterSlots":0,"returnSlots":0},"@approveProsumer_OwnerSpecific_4490":{"entryPoint":8874,"id":4490,"parameterSlots":1,"returnSlots":0},"@approve_2531":{"entryPoint":3178,"id":2531,"parameterSlots":2,"returnSlots":1},"@approved_3797":{"entryPoint":null,"id":3797,"parameterSlots":0,"returnSlots":0},"@balanceOf_2463":{"entryPoint":null,"id":2463,"parameterSlots":1,"returnSlots":1},"@burnEnergy_3638":{"entryPoint":7244,"id":3638,"parameterSlots":1,"returnSlots":0},"@buyEnergy_3744":{"entryPoint":12470,"id":3744,"parameterSlots":2,"returnSlots":0},"@complainCount_3881":{"entryPoint":null,"id":3881,"parameterSlots":0,"returnSlots":0},"@complains_3888":{"entryPoint":6189,"id":3888,"parameterSlots":0,"returnSlots":0},"@decimals_2439":{"entryPoint":null,"id":2439,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2634":{"entryPoint":8667,"id":2634,"parameterSlots":2,"returnSlots":1},"@deleteElementFrom_UnApprovedProsumers_4279":{"entryPoint":15995,"id":4279,"parameterSlots":1,"returnSlots":0},"@disapprovalCount_3860":{"entryPoint":null,"id":3860,"parameterSlots":0,"returnSlots":0},"@disapproved_3803":{"entryPoint":null,"id":3803,"parameterSlots":0,"returnSlots":0},"@getLatestPrice_4938":{"entryPoint":7480,"id":4938,"parameterSlots":0,"returnSlots":1},"@getTrustedForwarder_460":{"entryPoint":null,"id":460,"parameterSlots":0,"returnSlots":1},"@increaseAllowance_2593":{"entryPoint":3645,"id":2593,"parameterSlots":2,"returnSlots":1},"@isOwner_3791":{"entryPoint":null,"id":3791,"parameterSlots":0,"returnSlots":0},"@isProsumer_3844":{"entryPoint":null,"id":3844,"parameterSlots":0,"returnSlots":0},"@isRequested_4011":{"entryPoint":16905,"id":4011,"parameterSlots":0,"returnSlots":1},"@isTrustedForwarder_484":{"entryPoint":null,"id":484,"parameterSlots":1,"returnSlots":1},"@listEnergy_3570":{"entryPoint":10395,"id":3570,"parameterSlots":2,"returnSlots":1},"@maxComplains_3884":{"entryPoint":null,"id":3884,"parameterSlots":0,"returnSlots":0},"@mySetUnitPrice_Matic_3588":{"entryPoint":6398,"id":3588,"parameterSlots":0,"returnSlots":1},"@mySetUnitPrice_USD_3606":{"entryPoint":3451,"id":3606,"parameterSlots":0,"returnSlots":1},"@name_2419":{"entryPoint":3032,"id":2419,"parameterSlots":0,"returnSlots":1},"@owners_3787":{"entryPoint":2990,"id":3787,"parameterSlots":0,"returnSlots":0},"@produceEnergy_3622":{"entryPoint":3212,"id":3622,"parameterSlots":1,"returnSlots":0},"@prosumerAddress_3848":{"entryPoint":null,"id":3848,"parameterSlots":0,"returnSlots":0},"@prosumerID_3852":{"entryPoint":null,"id":3852,"parameterSlots":0,"returnSlots":0},"@raiseComplain_4221":{"entryPoint":11125,"id":4221,"parameterSlots":2,"returnSlots":0},"@regFee_3784":{"entryPoint":null,"id":3784,"parameterSlots":0,"returnSlots":0},"@req_Registration_4098":{"entryPoint":7659,"id":4098,"parameterSlots":1,"returnSlots":0},"@required_3782":{"entryPoint":null,"id":3782,"parameterSlots":0,"returnSlots":0},"@setRegFee_4233":{"entryPoint":14454,"id":4233,"parameterSlots":1,"returnSlots":0},"@setUnitPrice_3480":{"entryPoint":17008,"id":3480,"parameterSlots":1,"returnSlots":1},"@showApprovalStatus_OwnerSpecific_4337":{"entryPoint":6838,"id":4337,"parameterSlots":1,"returnSlots":1},"@show_Approved_Prosumers_4301":{"entryPoint":6646,"id":4301,"parameterSlots":0,"returnSlots":1},"@show_Unapproved_Prosumers_4291":{"entryPoint":13486,"id":4291,"parameterSlots":0,"returnSlots":1},"@suspendProsumer_4699":{"entryPoint":13761,"id":4699,"parameterSlots":2,"returnSlots":0},"@suspended_3809":{"entryPoint":null,"id":3809,"parameterSlots":0,"returnSlots":0},"@suspensionCount_3864":{"entryPoint":null,"id":3864,"parameterSlots":0,"returnSlots":0},"@symbol_2429":{"entryPoint":7628,"id":2429,"parameterSlots":0,"returnSlots":1},"@totalSupply_2449":{"entryPoint":null,"id":2449,"parameterSlots":0,"returnSlots":1},"@transferFrom_2564":{"entryPoint":3599,"id":2564,"parameterSlots":3,"returnSlots":1},"@transferOwnership_4893":{"entryPoint":14556,"id":4893,"parameterSlots":1,"returnSlots":0},"@transfer_2488":{"entryPoint":8850,"id":2488,"parameterSlots":2,"returnSlots":1},"@unApprovedProsumers_3840":{"entryPoint":7643,"id":3840,"parameterSlots":0,"returnSlots":0},"@unSuspendProsumer_4808":{"entryPoint":3727,"id":4808,"parameterSlots":2,"returnSlots":0},"@unSuspended_3815":{"entryPoint":null,"id":3815,"parameterSlots":0,"returnSlots":0},"@unSuspensionCount_3868":{"entryPoint":null,"id":3868,"parameterSlots":0,"returnSlots":0},"@versionRecipient_3978":{"entryPoint":4930,"id":3978,"parameterSlots":0,"returnSlots":0},"@viewEnergyBalance_3447":{"entryPoint":null,"id":3447,"parameterSlots":0,"returnSlots":1},"@viewEscrowBalance_3426":{"entryPoint":null,"id":3426,"parameterSlots":0,"returnSlots":2},"@viewMaticBalance_3436":{"entryPoint":null,"id":3436,"parameterSlots":0,"returnSlots":1},"@withdrawFees_4857":{"entryPoint":4588,"id":4857,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":17345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":17368,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":17716,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":17565,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":17523,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":17402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":17943,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":17625,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":18398,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint80_fromMemory":{"entryPoint":18372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":17427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0476f23c45f458c311a526706d6b90266147c599bd68d096e25488defac32084__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_10216fcf0b608737c9ebd44549ab7662b45b101bcf0a8f821aa113c9c83feca1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f0cc6fc952c56e6e0909ccf835e416a9db4dc9d89e8680085ce7505b6972f36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d40a0a793d1534782b36c5b5b02ddf47716308d2c0e8957bd017161181464636__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":17659,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":18256,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":18352,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":18498,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18211,"id":null,"parameterSlots":2,"returnSlots":1},"decrement_t_uint256":{"entryPoint":18280,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18130,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18303,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":18478,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18189,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":18330,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":18529,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18234,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":17921,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23773:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:27","statements":[{"nodeType":"YulAssignment","src":"73:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:27"},"nodeType":"YulFunctionCall","src":"82:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:27"}]},{"body":{"nodeType":"YulBlock","src":"188:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:27"},"nodeType":"YulFunctionCall","src":"190:12:27"},"nodeType":"YulExpressionStatement","src":"190:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:27"},"nodeType":"YulFunctionCall","src":"131:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:27"},"nodeType":"YulFunctionCall","src":"121:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:27"},"nodeType":"YulFunctionCall","src":"114:73:27"},"nodeType":"YulIf","src":"111:93:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:27","type":""}],"src":"14:196:27"},{"body":{"nodeType":"YulBlock","src":"285:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"331:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"340:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"343:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"333:6:27"},"nodeType":"YulFunctionCall","src":"333:12:27"},"nodeType":"YulExpressionStatement","src":"333:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"306:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"315:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"302:3:27"},"nodeType":"YulFunctionCall","src":"302:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"327:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"298:3:27"},"nodeType":"YulFunctionCall","src":"298:32:27"},"nodeType":"YulIf","src":"295:52:27"},{"nodeType":"YulAssignment","src":"356:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"385:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"366:18:27"},"nodeType":"YulFunctionCall","src":"366:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"356:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"251:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"262:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"274:6:27","type":""}],"src":"215:186:27"},{"body":{"nodeType":"YulBlock","src":"507:76:27","statements":[{"nodeType":"YulAssignment","src":"517:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"529:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:27"},"nodeType":"YulFunctionCall","src":"525:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"517:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"570:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"552:6:27"},"nodeType":"YulFunctionCall","src":"552:25:27"},"nodeType":"YulExpressionStatement","src":"552:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"476:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"487:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"498:4:27","type":""}],"src":"406:177:27"},{"body":{"nodeType":"YulBlock","src":"658:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"704:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"713:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"716:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"706:6:27"},"nodeType":"YulFunctionCall","src":"706:12:27"},"nodeType":"YulExpressionStatement","src":"706:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"679:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"688:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"675:3:27"},"nodeType":"YulFunctionCall","src":"675:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"700:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"671:3:27"},"nodeType":"YulFunctionCall","src":"671:32:27"},"nodeType":"YulIf","src":"668:52:27"},{"nodeType":"YulAssignment","src":"729:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"752:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"739:12:27"},"nodeType":"YulFunctionCall","src":"739:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"729:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"624:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"635:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"647:6:27","type":""}],"src":"588:180:27"},{"body":{"nodeType":"YulBlock","src":"874:125:27","statements":[{"nodeType":"YulAssignment","src":"884:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"896:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"907:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"892:3:27"},"nodeType":"YulFunctionCall","src":"892:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"884:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"926:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"941:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"949:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"937:3:27"},"nodeType":"YulFunctionCall","src":"937:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"919:6:27"},"nodeType":"YulFunctionCall","src":"919:74:27"},"nodeType":"YulExpressionStatement","src":"919:74:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"843:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"854:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"865:4:27","type":""}],"src":"773:226:27"},{"body":{"nodeType":"YulBlock","src":"1054:422:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1064:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1084:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1078:5:27"},"nodeType":"YulFunctionCall","src":"1078:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1068:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1106:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1111:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1099:6:27"},"nodeType":"YulFunctionCall","src":"1099:19:27"},"nodeType":"YulExpressionStatement","src":"1099:19:27"},{"nodeType":"YulVariableDeclaration","src":"1127:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1136:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1131:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1198:110:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1212:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1222:4:27","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1216:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1254:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1259:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1250:3:27"},"nodeType":"YulFunctionCall","src":"1250:11:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1263:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1246:3:27"},"nodeType":"YulFunctionCall","src":"1246:20:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1282:5:27"},{"name":"i","nodeType":"YulIdentifier","src":"1289:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:27"},"nodeType":"YulFunctionCall","src":"1278:13:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1293:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:27"},"nodeType":"YulFunctionCall","src":"1274:22:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1268:5:27"},"nodeType":"YulFunctionCall","src":"1268:29:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1239:6:27"},"nodeType":"YulFunctionCall","src":"1239:59:27"},"nodeType":"YulExpressionStatement","src":"1239:59:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1157:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1160:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1154:2:27"},"nodeType":"YulFunctionCall","src":"1154:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1168:21:27","statements":[{"nodeType":"YulAssignment","src":"1170:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1179:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1182:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1175:3:27"},"nodeType":"YulFunctionCall","src":"1175:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1170:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1150:3:27","statements":[]},"src":"1146:162:27"},{"body":{"nodeType":"YulBlock","src":"1342:62:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1371:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1376:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:27"},"nodeType":"YulFunctionCall","src":"1367:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1385:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1363:3:27"},"nodeType":"YulFunctionCall","src":"1363:27:27"},{"kind":"number","nodeType":"YulLiteral","src":"1392:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1356:6:27"},"nodeType":"YulFunctionCall","src":"1356:38:27"},"nodeType":"YulExpressionStatement","src":"1356:38:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1323:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1326:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1320:2:27"},"nodeType":"YulFunctionCall","src":"1320:13:27"},"nodeType":"YulIf","src":"1317:87:27"},{"nodeType":"YulAssignment","src":"1413:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1428:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1441:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1449:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1437:3:27"},"nodeType":"YulFunctionCall","src":"1437:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1454:3:27"},"nodeType":"YulFunctionCall","src":"1454:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1433:3:27"},"nodeType":"YulFunctionCall","src":"1433:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1424:3:27"},"nodeType":"YulFunctionCall","src":"1424:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"1465:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1420:3:27"},"nodeType":"YulFunctionCall","src":"1420:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1413:3:27"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1031:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1038:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1046:3:27","type":""}],"src":"1004:472:27"},{"body":{"nodeType":"YulBlock","src":"1602:99:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1619:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1630:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1612:6:27"},"nodeType":"YulFunctionCall","src":"1612:21:27"},"nodeType":"YulExpressionStatement","src":"1612:21:27"},{"nodeType":"YulAssignment","src":"1642:53:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1668:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1680:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1691:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1676:3:27"},"nodeType":"YulFunctionCall","src":"1676:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1650:17:27"},"nodeType":"YulFunctionCall","src":"1650:45:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1642:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1571:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1582:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1593:4:27","type":""}],"src":"1481:220:27"},{"body":{"nodeType":"YulBlock","src":"1793:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"1839:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1848:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1851:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1841:6:27"},"nodeType":"YulFunctionCall","src":"1841:12:27"},"nodeType":"YulExpressionStatement","src":"1841:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1814:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1823:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1810:3:27"},"nodeType":"YulFunctionCall","src":"1810:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1835:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1806:3:27"},"nodeType":"YulFunctionCall","src":"1806:32:27"},"nodeType":"YulIf","src":"1803:52:27"},{"nodeType":"YulAssignment","src":"1864:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1893:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1874:18:27"},"nodeType":"YulFunctionCall","src":"1874:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1864:6:27"}]},{"nodeType":"YulAssignment","src":"1912:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1939:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1950:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1935:3:27"},"nodeType":"YulFunctionCall","src":"1935:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1922:12:27"},"nodeType":"YulFunctionCall","src":"1922:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1912:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1751:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1762:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1774:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1782:6:27","type":""}],"src":"1706:254:27"},{"body":{"nodeType":"YulBlock","src":"2060:92:27","statements":[{"nodeType":"YulAssignment","src":"2070:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2082:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2093:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2078:3:27"},"nodeType":"YulFunctionCall","src":"2078:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2070:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2112:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2137:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2130:6:27"},"nodeType":"YulFunctionCall","src":"2130:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2123:6:27"},"nodeType":"YulFunctionCall","src":"2123:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2105:6:27"},"nodeType":"YulFunctionCall","src":"2105:41:27"},"nodeType":"YulExpressionStatement","src":"2105:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2029:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2040:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2051:4:27","type":""}],"src":"1965:187:27"},{"body":{"nodeType":"YulBlock","src":"2261:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"2307:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2316:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2319:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2309:6:27"},"nodeType":"YulFunctionCall","src":"2309:12:27"},"nodeType":"YulExpressionStatement","src":"2309:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2282:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2291:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2278:3:27"},"nodeType":"YulFunctionCall","src":"2278:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2303:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2274:3:27"},"nodeType":"YulFunctionCall","src":"2274:32:27"},"nodeType":"YulIf","src":"2271:52:27"},{"nodeType":"YulAssignment","src":"2332:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2361:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2342:18:27"},"nodeType":"YulFunctionCall","src":"2342:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2332:6:27"}]},{"nodeType":"YulAssignment","src":"2380:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2413:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2424:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2409:3:27"},"nodeType":"YulFunctionCall","src":"2409:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2390:18:27"},"nodeType":"YulFunctionCall","src":"2390:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2380:6:27"}]},{"nodeType":"YulAssignment","src":"2437:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2464:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2475:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2460:3:27"},"nodeType":"YulFunctionCall","src":"2460:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2447:12:27"},"nodeType":"YulFunctionCall","src":"2447:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2437:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2211:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2222:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2234:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2242:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2250:6:27","type":""}],"src":"2157:328:27"},{"body":{"nodeType":"YulBlock","src":"2587:87:27","statements":[{"nodeType":"YulAssignment","src":"2597:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2609:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2620:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2605:3:27"},"nodeType":"YulFunctionCall","src":"2605:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2597:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2639:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2654:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2662:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2650:3:27"},"nodeType":"YulFunctionCall","src":"2650:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2632:6:27"},"nodeType":"YulFunctionCall","src":"2632:36:27"},"nodeType":"YulExpressionStatement","src":"2632:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2556:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2567:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2578:4:27","type":""}],"src":"2490:184:27"},{"body":{"nodeType":"YulBlock","src":"2808:119:27","statements":[{"nodeType":"YulAssignment","src":"2818:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2830:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2841:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:27"},"nodeType":"YulFunctionCall","src":"2826:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2818:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2860:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"2871:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2853:6:27"},"nodeType":"YulFunctionCall","src":"2853:25:27"},"nodeType":"YulExpressionStatement","src":"2853:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2898:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2909:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2894:3:27"},"nodeType":"YulFunctionCall","src":"2894:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"2914:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2887:6:27"},"nodeType":"YulFunctionCall","src":"2887:34:27"},"nodeType":"YulExpressionStatement","src":"2887:34:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2769:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2780:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2788:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2799:4:27","type":""}],"src":"2679:248:27"},{"body":{"nodeType":"YulBlock","src":"3019:161:27","statements":[{"body":{"nodeType":"YulBlock","src":"3065:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3074:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3077:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3067:6:27"},"nodeType":"YulFunctionCall","src":"3067:12:27"},"nodeType":"YulExpressionStatement","src":"3067:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3040:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3049:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3036:3:27"},"nodeType":"YulFunctionCall","src":"3036:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3061:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3032:3:27"},"nodeType":"YulFunctionCall","src":"3032:32:27"},"nodeType":"YulIf","src":"3029:52:27"},{"nodeType":"YulAssignment","src":"3090:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3113:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3100:12:27"},"nodeType":"YulFunctionCall","src":"3100:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3090:6:27"}]},{"nodeType":"YulAssignment","src":"3132:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3155:3:27"},"nodeType":"YulFunctionCall","src":"3155:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:27"},"nodeType":"YulFunctionCall","src":"3142:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3132:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2977:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2988:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3000:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3008:6:27","type":""}],"src":"2932:248:27"},{"body":{"nodeType":"YulBlock","src":"3412:290:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3429:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"3440:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3422:6:27"},"nodeType":"YulFunctionCall","src":"3422:25:27"},"nodeType":"YulExpressionStatement","src":"3422:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3478:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:27"},"nodeType":"YulFunctionCall","src":"3463:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"3483:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3456:6:27"},"nodeType":"YulFunctionCall","src":"3456:34:27"},"nodeType":"YulExpressionStatement","src":"3456:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3510:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3521:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3506:3:27"},"nodeType":"YulFunctionCall","src":"3506:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"3526:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3499:6:27"},"nodeType":"YulFunctionCall","src":"3499:34:27"},"nodeType":"YulExpressionStatement","src":"3499:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3553:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3564:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:27"},"nodeType":"YulFunctionCall","src":"3549:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3569:3:27","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3542:6:27"},"nodeType":"YulFunctionCall","src":"3542:31:27"},"nodeType":"YulExpressionStatement","src":"3542:31:27"},{"nodeType":"YulAssignment","src":"3582:54:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"3608:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3620:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3631:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:27"},"nodeType":"YulFunctionCall","src":"3616:19:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3590:17:27"},"nodeType":"YulFunctionCall","src":"3590:46:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3582:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3656:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3667:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3652:3:27"},"nodeType":"YulFunctionCall","src":"3652:19:27"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3687:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3680:6:27"},"nodeType":"YulFunctionCall","src":"3680:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3673:6:27"},"nodeType":"YulFunctionCall","src":"3673:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3645:6:27"},"nodeType":"YulFunctionCall","src":"3645:51:27"},"nodeType":"YulExpressionStatement","src":"3645:51:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3349:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3360:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3368:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3376:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3384:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3392:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3403:4:27","type":""}],"src":"3185:517:27"},{"body":{"nodeType":"YulBlock","src":"3992:463:27","statements":[{"nodeType":"YulAssignment","src":"4002:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4014:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4025:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4010:3:27"},"nodeType":"YulFunctionCall","src":"4010:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4002:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4045:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"4056:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4038:6:27"},"nodeType":"YulFunctionCall","src":"4038:25:27"},"nodeType":"YulExpressionStatement","src":"4038:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:27"},"nodeType":"YulFunctionCall","src":"4079:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4103:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4111:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4099:3:27"},"nodeType":"YulFunctionCall","src":"4099:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4072:6:27"},"nodeType":"YulFunctionCall","src":"4072:83:27"},"nodeType":"YulExpressionStatement","src":"4072:83:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4175:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4186:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4171:3:27"},"nodeType":"YulFunctionCall","src":"4171:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"4191:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4164:6:27"},"nodeType":"YulFunctionCall","src":"4164:34:27"},"nodeType":"YulExpressionStatement","src":"4164:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4218:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4229:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4214:3:27"},"nodeType":"YulFunctionCall","src":"4214:18:27"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4248:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:27"},"nodeType":"YulFunctionCall","src":"4241:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4234:6:27"},"nodeType":"YulFunctionCall","src":"4234:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4207:6:27"},"nodeType":"YulFunctionCall","src":"4207:50:27"},"nodeType":"YulExpressionStatement","src":"4207:50:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4277:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4288:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4273:3:27"},"nodeType":"YulFunctionCall","src":"4273:19:27"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4308:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4301:6:27"},"nodeType":"YulFunctionCall","src":"4301:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4294:6:27"},"nodeType":"YulFunctionCall","src":"4294:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4266:6:27"},"nodeType":"YulFunctionCall","src":"4266:51:27"},"nodeType":"YulExpressionStatement","src":"4266:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4337:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4348:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:27"},"nodeType":"YulFunctionCall","src":"4333:19:27"},{"name":"value5","nodeType":"YulIdentifier","src":"4354:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4326:6:27"},"nodeType":"YulFunctionCall","src":"4326:35:27"},"nodeType":"YulExpressionStatement","src":"4326:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4381:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4392:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4377:3:27"},"nodeType":"YulFunctionCall","src":"4377:19:27"},{"name":"value6","nodeType":"YulIdentifier","src":"4398:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4370:6:27"},"nodeType":"YulFunctionCall","src":"4370:35:27"},"nodeType":"YulExpressionStatement","src":"4370:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4436:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4421:3:27"},"nodeType":"YulFunctionCall","src":"4421:19:27"},{"name":"value7","nodeType":"YulIdentifier","src":"4442:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4414:6:27"},"nodeType":"YulFunctionCall","src":"4414:35:27"},"nodeType":"YulExpressionStatement","src":"4414:35:27"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3905:9:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3916:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3924:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3932:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3940:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3948:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3956:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3964:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3972:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3983:4:27","type":""}],"src":"3707:748:27"},{"body":{"nodeType":"YulBlock","src":"4547:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"4593:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4602:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4605:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4595:6:27"},"nodeType":"YulFunctionCall","src":"4595:12:27"},"nodeType":"YulExpressionStatement","src":"4595:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4568:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4577:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4564:3:27"},"nodeType":"YulFunctionCall","src":"4564:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4589:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4560:3:27"},"nodeType":"YulFunctionCall","src":"4560:32:27"},"nodeType":"YulIf","src":"4557:52:27"},{"nodeType":"YulAssignment","src":"4618:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4647:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4628:18:27"},"nodeType":"YulFunctionCall","src":"4628:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4618:6:27"}]},{"nodeType":"YulAssignment","src":"4666:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4699:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4710:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4695:3:27"},"nodeType":"YulFunctionCall","src":"4695:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4676:18:27"},"nodeType":"YulFunctionCall","src":"4676:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4666:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4505:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4516:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4528:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4536:6:27","type":""}],"src":"4460:260:27"},{"body":{"nodeType":"YulBlock","src":"4928:1125:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4938:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4948:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4942:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4959:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4977:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4988:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4973:3:27"},"nodeType":"YulFunctionCall","src":"4973:18:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4963:6:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5007:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5018:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5000:6:27"},"nodeType":"YulFunctionCall","src":"5000:21:27"},"nodeType":"YulExpressionStatement","src":"5000:21:27"},{"nodeType":"YulVariableDeclaration","src":"5030:17:27","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5041:6:27"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5034:3:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5056:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5076:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5070:5:27"},"nodeType":"YulFunctionCall","src":"5070:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5060:6:27","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5099:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"5107:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5092:6:27"},"nodeType":"YulFunctionCall","src":"5092:22:27"},"nodeType":"YulExpressionStatement","src":"5092:22:27"},{"nodeType":"YulVariableDeclaration","src":"5123:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5133:2:27","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5127:2:27","type":""}]},{"nodeType":"YulAssignment","src":"5144:25:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5155:9:27"},{"name":"_2","nodeType":"YulIdentifier","src":"5166:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5151:3:27"},"nodeType":"YulFunctionCall","src":"5151:18:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5144:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"5178:29:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5196:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5204:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5192:3:27"},"nodeType":"YulFunctionCall","src":"5192:15:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5182:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5216:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5225:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5220:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5284:743:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5298:23:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5314:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5308:5:27"},"nodeType":"YulFunctionCall","src":"5308:13:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5302:2:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5341:3:27"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5352:2:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5346:5:27"},"nodeType":"YulFunctionCall","src":"5346:9:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5334:6:27"},"nodeType":"YulFunctionCall","src":"5334:22:27"},"nodeType":"YulExpressionStatement","src":"5334:22:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5380:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5385:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5376:3:27"},"nodeType":"YulFunctionCall","src":"5376:12:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5404:2:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5408:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5400:3:27"},"nodeType":"YulFunctionCall","src":"5400:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5394:5:27"},"nodeType":"YulFunctionCall","src":"5394:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5414:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5390:3:27"},"nodeType":"YulFunctionCall","src":"5390:67:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5369:6:27"},"nodeType":"YulFunctionCall","src":"5369:89:27"},"nodeType":"YulExpressionStatement","src":"5369:89:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5482:3:27"},{"name":"_2","nodeType":"YulIdentifier","src":"5487:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5478:3:27"},"nodeType":"YulFunctionCall","src":"5478:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5502:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"5506:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5498:3:27"},"nodeType":"YulFunctionCall","src":"5498:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5492:5:27"},"nodeType":"YulFunctionCall","src":"5492:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5471:6:27"},"nodeType":"YulFunctionCall","src":"5471:40:27"},"nodeType":"YulExpressionStatement","src":"5471:40:27"},{"nodeType":"YulVariableDeclaration","src":"5524:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5534:4:27","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5528:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5562:3:27"},{"name":"_4","nodeType":"YulIdentifier","src":"5567:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5558:3:27"},"nodeType":"YulFunctionCall","src":"5558:12:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5596:2:27"},{"name":"_4","nodeType":"YulIdentifier","src":"5600:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5592:3:27"},"nodeType":"YulFunctionCall","src":"5592:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5586:5:27"},"nodeType":"YulFunctionCall","src":"5586:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5579:6:27"},"nodeType":"YulFunctionCall","src":"5579:26:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5572:6:27"},"nodeType":"YulFunctionCall","src":"5572:34:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5551:6:27"},"nodeType":"YulFunctionCall","src":"5551:56:27"},"nodeType":"YulExpressionStatement","src":"5551:56:27"},{"nodeType":"YulVariableDeclaration","src":"5620:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:4:27","type":"","value":"0x80"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5624:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5658:3:27"},{"name":"_5","nodeType":"YulIdentifier","src":"5663:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5654:3:27"},"nodeType":"YulFunctionCall","src":"5654:12:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5692:2:27"},{"name":"_5","nodeType":"YulIdentifier","src":"5696:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5688:3:27"},"nodeType":"YulFunctionCall","src":"5688:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5682:5:27"},"nodeType":"YulFunctionCall","src":"5682:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5675:6:27"},"nodeType":"YulFunctionCall","src":"5675:26:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5668:6:27"},"nodeType":"YulFunctionCall","src":"5668:34:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5647:6:27"},"nodeType":"YulFunctionCall","src":"5647:56:27"},"nodeType":"YulExpressionStatement","src":"5647:56:27"},{"nodeType":"YulVariableDeclaration","src":"5716:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5726:4:27","type":"","value":"0xa0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"5720:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5754:3:27"},{"name":"_6","nodeType":"YulIdentifier","src":"5759:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5750:3:27"},"nodeType":"YulFunctionCall","src":"5750:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5774:2:27"},{"name":"_6","nodeType":"YulIdentifier","src":"5778:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5770:3:27"},"nodeType":"YulFunctionCall","src":"5770:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5764:5:27"},"nodeType":"YulFunctionCall","src":"5764:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5743:6:27"},"nodeType":"YulFunctionCall","src":"5743:40:27"},"nodeType":"YulExpressionStatement","src":"5743:40:27"},{"nodeType":"YulVariableDeclaration","src":"5796:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5806:4:27","type":"","value":"0xc0"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"5800:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5834:3:27"},{"name":"_7","nodeType":"YulIdentifier","src":"5839:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5830:3:27"},"nodeType":"YulFunctionCall","src":"5830:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5854:2:27"},{"name":"_7","nodeType":"YulIdentifier","src":"5858:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5850:3:27"},"nodeType":"YulFunctionCall","src":"5850:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5844:5:27"},"nodeType":"YulFunctionCall","src":"5844:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5823:6:27"},"nodeType":"YulFunctionCall","src":"5823:40:27"},"nodeType":"YulExpressionStatement","src":"5823:40:27"},{"nodeType":"YulVariableDeclaration","src":"5876:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5886:4:27","type":"","value":"0xe0"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"5880:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5914:3:27"},{"name":"_8","nodeType":"YulIdentifier","src":"5919:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:27"},"nodeType":"YulFunctionCall","src":"5910:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5934:2:27"},{"name":"_8","nodeType":"YulIdentifier","src":"5938:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5930:3:27"},"nodeType":"YulFunctionCall","src":"5930:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5924:5:27"},"nodeType":"YulFunctionCall","src":"5924:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5903:6:27"},"nodeType":"YulFunctionCall","src":"5903:40:27"},"nodeType":"YulExpressionStatement","src":"5903:40:27"},{"nodeType":"YulAssignment","src":"5956:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5967:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"5972:6:27","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5963:3:27"},"nodeType":"YulFunctionCall","src":"5963:16:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5956:3:27"}]},{"nodeType":"YulAssignment","src":"5992:25:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6006:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6014:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6002:3:27"},"nodeType":"YulFunctionCall","src":"6002:15:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5992:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5246:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"5249:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5243:2:27"},"nodeType":"YulFunctionCall","src":"5243:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5257:18:27","statements":[{"nodeType":"YulAssignment","src":"5259:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5268:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"5271:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5264:3:27"},"nodeType":"YulFunctionCall","src":"5264:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5259:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"5239:3:27","statements":[]},"src":"5235:792:27"},{"nodeType":"YulAssignment","src":"6036:11:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"6044:3:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6036:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4897:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4908:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4919:4:27","type":""}],"src":"4725:1328:27"},{"body":{"nodeType":"YulBlock","src":"6157:76:27","statements":[{"nodeType":"YulAssignment","src":"6167:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6179:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6190:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6175:3:27"},"nodeType":"YulFunctionCall","src":"6175:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6167:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6209:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"6220:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6202:6:27"},"nodeType":"YulFunctionCall","src":"6202:25:27"},"nodeType":"YulExpressionStatement","src":"6202:25:27"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6126:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6137:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6148:4:27","type":""}],"src":"6058:175:27"},{"body":{"nodeType":"YulBlock","src":"6270:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6287:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6290:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6280:6:27"},"nodeType":"YulFunctionCall","src":"6280:88:27"},"nodeType":"YulExpressionStatement","src":"6280:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6384:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6387:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6377:6:27"},"nodeType":"YulFunctionCall","src":"6377:15:27"},"nodeType":"YulExpressionStatement","src":"6377:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6408:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6411:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6401:6:27"},"nodeType":"YulFunctionCall","src":"6401:15:27"},"nodeType":"YulExpressionStatement","src":"6401:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6238:184:27"},{"body":{"nodeType":"YulBlock","src":"6524:893:27","statements":[{"body":{"nodeType":"YulBlock","src":"6570:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6579:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6582:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6572:6:27"},"nodeType":"YulFunctionCall","src":"6572:12:27"},"nodeType":"YulExpressionStatement","src":"6572:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6545:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6554:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6541:3:27"},"nodeType":"YulFunctionCall","src":"6541:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6566:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6537:3:27"},"nodeType":"YulFunctionCall","src":"6537:32:27"},"nodeType":"YulIf","src":"6534:52:27"},{"nodeType":"YulAssignment","src":"6595:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6618:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6605:12:27"},"nodeType":"YulFunctionCall","src":"6605:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6595:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"6637:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6668:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6679:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6664:3:27"},"nodeType":"YulFunctionCall","src":"6664:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6651:12:27"},"nodeType":"YulFunctionCall","src":"6651:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6641:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6692:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6702:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6696:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6747:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6756:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6759:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6749:6:27"},"nodeType":"YulFunctionCall","src":"6749:12:27"},"nodeType":"YulExpressionStatement","src":"6749:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6735:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6743:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6732:2:27"},"nodeType":"YulFunctionCall","src":"6732:14:27"},"nodeType":"YulIf","src":"6729:34:27"},{"nodeType":"YulVariableDeclaration","src":"6772:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6786:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6797:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6782:3:27"},"nodeType":"YulFunctionCall","src":"6782:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6776:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6852:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6861:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6864:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6854:6:27"},"nodeType":"YulFunctionCall","src":"6854:12:27"},"nodeType":"YulExpressionStatement","src":"6854:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6831:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6835:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6827:3:27"},"nodeType":"YulFunctionCall","src":"6827:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6842:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6823:3:27"},"nodeType":"YulFunctionCall","src":"6823:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6816:6:27"},"nodeType":"YulFunctionCall","src":"6816:35:27"},"nodeType":"YulIf","src":"6813:55:27"},{"nodeType":"YulVariableDeclaration","src":"6877:26:27","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6900:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6887:12:27"},"nodeType":"YulFunctionCall","src":"6887:16:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6881:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6926:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6928:16:27"},"nodeType":"YulFunctionCall","src":"6928:18:27"},"nodeType":"YulExpressionStatement","src":"6928:18:27"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6918:2:27"},{"name":"_1","nodeType":"YulIdentifier","src":"6922:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6915:2:27"},"nodeType":"YulFunctionCall","src":"6915:10:27"},"nodeType":"YulIf","src":"6912:36:27"},{"nodeType":"YulVariableDeclaration","src":"6957:17:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6971:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6967:3:27"},"nodeType":"YulFunctionCall","src":"6967:7:27"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6961:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6983:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7003:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6997:5:27"},"nodeType":"YulFunctionCall","src":"6997:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6987:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7015:71:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7037:6:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7061:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"7065:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7057:3:27"},"nodeType":"YulFunctionCall","src":"7057:13:27"},{"name":"_4","nodeType":"YulIdentifier","src":"7072:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7053:3:27"},"nodeType":"YulFunctionCall","src":"7053:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"7077:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7049:3:27"},"nodeType":"YulFunctionCall","src":"7049:31:27"},{"name":"_4","nodeType":"YulIdentifier","src":"7082:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7045:3:27"},"nodeType":"YulFunctionCall","src":"7045:40:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7033:3:27"},"nodeType":"YulFunctionCall","src":"7033:53:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7019:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7145:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7147:16:27"},"nodeType":"YulFunctionCall","src":"7147:18:27"},"nodeType":"YulExpressionStatement","src":"7147:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7104:10:27"},{"name":"_1","nodeType":"YulIdentifier","src":"7116:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7101:2:27"},"nodeType":"YulFunctionCall","src":"7101:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7124:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7136:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7121:2:27"},"nodeType":"YulFunctionCall","src":"7121:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7098:2:27"},"nodeType":"YulFunctionCall","src":"7098:46:27"},"nodeType":"YulIf","src":"7095:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7183:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7187:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7176:6:27"},"nodeType":"YulFunctionCall","src":"7176:22:27"},"nodeType":"YulExpressionStatement","src":"7176:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7214:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"7222:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7207:6:27"},"nodeType":"YulFunctionCall","src":"7207:18:27"},"nodeType":"YulExpressionStatement","src":"7207:18:27"},{"body":{"nodeType":"YulBlock","src":"7271:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7280:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7283:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7273:6:27"},"nodeType":"YulFunctionCall","src":"7273:12:27"},"nodeType":"YulExpressionStatement","src":"7273:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7248:2:27"},{"name":"_3","nodeType":"YulIdentifier","src":"7252:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7244:3:27"},"nodeType":"YulFunctionCall","src":"7244:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7240:3:27"},"nodeType":"YulFunctionCall","src":"7240:20:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7262:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7237:2:27"},"nodeType":"YulFunctionCall","src":"7237:33:27"},"nodeType":"YulIf","src":"7234:53:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7313:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7321:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7309:3:27"},"nodeType":"YulFunctionCall","src":"7309:15:27"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7330:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"7334:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7326:3:27"},"nodeType":"YulFunctionCall","src":"7326:11:27"},{"name":"_3","nodeType":"YulIdentifier","src":"7339:2:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7296:12:27"},"nodeType":"YulFunctionCall","src":"7296:46:27"},"nodeType":"YulExpressionStatement","src":"7296:46:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7366:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"7374:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7362:3:27"},"nodeType":"YulFunctionCall","src":"7362:15:27"},{"kind":"number","nodeType":"YulLiteral","src":"7379:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7358:3:27"},"nodeType":"YulFunctionCall","src":"7358:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"7384:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7351:6:27"},"nodeType":"YulFunctionCall","src":"7351:35:27"},"nodeType":"YulExpressionStatement","src":"7351:35:27"},{"nodeType":"YulAssignment","src":"7395:16:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7405:6:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7395:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6482:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6493:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6505:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6513:6:27","type":""}],"src":"6427:990:27"},{"body":{"nodeType":"YulBlock","src":"7477:382:27","statements":[{"nodeType":"YulAssignment","src":"7487:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7501:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7504:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7497:3:27"},"nodeType":"YulFunctionCall","src":"7497:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7487:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"7518:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7548:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"7554:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7544:3:27"},"nodeType":"YulFunctionCall","src":"7544:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7522:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7595:31:27","statements":[{"nodeType":"YulAssignment","src":"7597:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7611:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7619:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7607:3:27"},"nodeType":"YulFunctionCall","src":"7607:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7597:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7575:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7568:6:27"},"nodeType":"YulFunctionCall","src":"7568:26:27"},"nodeType":"YulIf","src":"7565:61:27"},{"body":{"nodeType":"YulBlock","src":"7685:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7706:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7709:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7699:6:27"},"nodeType":"YulFunctionCall","src":"7699:88:27"},"nodeType":"YulExpressionStatement","src":"7699:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7807:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7810:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7800:6:27"},"nodeType":"YulFunctionCall","src":"7800:15:27"},"nodeType":"YulExpressionStatement","src":"7800:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7835:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7838:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7828:6:27"},"nodeType":"YulFunctionCall","src":"7828:15:27"},"nodeType":"YulExpressionStatement","src":"7828:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7641:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7664:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7672:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7661:2:27"},"nodeType":"YulFunctionCall","src":"7661:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7638:2:27"},"nodeType":"YulFunctionCall","src":"7638:38:27"},"nodeType":"YulIf","src":"7635:218:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7457:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7466:6:27","type":""}],"src":"7422:437:27"},{"body":{"nodeType":"YulBlock","src":"8038:162:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8055:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8066:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8048:6:27"},"nodeType":"YulFunctionCall","src":"8048:21:27"},"nodeType":"YulExpressionStatement","src":"8048:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8089:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8100:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8085:3:27"},"nodeType":"YulFunctionCall","src":"8085:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8105:2:27","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8078:6:27"},"nodeType":"YulFunctionCall","src":"8078:30:27"},"nodeType":"YulExpressionStatement","src":"8078:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8128:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8139:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:27"},"nodeType":"YulFunctionCall","src":"8124:18:27"},{"hexValue":"4e6f742050726f73756d6572","kind":"string","nodeType":"YulLiteral","src":"8144:14:27","type":"","value":"Not Prosumer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8117:6:27"},"nodeType":"YulFunctionCall","src":"8117:42:27"},"nodeType":"YulExpressionStatement","src":"8117:42:27"},{"nodeType":"YulAssignment","src":"8168:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8180:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8191:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8176:3:27"},"nodeType":"YulFunctionCall","src":"8176:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8168:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d40a0a793d1534782b36c5b5b02ddf47716308d2c0e8957bd017161181464636__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8015:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8029:4:27","type":""}],"src":"7864:336:27"},{"body":{"nodeType":"YulBlock","src":"8237:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8254:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8257:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8247:6:27"},"nodeType":"YulFunctionCall","src":"8247:88:27"},"nodeType":"YulExpressionStatement","src":"8247:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8351:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8354:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8344:6:27"},"nodeType":"YulFunctionCall","src":"8344:15:27"},"nodeType":"YulExpressionStatement","src":"8344:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8375:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8378:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8368:6:27"},"nodeType":"YulFunctionCall","src":"8368:15:27"},"nodeType":"YulExpressionStatement","src":"8368:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8205:184:27"},{"body":{"nodeType":"YulBlock","src":"8443:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"8465:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8467:16:27"},"nodeType":"YulFunctionCall","src":"8467:18:27"},"nodeType":"YulExpressionStatement","src":"8467:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8459:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8462:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8456:2:27"},"nodeType":"YulFunctionCall","src":"8456:8:27"},"nodeType":"YulIf","src":"8453:34:27"},{"nodeType":"YulAssignment","src":"8496:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8508:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8511:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8504:3:27"},"nodeType":"YulFunctionCall","src":"8504:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8496:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8425:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"8428:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8434:4:27","type":""}],"src":"8394:125:27"},{"body":{"nodeType":"YulBlock","src":"8556:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8573:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8576:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8566:6:27"},"nodeType":"YulFunctionCall","src":"8566:88:27"},"nodeType":"YulExpressionStatement","src":"8566:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8670:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8673:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8663:6:27"},"nodeType":"YulFunctionCall","src":"8663:15:27"},"nodeType":"YulExpressionStatement","src":"8663:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8694:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8697:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8687:6:27"},"nodeType":"YulFunctionCall","src":"8687:15:27"},"nodeType":"YulExpressionStatement","src":"8687:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8524:184:27"},{"body":{"nodeType":"YulBlock","src":"8887:167:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8904:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8915:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8897:6:27"},"nodeType":"YulFunctionCall","src":"8897:21:27"},"nodeType":"YulExpressionStatement","src":"8897:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8938:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8949:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8934:3:27"},"nodeType":"YulFunctionCall","src":"8934:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8954:2:27","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8927:6:27"},"nodeType":"YulFunctionCall","src":"8927:30:27"},"nodeType":"YulExpressionStatement","src":"8927:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8977:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8988:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8973:3:27"},"nodeType":"YulFunctionCall","src":"8973:18:27"},{"hexValue":"596f75206172652053757370656e646564","kind":"string","nodeType":"YulLiteral","src":"8993:19:27","type":"","value":"You are Suspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8966:6:27"},"nodeType":"YulFunctionCall","src":"8966:47:27"},"nodeType":"YulExpressionStatement","src":"8966:47:27"},{"nodeType":"YulAssignment","src":"9022:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9034:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9045:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9030:3:27"},"nodeType":"YulFunctionCall","src":"9030:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9022:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8864:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8878:4:27","type":""}],"src":"8713:341:27"},{"body":{"nodeType":"YulBlock","src":"9107:80:27","statements":[{"body":{"nodeType":"YulBlock","src":"9134:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9136:16:27"},"nodeType":"YulFunctionCall","src":"9136:18:27"},"nodeType":"YulExpressionStatement","src":"9136:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9123:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9130:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9126:3:27"},"nodeType":"YulFunctionCall","src":"9126:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9120:2:27"},"nodeType":"YulFunctionCall","src":"9120:13:27"},"nodeType":"YulIf","src":"9117:39:27"},{"nodeType":"YulAssignment","src":"9165:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9176:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"9179:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9172:3:27"},"nodeType":"YulFunctionCall","src":"9172:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9165:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9090:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"9093:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9099:3:27","type":""}],"src":"9059:128:27"},{"body":{"nodeType":"YulBlock","src":"9366:158:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9383:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9394:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9376:6:27"},"nodeType":"YulFunctionCall","src":"9376:21:27"},"nodeType":"YulExpressionStatement","src":"9376:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9417:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9428:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9413:3:27"},"nodeType":"YulFunctionCall","src":"9413:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9433:1:27","type":"","value":"9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9406:6:27"},"nodeType":"YulFunctionCall","src":"9406:29:27"},"nodeType":"YulExpressionStatement","src":"9406:29:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9455:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9466:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9451:3:27"},"nodeType":"YulFunctionCall","src":"9451:18:27"},{"hexValue":"4e6f74204f776e6572","kind":"string","nodeType":"YulLiteral","src":"9471:11:27","type":"","value":"Not Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9444:6:27"},"nodeType":"YulFunctionCall","src":"9444:39:27"},"nodeType":"YulExpressionStatement","src":"9444:39:27"},{"nodeType":"YulAssignment","src":"9492:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9515:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:27"},"nodeType":"YulFunctionCall","src":"9500:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9492:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9343:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9357:4:27","type":""}],"src":"9192:332:27"},{"body":{"nodeType":"YulBlock","src":"9703:164:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9720:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9731:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9713:6:27"},"nodeType":"YulFunctionCall","src":"9713:21:27"},"nodeType":"YulExpressionStatement","src":"9713:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9754:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9765:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9750:3:27"},"nodeType":"YulFunctionCall","src":"9750:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9770:2:27","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9743:6:27"},"nodeType":"YulFunctionCall","src":"9743:30:27"},"nodeType":"YulExpressionStatement","src":"9743:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9793:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9804:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9789:3:27"},"nodeType":"YulFunctionCall","src":"9789:18:27"},{"hexValue":"4e6f7420612050726f73756d6572","kind":"string","nodeType":"YulLiteral","src":"9809:16:27","type":"","value":"Not a Prosumer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9782:6:27"},"nodeType":"YulFunctionCall","src":"9782:44:27"},"nodeType":"YulExpressionStatement","src":"9782:44:27"},{"nodeType":"YulAssignment","src":"9835:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9847:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9858:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9843:3:27"},"nodeType":"YulFunctionCall","src":"9843:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9835:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9680:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9694:4:27","type":""}],"src":"9529:338:27"},{"body":{"nodeType":"YulBlock","src":"10046:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10063:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10074:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10056:6:27"},"nodeType":"YulFunctionCall","src":"10056:21:27"},"nodeType":"YulExpressionStatement","src":"10056:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10097:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10108:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10093:3:27"},"nodeType":"YulFunctionCall","src":"10093:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10113:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10086:6:27"},"nodeType":"YulFunctionCall","src":"10086:30:27"},"nodeType":"YulExpressionStatement","src":"10086:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10136:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10147:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10132:3:27"},"nodeType":"YulFunctionCall","src":"10132:18:27"},{"hexValue":"416c726561647920556e73757370656e646564","kind":"string","nodeType":"YulLiteral","src":"10152:21:27","type":"","value":"Already Unsuspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10125:6:27"},"nodeType":"YulFunctionCall","src":"10125:49:27"},"nodeType":"YulExpressionStatement","src":"10125:49:27"},{"nodeType":"YulAssignment","src":"10183:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10195:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10206:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10191:3:27"},"nodeType":"YulFunctionCall","src":"10191:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10183:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10023:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10037:4:27","type":""}],"src":"9872:343:27"},{"body":{"nodeType":"YulBlock","src":"10267:89:27","statements":[{"body":{"nodeType":"YulBlock","src":"10294:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10296:16:27"},"nodeType":"YulFunctionCall","src":"10296:18:27"},"nodeType":"YulExpressionStatement","src":"10296:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10287:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10280:6:27"},"nodeType":"YulFunctionCall","src":"10280:13:27"},"nodeType":"YulIf","src":"10277:39:27"},{"nodeType":"YulAssignment","src":"10325:25:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10336:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10347:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10343:3:27"},"nodeType":"YulFunctionCall","src":"10343:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10332:3:27"},"nodeType":"YulFunctionCall","src":"10332:18:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10325:3:27"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10249:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10259:3:27","type":""}],"src":"10220:136:27"},{"body":{"nodeType":"YulBlock","src":"10408:88:27","statements":[{"body":{"nodeType":"YulBlock","src":"10439:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10441:16:27"},"nodeType":"YulFunctionCall","src":"10441:18:27"},"nodeType":"YulExpressionStatement","src":"10441:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10424:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10435:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10431:3:27"},"nodeType":"YulFunctionCall","src":"10431:6:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10421:2:27"},"nodeType":"YulFunctionCall","src":"10421:17:27"},"nodeType":"YulIf","src":"10418:43:27"},{"nodeType":"YulAssignment","src":"10470:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10481:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"10488:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10477:3:27"},"nodeType":"YulFunctionCall","src":"10477:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10470:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10390:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10400:3:27","type":""}],"src":"10361:135:27"},{"body":{"nodeType":"YulBlock","src":"10533:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10550:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10553:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10543:6:27"},"nodeType":"YulFunctionCall","src":"10543:88:27"},"nodeType":"YulExpressionStatement","src":"10543:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10647:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10650:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10640:6:27"},"nodeType":"YulFunctionCall","src":"10640:15:27"},"nodeType":"YulExpressionStatement","src":"10640:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10671:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10674:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10664:6:27"},"nodeType":"YulFunctionCall","src":"10664:15:27"},"nodeType":"YulExpressionStatement","src":"10664:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"10501:184:27"},{"body":{"nodeType":"YulBlock","src":"10736:74:27","statements":[{"body":{"nodeType":"YulBlock","src":"10759:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"10761:16:27"},"nodeType":"YulFunctionCall","src":"10761:18:27"},"nodeType":"YulExpressionStatement","src":"10761:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10756:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10749:6:27"},"nodeType":"YulFunctionCall","src":"10749:9:27"},"nodeType":"YulIf","src":"10746:35:27"},{"nodeType":"YulAssignment","src":"10790:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10799:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"10802:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10795:3:27"},"nodeType":"YulFunctionCall","src":"10795:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"10790:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10721:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"10724:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"10730:1:27","type":""}],"src":"10690:120:27"},{"body":{"nodeType":"YulBlock","src":"11006:14:27","statements":[{"nodeType":"YulAssignment","src":"11008:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"11015:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11008:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10990:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10998:3:27","type":""}],"src":"10815:205:27"},{"body":{"nodeType":"YulBlock","src":"11199:161:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11216:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11227:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11209:6:27"},"nodeType":"YulFunctionCall","src":"11209:21:27"},"nodeType":"YulExpressionStatement","src":"11209:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11250:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11261:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11246:3:27"},"nodeType":"YulFunctionCall","src":"11246:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11266:2:27","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11239:6:27"},"nodeType":"YulFunctionCall","src":"11239:30:27"},"nodeType":"YulExpressionStatement","src":"11239:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11289:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11300:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11285:3:27"},"nodeType":"YulFunctionCall","src":"11285:18:27"},{"hexValue":"43616c6c204661696c6564","kind":"string","nodeType":"YulLiteral","src":"11305:13:27","type":"","value":"Call Failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11278:6:27"},"nodeType":"YulFunctionCall","src":"11278:41:27"},"nodeType":"YulExpressionStatement","src":"11278:41:27"},{"nodeType":"YulAssignment","src":"11328:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11340:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11351:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11336:3:27"},"nodeType":"YulFunctionCall","src":"11336:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11328:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11176:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11190:4:27","type":""}],"src":"11025:335:27"},{"body":{"nodeType":"YulBlock","src":"11539:180:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11556:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11567:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11549:6:27"},"nodeType":"YulFunctionCall","src":"11549:21:27"},"nodeType":"YulExpressionStatement","src":"11549:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11590:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11601:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11586:3:27"},"nodeType":"YulFunctionCall","src":"11586:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11606:2:27","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11579:6:27"},"nodeType":"YulFunctionCall","src":"11579:30:27"},"nodeType":"YulExpressionStatement","src":"11579:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11629:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11640:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11625:3:27"},"nodeType":"YulFunctionCall","src":"11625:18:27"},{"hexValue":"496e76616c696420556e617070726f7665642050726f73756d6572204944","kind":"string","nodeType":"YulLiteral","src":"11645:32:27","type":"","value":"Invalid Unapproved Prosumer ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11618:6:27"},"nodeType":"YulFunctionCall","src":"11618:60:27"},"nodeType":"YulExpressionStatement","src":"11618:60:27"},{"nodeType":"YulAssignment","src":"11687:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11699:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11710:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11695:3:27"},"nodeType":"YulFunctionCall","src":"11695:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11687:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11516:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11530:4:27","type":""}],"src":"11365:354:27"},{"body":{"nodeType":"YulBlock","src":"11898:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11915:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11926:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11908:6:27"},"nodeType":"YulFunctionCall","src":"11908:21:27"},"nodeType":"YulExpressionStatement","src":"11908:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11949:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11960:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11945:3:27"},"nodeType":"YulFunctionCall","src":"11945:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11965:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11938:6:27"},"nodeType":"YulFunctionCall","src":"11938:30:27"},"nodeType":"YulExpressionStatement","src":"11938:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11988:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11999:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11984:3:27"},"nodeType":"YulFunctionCall","src":"11984:18:27"},{"hexValue":"50726f73756d657220416c726561647920646973617070726f76656420627920","kind":"string","nodeType":"YulLiteral","src":"12004:34:27","type":"","value":"Prosumer Already disapproved by "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11977:6:27"},"nodeType":"YulFunctionCall","src":"11977:62:27"},"nodeType":"YulExpressionStatement","src":"11977:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12059:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12070:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12055:3:27"},"nodeType":"YulFunctionCall","src":"12055:18:27"},{"hexValue":"796f75","kind":"string","nodeType":"YulLiteral","src":"12075:5:27","type":"","value":"you"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12048:6:27"},"nodeType":"YulFunctionCall","src":"12048:33:27"},"nodeType":"YulExpressionStatement","src":"12048:33:27"},{"nodeType":"YulAssignment","src":"12090:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12102:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12113:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12098:3:27"},"nodeType":"YulFunctionCall","src":"12098:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12090:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11875:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11889:4:27","type":""}],"src":"11724:399:27"},{"body":{"nodeType":"YulBlock","src":"12187:120:27","statements":[{"nodeType":"YulAssignment","src":"12197:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12212:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12206:5:27"},"nodeType":"YulFunctionCall","src":"12206:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12197:5:27"}]},{"body":{"nodeType":"YulBlock","src":"12285:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12294:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12297:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12287:6:27"},"nodeType":"YulFunctionCall","src":"12287:12:27"},"nodeType":"YulExpressionStatement","src":"12287:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12241:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12252:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"12259:22:27","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12248:3:27"},"nodeType":"YulFunctionCall","src":"12248:34:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12238:2:27"},"nodeType":"YulFunctionCall","src":"12238:45:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12231:6:27"},"nodeType":"YulFunctionCall","src":"12231:53:27"},"nodeType":"YulIf","src":"12228:73:27"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12166:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12177:5:27","type":""}],"src":"12128:179:27"},{"body":{"nodeType":"YulBlock","src":"12458:327:27","statements":[{"body":{"nodeType":"YulBlock","src":"12505:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12514:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12517:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12507:6:27"},"nodeType":"YulFunctionCall","src":"12507:12:27"},"nodeType":"YulExpressionStatement","src":"12507:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12479:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12488:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12475:3:27"},"nodeType":"YulFunctionCall","src":"12475:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"12500:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12471:3:27"},"nodeType":"YulFunctionCall","src":"12471:33:27"},"nodeType":"YulIf","src":"12468:53:27"},{"nodeType":"YulAssignment","src":"12530:49:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12569:9:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"12540:28:27"},"nodeType":"YulFunctionCall","src":"12540:39:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12530:6:27"}]},{"nodeType":"YulAssignment","src":"12588:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12608:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12619:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12604:3:27"},"nodeType":"YulFunctionCall","src":"12604:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12598:5:27"},"nodeType":"YulFunctionCall","src":"12598:25:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12588:6:27"}]},{"nodeType":"YulAssignment","src":"12632:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12652:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12663:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12648:3:27"},"nodeType":"YulFunctionCall","src":"12648:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12642:5:27"},"nodeType":"YulFunctionCall","src":"12642:25:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12632:6:27"}]},{"nodeType":"YulAssignment","src":"12676:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12696:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12707:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12692:3:27"},"nodeType":"YulFunctionCall","src":"12692:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12686:5:27"},"nodeType":"YulFunctionCall","src":"12686:25:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12676:6:27"}]},{"nodeType":"YulAssignment","src":"12720:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12763:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12774:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12759:3:27"},"nodeType":"YulFunctionCall","src":"12759:19:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"12730:28:27"},"nodeType":"YulFunctionCall","src":"12730:49:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12720:6:27"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12392:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12403:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12415:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12423:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12431:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12439:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12447:6:27","type":""}],"src":"12312:473:27"},{"body":{"nodeType":"YulBlock","src":"12964:166:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12981:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12992:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12974:6:27"},"nodeType":"YulFunctionCall","src":"12974:21:27"},"nodeType":"YulExpressionStatement","src":"12974:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13015:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13026:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13011:3:27"},"nodeType":"YulFunctionCall","src":"13011:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13031:2:27","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13004:6:27"},"nodeType":"YulFunctionCall","src":"13004:30:27"},"nodeType":"YulExpressionStatement","src":"13004:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13054:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13065:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13050:3:27"},"nodeType":"YulFunctionCall","src":"13050:18:27"},{"hexValue":"596f752061726520616e204f776e6572","kind":"string","nodeType":"YulLiteral","src":"13070:18:27","type":"","value":"You are an Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13043:6:27"},"nodeType":"YulFunctionCall","src":"13043:46:27"},"nodeType":"YulExpressionStatement","src":"13043:46:27"},{"nodeType":"YulAssignment","src":"13098:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13110:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13121:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13106:3:27"},"nodeType":"YulFunctionCall","src":"13106:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13098:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12941:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12955:4:27","type":""}],"src":"12790:340:27"},{"body":{"nodeType":"YulBlock","src":"13309:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13326:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13337:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13319:6:27"},"nodeType":"YulFunctionCall","src":"13319:21:27"},"nodeType":"YulExpressionStatement","src":"13319:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13360:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13371:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13356:3:27"},"nodeType":"YulFunctionCall","src":"13356:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13376:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13349:6:27"},"nodeType":"YulFunctionCall","src":"13349:30:27"},"nodeType":"YulExpressionStatement","src":"13349:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13399:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13410:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13395:3:27"},"nodeType":"YulFunctionCall","src":"13395:18:27"},{"hexValue":"526567697374726174696f6e204661696c65642c20496e73756666696369656e","kind":"string","nodeType":"YulLiteral","src":"13415:34:27","type":"","value":"Registration Failed, Insufficien"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13388:6:27"},"nodeType":"YulFunctionCall","src":"13388:62:27"},"nodeType":"YulExpressionStatement","src":"13388:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:27"},"nodeType":"YulFunctionCall","src":"13466:18:27"},{"hexValue":"7420466565","kind":"string","nodeType":"YulLiteral","src":"13486:7:27","type":"","value":"t Fee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13459:6:27"},"nodeType":"YulFunctionCall","src":"13459:35:27"},"nodeType":"YulExpressionStatement","src":"13459:35:27"},{"nodeType":"YulAssignment","src":"13503:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13515:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13526:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13511:3:27"},"nodeType":"YulFunctionCall","src":"13511:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13503:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13286:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13300:4:27","type":""}],"src":"13135:401:27"},{"body":{"nodeType":"YulBlock","src":"13715:231:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13732:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13743:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13725:6:27"},"nodeType":"YulFunctionCall","src":"13725:21:27"},"nodeType":"YulExpressionStatement","src":"13725:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13766:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13777:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13762:3:27"},"nodeType":"YulFunctionCall","src":"13762:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13782:2:27","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13755:6:27"},"nodeType":"YulFunctionCall","src":"13755:30:27"},"nodeType":"YulExpressionStatement","src":"13755:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13805:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13816:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13801:3:27"},"nodeType":"YulFunctionCall","src":"13801:18:27"},{"hexValue":"596f752061726520616c726561647920612050726f73756d657220696e207468","kind":"string","nodeType":"YulLiteral","src":"13821:34:27","type":"","value":"You are already a Prosumer in th"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13794:6:27"},"nodeType":"YulFunctionCall","src":"13794:62:27"},"nodeType":"YulExpressionStatement","src":"13794:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13876:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13887:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13872:3:27"},"nodeType":"YulFunctionCall","src":"13872:18:27"},{"hexValue":"65204e6574776f726b","kind":"string","nodeType":"YulLiteral","src":"13892:11:27","type":"","value":"e Network"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13865:6:27"},"nodeType":"YulFunctionCall","src":"13865:39:27"},"nodeType":"YulExpressionStatement","src":"13865:39:27"},{"nodeType":"YulAssignment","src":"13913:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13925:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13936:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13921:3:27"},"nodeType":"YulFunctionCall","src":"13921:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13913:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13692:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13706:4:27","type":""}],"src":"13541:405:27"},{"body":{"nodeType":"YulBlock","src":"14125:233:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14142:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14153:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14135:6:27"},"nodeType":"YulFunctionCall","src":"14135:21:27"},"nodeType":"YulExpressionStatement","src":"14135:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14176:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14187:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14172:3:27"},"nodeType":"YulFunctionCall","src":"14172:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14192:2:27","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14165:6:27"},"nodeType":"YulFunctionCall","src":"14165:30:27"},"nodeType":"YulExpressionStatement","src":"14165:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14215:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14226:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14211:3:27"},"nodeType":"YulFunctionCall","src":"14211:18:27"},{"hexValue":"596f75206861766520616c72656164792072657175657374656420666f722052","kind":"string","nodeType":"YulLiteral","src":"14231:34:27","type":"","value":"You have already requested for R"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14204:6:27"},"nodeType":"YulFunctionCall","src":"14204:62:27"},"nodeType":"YulExpressionStatement","src":"14204:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14286:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14297:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14282:3:27"},"nodeType":"YulFunctionCall","src":"14282:18:27"},{"hexValue":"6567697374726174696f6e","kind":"string","nodeType":"YulLiteral","src":"14302:13:27","type":"","value":"egistration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14275:6:27"},"nodeType":"YulFunctionCall","src":"14275:41:27"},"nodeType":"YulExpressionStatement","src":"14275:41:27"},{"nodeType":"YulAssignment","src":"14325:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14337:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14348:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14333:3:27"},"nodeType":"YulFunctionCall","src":"14333:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14325:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14102:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14116:4:27","type":""}],"src":"13951:407:27"},{"body":{"nodeType":"YulBlock","src":"14537:177:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14554:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14565:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14547:6:27"},"nodeType":"YulFunctionCall","src":"14547:21:27"},"nodeType":"YulExpressionStatement","src":"14547:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14588:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14599:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14584:3:27"},"nodeType":"YulFunctionCall","src":"14584:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14604:2:27","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14577:6:27"},"nodeType":"YulFunctionCall","src":"14577:30:27"},"nodeType":"YulExpressionStatement","src":"14577:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14627:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14638:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14623:3:27"},"nodeType":"YulFunctionCall","src":"14623:18:27"},{"hexValue":"456e746572206120313220646967697420416164686172204e6f2e","kind":"string","nodeType":"YulLiteral","src":"14643:29:27","type":"","value":"Enter a 12 digit Aadhar No."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14616:6:27"},"nodeType":"YulFunctionCall","src":"14616:57:27"},"nodeType":"YulExpressionStatement","src":"14616:57:27"},{"nodeType":"YulAssignment","src":"14682:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14694:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14705:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14690:3:27"},"nodeType":"YulFunctionCall","src":"14690:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14682:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14514:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14528:4:27","type":""}],"src":"14363:351:27"},{"body":{"nodeType":"YulBlock","src":"14893:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14910:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14921:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14903:6:27"},"nodeType":"YulFunctionCall","src":"14903:21:27"},"nodeType":"YulExpressionStatement","src":"14903:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14944:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14955:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14940:3:27"},"nodeType":"YulFunctionCall","src":"14940:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14960:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14933:6:27"},"nodeType":"YulFunctionCall","src":"14933:30:27"},"nodeType":"YulExpressionStatement","src":"14933:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14983:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14994:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14979:3:27"},"nodeType":"YulFunctionCall","src":"14979:18:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"14999:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14972:6:27"},"nodeType":"YulFunctionCall","src":"14972:62:27"},"nodeType":"YulExpressionStatement","src":"14972:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15054:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15065:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15050:3:27"},"nodeType":"YulFunctionCall","src":"15050:18:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"15070:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15043:6:27"},"nodeType":"YulFunctionCall","src":"15043:35:27"},"nodeType":"YulExpressionStatement","src":"15043:35:27"},{"nodeType":"YulAssignment","src":"15087:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15099:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15110:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15095:3:27"},"nodeType":"YulFunctionCall","src":"15095:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15087:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14870:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14884:4:27","type":""}],"src":"14719:401:27"},{"body":{"nodeType":"YulBlock","src":"15299:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15316:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15327:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15309:6:27"},"nodeType":"YulFunctionCall","src":"15309:21:27"},"nodeType":"YulExpressionStatement","src":"15309:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15350:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15361:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15346:3:27"},"nodeType":"YulFunctionCall","src":"15346:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"15366:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15339:6:27"},"nodeType":"YulFunctionCall","src":"15339:30:27"},"nodeType":"YulExpressionStatement","src":"15339:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15389:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15400:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15385:3:27"},"nodeType":"YulFunctionCall","src":"15385:18:27"},{"hexValue":"50726f73756d657220416c726561647920617070726f76656420627920796f75","kind":"string","nodeType":"YulLiteral","src":"15405:34:27","type":"","value":"Prosumer Already approved by you"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15378:6:27"},"nodeType":"YulFunctionCall","src":"15378:62:27"},"nodeType":"YulExpressionStatement","src":"15378:62:27"},{"nodeType":"YulAssignment","src":"15449:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15461:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15472:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15457:3:27"},"nodeType":"YulFunctionCall","src":"15457:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15449:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15276:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15290:4:27","type":""}],"src":"15125:356:27"},{"body":{"nodeType":"YulBlock","src":"15660:180:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15677:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15688:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15670:6:27"},"nodeType":"YulFunctionCall","src":"15670:21:27"},"nodeType":"YulExpressionStatement","src":"15670:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15711:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15722:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15707:3:27"},"nodeType":"YulFunctionCall","src":"15707:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"15727:2:27","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15700:6:27"},"nodeType":"YulFunctionCall","src":"15700:30:27"},"nodeType":"YulExpressionStatement","src":"15700:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15750:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15761:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15746:3:27"},"nodeType":"YulFunctionCall","src":"15746:18:27"},{"hexValue":"596f75206861766520416c7265616479205374616b656420456e65726779","kind":"string","nodeType":"YulLiteral","src":"15766:32:27","type":"","value":"You have Already Staked Energy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15739:6:27"},"nodeType":"YulFunctionCall","src":"15739:60:27"},"nodeType":"YulExpressionStatement","src":"15739:60:27"},{"nodeType":"YulAssignment","src":"15808:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15820:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15831:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15816:3:27"},"nodeType":"YulFunctionCall","src":"15816:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15808:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f0cc6fc952c56e6e0909ccf835e416a9db4dc9d89e8680085ce7505b6972f36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15637:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15651:4:27","type":""}],"src":"15486:354:27"},{"body":{"nodeType":"YulBlock","src":"16002:162:27","statements":[{"nodeType":"YulAssignment","src":"16012:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16024:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16035:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16020:3:27"},"nodeType":"YulFunctionCall","src":"16020:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16012:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16054:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"16065:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16047:6:27"},"nodeType":"YulFunctionCall","src":"16047:25:27"},"nodeType":"YulExpressionStatement","src":"16047:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16092:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16103:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16088:3:27"},"nodeType":"YulFunctionCall","src":"16088:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"16108:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16081:6:27"},"nodeType":"YulFunctionCall","src":"16081:34:27"},"nodeType":"YulExpressionStatement","src":"16081:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16135:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16146:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16131:3:27"},"nodeType":"YulFunctionCall","src":"16131:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"16151:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16124:6:27"},"nodeType":"YulFunctionCall","src":"16124:34:27"},"nodeType":"YulExpressionStatement","src":"16124:34:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15955:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15966:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15974:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15982:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15993:4:27","type":""}],"src":"15845:319:27"},{"body":{"nodeType":"YulBlock","src":"16343:168:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16360:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16371:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16353:6:27"},"nodeType":"YulFunctionCall","src":"16353:21:27"},"nodeType":"YulExpressionStatement","src":"16353:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16394:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16405:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16390:3:27"},"nodeType":"YulFunctionCall","src":"16390:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"16410:2:27","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16383:6:27"},"nodeType":"YulFunctionCall","src":"16383:30:27"},"nodeType":"YulExpressionStatement","src":"16383:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16433:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16444:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16429:3:27"},"nodeType":"YulFunctionCall","src":"16429:18:27"},{"hexValue":"596f75206e6f7420612050726f73756d6572","kind":"string","nodeType":"YulLiteral","src":"16449:20:27","type":"","value":"You not a Prosumer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16422:6:27"},"nodeType":"YulFunctionCall","src":"16422:48:27"},"nodeType":"YulExpressionStatement","src":"16422:48:27"},{"nodeType":"YulAssignment","src":"16479:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16502:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16487:3:27"},"nodeType":"YulFunctionCall","src":"16487:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16479:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16320:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16334:4:27","type":""}],"src":"16169:342:27"},{"body":{"nodeType":"YulBlock","src":"16690:172:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16707:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16718:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16700:6:27"},"nodeType":"YulFunctionCall","src":"16700:21:27"},"nodeType":"YulExpressionStatement","src":"16700:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16741:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16752:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16737:3:27"},"nodeType":"YulFunctionCall","src":"16737:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"16757:2:27","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16730:6:27"},"nodeType":"YulFunctionCall","src":"16730:30:27"},"nodeType":"YulExpressionStatement","src":"16730:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16780:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16791:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16776:3:27"},"nodeType":"YulFunctionCall","src":"16776:18:27"},{"hexValue":"41636375736564206e6f7420612050726f73756d6572","kind":"string","nodeType":"YulLiteral","src":"16796:24:27","type":"","value":"Accused not a Prosumer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16769:6:27"},"nodeType":"YulFunctionCall","src":"16769:52:27"},"nodeType":"YulExpressionStatement","src":"16769:52:27"},{"nodeType":"YulAssignment","src":"16830:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16842:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16853:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16838:3:27"},"nodeType":"YulFunctionCall","src":"16838:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16830:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16667:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16681:4:27","type":""}],"src":"16516:346:27"},{"body":{"nodeType":"YulBlock","src":"17041:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17058:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17069:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17051:6:27"},"nodeType":"YulFunctionCall","src":"17051:21:27"},"nodeType":"YulExpressionStatement","src":"17051:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17092:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17103:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17088:3:27"},"nodeType":"YulFunctionCall","src":"17088:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"17108:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17081:6:27"},"nodeType":"YulFunctionCall","src":"17081:30:27"},"nodeType":"YulExpressionStatement","src":"17081:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17131:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17142:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17127:3:27"},"nodeType":"YulFunctionCall","src":"17127:18:27"},{"hexValue":"416363757365642050726f73756d65722069732053757370656e646564","kind":"string","nodeType":"YulLiteral","src":"17147:31:27","type":"","value":"Accused Prosumer is Suspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17120:6:27"},"nodeType":"YulFunctionCall","src":"17120:59:27"},"nodeType":"YulExpressionStatement","src":"17120:59:27"},{"nodeType":"YulAssignment","src":"17188:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17200:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17211:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17196:3:27"},"nodeType":"YulFunctionCall","src":"17196:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17188:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17018:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17032:4:27","type":""}],"src":"16867:353:27"},{"body":{"nodeType":"YulBlock","src":"17399:173:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17416:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17427:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17409:6:27"},"nodeType":"YulFunctionCall","src":"17409:21:27"},"nodeType":"YulExpressionStatement","src":"17409:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17450:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17461:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17446:3:27"},"nodeType":"YulFunctionCall","src":"17446:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"17466:2:27","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17439:6:27"},"nodeType":"YulFunctionCall","src":"17439:30:27"},"nodeType":"YulExpressionStatement","src":"17439:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17489:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17500:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17485:3:27"},"nodeType":"YulFunctionCall","src":"17485:18:27"},{"hexValue":"50726f73756d657220697320446973617070726f766564","kind":"string","nodeType":"YulLiteral","src":"17505:25:27","type":"","value":"Prosumer is Disapproved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17478:6:27"},"nodeType":"YulFunctionCall","src":"17478:53:27"},"nodeType":"YulExpressionStatement","src":"17478:53:27"},{"nodeType":"YulAssignment","src":"17540:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17552:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17563:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17548:3:27"},"nodeType":"YulFunctionCall","src":"17548:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17540:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17376:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17390:4:27","type":""}],"src":"17225:347:27"},{"body":{"nodeType":"YulBlock","src":"17751:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17768:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17779:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17761:6:27"},"nodeType":"YulFunctionCall","src":"17761:21:27"},"nodeType":"YulExpressionStatement","src":"17761:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17802:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17813:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17798:3:27"},"nodeType":"YulFunctionCall","src":"17798:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"17818:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17791:6:27"},"nodeType":"YulFunctionCall","src":"17791:30:27"},"nodeType":"YulExpressionStatement","src":"17791:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17841:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17852:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17837:3:27"},"nodeType":"YulFunctionCall","src":"17837:18:27"},{"hexValue":"596f752061726520446973617070726f766564","kind":"string","nodeType":"YulLiteral","src":"17857:21:27","type":"","value":"You are Disapproved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17830:6:27"},"nodeType":"YulFunctionCall","src":"17830:49:27"},"nodeType":"YulExpressionStatement","src":"17830:49:27"},{"nodeType":"YulAssignment","src":"17888:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17900:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17911:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17896:3:27"},"nodeType":"YulFunctionCall","src":"17896:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17888:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17728:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17742:4:27","type":""}],"src":"17577:343:27"},{"body":{"nodeType":"YulBlock","src":"17963:74:27","statements":[{"body":{"nodeType":"YulBlock","src":"17986:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"17988:16:27"},"nodeType":"YulFunctionCall","src":"17988:18:27"},"nodeType":"YulExpressionStatement","src":"17988:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17983:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17976:6:27"},"nodeType":"YulFunctionCall","src":"17976:9:27"},"nodeType":"YulIf","src":"17973:35:27"},{"nodeType":"YulAssignment","src":"18017:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18026:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"18029:1:27"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"18022:3:27"},"nodeType":"YulFunctionCall","src":"18022:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"18017:1:27"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17948:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"17951:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"17957:1:27","type":""}],"src":"17925:112:27"},{"body":{"nodeType":"YulBlock","src":"18094:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"18153:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18155:16:27"},"nodeType":"YulFunctionCall","src":"18155:18:27"},"nodeType":"YulExpressionStatement","src":"18155:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18125:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18118:6:27"},"nodeType":"YulFunctionCall","src":"18118:9:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18111:6:27"},"nodeType":"YulFunctionCall","src":"18111:17:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18133:1:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18144:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18140:3:27"},"nodeType":"YulFunctionCall","src":"18140:6:27"},{"name":"x","nodeType":"YulIdentifier","src":"18148:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18136:3:27"},"nodeType":"YulFunctionCall","src":"18136:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18130:2:27"},"nodeType":"YulFunctionCall","src":"18130:21:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18107:3:27"},"nodeType":"YulFunctionCall","src":"18107:45:27"},"nodeType":"YulIf","src":"18104:71:27"},{"nodeType":"YulAssignment","src":"18184:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18199:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"18202:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18195:3:27"},"nodeType":"YulFunctionCall","src":"18195:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18184:7:27"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18073:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"18076:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18082:7:27","type":""}],"src":"18042:168:27"},{"body":{"nodeType":"YulBlock","src":"18389:175:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18406:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18417:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18399:6:27"},"nodeType":"YulFunctionCall","src":"18399:21:27"},"nodeType":"YulExpressionStatement","src":"18399:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18440:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18451:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18436:3:27"},"nodeType":"YulFunctionCall","src":"18436:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"18456:2:27","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18429:6:27"},"nodeType":"YulFunctionCall","src":"18429:30:27"},"nodeType":"YulExpressionStatement","src":"18429:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18479:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18490:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18475:3:27"},"nodeType":"YulFunctionCall","src":"18475:18:27"},{"hexValue":"4469646e27742073656e6420656e6f756768204d6174696321","kind":"string","nodeType":"YulLiteral","src":"18495:27:27","type":"","value":"Didn't send enough Matic!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18468:6:27"},"nodeType":"YulFunctionCall","src":"18468:55:27"},"nodeType":"YulExpressionStatement","src":"18468:55:27"},{"nodeType":"YulAssignment","src":"18532:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18544:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18555:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18540:3:27"},"nodeType":"YulFunctionCall","src":"18540:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18532:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0476f23c45f458c311a526706d6b90266147c599bd68d096e25488defac32084__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18366:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18380:4:27","type":""}],"src":"18215:349:27"},{"body":{"nodeType":"YulBlock","src":"18743:244:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18760:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18771:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18753:6:27"},"nodeType":"YulFunctionCall","src":"18753:21:27"},"nodeType":"YulExpressionStatement","src":"18753:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18794:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18805:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18790:3:27"},"nodeType":"YulFunctionCall","src":"18790:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"18810:2:27","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18783:6:27"},"nodeType":"YulFunctionCall","src":"18783:30:27"},"nodeType":"YulExpressionStatement","src":"18783:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18833:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18844:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18829:3:27"},"nodeType":"YulFunctionCall","src":"18829:18:27"},{"hexValue":"53656c65637465642050726f647563657220646f206861766520656e6f756768","kind":"string","nodeType":"YulLiteral","src":"18849:34:27","type":"","value":"Selected Producer do have enough"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18822:6:27"},"nodeType":"YulFunctionCall","src":"18822:62:27"},"nodeType":"YulExpressionStatement","src":"18822:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18904:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18915:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18900:3:27"},"nodeType":"YulFunctionCall","src":"18900:18:27"},{"hexValue":"20456e6f75676820456e657267792042616c616e6365","kind":"string","nodeType":"YulLiteral","src":"18920:24:27","type":"","value":" Enough Energy Balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18893:6:27"},"nodeType":"YulFunctionCall","src":"18893:52:27"},"nodeType":"YulExpressionStatement","src":"18893:52:27"},{"nodeType":"YulAssignment","src":"18954:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18966:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18977:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18962:3:27"},"nodeType":"YulFunctionCall","src":"18962:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18954:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_10216fcf0b608737c9ebd44549ab7662b45b101bcf0a8f821aa113c9c83feca1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18720:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18734:4:27","type":""}],"src":"18569:418:27"},{"body":{"nodeType":"YulBlock","src":"19166:161:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19183:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19194:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19176:6:27"},"nodeType":"YulFunctionCall","src":"19176:21:27"},"nodeType":"YulExpressionStatement","src":"19176:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19217:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19228:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19213:3:27"},"nodeType":"YulFunctionCall","src":"19213:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"19233:2:27","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19206:6:27"},"nodeType":"YulFunctionCall","src":"19206:30:27"},"nodeType":"YulExpressionStatement","src":"19206:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19256:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19267:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19252:3:27"},"nodeType":"YulFunctionCall","src":"19252:18:27"},{"hexValue":"63616c6c206661696c6564","kind":"string","nodeType":"YulLiteral","src":"19272:13:27","type":"","value":"call failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19245:6:27"},"nodeType":"YulFunctionCall","src":"19245:41:27"},"nodeType":"YulExpressionStatement","src":"19245:41:27"},{"nodeType":"YulAssignment","src":"19295:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19307:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19318:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19303:3:27"},"nodeType":"YulFunctionCall","src":"19303:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19295:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19143:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19157:4:27","type":""}],"src":"18992:335:27"},{"body":{"nodeType":"YulBlock","src":"19506:167:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19523:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19534:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19516:6:27"},"nodeType":"YulFunctionCall","src":"19516:21:27"},"nodeType":"YulExpressionStatement","src":"19516:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19557:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19568:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19553:3:27"},"nodeType":"YulFunctionCall","src":"19553:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"19573:2:27","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19546:6:27"},"nodeType":"YulFunctionCall","src":"19546:30:27"},"nodeType":"YulExpressionStatement","src":"19546:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19596:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19607:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19592:3:27"},"nodeType":"YulFunctionCall","src":"19592:18:27"},{"hexValue":"416c72656164792053757370656e646564","kind":"string","nodeType":"YulLiteral","src":"19612:19:27","type":"","value":"Already Suspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19585:6:27"},"nodeType":"YulFunctionCall","src":"19585:47:27"},"nodeType":"YulExpressionStatement","src":"19585:47:27"},{"nodeType":"YulAssignment","src":"19641:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19653:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19664:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19649:3:27"},"nodeType":"YulFunctionCall","src":"19649:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19641:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19483:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19497:4:27","type":""}],"src":"19332:341:27"},{"body":{"nodeType":"YulBlock","src":"19852:226:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19869:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19880:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19862:6:27"},"nodeType":"YulFunctionCall","src":"19862:21:27"},"nodeType":"YulExpressionStatement","src":"19862:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19903:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19914:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19899:3:27"},"nodeType":"YulFunctionCall","src":"19899:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"19919:2:27","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19892:6:27"},"nodeType":"YulFunctionCall","src":"19892:30:27"},"nodeType":"YulExpressionStatement","src":"19892:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19942:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19953:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19938:3:27"},"nodeType":"YulFunctionCall","src":"19938:18:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"19958:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19931:6:27"},"nodeType":"YulFunctionCall","src":"19931:62:27"},"nodeType":"YulExpressionStatement","src":"19931:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20013:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20024:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20009:3:27"},"nodeType":"YulFunctionCall","src":"20009:18:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"20029:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20002:6:27"},"nodeType":"YulFunctionCall","src":"20002:34:27"},"nodeType":"YulExpressionStatement","src":"20002:34:27"},{"nodeType":"YulAssignment","src":"20045:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20057:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20068:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20053:3:27"},"nodeType":"YulFunctionCall","src":"20053:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20045:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19829:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19843:4:27","type":""}],"src":"19678:400:27"},{"body":{"nodeType":"YulBlock","src":"20257:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20274:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20285:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20267:6:27"},"nodeType":"YulFunctionCall","src":"20267:21:27"},"nodeType":"YulExpressionStatement","src":"20267:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20308:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20319:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20304:3:27"},"nodeType":"YulFunctionCall","src":"20304:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"20324:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20297:6:27"},"nodeType":"YulFunctionCall","src":"20297:30:27"},"nodeType":"YulExpressionStatement","src":"20297:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20347:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20358:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20343:3:27"},"nodeType":"YulFunctionCall","src":"20343:18:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"20363:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20336:6:27"},"nodeType":"YulFunctionCall","src":"20336:62:27"},"nodeType":"YulExpressionStatement","src":"20336:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20418:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20429:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20414:3:27"},"nodeType":"YulFunctionCall","src":"20414:18:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"20434:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20407:6:27"},"nodeType":"YulFunctionCall","src":"20407:32:27"},"nodeType":"YulExpressionStatement","src":"20407:32:27"},{"nodeType":"YulAssignment","src":"20448:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20460:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20471:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20456:3:27"},"nodeType":"YulFunctionCall","src":"20456:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20448:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20234:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20248:4:27","type":""}],"src":"20083:398:27"},{"body":{"nodeType":"YulBlock","src":"20660:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20677:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20688:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20670:6:27"},"nodeType":"YulFunctionCall","src":"20670:21:27"},"nodeType":"YulExpressionStatement","src":"20670:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20711:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20722:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20707:3:27"},"nodeType":"YulFunctionCall","src":"20707:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"20727:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20700:6:27"},"nodeType":"YulFunctionCall","src":"20700:30:27"},"nodeType":"YulExpressionStatement","src":"20700:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20750:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20761:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20746:3:27"},"nodeType":"YulFunctionCall","src":"20746:18:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"20766:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20739:6:27"},"nodeType":"YulFunctionCall","src":"20739:61:27"},"nodeType":"YulExpressionStatement","src":"20739:61:27"},{"nodeType":"YulAssignment","src":"20809:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20821:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20832:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20817:3:27"},"nodeType":"YulFunctionCall","src":"20817:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20809:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20637:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20651:4:27","type":""}],"src":"20486:355:27"},{"body":{"nodeType":"YulBlock","src":"21020:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21037:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21048:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21030:6:27"},"nodeType":"YulFunctionCall","src":"21030:21:27"},"nodeType":"YulExpressionStatement","src":"21030:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21071:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21082:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21067:3:27"},"nodeType":"YulFunctionCall","src":"21067:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"21087:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21060:6:27"},"nodeType":"YulFunctionCall","src":"21060:30:27"},"nodeType":"YulExpressionStatement","src":"21060:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21110:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21121:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21106:3:27"},"nodeType":"YulFunctionCall","src":"21106:18:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"21126:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21099:6:27"},"nodeType":"YulFunctionCall","src":"21099:59:27"},"nodeType":"YulExpressionStatement","src":"21099:59:27"},{"nodeType":"YulAssignment","src":"21167:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21179:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21190:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21175:3:27"},"nodeType":"YulFunctionCall","src":"21175:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21167:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20997:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21011:4:27","type":""}],"src":"20846:353:27"},{"body":{"nodeType":"YulBlock","src":"21378:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21395:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21406:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21388:6:27"},"nodeType":"YulFunctionCall","src":"21388:21:27"},"nodeType":"YulExpressionStatement","src":"21388:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21429:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21440:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21425:3:27"},"nodeType":"YulFunctionCall","src":"21425:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"21445:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21418:6:27"},"nodeType":"YulFunctionCall","src":"21418:30:27"},"nodeType":"YulExpressionStatement","src":"21418:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21468:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21479:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21464:3:27"},"nodeType":"YulFunctionCall","src":"21464:18:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"21484:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21457:6:27"},"nodeType":"YulFunctionCall","src":"21457:62:27"},"nodeType":"YulExpressionStatement","src":"21457:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21539:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21550:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21535:3:27"},"nodeType":"YulFunctionCall","src":"21535:18:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"21555:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21528:6:27"},"nodeType":"YulFunctionCall","src":"21528:35:27"},"nodeType":"YulExpressionStatement","src":"21528:35:27"},{"nodeType":"YulAssignment","src":"21572:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21584:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21595:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21580:3:27"},"nodeType":"YulFunctionCall","src":"21580:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21572:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21355:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21369:4:27","type":""}],"src":"21204:401:27"},{"body":{"nodeType":"YulBlock","src":"21784:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21801:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21812:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21794:6:27"},"nodeType":"YulFunctionCall","src":"21794:21:27"},"nodeType":"YulExpressionStatement","src":"21794:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21835:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21846:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21831:3:27"},"nodeType":"YulFunctionCall","src":"21831:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"21851:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21824:6:27"},"nodeType":"YulFunctionCall","src":"21824:30:27"},"nodeType":"YulExpressionStatement","src":"21824:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21885:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21870:3:27"},"nodeType":"YulFunctionCall","src":"21870:18:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"21890:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21863:6:27"},"nodeType":"YulFunctionCall","src":"21863:62:27"},"nodeType":"YulExpressionStatement","src":"21863:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21945:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21956:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21941:3:27"},"nodeType":"YulFunctionCall","src":"21941:18:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"21961:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21934:6:27"},"nodeType":"YulFunctionCall","src":"21934:33:27"},"nodeType":"YulExpressionStatement","src":"21934:33:27"},{"nodeType":"YulAssignment","src":"21976:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21988:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21999:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21984:3:27"},"nodeType":"YulFunctionCall","src":"21984:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21976:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21761:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21775:4:27","type":""}],"src":"21610:399:27"},{"body":{"nodeType":"YulBlock","src":"22188:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22205:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22216:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22198:6:27"},"nodeType":"YulFunctionCall","src":"22198:21:27"},"nodeType":"YulExpressionStatement","src":"22198:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22239:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22250:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22235:3:27"},"nodeType":"YulFunctionCall","src":"22235:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"22255:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22228:6:27"},"nodeType":"YulFunctionCall","src":"22228:30:27"},"nodeType":"YulExpressionStatement","src":"22228:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22278:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22289:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22274:3:27"},"nodeType":"YulFunctionCall","src":"22274:18:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"22294:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22267:6:27"},"nodeType":"YulFunctionCall","src":"22267:62:27"},"nodeType":"YulExpressionStatement","src":"22267:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22349:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22360:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22345:3:27"},"nodeType":"YulFunctionCall","src":"22345:18:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"22365:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22338:6:27"},"nodeType":"YulFunctionCall","src":"22338:36:27"},"nodeType":"YulExpressionStatement","src":"22338:36:27"},{"nodeType":"YulAssignment","src":"22383:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22395:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22406:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22391:3:27"},"nodeType":"YulFunctionCall","src":"22391:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22383:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22165:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22179:4:27","type":""}],"src":"22014:402:27"},{"body":{"nodeType":"YulBlock","src":"22595:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22612:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22623:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22605:6:27"},"nodeType":"YulFunctionCall","src":"22605:21:27"},"nodeType":"YulExpressionStatement","src":"22605:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22646:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22657:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22642:3:27"},"nodeType":"YulFunctionCall","src":"22642:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"22662:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22635:6:27"},"nodeType":"YulFunctionCall","src":"22635:30:27"},"nodeType":"YulExpressionStatement","src":"22635:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22685:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22696:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22681:3:27"},"nodeType":"YulFunctionCall","src":"22681:18:27"},{"hexValue":"496e76616c696420756e617070726f76656450726f73756d657220496e646578","kind":"string","nodeType":"YulLiteral","src":"22701:34:27","type":"","value":"Invalid unapprovedProsumer Index"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22674:6:27"},"nodeType":"YulFunctionCall","src":"22674:62:27"},"nodeType":"YulExpressionStatement","src":"22674:62:27"},{"nodeType":"YulAssignment","src":"22745:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22768:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22753:3:27"},"nodeType":"YulFunctionCall","src":"22753:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22745:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22572:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22586:4:27","type":""}],"src":"22421:356:27"},{"body":{"nodeType":"YulBlock","src":"22814:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22831:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22834:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22824:6:27"},"nodeType":"YulFunctionCall","src":"22824:88:27"},"nodeType":"YulExpressionStatement","src":"22824:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22928:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22931:4:27","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22921:6:27"},"nodeType":"YulFunctionCall","src":"22921:15:27"},"nodeType":"YulExpressionStatement","src":"22921:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22952:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22955:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22945:6:27"},"nodeType":"YulFunctionCall","src":"22945:15:27"},"nodeType":"YulExpressionStatement","src":"22945:15:27"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"22782:184:27"},{"body":{"nodeType":"YulBlock","src":"23145:223:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23162:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23173:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23155:6:27"},"nodeType":"YulFunctionCall","src":"23155:21:27"},"nodeType":"YulExpressionStatement","src":"23155:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23196:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23207:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23192:3:27"},"nodeType":"YulFunctionCall","src":"23192:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"23212:2:27","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23185:6:27"},"nodeType":"YulFunctionCall","src":"23185:30:27"},"nodeType":"YulExpressionStatement","src":"23185:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23235:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23246:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23231:3:27"},"nodeType":"YulFunctionCall","src":"23231:18:27"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"23251:34:27","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23224:6:27"},"nodeType":"YulFunctionCall","src":"23224:62:27"},"nodeType":"YulExpressionStatement","src":"23224:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23306:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23317:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23302:3:27"},"nodeType":"YulFunctionCall","src":"23302:18:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"23322:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23295:6:27"},"nodeType":"YulFunctionCall","src":"23295:31:27"},"nodeType":"YulExpressionStatement","src":"23295:31:27"},{"nodeType":"YulAssignment","src":"23335:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23347:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23358:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23343:3:27"},"nodeType":"YulFunctionCall","src":"23343:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23335:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23122:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23136:4:27","type":""}],"src":"22971:397:27"},{"body":{"nodeType":"YulBlock","src":"23547:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23564:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23575:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23557:6:27"},"nodeType":"YulFunctionCall","src":"23557:21:27"},"nodeType":"YulExpressionStatement","src":"23557:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23598:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23609:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23594:3:27"},"nodeType":"YulFunctionCall","src":"23594:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"23614:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23587:6:27"},"nodeType":"YulFunctionCall","src":"23587:30:27"},"nodeType":"YulExpressionStatement","src":"23587:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23637:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23648:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23633:3:27"},"nodeType":"YulFunctionCall","src":"23633:18:27"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"23653:34:27","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23626:6:27"},"nodeType":"YulFunctionCall","src":"23626:62:27"},"nodeType":"YulExpressionStatement","src":"23626:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23708:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23719:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23704:3:27"},"nodeType":"YulFunctionCall","src":"23704:18:27"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"23724:4:27","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23697:6:27"},"nodeType":"YulFunctionCall","src":"23697:32:27"},"nodeType":"YulExpressionStatement","src":"23697:32:27"},{"nodeType":"YulAssignment","src":"23738:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23750:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23761:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23746:3:27"},"nodeType":"YulFunctionCall","src":"23746:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23738:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23524:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23538:4:27","type":""}],"src":"23373:398:27"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        tail := abi_encode_string(value3, add(headStart, 160))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), iszero(iszero(mload(add(_3, _4)))))\n            let _5 := 0x80\n            mstore(add(pos, _5), iszero(iszero(mload(add(_3, _5)))))\n            let _6 := 0xa0\n            mstore(add(pos, _6), mload(add(_3, _6)))\n            let _7 := 0xc0\n            mstore(add(pos, _7), mload(add(_3, _7)))\n            let _8 := 0xe0\n            mstore(add(pos, _8), mload(add(_3, _8)))\n            pos := add(pos, 0x0100)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_d40a0a793d1534782b36c5b5b02ddf47716308d2c0e8957bd017161181464636__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not Prosumer\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"You are Suspended\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not Owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not a Prosumer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already Unsuspended\")\n        tail := add(headStart, 96)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Call Failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Invalid Unapproved Prosumer ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Prosumer Already disapproved by \")\n        mstore(add(headStart, 96), \"you\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"You are an Owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Registration Failed, Insufficien\")\n        mstore(add(headStart, 96), \"t Fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are already a Prosumer in th\")\n        mstore(add(headStart, 96), \"e Network\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"You have already requested for R\")\n        mstore(add(headStart, 96), \"egistration\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Enter a 12 digit Aadhar No.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Prosumer Already approved by you\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f0cc6fc952c56e6e0909ccf835e416a9db4dc9d89e8680085ce7505b6972f36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"You have Already Staked Energy\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You not a Prosumer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Accused not a Prosumer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Accused Prosumer is Suspended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Prosumer is Disapproved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"You are Disapproved\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_0476f23c45f458c311a526706d6b90266147c599bd68d096e25488defac32084__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Didn't send enough Matic!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_10216fcf0b608737c9ebd44549ab7662b45b101bcf0a8f821aa113c9c83feca1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Selected Producer do have enough\")\n        mstore(add(headStart, 96), \" Enough Energy Balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already Suspended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Invalid unapprovedProsumer Index\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B78BC6B GT PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC7A7275E GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE706D568 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAE8 JUMPI DUP1 PUSH4 0xF4B16045 EQ PUSH2 0xB08 JUMPI DUP1 PUSH4 0xF85BAE78 EQ PUSH2 0xB43 JUMPI DUP1 PUSH4 0xFDBD2E8B EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE706D568 EQ PUSH2 0xA93 JUMPI DUP1 PUSH4 0xE7E4F9D9 EQ PUSH2 0xAA8 JUMPI DUP1 PUSH4 0xE814DB59 EQ PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCDB6D52D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xCDB6D52D EQ PUSH2 0xA06 JUMPI DUP1 PUSH4 0xCE1B815F EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0xA37 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC7A7275E EQ PUSH2 0x9A6 JUMPI DUP1 PUSH4 0xC8A9FB5E EQ PUSH2 0x9C6 JUMPI DUP1 PUSH4 0xC8B6BA49 EQ PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x90F8BA3C GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x9C01A6DF GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x9C01A6DF EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x9FF34115 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x966 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x90F8BA3C EQ PUSH2 0x8C4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x9A9DDD16 EQ PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8BDA812F GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8BDA812F EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x863 JUMPI DUP1 PUSH4 0x8FAC6371 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x8FFF20F3 EQ PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B78BC6B EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x7FB400F9 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0x83AE0367 EQ PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x476343EE GT PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x572B6C05 GT PUSH2 0x23E JUMPI DUP1 PUSH4 0x66CC771F GT PUSH2 0x218 JUMPI DUP1 PUSH4 0x66CC771F EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x766 JUMPI DUP1 PUSH4 0x73DE8CE8 EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0x75AE81B3 EQ PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0x5F81B606 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x612536FC EQ PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EA30B2F GT PUSH2 0x27A JUMPI DUP1 PUSH4 0x4EA30B2F EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0x4EC9DD8D EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x4EF8AB77 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x50A7AC25 EQ PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x476343EE EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x486FF0CD EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x4CA46D19 EQ PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x30D JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x3628C333 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x40CB3342 EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x349 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB6D83E2 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xE264F80 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x143859EB EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x1CFDCE EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xD7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4CD CALLDATASIZE PUSH1 0x4 PUSH2 0x449D JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54D PUSH1 0x1C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SELFBALANCE SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x59D CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0xE8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x11EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x1342 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60C PUSH2 0x607 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x18FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x652 PUSH2 0x64D CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x6C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x6F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x4567 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x754 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x781 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x7CD CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH2 0x1AB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x828 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1C4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER BALANCE PUSH2 0x39C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x1D38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CF PUSH2 0x893 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x8DF CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC PUSH2 0x1DCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x921 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x652 PUSH2 0x94E CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x459 PUSH2 0x961 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x981 CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0x21DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x9A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4473 JUMP JUMPDEST PUSH2 0x2292 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x22AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0x9E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0x289B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA01 CALLDATASIZE PUSH1 0x4 PUSH2 0x4617 JUMP JUMPDEST PUSH2 0x2B75 JUMP JUMPDEST PUSH2 0x459 PUSH2 0xA14 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0x30B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39C PUSH2 0xA68 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72C PUSH2 0x34AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D9 JUMP JUMPDEST PUSH2 0x35C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x43FA JUMP JUMPDEST PUSH2 0x3876 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xB03 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH2 0x38DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB23 CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB5E CALLDATASIZE PUSH1 0x4 PUSH2 0x4534 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB99 CALLDATASIZE PUSH1 0x4 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0xBE7 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC13 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC75 PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP6 DUP6 PUSH2 0x39EB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0xCFE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD0E JUMPI PUSH2 0xD0E PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xD78 CALLER DUP3 PUSH2 0x3B43 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0xDE8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xDF8 JUMPI PUSH2 0xDF8 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE1A PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE27 DUP6 DUP3 DUP6 PUSH2 0x3C02 JUMP JUMPDEST PUSH2 0xE32 DUP6 DUP6 DUP6 PUSH2 0x3C8E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE48 PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP6 DUP6 PUSH2 0xE80 DUP6 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x4750 JUMP JUMPDEST PUSH2 0x39EB JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0xE9B PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0xF91 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920556E73757370656E64656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x102E PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x1072 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1102 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x10B5 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x16 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x10FC DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x1127 DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x16 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0xF PUSH2 0x116C PUSH1 0x1 DUP8 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x117C JUMPI PUSH2 0x117C PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1A PUSH2 0x11B3 DUP3 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x11C3 JUMPI PUSH2 0x11C3 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x11F8 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x125D SWAP1 SELFBALANCE PUSH2 0x47B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x133E JUMPI PUSH1 0x0 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1281 JUMPI PUSH2 0x1281 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x132B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST POP DUP1 PUSH2 0x1336 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1262 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH2 0x134F SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x137B SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x139D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x13DC PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0x1482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x14CF PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920646973617070726F76656420627920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x796F750000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1578 JUMPI PUSH2 0x1578 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x15AE PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15FC JUMPI PUSH2 0x15FC PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1632 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x166D JUMPI PUSH2 0x166D PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x16A3 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16F1 JUMPI PUSH2 0x16F1 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x172A DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x15 PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1749 JUMPI PUSH2 0x1749 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1782 DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x133E JUMPI PUSH2 0x179B DUP3 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0x15 PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x17B2 JUMPI PUSH2 0x17B2 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x14 SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x17FB JUMPI PUSH2 0x17FB PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1A DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x183D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1872 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x189E SWAP1 PUSH2 0x46D2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x194C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x196B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x197B JUMPI PUSH2 0x197B PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP3 SWAP1 DUP9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A1A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 PUSH2 0x1AC4 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1B3A PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B95 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH32 0x50726F73756D657220417070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1BB6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C11 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH32 0x50726F73756D657220446973617070726F766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x50726F73756D6572204E6F742056657269666965642059657400000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1C9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x1CB9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CC9 JUMPI PUSH2 0x1CC9 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xD78 CALLER DUP3 PUSH2 0x40A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DC1 SWAP2 SWAP1 PUSH2 0x47DE JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBE7 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x19A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616E204F776E657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0x1EC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E204661696C65642C20496E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420466565000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1F49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C726561647920612050726F73756D657220696E207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65204E6574776F726B0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x1F51 PUSH2 0x4209 JUMP JUMPDEST ISZERO PUSH2 0x1FC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C72656164792072657175657374656420666F722052 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6567697374726174696F6E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1FED JUMPI PUSH2 0x1FD9 PUSH1 0xA DUP4 PUSH2 0x47B0 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1FE5 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FC8 JUMP JUMPDEST DUP1 PUSH1 0xC EQ PUSH2 0x203D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E746572206120313220646967697420416164686172204E6F2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP5 DUP2 MSTORE PUSH1 0xE0 DUP8 ADD DUP6 DUP2 MSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP7 MSTORE SWAP7 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 PUSH1 0x7 SWAP1 SWAP7 MUL SWAP6 DUP7 ADD SSTORE SWAP7 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE673 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP7 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE674 DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE675 DUP4 ADD DUP1 SLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP2 ISZERO ISZERO SWAP1 SWAP4 MUL OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE676 DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE677 DUP4 ADD SSTORE MLOAD PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE678 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21E6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP4 DUP2 LT ISZERO PUSH2 0x2285 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xE32 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x39EB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x229D PUSH2 0x39E1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC82 DUP2 DUP6 DUP6 PUSH2 0x3C8E JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x22B6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x230B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0x235C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2373 JUMPI PUSH2 0x2373 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x23A9 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920617070726F76656420627920796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x242C JUMPI PUSH2 0x242C PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x2462 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x24B0 JUMPI PUSH2 0x24B0 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x24E6 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x25E4 JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2521 JUMPI PUSH2 0x2521 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x2557 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x15 PUSH1 0x0 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25A5 JUMPI PUSH2 0x25A5 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x25DE DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 PUSH1 0x10 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x25FD JUMPI PUSH2 0x25FD PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2636 DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x133E JUMPI PUSH1 0x1 PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x265B JUMPI PUSH2 0x265B PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xF SLOAD PUSH2 0x268B SWAP1 PUSH1 0x1 PUSH2 0x4750 JUMP JUMPDEST PUSH1 0x10 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x269E JUMPI PUSH2 0x269E PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x11 PUSH1 0x0 PUSH1 0x10 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x26CC JUMPI PUSH2 0x26CC PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x7 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0xF SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2720 JUMPI PUSH2 0x2720 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP8 SSTORE SWAP6 DUP6 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 PUSH1 0x7 SWAP3 DUP4 MUL SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP2 DUP3 SSTORE DUP3 DUP2 ADD SLOAD SWAP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0x27E5 DUP3 PUSH2 0x3E7B JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0x27F5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2805 JUMPI PUSH2 0x2805 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0xF DUP1 SLOAD DUP6 MSTORE PUSH1 0x12 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0x13 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2859 SWAP1 DUP6 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2869 JUMPI PUSH2 0x2869 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x28E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x2908 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2918 JUMPI PUSH2 0x2918 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x2997 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x29A7 JUMPI PUSH2 0x29A7 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD PUSH1 0x0 EQ PUSH2 0x2A08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520416C7265616479205374616B656420456E657267790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 PUSH1 0xF PUSH2 0x2A26 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2A36 JUMPI PUSH2 0x2A36 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x2A54 DUP5 PUSH2 0x4270 JUMP JUMPDEST PUSH1 0xF PUSH2 0x2A61 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2A71 JUMPI PUSH2 0x2A71 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE DUP3 PUSH1 0xF PUSH2 0x2A93 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2AA3 JUMPI PUSH2 0x2AA3 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1C SLOAD PUSH2 0x2ACD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2292 JUMP JUMPDEST POP DUP1 PUSH32 0x4007CE7DAB5A51B53D861F6A858AF463890CD224C3B719792961BE0E13D482AC PUSH1 0xF PUSH2 0x2AFD PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2B0D JUMPI PUSH2 0x2B0D PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD SLOAD PUSH1 0xF PUSH1 0x1 DUP6 PUSH2 0x2B2E SWAP2 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2B3E JUMPI PUSH2 0x2B3E PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD MSTORE DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 PUSH2 0x2B81 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2BEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E6F7420612050726F73756D65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2C5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41636375736564206E6F7420612050726F73756D657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2C8B PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2CF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363757365642050726F73756D65722069732053757370656E646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 PUSH2 0x2D01 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x12 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2DA7 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2E11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220697320446973617070726F766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 PUSH2 0x2E1D PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x12 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2EA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520446973617070726F76656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH2 0x2EC1 SWAP2 SWAP1 PUSH2 0x4750 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x13 PUSH1 0x0 PUSH2 0x2ED2 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x19 SLOAD PUSH1 0x1A DUP1 SLOAD SWAP1 POP LT ISZERO PUSH2 0x3007 JUMPI PUSH1 0x1A DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x5 SWAP1 SWAP2 MUL PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF63E DUP2 ADD SWAP2 DUP3 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF63F DUP4 ADD SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF640 DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH2 0x2FE6 SWAP4 PUSH32 0x57C384A7D1C54F3A1B2E5E67B2617B8224FDFD1EA7234EEA573A6FF665FF641 SWAP1 SWAP2 ADD SWAP3 ADD SWAP1 PUSH2 0x4328 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x308F JUMP JUMPDEST DUP1 PUSH1 0x1A PUSH1 0x19 SLOAD PUSH1 0x18 SLOAD PUSH2 0x301A SWAP2 SWAP1 PUSH2 0x482E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x302A JUMPI PUSH2 0x302A PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3072 SWAP3 SWAP2 SWAP1 PUSH2 0x4328 JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x18 SLOAD LT ISZERO PUSH2 0x30B1 JUMPI PUSH1 0x18 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x30AB DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SWAP1 PUSH2 0x3123 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3133 JUMPI PUSH2 0x3133 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x165BDD48185C994814DD5CDC195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF PUSH2 0x31A3 PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x31B3 JUMPI PUSH2 0x31B3 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD PUSH2 0x31CF SWAP2 SWAP1 PUSH2 0x4842 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x3221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469646E27742073656E6420656E6F756768204D617469632100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xF PUSH2 0x322E PUSH1 0x1 DUP6 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x323E JUMPI PUSH2 0x323E PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD DUP3 GT ISZERO PUSH2 0x32C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C65637465642050726F647563657220646F206861766520656E6F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20456E6F75676820456E657267792042616C616E636500000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP2 PUSH1 0xF PUSH2 0x32D3 PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x32E3 JUMPI PUSH2 0x32E3 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x32FF SWAP2 SWAP1 PUSH2 0x4723 JUMP JUMPDEST PUSH1 0xF PUSH2 0x330C PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x331C JUMPI PUSH2 0x331C PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1C SLOAD PUSH2 0x3347 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP5 PUSH2 0x3C8E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x339F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0xF PUSH2 0x3402 PUSH1 0x1 DUP7 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3412 JUMPI PUSH2 0x3412 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x13 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP6 PUSH32 0xA46B53C1E4323DCBD0CC304FA8E1718A9E400F89E5CE26B321E4EDB32BFDAD0B PUSH1 0xF PUSH2 0x3466 PUSH1 0x1 DUP5 PUSH2 0x4723 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3476 JUMPI PUSH2 0x3476 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0x34A0 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH1 0x0 PUSH2 0x34BC PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x35CD PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x36B9 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792053757370656E646564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 PUSH2 0x3746 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x378A PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x381A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x37CD PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x17 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x3814 DUP4 PUSH2 0x4768 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x383F DUP4 PUSH2 0x477F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xF PUSH2 0x116C DUP3 DUP8 PUSH2 0x4723 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x3882 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x38D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x38E8 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x393D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x133E JUMPI PUSH2 0x3952 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x396E JUMPI PUSH2 0x396E PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x39CF JUMPI DUP2 PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x399D JUMPI PUSH2 0x399D PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x39D9 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3940 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D33 PUSH2 0x42F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3AE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3BAB SWAP2 SWAP1 PUSH2 0x4750 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x11E6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3C81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x11E6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x39EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3D0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3E15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 PUSH2 0x3E87 PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3EDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0x3F2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420756E617070726F76656450726F73756D657220496E646578 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x3F3E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4723 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x4039 JUMPI PUSH1 0x10 PUSH2 0x3F52 DUP3 PUSH1 0x1 PUSH2 0x4750 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3F62 JUMPI PUSH2 0x3F62 PUSH2 0x473A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x10 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F83 JUMPI PUSH2 0x3F83 PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x4031 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3F2F JUMP JUMPDEST POP PUSH1 0x10 DUP1 SLOAD DUP1 PUSH2 0x404B JUMPI PUSH2 0x404B PUSH2 0x4861 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x7 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x411C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x41AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x4268 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422A JUMPI PUSH2 0x422A PUSH2 0x473A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x4256 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x4260 DUP2 PUSH2 0x477F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x420D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x42BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10283937B9BAB6B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1D DUP3 SWAP1 SSTORE PUSH1 0x0 PUSH2 0x42CD PUSH2 0x1D38 JUMP JUMPDEST SWAP1 POP PUSH2 0x42D9 DUP2 DUP5 PUSH2 0x47B0 JUMP JUMPDEST PUSH2 0x42E8 SWAP1 PUSH5 0x2540BE400 PUSH2 0x4842 JUMP JUMPDEST PUSH1 0x1E DUP2 SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 CALLDATASIZE LT DUP1 ISZERO SWAP1 PUSH2 0x4311 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0x4323 JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4334 SWAP1 PUSH2 0x46D2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4356 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x439C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x436F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x439C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x439C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x439C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4381 JUMP JUMPDEST POP PUSH2 0x43A8 SWAP3 SWAP2 POP PUSH2 0x43AC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x43A8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x43AD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43F3 DUP3 PUSH2 0x43C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x440C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4439 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x441D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x444B JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x43F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4413 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x448F DUP4 PUSH2 0x43C1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x44B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44BB DUP5 PUSH2 0x43C1 JUMP JUMPDEST SWAP3 POP PUSH2 0x44C9 PUSH1 0x20 DUP6 ADD PUSH2 0x43C1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4520 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x4413 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4550 DUP4 PUSH2 0x43C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x455E PUSH1 0x20 DUP5 ADD PUSH2 0x43C1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x45F4 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4584 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x462A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x465D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x466F JUMPI PUSH2 0x466F PUSH2 0x4601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4697 JUMPI PUSH2 0x4697 PUSH2 0x4601 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x46B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x46E6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4707 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4735 JUMPI PUSH2 0x4735 PUSH2 0x470D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4763 JUMPI PUSH2 0x4763 PUSH2 0x470D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x4777 JUMPI PUSH2 0x4777 PUSH2 0x470D JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4793 JUMPI PUSH2 0x4793 PUSH2 0x470D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x47BF JUMPI PUSH2 0x47BF PUSH2 0x479A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x47F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47FF DUP7 PUSH2 0x47C4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x4822 PUSH1 0x80 DUP8 ADD PUSH2 0x47C4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x483D JUMPI PUSH2 0x483D PUSH2 0x479A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x485C JUMPI PUSH2 0x485C PUSH2 0x470D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xDB PUSH29 0x72959AEBB404F79B7848BF9C5B49B9E44E26267B40572D7B45E88E09C1 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"156:6002:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:45:24;;;;;;;;;;-1:-1:-1;1462:45:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;552:25:27;;;540:2;525:18;1462:45:24;;;;;;;;293:23;;;;;;;;;;-1:-1:-1;293:23:24;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;937:55:27;;;919:74;;907:2;892:18;293:23:24;773:226:27;2154:98:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4431:197::-;;;;;;;;;;-1:-1:-1;4431:197:15;;;;;:::i;:::-;;:::i;:::-;;;2130:14:27;;2123:22;2105:41;;2093:2;2078:18;4431:197:15;1965:187:27;4076:134:23;;;;;;;;;;-1:-1:-1;4076:134:23;;;;;:::i;:::-;;:::i;:::-;;3872:164;;;;;;;;;;;;;:::i;1702:52:24:-;;;;;;;;;;-1:-1:-1;1702:52:24;;;;;:::i;:::-;;;;;;;;;;;;;;3242:106:15;;;;;;;;;;-1:-1:-1;3329:12:15;;3242:106;;5190:286;;;;;;;;;;-1:-1:-1;5190:286:15;;;;;:::i;:::-;;:::i;323:39:24:-;;;;;;;;;;-1:-1:-1;323:39:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;3091:91:15;;;;;;;;;;-1:-1:-1;3091:91:15;;3173:2;2632:36:27;;2620:2;2605:18;3091:91:15;2490:184:27;1526:143:23;;;;;;;;;;;;1646:13;;-1:-1:-1;;;;;1646:13:23;1576:7;3506:18:15;;;;;;;;;;;1613:21:23;;1526:143;;;;;2853:25:27;;;2909:2;2894:18;;2887:34;;;;2826:18;1526:143:23;2679:248:27;5871:234:15;;;;;;;;;;-1:-1:-1;5871:234:15;;;;;:::i;:::-;;:::i;11968:1157:24:-;;;;;;;;;;-1:-1:-1;11968:1157:24;;;;;:::i;:::-;;:::i;13266:315::-;;;;;;;;;;;;;:::i;2881:40::-;;;;;;;;;;;;;:::i;9392:1413::-;;;;;;;;;;-1:-1:-1;9392:1413:24;;;;;:::i;:::-;;:::i;2066:27::-;;;;;;;;;;-1:-1:-1;2066:27:24;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;3639:168:23:-;;;;;;;;;;;;;:::i;1273:35:24:-;;;;;;;;;;-1:-1:-1;1273:35:24;;;;;:::i;:::-;;:::i;:::-;;;;4038:25:27;;;-1:-1:-1;;;;;4099:55:27;;;4094:2;4079:18;;4072:83;4171:18;;;4164:34;;;;4241:14;;4234:22;4229:2;4214:18;;4207:50;4301:14;4294:22;4288:3;4273:19;;4266:51;4348:3;4333:19;;4326:35;4392:3;4377:19;;4370:35;4436:3;4421:19;;4414:35;4025:3;4010:19;1273:35:24;3707:748:27;2028:32:24;;;;;;;;;;;;;;;;1293:144:2;;;;;;;;;;-1:-1:-1;1293:144:2;;;;;:::i;:::-;1413:17;;-1:-1:-1;;;;;1400:30:2;;;1413:17;;1400:30;;1293:144;653:61:24;;;;;;;;;;-1:-1:-1;653:61:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6682:159;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1589:51::-;;;;;;;;;;-1:-1:-1;1589:51:24;;;;;:::i;:::-;;;;;;;;;;;;;;3406:125:15;;;;;;;;;;-1:-1:-1;3406:125:15;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:15;3480:7;3506:18;;;;;;;;;;;;3406:125;1994:28:24;;;;;;;;;;;;;;;;795:63;;;;;;;;;;-1:-1:-1;795:63:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6894:451;;;;;;;;;;-1:-1:-1;6894:451:24;;;;;:::i;:::-;;:::i;4250:127:23:-;;;;;;;;;;-1:-1:-1;4250:127:23;;;;;:::i;:::-;;:::i;1787:106::-;;;;;;;;;;-1:-1:-1;1874:10:23;1837:7;3506:18:15;;;;;;;;;;;1787:106:23;;1677:102;;;;;;;;;;-1:-1:-1;1753:10:23;:18;1677:102;;529:291:25;;;;;;;;;;;;;:::i;1406:50:24:-;;;;;;;;;;-1:-1:-1;1406:50:24;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1406:50:24;;;265:21;;;;;;;;;;;;;;;;1646:50;;;;;;;;;;-1:-1:-1;1646:50:24;;;;;:::i;:::-;;;;;;;;;;;;;;2365:102:15;;;;;;;;;;;;;:::i;1535:48:24:-;;;;;;;;;;-1:-1:-1;1535:48:24;;;;;:::i;:::-;;;;;;;;;;;;;;1314:37;;;;;;;;;;-1:-1:-1;1314:37:24;;;;;:::i;:::-;;:::i;3338:1071::-;;;;;;:::i;:::-;;:::i;6592:427:15:-;;;;;;;;;;-1:-1:-1;6592:427:15;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;;;;;-1:-1:-1;3727:189:15;;;;;:::i;:::-;;:::i;7419:1934:24:-;;;;;;;;;;-1:-1:-1;7419:1934:24;;;;;:::i;:::-;;:::i;2598:974:23:-;;;;;;;;;;-1:-1:-1;2598:974:23;;;;;:::i;:::-;;:::i;4415:1229:24:-;;;;;;;;;;-1:-1:-1;4415:1229:24;;;;;:::i;:::-;;:::i;4511:1335:23:-;;;;;;:::i;:::-;;:::i;1018:119:2:-;;;;;;;;;;-1:-1:-1;1113:17:2;;-1:-1:-1;;;;;1113:17:2;1018:119;;236:23:24;;;;;;;;;;;;;;;;3974:149:15;;;;;;;;;;-1:-1:-1;3974:149:15;;;;;:::i;:::-;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;6546:130:24;;;;;;;;;;;;;:::i;10879:1051::-;;;;;;;;;;-1:-1:-1;10879:1051:24;;;;;:::i;:::-;;:::i;5746:86::-;;;;;;;;;;-1:-1:-1;5746:86:24;;;;;:::i;:::-;;:::i;13617:253::-;;;;;;;;;;-1:-1:-1;13617:253:24;;;;;:::i;:::-;;:::i;368:60::-;;;;;;;;;;-1:-1:-1;368:60:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;509:63;;;;;;;;;;-1:-1:-1;509:63:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:42;;;;;;;;;;-1:-1:-1;1358:42:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;293:23;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;293:23:24;;-1:-1:-1;293:23:24;:::o;2154:98:15:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:15;;4431:197;-1:-1:-1;;;4431:197:15:o;4076:134:23:-;5955:10;5944:22;;;;:10;:22;;;;;;;;5936:47;;;;-1:-1:-1;;;5936:47:23;;8066:2:27;5936:47:23;;;8048:21:27;8105:2;8085:18;;;8078:30;-1:-1:-1;;;8124:18:27;;;8117:42;8176:18;;5936:47:23;;;;;;;;;6086:10:::1;6075:22;::::0;;;:10:::1;:22;::::0;;;;;6057:17:::1;::::0;6075:26:::1;::::0;6100:1:::1;::::0;6075:26:::1;:::i;:::-;6057:45;;;;;;;;:::i;:::-;;;;;;;;;;;:56;;;;;;;;;;;;6056:57;6048:87;;;::::0;-1:-1:-1;;;6048:87:23;;8915:2:27;6048:87:23::1;::::0;::::1;8897:21:27::0;8954:2;8934:18;;;8927:30;-1:-1:-1;;;8973:18:27;;;8966:47;9030:18;;6048:87:23::1;8713:341:27::0;6048:87:23::1;4169:33:::2;4175:10;4187:14;4169:5;:33::i;:::-;4076:134:::0;:::o;3872:164::-;5955:10;3936:7;5944:22;;;:10;:22;;;;;;;;5936:47;;;;-1:-1:-1;;;5936:47:23;;8066:2:27;5936:47:23;;;8048:21:27;8105:2;8085:18;;;8078:30;-1:-1:-1;;;8124:18:27;;;8117:42;8176:18;;5936:47:23;7864:336:27;5936:47:23;3992:10:::1;3981:22;::::0;;;:10:::1;:22;::::0;;;;;3963:17:::1;::::0;3981:26:::1;::::0;4006:1:::1;::::0;3981:26:::1;:::i;:::-;3963:45;;;;;;;;:::i;:::-;;;;;;;;;;;:65;;;3956:72;;3872:164:::0;:::o;5190:286:15:-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:15;;5190:286;-1:-1:-1;;;;5190:286:15:o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;6038:25;:38;;;;:::i;:::-;6013:8;:64::i;11968:1157:24:-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;12072:40:::1;12083:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;12083:28:24::1;12072:40:::0;;:10:::1;:40:::0;;;;;;::::1;;12064:67;;;::::0;-1:-1:-1;;;12064:67:24;;9731:2:27;12064:67:24::1;::::0;::::1;9713:21:27::0;9770:2;9750:18;;;9743:30;9809:16;9789:18;;;9782:44;9843:18;;12064:67:24::1;9529:338:27::0;12064:67:24::1;12150:41;12162:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;12162:28:24::1;12150:41:::0;;:11:::1;:41:::0;;;;;;12192:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12150:55:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;12150:55:24;;::::1;;12149:56;12141:88;;;::::0;-1:-1:-1;;;12141:88:24;;10074:2:27;12141:88:24::1;::::0;::::1;10056:21:27::0;10113:2;10093:18;;;10086:30;10152:21;10132:18;;;10125:49;10191:18;;12141:88:24::1;9872:343:27::0;12141:88:24::1;12240:27;12270:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;12270:28:24::1;12309:32:::0;;;:11:::1;:32:::0;;;;;12270:28;;;;12309:32;12342:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12309:46:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;12309:46:24;;;:53;;-1:-1:-1;;12309:53:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;12424:30;::::1;::::0;;:9:::1;:30:::0;;;;;;12455:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12424:44:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;12424:44:24;;::::1;;12420:179;;;-1:-1:-1::0;;;;;12484:30:24;::::1;12531:5;12484:30:::0;;;:9:::1;:30;::::0;;;;12531:5;12515:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12484:44:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;12484:44:24;;;:52;;-1:-1:-1;;12484:52:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;12550:36;::::1;::::0;;:15:::1;:36:::0;;;;;:38;;;::::1;::::0;::::1;:::i;:::-;;;;;;12420:179;-1:-1:-1::0;;;;;12640:38:24;::::1;12609:28;12640:38:::0;;;:17:::1;:38;::::0;;;;:40;;;12609:28;12640:40:::1;::::0;::::1;:::i;:::-;;;;;12609:71;;12762:8;;12739:20;:31;12735:384;;;-1:-1:-1::0;;;;;12889:38:24;::::1;;::::0;;;:17:::1;:38;::::0;;;;;;;12882:45;;;12948:15:::1;:36:::0;;;;;12941:43;;;12998:17:::1;13016:15;13030:1;13016:11:::0;:15:::1;:::i;:::-;12998:34;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:45:::1;:34;::::0;;::::1;;:45;:53:::0;;;::::1;;;;-1:-1:-1::0;;12998:53:24;;::::1;::::0;;;::::1;::::0;;:45:::1;13065:9;13075:15;12998:45:::0;13075:11;:15:::1;:::i;:::-;13065:26;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:36;;:43:::0;;-1:-1:-1;;13065:43:24::1;::::0;::::1;;::::0;;;::::1;::::0;;12735:384:::1;12054:1071;;11968:1157:::0;;:::o;13266:315::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;13363:6:::1;:13:::0;13317:19:::1;::::0;13339:37:::1;::::0;:21:::1;:37;:::i;:::-;13317:59;;13392:9;13387:188;13411:6;:13:::0;13407:17;::::1;13387:188;;;13446:16;13476:6;13483:1;13476:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;13468:47:::1;::::0;-1:-1:-1;;;;;13476:9:24;;::::1;::::0;13499:11;;13468:47;;13476:9;13468:47;13499:11;13476:9;13468:47:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13445:70;;;13537:11;13529:35;;;::::0;-1:-1:-1;;;13529:35:24;;11227:2:27;13529:35:24::1;::::0;::::1;11209:21:27::0;11266:2;11246:18;;;11239:30;11305:13;11285:18;;;11278:41;11336:18;;13529:35:24::1;11025:335:27::0;13529:35:24::1;-1:-1:-1::0;13426:3:24;::::1;::::0;::::1;:::i;:::-;;;;13387:188;;;;13307:274;13266:315::o:0;2881:40::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9392:1413::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;9537:19:::1;:26:::0;9513:50;::::1;9492:127;;;::::0;-1:-1:-1;;;9492:127:24;;11567:2:27;9492:127:24::1;::::0;::::1;11549:21:27::0;11606:2;11586:18;;;11579:30;11645:32;11625:18;;;11618:60;11695:18;;9492:127:24::1;11365:354:27::0;9492:127:24::1;9650:11;:64;9662:19;9682:21;9662:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;9662:51:24::1;9650:64:::0;;;::::1;::::0;;;;;;;;;9715:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;9650:78:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;9650:78:24;;::::1;;:87;9629:169;;;::::0;-1:-1:-1;;;9629:169:24;;11926:2:27;9629:169:24::1;::::0;::::1;11908:21:27::0;11965:2;11945:18;;;11938:30;12004:34;11984:18;;;11977:62;12075:5;12055:18;;;12048:33;12098:19;;9629:169:24::1;11724:399:27::0;9629:169:24::1;9890:4;9809:11;:64;9821:19;9841:21;9821:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;9821:51:24::1;9809:64:::0;;;::::1;::::0;;;;;;;;;9874:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;9809:78:24::1;-1:-1:-1::0;;;;;9809:78:24::1;;;;;;;;;;;;;:85;;;;;;;;;;;;;;;;;;9955:11;:64;9967:19;9987:21;9967:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;9967:51:24::1;9955:64:::0;;;::::1;::::0;;;;;;;;;10020:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;9955:78:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;9955:78:24;;::::1;;9951:274;;;10127:5;10049:8;:61;10058:19;10078:21;10058:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10058:51:24::1;10049:61:::0;;;::::1;::::0;;;;;;;;;10111:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;10049:75:24::1;-1:-1:-1::0;;;;;10049:75:24::1;;;;;;;;;;;;;:83;;;;;;;;;;;;;;;;;;10146:13;:66;10160:19;10180:21;10160:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10160:51:24::1;10146:66:::0;;;::::1;::::0;;;;;;;;:68;;;::::1;::::0;::::1;:::i;:::-;;;;;;9951:274;10235:27;10265:16;:91;10295:19;10315:21;10295:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10295:51:24::1;10265:91:::0;;;::::1;::::0;;;;;;;;:93;;;::::1;::::0;::::1;:::i;:::-;;;;;10235:123;;10437:8;;10415:19;:30;10411:388;;;10551:60;10589:21;10551:37;:60::i;:::-;10632:16;:69;10649:19;10669:21;10649:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10649:51:24::1;10632:69:::0;;;::::1;::::0;;;;;;;;10625:76;;;10736:19:::1;:42:::0;;10722:13:::1;::::0;10649:42;10736:19;10756:21;;10736:42;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10736:51:24::1;10722:66:::0;;;::::1;::::0;;;;;;;;10715:73;9482:1323:::1;9392:1413:::0;:::o;2066:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2066:27:24;;;;;;;-1:-1:-1;;2066:27:24;;;:::o;3639:168:23:-;5955:10;3705:7;5944:22;;;:10;:22;;;;;;;;5936:47;;;;-1:-1:-1;;;5936:47:23;;8066:2:27;5936:47:23;;;8048:21:27;8105:2;8085:18;;;8078:30;-1:-1:-1;;;8124:18:27;;;8117:42;8176:18;;5936:47:23;7864:336:27;5936:47:23;3761:10:::1;3750:22;::::0;;;:10:::1;:22;::::0;;;;;3732:17:::1;::::0;3750:26:::1;::::0;3775:1:::1;::::0;3750:26:::1;:::i;:::-;3732:45;;;;;;;;:::i;:::-;;;;;;;;;;;:67;;;3725:74;;3639:168:::0;:::o;1273:35:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1273:35:24;;;;;;;;;;;;;;;;;;;:::o;6682:159::-;6738:17;6817;6810:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6810:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6682:159;:::o;6894:451::-;7017:13;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;-1:-1:-1;;;;;7046:36:24;::::1;;::::0;;;:8:::1;:36;::::0;;;;;7083:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7046:50:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7046:50:24;;::::1;;7042:297;;;-1:-1:-1::0;;7112:28:24::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;;6894:451::o;7042:297::-:1;-1:-1:-1::0;;;;;7161:39:24;::::1;;::::0;;;:11:::1;:39;::::0;;;;;7201:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7161:53:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7161:53:24;;::::1;;7157:182;;;-1:-1:-1::0;;7230:31:24::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;;6894:451::o;7157:182::-:1;-1:-1:-1::0;7292:36:24::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;7157:182:::1;6894:451:::0;;;:::o;4250:127:23:-;5955:10;5944:22;;;;:10;:22;;;;;;;;5936:47;;;;-1:-1:-1;;;5936:47:23;;8066:2:27;5936:47:23;;;8048:21:27;8105:2;8085:18;;;8078:30;-1:-1:-1;;;8124:18:27;;;8117:42;8176:18;;5936:47:23;7864:336:27;5936:47:23;6086:10:::1;6075:22;::::0;;;:10:::1;:22;::::0;;;;;6057:17:::1;::::0;6075:26:::1;::::0;6100:1:::1;::::0;6075:26:::1;:::i;:::-;6057:45;;;;;;;;:::i;:::-;;;;;;;;;;;:56;;;;;;;;;;;;6056:57;6048:87;;;::::0;-1:-1:-1;;;6048:87:23;;8915:2:27;6048:87:23::1;::::0;::::1;8897:21:27::0;8954:2;8934:18;;;8927:30;-1:-1:-1;;;8973:18:27;;;8966:47;9030:18;;6048:87:23::1;8713:341:27::0;6048:87:23::1;4338:31:::2;4344:10;4356:12;4338:5;:31::i;1864:21::-:0;1857:28;;1787:106;:::o;529:291:25:-;576:3;641:9;762;;;;;;;;;-1:-1:-1;;;;;762:9:25;-1:-1:-1;;;;;762:25:25;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;592:197:25;;529:291;-1:-1:-1;;;;;529:291:25:o;2365:102:15:-;2421:13;2453:7;2446:14;;;;;:::i;1314:37:24:-;;;;;;;;;;;;3338:1071;3425:10;3417:19;;;;:7;:19;;;;;;;;3416:20;3408:49;;;;-1:-1:-1;;;3408:49:24;;12992:2:27;3408:49:24;;;12974:21:27;13031:2;13011:18;;;13004:30;13070:18;13050;;;13043:46;13106:18;;3408:49:24;12790:340:27;3408:49:24;3488:6;;3475:9;:19;;3467:69;;;;-1:-1:-1;;;3467:69:24;;13337:2:27;3467:69:24;;;13319:21:27;13376:2;13356:18;;;13349:30;13415:34;13395:18;;;13388:62;13486:7;13466:18;;;13459:35;13511:19;;3467:69:24;13135:401:27;3467:69:24;3566:10;3555:22;;;;:10;:22;;;;;;;;3554:23;3546:77;;;;-1:-1:-1;;;3546:77:24;;13743:2:27;3546:77:24;;;13725:21:27;13782:2;13762:18;;;13755:30;13821:34;13801:18;;;13794:62;13892:11;13872:18;;;13865:39;13921:19;;3546:77:24;13541:405:27;3546:77:24;3642:13;:11;:13::i;:::-;3641:14;3633:70;;;;-1:-1:-1;;;3633:70:24;;14153:2:27;3633:70:24;;;14135:21:27;14192:2;14172:18;;;14165:30;14231:34;14211:18;;;14204:62;14302:13;14282:18;;;14275:41;14333:19;;3633:70:24;13951:407:27;3633:70:24;3735:9;3714:18;3783:87;3790:15;;3783:87;;3821:16;3835:2;3821:16;;:::i;:::-;;-1:-1:-1;3851:8:24;;;;:::i;:::-;;;;3783:87;;;3888:6;3898:2;3888:12;3880:52;;;;-1:-1:-1;;;3880:52:24;;14565:2:27;3880:52:24;;;14547:21:27;14604:2;14584:18;;;14577:30;14643:29;14623:18;;;14616:57;14690:18;;3880:52:24;14363:351:27;3880:52:24;-1:-1:-1;;4006:288:24;;;;;;;;;-1:-1:-1;4006:288:24;;;4067:10;4006:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4367:19;:35;;4006:288;4367:35;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4367:35:24;-1:-1:-1;;;;;4367:35:24;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4367:35:24;;;;;;-1:-1:-1;;4367:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3338:1071::o;6592:427:15:-;6685:4;6701:13;6717:12;:10;:12::i;:::-;-1:-1:-1;;;;;4089:18:15;;;6739:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;:18;;-1:-1:-1;6809:35:15;;;;6801:85;;;;-1:-1:-1;;;6801:85:15;;14921:2:27;6801:85:15;;;14903:21:27;14960:2;14940:18;;;14933:30;14999:34;14979:18;;;14972:62;15070:7;15050:18;;;15043:35;15095:19;;6801:85:15;14719:401:27;6801:85:15;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;7419:1934:24:-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;7561:19:::1;:26:::0;7537:50;::::1;7516:127;;;::::0;-1:-1:-1;;;7516:127:24;;11567:2:27;7516:127:24::1;::::0;::::1;11549:21:27::0;11606:2;11586:18;;;11579:30;11645:32;11625:18;;;11618:60;11695:18;;7516:127:24::1;11365:354:27::0;7516:127:24::1;7674:8;:61;7683:19;7703:21;7683:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;7683:51:24::1;7674:61:::0;;;::::1;::::0;;;;;;;;;7736:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7674:75:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7674:75:24;;::::1;;:84;7653:163;;;::::0;-1:-1:-1;;;7653:163:24;;15327:2:27;7653:163:24::1;::::0;::::1;15309:21:27::0;;;15346:18;;;15339:30;15405:34;15385:18;;;15378:62;15457:18;;7653:163:24::1;15125:356:27::0;7653:163:24::1;7905:4;7827:8;:61;7836:19;7856:21;7836:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;7836:51:24::1;7827:61:::0;;;::::1;::::0;;;;;;;;;7889:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7827:75:24::1;-1:-1:-1::0;;;;;7827:75:24::1;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;7979:11;:64;7991:19;8011:21;7991:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;7991:51:24::1;7979:64:::0;;;::::1;::::0;;;;;;;;;8044:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7979:78:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7979:78:24;;::::1;;7975:280;;;8154:5;8073:11;:64;8085:19;8105:21;8085:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;8085:51:24::1;8073:64:::0;;;::::1;::::0;;;;;;;;;8138:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;8073:78:24::1;-1:-1:-1::0;;;;;8073:78:24::1;;;;;;;;;;;;;:86;;;;;;;;;;;;;;;;;;8173:16;:69;8190:19;8210:21;8190:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;8190:51:24::1;8173:69:::0;;;::::1;::::0;;;;;;;;:71;;;::::1;::::0;::::1;:::i;:::-;;;;;;7975:280;8265:24;8292:13;:88;8319:19;8339:21;8319:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;8319:51:24::1;8292:88:::0;;;::::1;::::0;;;;;;;;:90;;;::::1;::::0;::::1;:::i;:::-;;;;;8265:117;;8455:8;;8436:16;:27;8432:915;;;8631:4;8576:19;8596:21;8576:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:52;;:59:::0;;-1:-1:-1;;8576:59:24::1;::::0;::::1;;::::0;;;::::1;::::0;;8733:17:::1;:24:::0;:28:::1;::::0;-1:-1:-1;8733:28:24::1;:::i;:::-;8676:19;8696:21;8676:42;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;:85;;;;8859:4;8793:10;:63;8804:19;8824:21;8804:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:51;;::::0;-1:-1:-1;;;;;8804:51:24::1;8793:63:::0;;;::::1;::::0;;;;;;;;:70;;-1:-1:-1;;8793:70:24::1;::::0;::::1;;::::0;;;::::1;::::0;;8900:19:::1;:42:::0;;8877:17:::1;::::0;8900:19;8920:21;;8900:42;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;8877:66;;::::1;::::0;;::::1;::::0;;;;;;;;;8900:42:::1;::::0;;::::1;::::0;;::::1;8877:66:::0;;;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;8877:66:24::1;-1:-1:-1::0;;;;;8877:66:24;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;8877:66:24;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;-1:-1:-1::0;;8877:66:24;;;-1:-1:-1;;8877:66:24;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;8957:60:::1;8995:21:::0;8957:37:::1;:60::i;:::-;9124:17;9159:24:::0;;:28:::1;::::0;9186:1:::1;::::0;9159:28:::1;:::i;:::-;9124:77;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:86:::1;:77;::::0;;::::1;;:86:::0;::::1;::::0;9096:17:::1;:24:::0;;9080:41;;:15:::1;:41:::0;;;;;;:130;;-1:-1:-1;;;;;;9080:130:24::1;-1:-1:-1::0;;;;;9124:86:24;;::::1;9080:130:::0;;;::::1;::::0;;9295:41;;;9224:10:::1;::::0;9124:77;;9096:17;9253:28:::1;::::0;9295:41;9253:28:::1;:::i;:::-;9235:47;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:56:::1;:47;::::0;;::::1;;:56:::0;;;::::1;::::0;-1:-1:-1;;;;;9235:56:24::1;9224:68:::0;;;::::1;::::0;;;;;;;;:112;7506:1847:::1;7419:1934:::0;:::o;2598:974:23:-;5955:10;2739:7;5944:22;;;:10;:22;;;;;;;;5936:47;;;;-1:-1:-1;;;5936:47:23;;8066:2:27;5936:47:23;;;8048:21:27;8105:2;8085:18;;;8078:30;-1:-1:-1;;;8124:18:27;;;8117:42;8176:18;;5936:47:23;7864:336:27;5936:47:23;6086:10:::1;6075:22;::::0;;;:10:::1;:22;::::0;;;;;6057:17:::1;::::0;6075:26:::1;::::0;6100:1:::1;::::0;6075:26:::1;:::i;:::-;6057:45;;;;;;;;:::i;:::-;;;;;;;;;;;:56;;;;;;;;;;;;6056:57;6048:87;;;::::0;-1:-1:-1;;;6048:87:23;;8915:2:27;6048:87:23::1;::::0;::::1;8897:21:27::0;8954:2;8934:18;;;8927:30;-1:-1:-1;;;8973:18:27;;;8966:47;9030:18;;6048:87:23::1;8713:341:27::0;6048:87:23::1;2810:10:::2;2799:22;::::0;;;:10:::2;:22;::::0;;;;;2781:17:::2;::::0;2799:26:::2;::::0;2824:1:::2;::::0;2799:26:::2;:::i;:::-;2781:45;;;;;;;;:::i;:::-;;;;;;;;;;;:66;;;2851:1;2781:71;2759:151;;;::::0;-1:-1:-1;;;2759:151:23;;15688:2:27;2759:151:23::2;::::0;::::2;15670:21:27::0;15727:2;15707:18;;;15700:30;15766:32;15746:18;;;15739:60;15816:18;;2759:151:23::2;15486:354:27::0;2759:151:23::2;2956:10;2923:19;2945:22:::0;;;:10:::2;:22;::::0;;;;;3037:15;2980:17:::2;2998:15;3012:1;2945:22:::0;2998:15:::2;:::i;:::-;2980:34;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;:72;;;;3123:29;3136:15;3123:12;:29::i;:::-;3063:17;3081:15;3095:1;3081:11:::0;:15:::2;:::i;:::-;3063:34;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:56:::2;:34;::::0;;::::2;;:56;:90:::0;3222:17;3164::::2;3182:15;3196:1;3182:11:::0;:15:::2;:::i;:::-;3164:34;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:55:::2;:34;::::0;;::::2;;:55;:75:::0;3261:13:::2;::::0;3252:42:::2;::::0;-1:-1:-1;;;;;3261:13:23::2;3276:17:::0;3252:8:::2;:42::i;:::-;-1:-1:-1::0;3339:11:23;3312:221:::2;3365:17;3383:15;3397:1;3339:11:::0;3383:15:::2;:::i;:::-;3365:34;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;;3434:17;3466:1;3452:11;:15;;;;:::i;:::-;3434:34;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;:56:::2;:34;::::0;;::::2;;:56;::::0;3312:221:::2;::::0;;16047:25:27;;;16088:18;;;16081:34;16131:18;;16124:34;;;16035:2;16020:18;3312:221:23::2;;;;;;;3553:11:::0;2598:974;-1:-1:-1;;;2598:974:23:o;4415:1229:24:-;4513:10;:24;4524:12;:10;:12::i;:::-;-1:-1:-1;;;;;4513:24:24;;;;;;;;;;;;-1:-1:-1;4513:24:24;;;;4505:55;;;;-1:-1:-1;;;4505:55:24;;16371:2:27;4505:55:24;;;16353:21:27;16410:2;16390:18;;;16383:30;16449:20;16429:18;;;16422:48;16487:18;;4505:55:24;16169:342:27;4505:55:24;4578:40;4589:28;;;:15;:28;;;;;;;;;-1:-1:-1;;;;;4589:28:24;4578:40;;:10;:40;;;;;;;;4570:75;;;;-1:-1:-1;;;4570:75:24;;16718:2:27;4570:75:24;;;16700:21:27;16757:2;16737:18;;;16730:30;16796:24;16776:18;;;16769:52;16838:18;;4570:75:24;16516:346:27;4570:75:24;4677:39;4687:28;;;:15;:28;;;;;;;;;-1:-1:-1;;;;;4687:28:24;4677:39;;:9;:39;;;;;;4717:12;:10;:12::i;:::-;-1:-1:-1;;;;;4677:53:24;;;;;;;;;;;;-1:-1:-1;4677:53:24;;;;4676:54;4655:130;;;;-1:-1:-1;;;4655:130:24;;17069:2:27;4655:130:24;;;17051:21:27;17108:2;17088:18;;;17081:30;17147:31;17127:18;;;17120:59;17196:18;;4655:130:24;16867:353:27;4655:130:24;4804:9;:23;4814:12;:10;:12::i;:::-;-1:-1:-1;;;;;4804:23:24;;;;;;;;;;;;;;;;;-1:-1:-1;4804:23:24;;;4828:28;;;:15;:28;;;;;;;;;4804:53;;;;;;;;;4803:54;4795:84;;;;-1:-1:-1;;;4795:84:24;;8915:2:27;4795:84:24;;;8897:21:27;8954:2;8934:18;;;8927:30;-1:-1:-1;;;8973:18:27;;;8966:47;9030:18;;4795:84:24;8713:341:27;4795:84:24;4911:41;4923:28;;;:15;:28;;;;;;;;;-1:-1:-1;;;;;4923:28:24;4911:41;;:11;:41;;;;;;4953:12;:10;:12::i;:::-;-1:-1:-1;;;;;4911:55:24;;;;;;;;;;;;-1:-1:-1;4911:55:24;;;;4910:56;4889:126;;;;-1:-1:-1;;;4889:126:24;;17427:2:27;4889:126:24;;;17409:21:27;17466:2;17446:18;;;17439:30;17505:25;17485:18;;;17478:53;17548:18;;4889:126:24;17225:347:27;4889:126:24;5034:11;:25;5046:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:25:24;;;;;;;;;;;;;;;;;-1:-1:-1;5034:25:24;;;5060:28;;;:15;:28;;;;;;;;;5034:55;;;;;;;;;5033:56;5025:88;;;;-1:-1:-1;;;5025:88:24;;17779:2:27;5025:88:24;;;17761:21:27;17818:2;17798:18;;;17791:30;17857:21;17837:18;;;17830:49;17896:18;;5025:88:24;17577:343:27;5025:88:24;5124:25;5152:222;;;;;;;;5188:9;:16;;;;5207:1;5188:20;;;;:::i;:::-;5152:222;;;;5236:10;:24;5247:12;:10;:12::i;:::-;-1:-1:-1;;;;;5236:24:24;-1:-1:-1;;;;;5236:24:24;;;;;;;;;;;;;5152:222;;;;5284:11;5152:222;;;;5320:13;5152:222;;;;5358:5;5152:222;;;;;5124:250;;5408:12;;5389:9;:16;;;;:31;5385:169;;;5436:9;:25;;;;;;;-1:-1:-1;5436:25:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5451:9;;5436:25;;;;;;;;;;;:::i;:::-;-1:-1:-1;5436:25:24;;;;;;;;;;;;-1:-1:-1;;5436:25:24;;;;;;;;;;5385:169;;;5534:9;5492;5518:12;;5502:13;;:28;;;;:::i;:::-;5492:39;;;;;;;;:::i;:::-;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5492:51:24;;;;;;;;;;;;-1:-1:-1;;5492:51:24;;;;;;;;;;5385:169;5584:12;;5568:13;;:28;5564:74;;;5612:13;:15;;;:13;:15;;;:::i;:::-;;;;;;5564:74;4495:1149;4415:1229;;:::o;4511:1335:23:-;5955:10;5944:22;;;;:10;:22;;;;;;;;5936:47;;;;-1:-1:-1;;;5936:47:23;;8066:2:27;5936:47:23;;;8048:21:27;8105:2;8085:18;;;8078:30;-1:-1:-1;;;8124:18:27;;;8117:42;8176:18;;5936:47:23;7864:336:27;5936:47:23;6086:10:::1;6075:22;::::0;;;:10:::1;:22;::::0;;;;;6057:17:::1;::::0;6075:26:::1;::::0;6100:1:::1;::::0;6075:26:::1;:::i;:::-;6057:45;;;;;;;;:::i;:::-;;;;;;;;;;;:56;;;;;;;;;;;;6056:57;6048:87;;;::::0;-1:-1:-1;;;6048:87:23;;8915:2:27;6048:87:23::1;::::0;::::1;8897:21:27::0;8954:2;8934:18;;;8927:30;-1:-1:-1;;;8973:18:27;;;8966:47;9030:18;;6048:87:23::1;8713:341:27::0;6048:87:23::1;4650:24:::2;4748:11:::0;4677:17:::2;4695:14;4708:1;4695:10:::0;:14:::2;:::i;:::-;4677:33;;;;;;;;:::i;:::-;;;;;;;;;;;:55;;;:82;;;;:::i;:::-;4650:109;;4791:16;4778:9;:29;;4770:67;;;::::0;-1:-1:-1;;;4770:67:23;;18417:2:27;4770:67:23::2;::::0;::::2;18399:21:27::0;18456:2;18436:18;;;18429:30;18495:27;18475:18;;;18468:55;18540:18;;4770:67:23::2;18215:349:27::0;4770:67:23::2;4885:17;4903:14;4916:1;4903:10:::0;:14:::2;:::i;:::-;4885:33;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;;4870:11;:69;;4848:173;;;::::0;-1:-1:-1;;;4848:173:23;;18771:2:27;4848:173:23::2;::::0;::::2;18753:21:27::0;18810:2;18790:18;;;18783:30;18849:34;18829:18;;;18822:62;18920:24;18900:18;;;18893:52;18962:19;;4848:173:23::2;18569:418:27::0;4848:173:23::2;5243:11:::0;5173:17:::2;5191:14;5204:1;5191:10:::0;:14:::2;:::i;:::-;5173:33;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;;:81;;;;:::i;:::-;5103:17;5121:14;5134:1;5121:10:::0;:14:::2;:::i;:::-;5103:33;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:54:::2;:33;::::0;;::::2;;:54;:151:::0;5316:13:::2;::::0;5306:49:::2;::::0;-1:-1:-1;;;;;5316:13:23::2;5331:10;5343:11:::0;5306:9:::2;:49::i;:::-;5407:16;5437:27:::0;;;:15:::2;:27;::::0;;;;;;5429:94;;-1:-1:-1;;;;;5437:27:23;;::::2;::::0;5478:16;;5407;5429:94;5407:16;5429:94;5478:16;5437:27;5429:94:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5406:117;;;5544:11;5536:35;;;::::0;-1:-1:-1;;;5536:35:23;;19194:2:27;5536:35:23::2;::::0;::::2;19176:21:27::0;19233:2;19213:18;;;19206:30;19272:13;19252:18;;;19245:41;19303:18;;5536:35:23::2;18992:335:27::0;5536:35:23::2;5678:17;5696:14;5709:1;5696:10:::0;:14:::2;:::i;:::-;5678:33;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:53:::2;:33;::::0;;::::2;;:53:::0;;;::::2;::::0;5652:10:::2;5641:22:::0;;:10:::2;:22:::0;;;;;;;;5616:10;5589:249:::2;5746:17;5764:14;5777:1;5616:10:::0;5764:14:::2;:::i;:::-;5746:33;;;;;;;;:::i;:::-;;;;;;;;;;;:55;;;5816:11;5589:249;;;;;;2853:25:27::0;;;2909:2;2894:18;;2887:34;2841:2;2826:18;;2679:248;5589:249:23::2;;;;;;;;4639:1207;;4511:1335:::0;;:::o;6546:130:24:-;6614:17;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;6650:19:::1;6643:26:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;6650:19;6643:26;-1:-1:-1;;6643:26:24;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;6643:26:24::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;::::0;;;;;;::::1;::::0;;::::1;;;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;::::1;::::0;::::1;;;10879:1051:::0;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;10973:26:::1;11002:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;11002:28:24::1;11048:30:::0;;;:10:::1;:30:::0;;;;;;;::::1;;11040:57;;;::::0;-1:-1:-1;;;11040:57:24;;9731:2:27;11040:57:24::1;::::0;::::1;9713:21:27::0;9770:2;9750:18;;;9743:30;9809:16;9789:18;;;9782:44;9843:18;;11040:57:24::1;9529:338:27::0;11040:57:24::1;-1:-1:-1::0;;;;;11116:29:24;::::1;;::::0;;;:9:::1;:29;::::0;;;;;11146:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11116:43:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;11116:43:24;;::::1;;11115:44;11107:74;;;::::0;-1:-1:-1;;;11107:74:24;;19534:2:27;11107:74:24::1;::::0;::::1;19516:21:27::0;19573:2;19553:18;;;19546:30;19612:19;19592:18;;;19585:47;19649:18;;11107:74:24::1;19332:341:27::0;11107:74:24::1;-1:-1:-1::0;;;;;11192:29:24;::::1;;::::0;;;:9:::1;:29;::::0;;;;11238:4:::1;::::0;11222:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11192:43:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;11192:43:24;;;:50;;-1:-1:-1;;11192:50:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;11303:31;::::1;::::0;;:11:::1;:31:::0;;;;;;11335:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11303:45:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;11303:45:24;;::::1;;11299:182;;;-1:-1:-1::0;;;;;11364:31:24;::::1;11412:5;11364:31:::0;;;:11:::1;:31;::::0;;;;11412:5;11396:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11364:45:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;11364:45:24;;;:53;;-1:-1:-1;;11364:53:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;11431:37;::::1;::::0;;:17:::1;:37:::0;;;;;:39;;;::::1;::::0;::::1;:::i;:::-;;;;;;11299:182;-1:-1:-1::0;;;;;11520:35:24;::::1;11491:26;11520:35:::0;;;:15:::1;:35;::::0;;;;:37;;;11491:26;11520:37:::1;::::0;::::1;:::i;:::-;;;;;11491:66;;11634:8;;11613:18;:29;11609:315;;;-1:-1:-1::0;;;;;11755:35:24;::::1;;::::0;;;:15:::1;:35;::::0;;;;11748:42;11852:4:::1;11804:17;11822:15;11852:4:::0;11822:11;:15:::1;:::i;5746:86::-:0;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;5809:6:::1;:16:::0;5746:86::o;13617:253::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;13694:9:::1;13689:175;13713:6;:13:::0;13709:17;::::1;13689:175;;;13764:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;13751:25:24::1;:6;13758:1;13751:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;13751:9:24::1;:25;13747:107;;;13808:8;13796:6;13803:1;13796:9;;;;;;;;:::i;:::-;;;;;;;;;:20;;;;;-1:-1:-1::0;;;;;13796:20:24::1;;;;;-1:-1:-1::0;;;;;13796:20:24::1;;;;;;13387:188;13307:274;13266:315::o:0;13747:107::-:1;13728:3:::0;::::1;::::0;::::1;:::i;:::-;;;;13689:175;;1147:145:23::0;1228:7;1255:29;:27;:29::i;10504:370:15:-;-1:-1:-1;;;;;10635:19:15;;10627:68;;;;-1:-1:-1;;;10627:68:15;;19880:2:27;10627:68:15;;;19862:21:27;19919:2;19899:18;;;19892:30;19958:34;19938:18;;;19931:62;20029:6;20009:18;;;20002:34;20053:19;;10627:68:15;19678:400:27;10627:68:15;-1:-1:-1;;;;;10713:21:15;;10705:68;;;;-1:-1:-1;;;10705:68:15;;20285:2:27;10705:68:15;;;20267:21:27;20324:2;20304:18;;;20297:30;20363:34;20343:18;;;20336:62;20434:4;20414:18;;;20407:32;20456:19;;10705:68:15;20083:398:27;10705:68:15;-1:-1:-1;;;;;10784:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;552:25:27;;;10835:32:15;;525:18:27;10835:32:15;;;;;;;10504:370;;;:::o;8567:535::-;-1:-1:-1;;;;;8650:21:15;;8642:65;;;;-1:-1:-1;;;8642:65:15;;20688:2:27;8642:65:15;;;20670:21:27;20727:2;20707:18;;;20700:30;20766:33;20746:18;;;20739:61;20817:18;;8642:65:15;20486:355:27;8642:65:15;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:15;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;552:25:27;;;8999:37:15;;525:18:27;8999:37:15;;;;;;;13387:188:24::1;13307:274;13266:315::o:0;11155:441:15:-;-1:-1:-1;;;;;4089:18:15;;;11285:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11351:37:15;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:15;;21048:2:27;11404:68:15;;;21030:21:27;21087:2;21067:18;;;21060:30;21126:31;21106:18;;;21099:59;21175:18;;11404:68:15;20846:353:27;11404:68:15;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;7473:818::-;-1:-1:-1;;;;;7599:18:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;21406:2:27;7591:68:15;;;21388:21:27;21445:2;21425:18;;;21418:30;21484:34;21464:18;;;21457:62;21555:7;21535:18;;;21528:35;21580:19;;7591:68:15;21204:401:27;7591:68:15;-1:-1:-1;;;;;7677:16:15;;7669:64;;;;-1:-1:-1;;;7669:64:15;;21812:2:27;7669:64:15;;;21794:21:27;21851:2;21831:18;;;21824:30;21890:34;21870:18;;;21863:62;21961:5;21941:18;;;21934:33;21984:19;;7669:64:15;21610:399:27;7669:64:15;-1:-1:-1;;;;;7815:15:15;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:15;;22216:2:27;7840:72:15;;;22198:21:27;22255:2;22235:18;;;22228:30;22294:34;22274:18;;;22267:62;22365:8;22345:18;;;22338:36;22391:19;;7840:72:15;22014:402:27;7840:72:15;-1:-1:-1;;;;;7946:15:15;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;552:25:27;;;8161:13:15;;8210:26;;525:18:27;8210:26:15;;;;;;;8247:37;4415:1229:24;5922:458;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;9394:2:27;13907:43:24;;;9376:21:27;9433:1;9413:18;;;9406:29;-1:-1:-1;;;9451:18:27;;;9444:39;9500:18;;13907:43:24;9192:332:27;13907:43:24;6087:19:::1;:26:::0;6063:50;::::1;6042:129;;;::::0;-1:-1:-1;;;6042:129:24;;22623:2:27;6042:129:24::1;::::0;::::1;22605:21:27::0;;;22642:18;;;22635:30;22701:34;22681:18;;;22674:62;22753:18;;6042:129:24::1;22421:356:27::0;6042:129:24::1;6199:21:::0;6182:157:::1;6226:19;:26:::0;:30:::1;::::0;6255:1:::1;::::0;6226:30:::1;:::i;:::-;6222:1;:34;6182:157;;;6302:19;6322:5;:1:::0;6326::::1;6322:5;:::i;:::-;6302:26;;;;;;;;:::i;:::-;;;;;;;;;;;6277:19;6297:1;6277:22;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51;;:22:::1;::::0;;::::1;;:51:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;6277:51:24::1;-1:-1:-1::0;;;;;6277:51:24;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;6277:51:24;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;-1:-1:-1::0;;6277:51:24;;;-1:-1:-1;;6277:51:24;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;6258:3;::::1;::::0;::::1;:::i;:::-;;;;6182:157;;;;6348:19;:25;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;6348:25:24;;;;;::::1;;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6348:25:24::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;6348:25:24;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;-1:-1:-1;5922:458:24:o;9422:659:15:-;-1:-1:-1;;;;;9505:21:15;;9497:67;;;;-1:-1:-1;;;9497:67:15;;23173:2:27;9497:67:15;;;23155:21:27;23212:2;23192:18;;;23185:30;23251:34;23231:18;;;23224:62;23322:3;23302:18;;;23295:31;23343:19;;9497:67:15;22971:397:27;9497:67:15;-1:-1:-1;;;;;9660:18:15;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:15;;23575:2:27;9688:71:15;;;23557:21:27;23614:2;23594:18;;;23587:30;23653:34;23633:18;;;23626:62;23724:4;23704:18;;;23697:32;23746:19;;9688:71:15;23373:398:27;9688:71:15;-1:-1:-1;;;;;9793:18:15;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;552:25:27;;;9793:9:15;;:18;9978:37;;525:18:27;9978:37:15;;;;;;;4495:1149:24;4415:1229;;:::o;3034:265::-;3079:4;;3095:176;3119:19;:26;3115:30;;3095:176;;;3184:19;3204:1;3184:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:31;;;-1:-1:-1;;;;;3184:31:24;3170:10;:45;3166:95;;;3242:4;3235:11;;;3034:265;:::o;3166:95::-;3147:3;;;;:::i;:::-;;;;3095:176;;;;3287:5;3280:12;;3034:265;:::o;2153:402:23:-;5955:10;2220:7;5944:22;;;:10;:22;;;;;;;;5936:47;;;;-1:-1:-1;;;5936:47:23;;8066:2:27;5936:47:23;;;8048:21:27;8105:2;8085:18;;;8078:30;-1:-1:-1;;;8124:18:27;;;8117:42;8176:18;;5936:47:23;7864:336:27;5936:47:23;2282:19:::1;:27:::0;;;2320:24:::1;2352:16;:14;:16::i;:::-;2320:49:::0;-1:-1:-1;2405:24:23::1;2320:49:::0;2405:5;:24:::1;:::i;:::-;2404:33;::::0;2433:4:::1;2404:33;:::i;:::-;2380:21;:57:::0;;;;2153:402;-1:-1:-1;;;2153:402:23:o;1481:547:2:-;1543:11;1589:2;1570:8;:21;;;;:55;;-1:-1:-1;1413:17:2;;-1:-1:-1;;;;;1413:17:2;1614:10;1400:30;1595;1566:456;;;-1:-1:-1;;;1931:14:2;1927:22;1914:36;1911:2;1907:44;3872:164:23;:::o;1566:456:2:-;-1:-1:-1;2001:10:2;1481:547;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:27;82:20;;-1:-1:-1;;;;;131:54:27;;121:65;;111:93;;200:1;197;190:12;215:186;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:27:o;588:180::-;647:6;700:2;688:9;679:7;675:23;671:32;668:52;;;716:1;713;706:12;668:52;-1:-1:-1;739:23:27;;588:180;-1:-1:-1;588:180:27:o;1004:472::-;1046:3;1084:5;1078:12;1111:6;1106:3;1099:19;1136:1;1146:162;1160:6;1157:1;1154:13;1146:162;;;1222:4;1278:13;;;1274:22;;1268:29;1250:11;;;1246:20;;1239:59;1175:12;1146:162;;;1326:6;1323:1;1320:13;1317:87;;;1392:1;1385:4;1376:6;1371:3;1367:16;1363:27;1356:38;1317:87;-1:-1:-1;1458:2:27;1437:15;-1:-1:-1;;1433:29:27;1424:39;;;;1465:4;1420:50;;1004:472;-1:-1:-1;;1004:472:27:o;1481:220::-;1630:2;1619:9;1612:21;1593:4;1650:45;1691:2;1680:9;1676:18;1668:6;1650:45;:::i;1706:254::-;1774:6;1782;1835:2;1823:9;1814:7;1810:23;1806:32;1803:52;;;1851:1;1848;1841:12;1803:52;1874:29;1893:9;1874:29;:::i;:::-;1864:39;1950:2;1935:18;;;;1922:32;;-1:-1:-1;;;1706:254:27:o;2157:328::-;2234:6;2242;2250;2303:2;2291:9;2282:7;2278:23;2274:32;2271:52;;;2319:1;2316;2309:12;2271:52;2342:29;2361:9;2342:29;:::i;:::-;2332:39;;2390:38;2424:2;2413:9;2409:18;2390:38;:::i;:::-;2380:48;;2475:2;2464:9;2460:18;2447:32;2437:42;;2157:328;;;;;:::o;2932:248::-;3000:6;3008;3061:2;3049:9;3040:7;3036:23;3032:32;3029:52;;;3077:1;3074;3067:12;3029:52;-1:-1:-1;;3100:23:27;;;3170:2;3155:18;;;3142:32;;-1:-1:-1;2932:248:27:o;3185:517::-;3440:6;3429:9;3422:25;3483:6;3478:2;3467:9;3463:18;3456:34;3526:6;3521:2;3510:9;3506:18;3499:34;3569:3;3564:2;3553:9;3549:18;3542:31;3403:4;3590:46;3631:3;3620:9;3616:19;3608:6;3590:46;:::i;:::-;3582:54;;3687:6;3680:14;3673:22;3667:3;3656:9;3652:19;3645:51;3185:517;;;;;;;;:::o;4460:260::-;4528:6;4536;4589:2;4577:9;4568:7;4564:23;4560:32;4557:52;;;4605:1;4602;4595:12;4557:52;4628:29;4647:9;4628:29;:::i;:::-;4618:39;;4676:38;4710:2;4699:9;4695:18;4676:38;:::i;:::-;4666:48;;4460:260;;;;;:::o;4725:1328::-;4948:2;5000:21;;;5070:13;;4973:18;;;5092:22;;;4919:4;;4948:2;5133;;5151:18;;;;5192:15;;;4919:4;5235:792;5249:6;5246:1;5243:13;5235:792;;;5308:13;;5346:9;;5334:22;;5400:11;;;5394:18;-1:-1:-1;;;;;5390:67:27;5376:12;;;5369:89;5498:11;;;5492:18;5478:12;;;5471:40;5534:4;5592:11;;;5586:18;5579:26;5572:34;5558:12;;;5551:56;5630:4;5688:11;;;5682:18;5675:26;5668:34;5654:12;;;5647:56;5726:4;5770:11;;;5764:18;5750:12;;;5743:40;5806:4;5850:11;;;5844:18;5830:12;;;5823:40;5886:4;5930:11;;;5924:18;5910:12;;;5903:40;5972:6;5963:16;;;;6002:15;;;;5271:1;5264:9;5235:792;;;-1:-1:-1;6044:3:27;;4725:1328;-1:-1:-1;;;;;;;4725:1328:27:o;6238:184::-;-1:-1:-1;;;6287:1:27;6280:88;6387:4;6384:1;6377:15;6411:4;6408:1;6401:15;6427:990;6505:6;6513;6566:2;6554:9;6545:7;6541:23;6537:32;6534:52;;;6582:1;6579;6572:12;6534:52;6618:9;6605:23;6595:33;;6679:2;6668:9;6664:18;6651:32;6702:18;6743:2;6735:6;6732:14;6729:34;;;6759:1;6756;6749:12;6729:34;6797:6;6786:9;6782:22;6772:32;;6842:7;6835:4;6831:2;6827:13;6823:27;6813:55;;6864:1;6861;6854:12;6813:55;6900:2;6887:16;6922:2;6918;6915:10;6912:36;;;6928:18;;:::i;:::-;7003:2;6997:9;6971:2;7057:13;;-1:-1:-1;;7053:22:27;;;7077:2;7049:31;7045:40;7033:53;;;7101:18;;;7121:22;;;7098:46;7095:72;;;7147:18;;:::i;:::-;7187:10;7183:2;7176:22;7222:2;7214:6;7207:18;7262:7;7257:2;7252;7248;7244:11;7240:20;7237:33;7234:53;;;7283:1;7280;7273:12;7234:53;7339:2;7334;7330;7326:11;7321:2;7313:6;7309:15;7296:46;7384:1;7379:2;7374;7366:6;7362:15;7358:24;7351:35;7405:6;7395:16;;;;;;;6427:990;;;;;:::o;7422:437::-;7501:1;7497:12;;;;7544;;;7565:61;;7619:4;7611:6;7607:17;7597:27;;7565:61;7672:2;7664:6;7661:14;7641:18;7638:38;7635:218;;;-1:-1:-1;;;7706:1:27;7699:88;7810:4;7807:1;7800:15;7838:4;7835:1;7828:15;7635:218;;7422:437;;;:::o;8205:184::-;-1:-1:-1;;;8254:1:27;8247:88;8354:4;8351:1;8344:15;8378:4;8375:1;8368:15;8394:125;8434:4;8462:1;8459;8456:8;8453:34;;;8467:18;;:::i;:::-;-1:-1:-1;8504:9:27;;8394:125::o;8524:184::-;-1:-1:-1;;;8573:1:27;8566:88;8673:4;8670:1;8663:15;8697:4;8694:1;8687:15;9059:128;9099:3;9130:1;9126:6;9123:1;9120:13;9117:39;;;9136:18;;:::i;:::-;-1:-1:-1;9172:9:27;;9059:128::o;10220:136::-;10259:3;10287:5;10277:39;;10296:18;;:::i;:::-;-1:-1:-1;;;10332:18:27;;10220:136::o;10361:135::-;10400:3;-1:-1:-1;;10421:17:27;;10418:43;;;10441:18;;:::i;:::-;-1:-1:-1;10488:1:27;10477:13;;10361:135::o;10501:184::-;-1:-1:-1;;;10550:1:27;10543:88;10650:4;10647:1;10640:15;10674:4;10671:1;10664:15;10690:120;10730:1;10756;10746:35;;10761:18;;:::i;:::-;-1:-1:-1;10795:9:27;;10690:120::o;12128:179::-;12206:13;;12259:22;12248:34;;12238:45;;12228:73;;12297:1;12294;12287:12;12312:473;12415:6;12423;12431;12439;12447;12500:3;12488:9;12479:7;12475:23;12471:33;12468:53;;;12517:1;12514;12507:12;12468:53;12540:39;12569:9;12540:39;:::i;:::-;12530:49;;12619:2;12608:9;12604:18;12598:25;12588:35;;12663:2;12652:9;12648:18;12642:25;12632:35;;12707:2;12696:9;12692:18;12686:25;12676:35;;12730:49;12774:3;12763:9;12759:19;12730:49;:::i;:::-;12720:59;;12312:473;;;;;;;;:::o;17925:112::-;17957:1;17983;17973:35;;17988:18;;:::i;:::-;-1:-1:-1;18022:9:27;;17925:112::o;18042:168::-;18082:7;18148:1;18144;18140:6;18136:14;18133:1;18130:21;18125:1;18118:9;18111:17;18107:45;18104:71;;;18155:18;;:::i;:::-;-1:-1:-1;18195:9:27;;18042:168::o;22782:184::-;-1:-1:-1;;;22831:1:27;22824:88;22931:4;22928:1;22921:15;22955:4;22952:1;22945:15"},"gasEstimates":{"creation":{"codeDepositCost":"3721000","executionCost":"infinite","totalCost":"infinite"},"external":{"ApprovedProsumers(uint256)":"17591","DisApproveProsumer_OwnerSpecific(uint256)":"infinite","allowance(address,address)":"infinite","approvalCount(address)":"2620","approve(address,uint256)":"26938","approveProsumer_OwnerSpecific(uint256)":"infinite","approved(address,address)":"infinite","balanceOf(address)":"2618","burnEnergy(uint256)":"59674","buyEnergy(uint256,uint256)":"infinite","complainCount()":"2395","complains(uint256)":"infinite","decimals()":"245","decreaseAllowance(address,uint256)":"29285","disapprovalCount(address)":"2575","disapproved(address,address)":"infinite","getLatestPrice()":"infinite","getTrustedForwarder()":"2420","increaseAllowance(address,uint256)":"29346","isOwner(address)":"2644","isProsumer(address)":"2663","isTrustedForwarder(address)":"2560","listEnergy(uint256,uint256)":"infinite","maxComplains()":"2418","mySetUnitPrice_Matic()":"9020","mySetUnitPrice_USD()":"9043","name()":"infinite","owners(uint256)":"4706","produceEnergy(uint256)":"59621","prosumerAddress(uint256)":"2589","prosumerID(address)":"2578","raiseComplain(uint256,string)":"infinite","regFee()":"2418","req_Registration(uint256)":"infinite","required()":"2395","setRegFee(uint256)":"26919","showApprovalStatus_OwnerSpecific(address)":"infinite","show_Approved_Prosumers()":"infinite","show_Unapproved_Prosumers()":"infinite","suspendProsumer(uint256,uint256)":"infinite","suspended(address,address)":"infinite","suspensionCount(address)":"2576","symbol()":"infinite","totalSupply()":"2350","transfer(address,uint256)":"53447","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","unApprovedProsumers(uint256)":"17546","unSuspendProsumer(uint256,uint256)":"infinite","unSuspended(address,address)":"infinite","unSuspensionCount(address)":"2643","versionRecipient()":"infinite","viewEnergyBalance()":"2465","viewEscrowBalance()":"4604","viewMaticBalance()":"2848","withdrawFees()":"infinite"},"internal":{"_msgData()":"infinite","_msgSender()":"2247","setUnitPrice(uint256)":"infinite"}},"methodIdentifiers":{"ApprovedProsumers(uint256)":"4ef8ab77","DisApproveProsumer_OwnerSpecific(uint256)":"4ca46d19","allowance(address,address)":"dd62ed3e","approvalCount(address)":"9a9ddd16","approve(address,uint256)":"095ea7b3","approveProsumer_OwnerSpecific(uint256)":"c7a7275e","approved(address,address)":"f4b16045","balanceOf(address)":"70a08231","burnEnergy(uint256)":"7fb400f9","buyEnergy(uint256,uint256)":"cdb6d52d","complainCount()":"73de8ce8","complains(uint256)":"4ea30b2f","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","disapprovalCount(address)":"66cc771f","disapproved(address,address)":"f85bae78","getLatestPrice()":"8e15f473","getTrustedForwarder()":"ce1b815f","increaseAllowance(address,uint256)":"39509351","isOwner(address)":"2f54bf6e","isProsumer(address)":"fdbd2e8b","isTrustedForwarder(address)":"572b6c05","listEnergy(uint256,uint256)":"c8a9fb5e","maxComplains()":"50a7ac25","mySetUnitPrice_Matic()":"4ec9dd8d","mySetUnitPrice_USD()":"0e264f80","name()":"06fdde03","owners(uint256)":"025e7c27","produceEnergy(uint256)":"0b6d83e2","prosumerAddress(uint256)":"8fac6371","prosumerID(address)":"001cfdce","raiseComplain(uint256,string)":"c8b6ba49","regFee()":"8fff20f3","req_Registration(uint256)":"9ff34115","required()":"dc8452cd","setRegFee(uint256)":"e814db59","showApprovalStatus_OwnerSpecific(address)":"7b78bc6b","show_Approved_Prosumers()":"612536fc","show_Unapproved_Prosumers()":"e706d568","suspendProsumer(uint256,uint256)":"e7e4f9d9","suspended(address,address)":"5f81b606","suspensionCount(address)":"90f8ba3c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unApprovedProsumers(uint256)":"9c01a6df","unSuspendProsumer(uint256,uint256)":"40cb3342","unSuspended(address,address)":"75ae81b3","unSuspensionCount(address)":"143859eb","versionRecipient()":"486ff0cd","viewEnergyBalance()":"83ae0367","viewEscrowBalance()":"3628c333","viewMaticBalance()":"8bda812f","withdrawFees()":"476343ee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sellerID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"buyerID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unitEnergyPriceUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unitEnergyPriceMatic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"boughtEnergyToken\",\"type\":\"uint256\"}],\"name\":\"EnergyBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sellerID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unitEnergyPriceUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unitEnergyPriceMatic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listedEnergyToken\",\"type\":\"uint256\"}],\"name\":\"EnergyListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ApprovedProsumers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unApprovedProsumerID\",\"type\":\"uint256\"}],\"name\":\"DisApproveProsumer_OwnerSpecific\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unApprovedProsumerID\",\"type\":\"uint256\"}],\"name\":\"approveProsumer_OwnerSpecific\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"energyBurned\",\"type\":\"uint256\"}],\"name\":\"burnEnergy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"producerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"energy_need\",\"type\":\"uint256\"}],\"name\":\"buyEnergy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complainCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"complains\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_complainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_complainant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accused\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_complain\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disapprovalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disapproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isProsumer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unitEnergyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"excessEnergyToken\",\"type\":\"uint256\"}],\"name\":\"listEnergy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxComplains\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mySetUnitPrice_Matic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mySetUnitPrice_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"energyProduced\",\"type\":\"uint256\"}],\"name\":\"produceEnergy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prosumerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prosumerID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_complainBody\",\"type\":\"string\"}],\"name\":\"raiseComplain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_aadharNo\",\"type\":\"uint256\"}],\"name\":\"req_Registration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_regFee\",\"type\":\"uint256\"}],\"name\":\"setRegFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unapprovedProsumerAddress\",\"type\":\"address\"}],\"name\":\"showApprovalStatus_OwnerSpecific\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"show_Approved_Prosumers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MultiSig.prosumer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"show_Unapproved_Prosumers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MultiSig.prosumer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_complainId\",\"type\":\"uint256\"}],\"name\":\"suspendProsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"suspended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"suspensionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unApprovedProsumers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_complainId\",\"type\":\"uint256\"}],\"name\":\"unSuspendProsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unSuspended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unSuspensionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewEnergyBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewMaticBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getLatestPrice()\":{\"notice\":\"Returns the latest price\"},\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnergyTrade.sol\":\"EnergyTrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable no-inline-assembly\\npragma solidity >=0.6.9;\\n\\nimport \\\"./interfaces/IERC2771Recipient.sol\\\";\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\\n *\\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\\n *\\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\\n *\\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\\n */\\nabstract contract ERC2771Recipient is IERC2771Recipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address private _trustedForwarder;\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\\n     * @return forwarder The address of the Forwarder contract that is being used.\\n     */\\n    function getTrustedForwarder() public virtual view returns (address forwarder){\\n        return _trustedForwarder;\\n    }\\n\\n    function _setTrustedForwarder(address _forwarder) internal {\\n        _trustedForwarder = _forwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            ret = msg.sender;\\n        }\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            return msg.data[0:msg.data.length-20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/EnergyToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract Energy_Token is ERC20 {\\n    /*\\n        Initial Supply is 50 ,- 50 WEI\\n        Initial supply 50e18\\n        or, 50*10**18\\n    */\\n    constructor() ERC20(\\\"Enery Token\\\", \\\"UNIT\\\") {}\\n}\\n\",\"keccak256\":\"0x24d14ddec5c363f3efab2fbb5fa79cd38dd94217bb1134d3d7bd621c40c5b842\",\"license\":\"UNLICENSED\"},\"contracts/EnergyTrade.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"./EnergyToken.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\nimport \\\"./MultiSig.sol\\\";\\r\\n\\r\\ncontract EnergyTrade is Energy_Token, PriceConverter, MultiSig {\\r\\n    /*************Global Variables************/\\r\\n\\r\\n    address escrowAccount; //Address of the Deployed Smart Contract\\r\\n    uint256 EnergyUnitPrice_usd;\\r\\n    uint256 EnergyUnitPrice_matic;\\r\\n\\r\\n    /****************Constructor************/\\r\\n\\r\\n    constructor(\\r\\n        address forwarder,\\r\\n        address[] memory _owners,\\r\\n        uint256 _required\\r\\n    ) MultiSig(forwarder, _owners, _required) {\\r\\n        escrowAccount = address(this);\\r\\n    }\\r\\n\\r\\n    /****************Events**************************************/\\r\\n\\r\\n    event EnergyListed(\\r\\n        uint256 indexed sellerID,\\r\\n        uint256 unitEnergyPriceUSD,\\r\\n        uint256 unitEnergyPriceMatic,\\r\\n        uint256 listedEnergyToken\\r\\n    );\\r\\n\\r\\n    event EnergyBought(\\r\\n        uint256 indexed sellerID,\\r\\n        uint256 indexed buyerID,\\r\\n        uint256 indexed unitEnergyPriceUSD,\\r\\n        uint256 unitEnergyPriceMatic,\\r\\n        uint256 boughtEnergyToken\\r\\n    );\\r\\n\\r\\n    function _msgSender() internal view override(Context, ERC2771Recipient) returns (address) {\\r\\n        return ERC2771Recipient._msgSender();\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view override(Context, ERC2771Recipient) returns (bytes calldata) {\\r\\n        return ERC2771Recipient._msgData();\\r\\n    }\\r\\n\\r\\n    /***************General View Functions***********************/\\r\\n\\r\\n    function viewEscrowBalance() public view returns (uint256, uint256) {\\r\\n        return (address(this).balance, balanceOf(escrowAccount));\\r\\n    }\\r\\n\\r\\n    function viewMaticBalance() public view returns (uint256) {\\r\\n        return msg.sender.balance;\\r\\n    }\\r\\n\\r\\n    function viewEnergyBalance() public view returns (uint256) {\\r\\n        return balanceOf(msg.sender);\\r\\n    }\\r\\n\\r\\n    /********************TRADING FUNCTION FOR PROSUMERS**********************************/\\r\\n\\r\\n    /*-------------------Producer--------------------------------------------------------------*/\\r\\n\\r\\n    //--> 1. Set Energy Unit Price for 1 Unit of Energy\\r\\n    function setUnitPrice(uint256 price) private onlyProsumer returns (uint256) {\\r\\n        /* Take Price input as 1e16 */\\r\\n\\r\\n        EnergyUnitPrice_usd = price;\\r\\n        uint256 latestMaticPrice = uint(getLatestPrice());\\r\\n        EnergyUnitPrice_matic = (price / latestMaticPrice) * 1e10;\\r\\n        /*------- 1e16/1e8 * 1e10 = 1e18 ----- ------------------*/\\r\\n\\r\\n        return EnergyUnitPrice_matic;\\r\\n    }\\r\\n\\r\\n    //--> 2. List Energy for Sale\\r\\n    function listEnergy(\\r\\n        uint256 unitEnergyPrice,\\r\\n        uint256 excessEnergyToken\\r\\n    ) public onlyProsumer isNotSuspended returns (uint256) {\\r\\n        require(\\r\\n            ApprovedProsumers[prosumerID[msg.sender] - 1]._stakedEnergyBalance == 0,\\r\\n            \\\"You have Already Staked Energy\\\"\\r\\n        );\\r\\n\\r\\n        uint256 ad_placerID = prosumerID[msg.sender];\\r\\n\\r\\n        ApprovedProsumers[ad_placerID - 1]._energyUnitPriceUSD = unitEnergyPrice;\\r\\n        ApprovedProsumers[ad_placerID - 1]._energyUnitPriceMatic = (setUnitPrice(unitEnergyPrice));\\r\\n        ApprovedProsumers[ad_placerID - 1]._stakedEnergyBalance = excessEnergyToken;\\r\\n\\r\\n        transfer(escrowAccount, excessEnergyToken);\\r\\n\\r\\n        emit EnergyListed(\\r\\n            ad_placerID,\\r\\n            ApprovedProsumers[ad_placerID - 1]._energyUnitPriceUSD,\\r\\n            ApprovedProsumers[ad_placerID - 1]._energyUnitPriceMatic,\\r\\n            excessEnergyToken\\r\\n        );\\r\\n\\r\\n        return ad_placerID;\\r\\n    }\\r\\n\\r\\n    //--> 3. Set Unit Price for 1 Unit of Energy in Matic\\r\\n    function mySetUnitPrice_Matic() public view onlyProsumer returns (uint256) {\\r\\n        return ApprovedProsumers[prosumerID[msg.sender] - 1]._energyUnitPriceMatic;\\r\\n    }\\r\\n\\r\\n    //--> 4. Set Unit Price for 1 Unit of Energy in USD\\r\\n    function mySetUnitPrice_USD() public view onlyProsumer returns (uint256) {\\r\\n        return ApprovedProsumers[prosumerID[msg.sender] - 1]._energyUnitPriceUSD;\\r\\n    }\\r\\n\\r\\n    //--> 5. Mint Energy Token\\r\\n    function produceEnergy(uint256 energyProduced) public onlyProsumer isNotSuspended {\\r\\n        _mint(msg.sender, energyProduced);\\r\\n    }\\r\\n\\r\\n    //--> 6. Burn Energy Token\\r\\n    function burnEnergy(uint256 energyBurned) public onlyProsumer isNotSuspended {\\r\\n        _burn(msg.sender, energyBurned);\\r\\n    }\\r\\n\\r\\n    /*-------------------Consumer--------------------------------------------------------------*/\\r\\n\\r\\n    //--> 1. Buy Energy\\r\\n    function buyEnergy(\\r\\n        uint256 producerID,\\r\\n        uint256 energy_need\\r\\n    ) public payable onlyProsumer isNotSuspended {\\r\\n        uint256 MinPayableAmount = ApprovedProsumers[producerID - 1]._energyUnitPriceMatic *\\r\\n            energy_need;\\r\\n        require(msg.value >= MinPayableAmount, \\\"Didn't send enough Matic!\\\");\\r\\n        require(\\r\\n            energy_need <= ApprovedProsumers[producerID - 1]._stakedEnergyBalance,\\r\\n            \\\"Selected Producer do have enough Enough Energy Balance\\\"\\r\\n        );\\r\\n\\r\\n        // State Change Before Transfer to avoid Re-entrancy Attack\\r\\n        ApprovedProsumers[producerID - 1]._stakedEnergyBalance =\\r\\n            ApprovedProsumers[producerID - 1]._stakedEnergyBalance -\\r\\n            energy_need;\\r\\n\\r\\n        //Transfer Energy to Consumer\\r\\n        _transfer(escrowAccount, msg.sender, energy_need);\\r\\n\\r\\n        //Transfer Matic to Producer\\r\\n        (bool callSuccess, ) = payable(prosumerAddress[producerID]).call{value: MinPayableAmount}(\\r\\n            \\\"\\\"\\r\\n        );\\r\\n\\r\\n        require(callSuccess, \\\"call failed\\\");\\r\\n\\r\\n        emit EnergyBought(\\r\\n            producerID,\\r\\n            prosumerID[msg.sender],\\r\\n            ApprovedProsumers[producerID - 1]._energyUnitPriceUSD,\\r\\n            ApprovedProsumers[producerID - 1]._energyUnitPriceMatic,\\r\\n            energy_need\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /****************Modifiers************/\\r\\n\\r\\n    modifier onlyProsumer() {\\r\\n        require(isProsumer[msg.sender], \\\"Not Prosumer\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isNotSuspended() {\\r\\n        require(!ApprovedProsumers[prosumerID[msg.sender] - 1]._suspended, \\\"You are Suspended\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd685ec34f3e07d1fe02aa2ebdda41eea286cbde2e28c6eb6cb89f0d231cfba6f\",\"license\":\"UNLICENSED\"},\"contracts/MultiSig.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.7;\\nimport \\\"@opengsn/contracts/src/ERC2771Recipient.sol\\\";\\n\\n//GSN ENABLED CONTRACT\\n\\ncontract MultiSig is ERC2771Recipient {\\n    /*************Global Variables************/\\n\\n    uint256 public required;\\n    uint256 public regFee;\\n\\n    address[] public owners;\\n\\n    mapping(address => bool) public isOwner;\\n    mapping(address => mapping(address => bool)) public approved; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n    mapping(address => mapping(address => bool)) public disapproved; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n    mapping(address => mapping(address => bool)) public suspended; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n    mapping(address => mapping(address => bool)) public unSuspended; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n\\n    /*-------Prosumer Variables-------------------------*/\\n    struct prosumer {\\n        uint256 _prosumerID;\\n        address _address;\\n        uint256 _aadharId;\\n        bool _approved;\\n        bool _suspended;\\n        uint256 _energyUnitPriceUSD;\\n        uint256 _energyUnitPriceMatic;\\n        uint256 _stakedEnergyBalance;\\n    }\\n\\n    prosumer[] public ApprovedProsumers;\\n    prosumer[] public unApprovedProsumers;\\n\\n    mapping(address => bool) public isProsumer;\\n    mapping(uint256 => address) public prosumerAddress;\\n    mapping(address => uint256) public prosumerID;\\n\\n    //Prosumer Stats\\n    mapping(address => uint256) public approvalCount;\\n    mapping(address => uint256) public disapprovalCount;\\n    mapping(address => uint256) public suspensionCount;\\n    mapping(address => uint256) public unSuspensionCount;\\n\\n    /****************Complain**************************************/\\n    struct Complain {\\n        uint256 _complainID;\\n        uint256 _complainant;\\n        uint256 _accused;\\n        string _complain;\\n        bool _resolved;\\n    }\\n\\n    uint256 public complainCount;\\n    uint256 public maxComplains = 10;\\n    Complain[] public complains;\\n\\n    /****************Constructor************/\\n    constructor(address forwarder, address[] memory _owners, uint _required) {\\n        //Set the trusted forwarder\\n        _setTrustedForwarder(forwarder);\\n\\n        //We will pass multiple owners & set a particular requirement number of apporvals needed\\n        require(_owners.length > 0, \\\"Owners Required\\\");\\n        require(_required > 0 && _required <= _owners.length, \\\"Invalid required number of owners\\\");\\n\\n        for (uint i; i < _owners.length; i++) {\\n            address owner = _owners[i];\\n            require(owner != address(0), \\\"invalid owner\\\");\\n            require(!isOwner[owner], \\\"Owner is not unique\\\");\\n\\n            isOwner[owner] = true;\\n            owners.push(owner);\\n        }\\n\\n        required = _required;\\n    }\\n\\n    string public versionRecipient = \\\"3.0.0\\\";\\n\\n    // Request for Registration as Prosumer\\n\\n    /**Unverified User Function***/\\n\\n    //Internal Function\\n    function isRequested() private view returns (bool) {\\n        for (uint256 i = 0; i < unApprovedProsumers.length; i++) {\\n            if (msg.sender == unApprovedProsumers[i]._address) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    //-->1. Register as Prosumer\\n    function req_Registration(uint256 _aadharNo) public payable {\\n        require(!isOwner[msg.sender], \\\"You are an Owner\\\");\\n        require(msg.value >= regFee, \\\"Registration Failed, Insufficient Fee\\\");\\n        require(!isProsumer[msg.sender], \\\"You are already a Prosumer in the Network\\\");\\n        require(!isRequested(), \\\"You have already requested for Registration\\\");\\n\\n        uint256 digitCheck = _aadharNo;\\n        uint256 digits = 0;\\n\\n        while (digitCheck != 0) {\\n            digitCheck /= 10;\\n            digits++;\\n        }\\n\\n        require(digits == 12, \\\"Enter a 12 digit Aadhar No.\\\");\\n\\n        //Create a prosumer object\\n        prosumer memory _prosumer = prosumer({\\n            _prosumerID: 0,\\n            _address: msg.sender,\\n            _aadharId: _aadharNo,\\n            _approved: false,\\n            _suspended: false,\\n            _energyUnitPriceUSD: 0,\\n            _energyUnitPriceMatic: 0,\\n            _stakedEnergyBalance: 0\\n        });\\n\\n        //Push the prosumer object to unApprovedProsumerArray\\n        unApprovedProsumers.push(_prosumer);\\n    }\\n\\n    function raiseComplain(uint256 _prosumerId, string memory _complainBody) public {\\n        require(isProsumer[_msgSender()], \\\"You not a Prosumer\\\");\\n        require(isProsumer[prosumerAddress[_prosumerId]], \\\"Accused not a Prosumer\\\");\\n        require(\\n            !suspended[prosumerAddress[_prosumerId]][_msgSender()],\\n            \\\"Accused Prosumer is Suspended\\\"\\n        );\\n        require(!suspended[_msgSender()][prosumerAddress[_prosumerId]], \\\"You are Suspended\\\");\\n        require(\\n            !disapproved[prosumerAddress[_prosumerId]][_msgSender()],\\n            \\\"Prosumer is Disapproved\\\"\\n        );\\n        require(!disapproved[_msgSender()][prosumerAddress[_prosumerId]], \\\"You are Disapproved\\\");\\n\\n        Complain memory _complain = Complain({\\n            _complainID: complains.length + 1,\\n            _complainant: prosumerID[_msgSender()],\\n            _accused: _prosumerId,\\n            _complain: _complainBody,\\n            _resolved: false\\n        });\\n\\n        if (complains.length < maxComplains) {\\n            complains.push(_complain);\\n        } else {\\n            complains[complainCount % maxComplains] = _complain;\\n        }\\n\\n        if (complainCount < maxComplains) {\\n            complainCount++;\\n        }\\n    }\\n\\n    /***************Owner Functions***********************/\\n\\n    //--> 1. Set Registration Fee\\n\\n    function setRegFee(uint256 _regFee) public onlyOwner {\\n        regFee = _regFee;\\n    }\\n\\n    //--> 2. Verify Details of Unapproved Prosumer\\n\\n    //-->2.1 Internal Function\\n\\n    function deleteElementFrom_UnApprovedProsumers(\\n        uint256 _unApprovedProsumerID\\n    ) private onlyOwner {\\n        require(\\n            _unApprovedProsumerID < unApprovedProsumers.length,\\n            \\\"Invalid unapprovedProsumer Index\\\"\\n        );\\n\\n        for (uint256 i = _unApprovedProsumerID; i < unApprovedProsumers.length - 1; i++) {\\n            unApprovedProsumers[i] = unApprovedProsumers[i + 1];\\n        }\\n        unApprovedProsumers.pop();\\n    }\\n\\n    /*-----------------------------------------------------------------------------------------------*/\\n\\n    //-->2.2 Show all Approved or Unapproved Prosumer\\n\\n    function show_Unapproved_Prosumers() public view onlyOwner returns (prosumer[] memory) {\\n        return unApprovedProsumers;\\n    }\\n\\n    function show_Approved_Prosumers() public view returns (prosumer[] memory) {\\n        //Public Function anybody can call\\n        return ApprovedProsumers;\\n    }\\n\\n    //-->2.3 Approval Status [Owner Specific]\\n\\n    function showApprovalStatus_OwnerSpecific(\\n        address _unapprovedProsumerAddress\\n    ) public view onlyOwner returns (string memory) {\\n        if (approved[_unapprovedProsumerAddress][_msgSender()]) {\\n            return (\\\"Prosumer Approved\\\");\\n        } else if (disapproved[_unapprovedProsumerAddress][_msgSender()]) {\\n            return (\\\"Prosumer Disapproved\\\");\\n        } else {\\n            return (\\\"Prosumer Not Verified Yet\\\");\\n        }\\n    }\\n\\n    /*** Admission of Prosumer ***/\\n\\n    //--> 3. Approve Prosumer\\n\\n    function approveProsumer_OwnerSpecific(uint256 _unApprovedProsumerID) public onlyOwner {\\n        require(\\n            _unApprovedProsumerID < unApprovedProsumers.length,\\n            \\\"Invalid Unapproved Prosumer ID\\\"\\n        );\\n        require(\\n            approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] == false,\\n            \\\"Prosumer Already approved by you\\\"\\n        );\\n\\n        approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = true;\\n\\n        //If disapproved earlier then wants to approve\\n        if (disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()]) {\\n            disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = false;\\n            disapprovalCount[unApprovedProsumers[_unApprovedProsumerID]._address]--;\\n        }\\n\\n        uint256 getApprovalCount = approvalCount[\\n            unApprovedProsumers[_unApprovedProsumerID]._address\\n        ]++;\\n\\n        //check if approval > required\\n        if (getApprovalCount > required) {\\n            //if yes then remove him from unapprove array and add him to approved prosumer array\\n            unApprovedProsumers[_unApprovedProsumerID]._approved = true; //Set approved Flag = true\\n            unApprovedProsumers[_unApprovedProsumerID]._prosumerID = ApprovedProsumers.length + 1; //Set Prosumer ID\\n            isProsumer[unApprovedProsumers[_unApprovedProsumerID]._address] = true;\\n            ApprovedProsumers.push(unApprovedProsumers[_unApprovedProsumerID]);\\n            deleteElementFrom_UnApprovedProsumers(_unApprovedProsumerID);\\n\\n            /*Store the prosumers in the Maps*/\\n            prosumerAddress[ApprovedProsumers.length] = ApprovedProsumers[\\n                ApprovedProsumers.length - 1\\n            ]._address;\\n            prosumerID[ApprovedProsumers[ApprovedProsumers.length - 1]._address] = ApprovedProsumers\\n                .length;\\n        }\\n    }\\n\\n    //--> 4. Disapprove Prosumer\\n    function DisApproveProsumer_OwnerSpecific(uint256 _unApprovedProsumerID) public onlyOwner {\\n        require(\\n            _unApprovedProsumerID < unApprovedProsumers.length,\\n            \\\"Invalid Unapproved Prosumer ID\\\"\\n        );\\n        require(\\n            disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] == false,\\n            \\\"Prosumer Already disapproved by you\\\"\\n        );\\n\\n        disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = true;\\n\\n        //If approved earlier then disapprove\\n        if (disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()]) {\\n            approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = false;\\n            approvalCount[unApprovedProsumers[_unApprovedProsumerID]._address]--;\\n        }\\n\\n        uint256 getDisApprovalCount = disapprovalCount[\\n            unApprovedProsumers[_unApprovedProsumerID]._address\\n        ]++;\\n\\n        //check if disapproval > required\\n        if (getDisApprovalCount > required) {\\n            //if yes then remove him from unapprove array & don't store in approved array\\n            deleteElementFrom_UnApprovedProsumers(_unApprovedProsumerID);\\n            delete disapprovalCount[unApprovedProsumers[_unApprovedProsumerID]._address];\\n            delete approvalCount[unApprovedProsumers[_unApprovedProsumerID]._address];\\n        }\\n    }\\n\\n    /*** Suspension of Prosumer ***/\\n\\n    //--> 5. Suspend Prosumer\\n    function suspendProsumer(uint256 _prosumerId, uint256 _complainId) public onlyOwner {\\n        address getProsumerAddress = prosumerAddress[_prosumerId];\\n        require(isProsumer[getProsumerAddress], \\\"Not a Prosumer\\\");\\n        require(!suspended[getProsumerAddress][_msgSender()], \\\"Already Suspended\\\");\\n\\n        suspended[getProsumerAddress][_msgSender()] = true;\\n\\n        //If unsuspended earlier then suspend\\n        if (unSuspended[getProsumerAddress][_msgSender()]) {\\n            unSuspended[getProsumerAddress][_msgSender()] = false;\\n            unSuspensionCount[getProsumerAddress]--;\\n        }\\n\\n        uint256 getSuspensionCount = suspensionCount[getProsumerAddress]++;\\n\\n        //check if suspension > required\\n        if (getSuspensionCount > required) {\\n            //if yes then remove him from unapprove array & don't store in approved array\\n            delete suspensionCount[getProsumerAddress];\\n            ApprovedProsumers[_prosumerId - 1]._suspended = true;\\n            complains[_complainId - 1]._resolved = true;\\n        }\\n    }\\n\\n    //--> 6. Unsuspend Prosumer\\n    function unSuspendProsumer(uint256 _prosumerId, uint256 _complainId) public onlyOwner {\\n        require(isProsumer[prosumerAddress[_prosumerId]], \\\"Not a Prosumer\\\");\\n        require(!unSuspended[prosumerAddress[_prosumerId]][_msgSender()], \\\"Already Unsuspended\\\");\\n\\n        address prosumerToUnsuspend = prosumerAddress[_prosumerId];\\n\\n        unSuspended[prosumerToUnsuspend][_msgSender()] = true;\\n\\n        // If suspended earlier then unsuspend\\n        if (suspended[prosumerToUnsuspend][_msgSender()]) {\\n            suspended[prosumerToUnsuspend][_msgSender()] = false;\\n            suspensionCount[prosumerToUnsuspend]--;\\n        }\\n\\n        uint256 getUnSuspensionCount = unSuspensionCount[prosumerToUnsuspend]++;\\n\\n        // Check if unsuspension > required\\n        if (getUnSuspensionCount > required) {\\n            // If yes, then remove him from unapprove array & don't store in the approved array\\n            delete unSuspensionCount[prosumerToUnsuspend];\\n            delete suspensionCount[prosumerToUnsuspend];\\n            ApprovedProsumers[_prosumerId - 1]._suspended = false;\\n            complains[_complainId - 1]._resolved = true;\\n        }\\n    }\\n\\n    //-->6.3. Witdhraw Funds (Pending , send funds equally to all prosumer)  //Can only be called when Transaction array will be zero.\\n    function withdrawFees() public onlyOwner {\\n        uint256 euqiBalance = address(this).balance / owners.length;\\n\\n        for (uint256 i = 0; i < owners.length; i++) {\\n            (bool callSuccess, ) = payable(owners[i]).call{value: euqiBalance}(\\\"\\\");\\n            require(callSuccess, \\\"Call Failed\\\");\\n        }\\n    }\\n\\n    //6.4. Transfer Ownership\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        for (uint256 i = 0; i < owners.length; i++) {\\n            if (owners[i] == _msgSender()) {\\n                owners[i] = newOwner;\\n                break;\\n            }\\n        }\\n    }\\n\\n    modifier onlyOwner() {\\n        require(isOwner[_msgSender()], \\\"Not Owner\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x85e42e2abe8aa319279b7d159eb374af7eb76b8ed595a66bc2e9cca12ab3987a\",\"license\":\"UNLICENSED\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract PriceConverter {\\r\\n    AggregatorV3Interface internal priceFeed;\\r\\n\\r\\n    /**\\r\\n     * Network: Polygon Mumbai\\r\\n     * Aggregator: MATIC/USD\\r\\n     * Address: 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada\\r\\n     */\\r\\n    constructor() {\\r\\n        priceFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the latest price\\r\\n     */\\r\\n    function getLatestPrice() public view returns (int) {\\r\\n        (\\r\\n            ,\\r\\n            /*uint80 roundID*/ int price /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/,\\r\\n            ,\\r\\n            ,\\r\\n\\r\\n        ) = priceFeed.latestRoundData();\\r\\n        return price;\\r\\n    }\\r\\n}\\r\\n\\r\\n// $ 1.14973259\\r\\n\",\"keccak256\":\"0x09d0ff105733ae98f85fd50568b9b9e97de5d6bfa3f67d5f44047cb18a5c2515\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2380,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":2386,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2388,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":2390,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2392,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4912,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"priceFeed","offset":0,"slot":"5","type":"t_contract(AggregatorV3Interface)45"},{"astId":451,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_trustedForwarder","offset":0,"slot":"6","type":"t_address"},{"astId":3782,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"required","offset":0,"slot":"7","type":"t_uint256"},{"astId":3784,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"regFee","offset":0,"slot":"8","type":"t_uint256"},{"astId":3787,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"owners","offset":0,"slot":"9","type":"t_array(t_address)dyn_storage"},{"astId":3791,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"isOwner","offset":0,"slot":"10","type":"t_mapping(t_address,t_bool)"},{"astId":3797,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"approved","offset":0,"slot":"11","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3803,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"disapproved","offset":0,"slot":"12","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3809,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"suspended","offset":0,"slot":"13","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3815,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"unSuspended","offset":0,"slot":"14","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3836,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"ApprovedProsumers","offset":0,"slot":"15","type":"t_array(t_struct(prosumer)3832_storage)dyn_storage"},{"astId":3840,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"unApprovedProsumers","offset":0,"slot":"16","type":"t_array(t_struct(prosumer)3832_storage)dyn_storage"},{"astId":3844,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"isProsumer","offset":0,"slot":"17","type":"t_mapping(t_address,t_bool)"},{"astId":3848,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"prosumerAddress","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_address)"},{"astId":3852,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"prosumerID","offset":0,"slot":"19","type":"t_mapping(t_address,t_uint256)"},{"astId":3856,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"approvalCount","offset":0,"slot":"20","type":"t_mapping(t_address,t_uint256)"},{"astId":3860,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"disapprovalCount","offset":0,"slot":"21","type":"t_mapping(t_address,t_uint256)"},{"astId":3864,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"suspensionCount","offset":0,"slot":"22","type":"t_mapping(t_address,t_uint256)"},{"astId":3868,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"unSuspensionCount","offset":0,"slot":"23","type":"t_mapping(t_address,t_uint256)"},{"astId":3881,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"complainCount","offset":0,"slot":"24","type":"t_uint256"},{"astId":3884,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"maxComplains","offset":0,"slot":"25","type":"t_uint256"},{"astId":3888,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"complains","offset":0,"slot":"26","type":"t_array(t_struct(Complain)3879_storage)dyn_storage"},{"astId":3978,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"versionRecipient","offset":0,"slot":"27","type":"t_string_storage"},{"astId":3333,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"escrowAccount","offset":0,"slot":"28","type":"t_address"},{"astId":3335,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"EnergyUnitPrice_usd","offset":0,"slot":"29","type":"t_uint256"},{"astId":3337,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"EnergyUnitPrice_matic","offset":0,"slot":"30","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(Complain)3879_storage)dyn_storage":{"base":"t_struct(Complain)3879_storage","encoding":"dynamic_array","label":"struct MultiSig.Complain[]","numberOfBytes":"32"},"t_array(t_struct(prosumer)3832_storage)dyn_storage":{"base":"t_struct(prosumer)3832_storage","encoding":"dynamic_array","label":"struct MultiSig.prosumer[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Complain)3879_storage":{"encoding":"inplace","label":"struct MultiSig.Complain","members":[{"astId":3870,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_complainID","offset":0,"slot":"0","type":"t_uint256"},{"astId":3872,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_complainant","offset":0,"slot":"1","type":"t_uint256"},{"astId":3874,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_accused","offset":0,"slot":"2","type":"t_uint256"},{"astId":3876,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_complain","offset":0,"slot":"3","type":"t_string_storage"},{"astId":3878,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_resolved","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_struct(prosumer)3832_storage":{"encoding":"inplace","label":"struct MultiSig.prosumer","members":[{"astId":3817,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_prosumerID","offset":0,"slot":"0","type":"t_uint256"},{"astId":3819,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_address","offset":0,"slot":"1","type":"t_address"},{"astId":3821,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_aadharId","offset":0,"slot":"2","type":"t_uint256"},{"astId":3823,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_approved","offset":0,"slot":"3","type":"t_bool"},{"astId":3825,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_suspended","offset":1,"slot":"3","type":"t_bool"},{"astId":3827,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_energyUnitPriceUSD","offset":0,"slot":"4","type":"t_uint256"},{"astId":3829,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_energyUnitPriceMatic","offset":0,"slot":"5","type":"t_uint256"},{"astId":3831,"contract":"contracts/EnergyTrade.sol:EnergyTrade","label":"_stakedEnergyBalance","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"getLatestPrice()":{"notice":"Returns the latest price"},"getTrustedForwarder()":{"notice":":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."},"isTrustedForwarder(address)":{"notice":":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."}},"version":1}}},"contracts/MultiSig.sol":{"MultiSig":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"},{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_required","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"ApprovedProsumers","outputs":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_unApprovedProsumerID","type":"uint256"}],"name":"DisApproveProsumer_OwnerSpecific","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"approvalCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_unApprovedProsumerID","type":"uint256"}],"name":"approveProsumer_OwnerSpecific","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"approved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"complainCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"complains","outputs":[{"internalType":"uint256","name":"_complainID","type":"uint256"},{"internalType":"uint256","name":"_complainant","type":"uint256"},{"internalType":"uint256","name":"_accused","type":"uint256"},{"internalType":"string","name":"_complain","type":"string"},{"internalType":"bool","name":"_resolved","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"disapprovalCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"disapproved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTrustedForwarder","outputs":[{"internalType":"address","name":"forwarder","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isProsumer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxComplains","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"prosumerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"prosumerID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_prosumerId","type":"uint256"},{"internalType":"string","name":"_complainBody","type":"string"}],"name":"raiseComplain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"regFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_aadharNo","type":"uint256"}],"name":"req_Registration","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"required","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_regFee","type":"uint256"}],"name":"setRegFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_unapprovedProsumerAddress","type":"address"}],"name":"showApprovalStatus_OwnerSpecific","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"show_Approved_Prosumers","outputs":[{"components":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"internalType":"struct MultiSig.prosumer[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"show_Unapproved_Prosumers","outputs":[{"components":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"internalType":"struct MultiSig.prosumer[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_prosumerId","type":"uint256"},{"internalType":"uint256","name":"_complainId","type":"uint256"}],"name":"suspendProsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"suspended","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"suspensionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"unApprovedProsumers","outputs":[{"internalType":"uint256","name":"_prosumerID","type":"uint256"},{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_aadharId","type":"uint256"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"bool","name":"_suspended","type":"bool"},{"internalType":"uint256","name":"_energyUnitPriceUSD","type":"uint256"},{"internalType":"uint256","name":"_energyUnitPriceMatic","type":"uint256"},{"internalType":"uint256","name":"_stakedEnergyBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_prosumerId","type":"uint256"},{"internalType":"uint256","name":"_complainId","type":"uint256"}],"name":"unSuspendProsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"unSuspended","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"unSuspensionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"versionRecipient","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"getTrustedForwarder()":{"returns":{"forwarder":"The address of the Forwarder contract that is being used."}},"isTrustedForwarder(address)":{"params":{"forwarder":"The address of the Forwarder contract that is being used."},"returns":{"_0":"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3975":{"entryPoint":null,"id":3975,"parameterSlots":3,"returnSlots":0},"@_setTrustedForwarder_470":{"entryPoint":null,"id":470,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":838,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory":{"entryPoint":889,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1195,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1153,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1131,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":867,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3795:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:27","statements":[{"nodeType":"YulAssignment","src":"84:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:27"},"nodeType":"YulFunctionCall","src":"93:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:27"}]},{"body":{"nodeType":"YulBlock","src":"169:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:27"},"nodeType":"YulFunctionCall","src":"171:12:27"},"nodeType":"YulExpressionStatement","src":"171:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:27"},"nodeType":"YulFunctionCall","src":"150:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:27"},"nodeType":"YulFunctionCall","src":"146:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:27"},"nodeType":"YulFunctionCall","src":"135:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:27"},"nodeType":"YulFunctionCall","src":"125:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:27"},"nodeType":"YulFunctionCall","src":"118:50:27"},"nodeType":"YulIf","src":"115:70:27"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:27","type":""}],"src":"14:177:27"},{"body":{"nodeType":"YulBlock","src":"228:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:27"},"nodeType":"YulFunctionCall","src":"248:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:27"},"nodeType":"YulFunctionCall","src":"238:31:27"},"nodeType":"YulExpressionStatement","src":"238:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:27"},"nodeType":"YulFunctionCall","src":"278:15:27"},"nodeType":"YulExpressionStatement","src":"278:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:27"},"nodeType":"YulFunctionCall","src":"302:15:27"},"nodeType":"YulExpressionStatement","src":"302:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"196:127:27"},{"body":{"nodeType":"YulBlock","src":"468:1135:27","statements":[{"body":{"nodeType":"YulBlock","src":"514:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"523:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"526:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"516:6:27"},"nodeType":"YulFunctionCall","src":"516:12:27"},"nodeType":"YulExpressionStatement","src":"516:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"489:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:27"},"nodeType":"YulFunctionCall","src":"485:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"481:3:27"},"nodeType":"YulFunctionCall","src":"481:32:27"},"nodeType":"YulIf","src":"478:52:27"},{"nodeType":"YulAssignment","src":"539:50:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"579:9:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"549:29:27"},"nodeType":"YulFunctionCall","src":"549:40:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"539:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"598:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"608:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"602:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"619:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"654:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"639:3:27"},"nodeType":"YulFunctionCall","src":"639:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"633:5:27"},"nodeType":"YulFunctionCall","src":"633:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"623:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"667:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"685:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"689:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"681:3:27"},"nodeType":"YulFunctionCall","src":"681:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"693:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"677:3:27"},"nodeType":"YulFunctionCall","src":"677:18:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"671:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"722:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"731:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"734:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"724:6:27"},"nodeType":"YulFunctionCall","src":"724:12:27"},"nodeType":"YulExpressionStatement","src":"724:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"710:6:27"},{"name":"_2","nodeType":"YulIdentifier","src":"718:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"707:2:27"},"nodeType":"YulFunctionCall","src":"707:14:27"},"nodeType":"YulIf","src":"704:34:27"},{"nodeType":"YulVariableDeclaration","src":"747:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"761:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"772:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"757:3:27"},"nodeType":"YulFunctionCall","src":"757:22:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"751:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"827:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"836:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"839:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"829:6:27"},"nodeType":"YulFunctionCall","src":"829:12:27"},"nodeType":"YulExpressionStatement","src":"829:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"806:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"810:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"802:3:27"},"nodeType":"YulFunctionCall","src":"802:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"817:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"798:3:27"},"nodeType":"YulFunctionCall","src":"798:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"791:6:27"},"nodeType":"YulFunctionCall","src":"791:35:27"},"nodeType":"YulIf","src":"788:55:27"},{"nodeType":"YulVariableDeclaration","src":"852:19:27","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"868:2:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"862:5:27"},"nodeType":"YulFunctionCall","src":"862:9:27"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"856:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"894:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"896:16:27"},"nodeType":"YulFunctionCall","src":"896:18:27"},"nodeType":"YulExpressionStatement","src":"896:18:27"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"886:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"890:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"883:2:27"},"nodeType":"YulFunctionCall","src":"883:10:27"},"nodeType":"YulIf","src":"880:36:27"},{"nodeType":"YulVariableDeclaration","src":"925:20:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"939:1:27","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"942:2:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"935:3:27"},"nodeType":"YulFunctionCall","src":"935:10:27"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"929:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"954:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"974:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"968:5:27"},"nodeType":"YulFunctionCall","src":"968:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"958:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"986:56:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1008:6:27"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1024:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"1028:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1020:3:27"},"nodeType":"YulFunctionCall","src":"1020:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1033:3:27"},"nodeType":"YulFunctionCall","src":"1033:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1016:3:27"},"nodeType":"YulFunctionCall","src":"1016:25:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1004:3:27"},"nodeType":"YulFunctionCall","src":"1004:38:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"990:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1101:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1103:16:27"},"nodeType":"YulFunctionCall","src":"1103:18:27"},"nodeType":"YulExpressionStatement","src":"1103:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1060:10:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1072:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1057:2:27"},"nodeType":"YulFunctionCall","src":"1057:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1080:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1092:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1077:2:27"},"nodeType":"YulFunctionCall","src":"1077:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1054:2:27"},"nodeType":"YulFunctionCall","src":"1054:46:27"},"nodeType":"YulIf","src":"1051:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1139:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1143:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1132:6:27"},"nodeType":"YulFunctionCall","src":"1132:22:27"},"nodeType":"YulExpressionStatement","src":"1132:22:27"},{"nodeType":"YulVariableDeclaration","src":"1163:17:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1174:6:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1167:3:27","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1196:6:27"},{"name":"_4","nodeType":"YulIdentifier","src":"1204:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1189:6:27"},"nodeType":"YulFunctionCall","src":"1189:18:27"},"nodeType":"YulExpressionStatement","src":"1189:18:27"},{"nodeType":"YulAssignment","src":"1216:22:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1227:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1235:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1223:3:27"},"nodeType":"YulFunctionCall","src":"1223:15:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1216:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"1247:34:27","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1269:2:27"},{"name":"_5","nodeType":"YulIdentifier","src":"1273:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1265:3:27"},"nodeType":"YulFunctionCall","src":"1265:11:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1278:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1261:3:27"},"nodeType":"YulFunctionCall","src":"1261:20:27"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1251:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1313:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1322:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1325:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1315:6:27"},"nodeType":"YulFunctionCall","src":"1315:12:27"},"nodeType":"YulExpressionStatement","src":"1315:12:27"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1296:6:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1304:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1293:2:27"},"nodeType":"YulFunctionCall","src":"1293:19:27"},"nodeType":"YulIf","src":"1290:39:27"},{"nodeType":"YulVariableDeclaration","src":"1338:22:27","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1353:2:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1357:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:27"},"nodeType":"YulFunctionCall","src":"1349:11:27"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1342:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1425:103:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1446:3:27"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1481:3:27"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1451:29:27"},"nodeType":"YulFunctionCall","src":"1451:34:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1439:6:27"},"nodeType":"YulFunctionCall","src":"1439:47:27"},"nodeType":"YulExpressionStatement","src":"1439:47:27"},{"nodeType":"YulAssignment","src":"1499:19:27","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1510:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1515:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1506:3:27"},"nodeType":"YulFunctionCall","src":"1506:12:27"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1499:3:27"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1380:3:27"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1385:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1377:2:27"},"nodeType":"YulFunctionCall","src":"1377:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1393:23:27","statements":[{"nodeType":"YulAssignment","src":"1395:19:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1406:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1411:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1402:3:27"},"nodeType":"YulFunctionCall","src":"1402:12:27"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1395:3:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1373:3:27","statements":[]},"src":"1369:159:27"},{"nodeType":"YulAssignment","src":"1537:16:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1547:6:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1537:6:27"}]},{"nodeType":"YulAssignment","src":"1562:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1593:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:27"},"nodeType":"YulFunctionCall","src":"1578:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1572:5:27"},"nodeType":"YulFunctionCall","src":"1572:25:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1562:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"418:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"429:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"441:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"449:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"457:6:27","type":""}],"src":"328:1275:27"},{"body":{"nodeType":"YulBlock","src":"1782:165:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1799:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1810:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1792:6:27"},"nodeType":"YulFunctionCall","src":"1792:21:27"},"nodeType":"YulExpressionStatement","src":"1792:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1833:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1844:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1829:3:27"},"nodeType":"YulFunctionCall","src":"1829:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"1849:2:27","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1822:6:27"},"nodeType":"YulFunctionCall","src":"1822:30:27"},"nodeType":"YulExpressionStatement","src":"1822:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1872:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1883:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:27"},"nodeType":"YulFunctionCall","src":"1868:18:27"},{"hexValue":"4f776e657273205265717569726564","kind":"string","nodeType":"YulLiteral","src":"1888:17:27","type":"","value":"Owners Required"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1861:6:27"},"nodeType":"YulFunctionCall","src":"1861:45:27"},"nodeType":"YulExpressionStatement","src":"1861:45:27"},{"nodeType":"YulAssignment","src":"1915:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1927:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1938:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1923:3:27"},"nodeType":"YulFunctionCall","src":"1923:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1915:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1759:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1773:4:27","type":""}],"src":"1608:339:27"},{"body":{"nodeType":"YulBlock","src":"2126:223:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2143:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2154:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2136:6:27"},"nodeType":"YulFunctionCall","src":"2136:21:27"},"nodeType":"YulExpressionStatement","src":"2136:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2177:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2188:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2173:3:27"},"nodeType":"YulFunctionCall","src":"2173:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"2193:2:27","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2166:6:27"},"nodeType":"YulFunctionCall","src":"2166:30:27"},"nodeType":"YulExpressionStatement","src":"2166:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2216:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2227:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2212:3:27"},"nodeType":"YulFunctionCall","src":"2212:18:27"},{"hexValue":"496e76616c6964207265717569726564206e756d626572206f66206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2232:34:27","type":"","value":"Invalid required number of owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2205:6:27"},"nodeType":"YulFunctionCall","src":"2205:62:27"},"nodeType":"YulExpressionStatement","src":"2205:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2287:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2298:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2283:3:27"},"nodeType":"YulFunctionCall","src":"2283:18:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"2303:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2276:6:27"},"nodeType":"YulFunctionCall","src":"2276:31:27"},"nodeType":"YulExpressionStatement","src":"2276:31:27"},{"nodeType":"YulAssignment","src":"2316:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2328:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2339:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2324:3:27"},"nodeType":"YulFunctionCall","src":"2324:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2316:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2103:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2117:4:27","type":""}],"src":"1952:397:27"},{"body":{"nodeType":"YulBlock","src":"2386:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2403:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2410:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2415:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2406:3:27"},"nodeType":"YulFunctionCall","src":"2406:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2396:6:27"},"nodeType":"YulFunctionCall","src":"2396:31:27"},"nodeType":"YulExpressionStatement","src":"2396:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2443:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2446:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2436:6:27"},"nodeType":"YulFunctionCall","src":"2436:15:27"},"nodeType":"YulExpressionStatement","src":"2436:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2467:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2460:6:27"},"nodeType":"YulFunctionCall","src":"2460:15:27"},"nodeType":"YulExpressionStatement","src":"2460:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"2354:127:27"},{"body":{"nodeType":"YulBlock","src":"2660:163:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2677:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2688:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2670:6:27"},"nodeType":"YulFunctionCall","src":"2670:21:27"},"nodeType":"YulExpressionStatement","src":"2670:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2711:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2722:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:27"},"nodeType":"YulFunctionCall","src":"2707:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"2727:2:27","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:27"},"nodeType":"YulFunctionCall","src":"2700:30:27"},"nodeType":"YulExpressionStatement","src":"2700:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2750:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2761:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2746:3:27"},"nodeType":"YulFunctionCall","src":"2746:18:27"},{"hexValue":"696e76616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2766:15:27","type":"","value":"invalid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2739:6:27"},"nodeType":"YulFunctionCall","src":"2739:43:27"},"nodeType":"YulExpressionStatement","src":"2739:43:27"},{"nodeType":"YulAssignment","src":"2791:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2803:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2814:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2799:3:27"},"nodeType":"YulFunctionCall","src":"2799:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2791:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2637:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2651:4:27","type":""}],"src":"2486:337:27"},{"body":{"nodeType":"YulBlock","src":"3002:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3019:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3030:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3012:6:27"},"nodeType":"YulFunctionCall","src":"3012:21:27"},"nodeType":"YulExpressionStatement","src":"3012:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3053:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3064:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3049:3:27"},"nodeType":"YulFunctionCall","src":"3049:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3069:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3042:6:27"},"nodeType":"YulFunctionCall","src":"3042:30:27"},"nodeType":"YulExpressionStatement","src":"3042:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3092:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3103:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3088:3:27"},"nodeType":"YulFunctionCall","src":"3088:18:27"},{"hexValue":"4f776e6572206973206e6f7420756e69717565","kind":"string","nodeType":"YulLiteral","src":"3108:21:27","type":"","value":"Owner is not unique"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3081:6:27"},"nodeType":"YulFunctionCall","src":"3081:49:27"},"nodeType":"YulExpressionStatement","src":"3081:49:27"},{"nodeType":"YulAssignment","src":"3139:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3151:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3162:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3147:3:27"},"nodeType":"YulFunctionCall","src":"3147:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3139:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2979:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2993:4:27","type":""}],"src":"2828:343:27"},{"body":{"nodeType":"YulBlock","src":"3223:185:27","statements":[{"body":{"nodeType":"YulBlock","src":"3262:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3283:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3295:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3286:3:27"},"nodeType":"YulFunctionCall","src":"3286:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3276:6:27"},"nodeType":"YulFunctionCall","src":"3276:31:27"},"nodeType":"YulExpressionStatement","src":"3276:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3327:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3330:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3320:6:27"},"nodeType":"YulFunctionCall","src":"3320:15:27"},"nodeType":"YulExpressionStatement","src":"3320:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3348:6:27"},"nodeType":"YulFunctionCall","src":"3348:15:27"},"nodeType":"YulExpressionStatement","src":"3348:15:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3239:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3250:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3246:3:27"},"nodeType":"YulFunctionCall","src":"3246:6:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3236:2:27"},"nodeType":"YulFunctionCall","src":"3236:17:27"},"nodeType":"YulIf","src":"3233:140:27"},{"nodeType":"YulAssignment","src":"3382:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3393:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3400:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:27"},"nodeType":"YulFunctionCall","src":"3389:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3382:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3205:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3215:3:27","type":""}],"src":"3176:232:27"},{"body":{"nodeType":"YulBlock","src":"3468:325:27","statements":[{"nodeType":"YulAssignment","src":"3478:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3492:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3495:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3488:3:27"},"nodeType":"YulFunctionCall","src":"3488:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3478:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3509:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3539:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3545:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3535:3:27"},"nodeType":"YulFunctionCall","src":"3535:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3513:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3586:31:27","statements":[{"nodeType":"YulAssignment","src":"3588:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3602:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3598:3:27"},"nodeType":"YulFunctionCall","src":"3598:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3588:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3566:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3559:6:27"},"nodeType":"YulFunctionCall","src":"3559:26:27"},"nodeType":"YulIf","src":"3556:61:27"},{"body":{"nodeType":"YulBlock","src":"3676:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3697:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3704:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3709:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3700:3:27"},"nodeType":"YulFunctionCall","src":"3700:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3690:6:27"},"nodeType":"YulFunctionCall","src":"3690:31:27"},"nodeType":"YulExpressionStatement","src":"3690:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3741:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3744:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3734:6:27"},"nodeType":"YulFunctionCall","src":"3734:15:27"},"nodeType":"YulExpressionStatement","src":"3734:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3769:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3772:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3762:6:27"},"nodeType":"YulFunctionCall","src":"3762:15:27"},"nodeType":"YulExpressionStatement","src":"3762:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3632:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3655:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3663:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3652:2:27"},"nodeType":"YulFunctionCall","src":"3652:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3629:2:27"},"nodeType":"YulFunctionCall","src":"3629:38:27"},"nodeType":"YulIf","src":"3626:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3448:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3457:6:27","type":""}],"src":"3413:380:27"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_6c393899037698aa9bb9d5f021c13f32f6ee6690130da7dab237cf0c051a1cb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Owners Required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dde8d0ae636cfa7d187c4ba57a888fd93ba6442e5d27c2c5bc27faa7f1297f1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Invalid required number of owner\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_6a6ef3f1d272b3597b09ac81b6aef3488a40db4c809157d1f8878aa09a43bb14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d4fef162c3c968a6b397e99a7308f7779cc1eb2dae97aacebba16959d2abd0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Owner is not unique\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA PUSH1 0x13 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH5 0x332E302E3 PUSH1 0xDC SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x2D SWAP2 PUSH1 0x15 SWAP2 SWAP1 PUSH3 0x2A0 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x35EB CODESIZE SUB DUP1 PUSH3 0x35EB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x5E SWAP2 PUSH3 0x379 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x0 DUP3 MLOAD GT PUSH3 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x13DDDB995C9CC814995C5D5A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH3 0xD4 JUMPI POP DUP2 MLOAD DUP2 GT ISZERO JUMPDEST PUSH3 0x12C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265717569726564206E756D626572206F66206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x293 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x150 JUMPI PUSH3 0x150 PUSH3 0x46B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH3 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B21037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x21A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E6572206973206E6F7420756E6971756500000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0x28A DUP2 PUSH3 0x481 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x12F JUMP JUMPDEST POP PUSH1 0x1 SSTORE POP PUSH3 0x4E8 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2AE SWAP1 PUSH3 0x4AB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2D2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x31D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2ED JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x31D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x31D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x31D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x300 JUMP JUMPDEST POP PUSH3 0x32B SWAP3 SWAP2 POP PUSH3 0x32F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x32B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x330 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x39A DUP5 PUSH3 0x346 JUMP JUMPDEST PUSH1 0x20 DUP6 DUP2 ADD MLOAD SWAP2 SWAP5 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3E4 JUMPI PUSH3 0x3E4 PUSH3 0x363 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x40C JUMPI PUSH3 0x40C PUSH3 0x363 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP11 DUP4 GT ISZERO PUSH3 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x454 JUMPI PUSH3 0x444 DUP6 PUSH3 0x346 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x430 JUMP JUMPDEST DUP1 SWAP8 POP POP POP POP POP POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x4A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F3 DUP1 PUSH3 0x4F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x233 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B78BC6B GT PUSH2 0x138 JUMPI DUP1 PUSH4 0xCE1B815F GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0xE814DB59 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xF4B16045 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF4B16045 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xF85BAE78 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xFDBD2E8B EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE814DB59 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE1B815F EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xE706D568 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xE7E4F9D9 EQ PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A9DDD16 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x9FF34115 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0x9FF34115 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0xC7A7275E EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xC8B6BA49 EQ PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A9DDD16 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x9C01A6DF EQ PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B78BC6B EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x8FAC6371 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x8FFF20F3 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x90F8BA3C EQ PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EA30B2F GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x5F81B606 GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x66CC771F GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x66CC771F EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x73DE8CE8 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x75AE81B3 EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F81B606 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x612536FC EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EA30B2F EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x4EF8AB77 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x50A7AC25 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40CB3342 GT PUSH2 0x207 JUMPI DUP1 PUSH4 0x40CB3342 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x486FF0CD EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x4CA46D19 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x1CFDCE EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x143859EB EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D48 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xB60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x26F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST PUSH2 0x33D PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x192C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x680 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE6 JUMP JUMPDEST PUSH2 0x1F1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x246A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x6E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D48 JUMP JUMPDEST PUSH2 0x257D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x709 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x729 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x749 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x7BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x80A PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x905 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920556E73757370656E64656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x9A2 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x9E6 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA76 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0xA29 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA70 DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0xA9B DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x9 PUSH2 0xAE0 PUSH1 0x1 DUP8 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAF0 JUMPI PUSH2 0xAF0 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x14 PUSH2 0xB27 DUP3 DUP7 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0xB6C PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBD1 SWAP1 SELFBALANCE PUSH2 0x302C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST POP DUP1 PUSH2 0xCAA DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH2 0xCC3 SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCEF SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0xD50 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE0D JUMPI PUSH2 0xE0D PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0xE43 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920646973617070726F76656420627920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x796F750000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEEC JUMPI PUSH2 0xEEC PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0xF22 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF70 JUMPI PUSH2 0xF70 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0xFA6 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFE1 JUMPI PUSH2 0xFE1 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1017 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1065 JUMPI PUSH2 0x1065 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x109E DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10BD JUMPI PUSH2 0x10BD PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x10F6 DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xCB2 JUMPI PUSH2 0x110F DUP3 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1126 JUMPI PUSH2 0x1126 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xE SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x116F JUMPI PUSH2 0x116F PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x14 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x11E6 SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1212 SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x125F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1234 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x125F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1242 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP3 SWAP1 DUP9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 PUSH2 0x13A4 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x141A PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1475 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH32 0x50726F73756D657220417070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1496 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14F1 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH32 0x50726F73756D657220446973617070726F766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x50726F73756D6572204E6F742056657269666965642059657400000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616E204F776E657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E204661696C65642C20496E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420466565000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x169A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C726561647920612050726F73756D657220696E207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65204E6574776F726B0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST PUSH2 0x16A2 PUSH2 0x2BF6 JUMP JUMPDEST ISZERO PUSH2 0x1715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C72656164792072657175657374656420666F722052 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6567697374726174696F6E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x173E JUMPI PUSH2 0x172A PUSH1 0xA DUP4 PUSH2 0x302C JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1736 DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1719 JUMP JUMPDEST DUP1 PUSH1 0xC EQ PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E746572206120313220646967697420416164686172204E6F2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP5 DUP2 MSTORE PUSH1 0xE0 DUP8 ADD DUP6 DUP2 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP7 MSTORE SWAP7 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x7 SWAP1 SWAP7 MUL SWAP6 DUP7 ADD SSTORE SWAP7 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP7 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AB DUP4 ADD DUP1 SLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP2 ISZERO ISZERO SWAP1 SWAP4 MUL OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AC DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AD DUP4 ADD SSTORE MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x1938 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x198D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0x19DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x19F5 JUMPI PUSH2 0x19F5 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1A2B PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920617070726F76656420627920796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1AE4 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1B32 JUMPI PUSH2 0x1B32 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1B68 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C66 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1BA3 JUMPI PUSH2 0x1BA3 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1BD9 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1C27 JUMPI PUSH2 0x1C27 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1C60 DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C7F JUMPI PUSH2 0x1C7F PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1CB8 DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x1 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1CDD JUMPI PUSH2 0x1CDD PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0x1D0D SWAP1 PUSH1 0x1 PUSH2 0x307B JUMP JUMPDEST PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1D20 JUMPI PUSH2 0x1D20 PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1D4E JUMPI PUSH2 0x1D4E PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x7 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x9 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1DA2 JUMPI PUSH2 0x1DA2 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP8 SSTORE SWAP6 DUP6 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 PUSH1 0x7 SWAP3 DUP4 MUL SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP2 DUP3 SSTORE DUP3 DUP2 ADD SLOAD SWAP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0x1E67 DUP3 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x1E77 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E87 JUMPI PUSH2 0x1E87 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0x9 DUP1 SLOAD DUP6 MSTORE PUSH1 0xC SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0xD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1EDB SWAP1 DUP6 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1EEB JUMPI PUSH2 0x1EEB PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 PUSH2 0x1F29 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E6F7420612050726F73756D65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2006 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41636375736564206E6F7420612050726F73756D657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2033 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x209D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363757365642050726F73756D65722069732053757370656E646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x20A9 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0xC DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x212E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206172652053757370656E646564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x215B PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x21C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220697320446973617070726F766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0x21D1 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0xC DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520446973617070726F76656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH2 0x2275 SWAP2 SWAP1 PUSH2 0x307B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0x0 PUSH2 0x2286 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x13 SLOAD PUSH1 0x14 DUP1 SLOAD SWAP1 POP LT ISZERO PUSH2 0x23BB JUMPI PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x5 SWAP1 SWAP2 MUL PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC DUP2 ADD SWAP2 DUP3 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4ED DUP4 ADD SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EE DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH2 0x239A SWAP4 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EF SWAP1 SWAP2 ADD SWAP3 ADD SWAP1 PUSH2 0x2C5D JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2443 JUMP JUMPDEST DUP1 PUSH1 0x14 PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD PUSH2 0x23CE SWAP2 SWAP1 PUSH2 0x3093 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x23DE JUMPI PUSH2 0x23DE PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2426 SWAP3 SWAP2 SWAP1 PUSH2 0x2C5D JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD LT ISZERO PUSH2 0x2465 JUMPI PUSH1 0x12 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x245F DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 PUSH2 0x2478 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x24CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x2589 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x25DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x2675 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792053757370656E646564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 PUSH2 0x2702 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2746 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x27D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2789 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x27D0 DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x27FB DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x9 PUSH2 0xAE0 DUP3 DUP8 PUSH2 0x2FE9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x283E PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x28A4 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x28F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xCB2 JUMPI PUSH2 0x290E PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x292A JUMPI PUSH2 0x292A PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x298B JUMPI DUP2 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2959 JUMPI PUSH2 0x2959 PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2995 DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 CALLDATASIZE LT DUP1 ISZERO SWAP1 PUSH2 0x29BA JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0x29CC JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x29DD PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2A32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0x2A83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420756E617070726F76656450726F73756D657220496E646578 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2A94 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2B8F JUMPI PUSH1 0xA PUSH2 0x2AA8 DUP3 PUSH1 0x1 PUSH2 0x307B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2AB8 JUMPI PUSH2 0x2AB8 PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2AD9 JUMPI PUSH2 0x2AD9 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x2B87 DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A85 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x2BA1 JUMPI PUSH2 0x2BA1 PUSH2 0x30A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x7 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2C55 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C17 JUMPI PUSH2 0x2C17 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x2C43 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x2C4D DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BFA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2C69 SWAP1 PUSH2 0x3040 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2C8B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2CD1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2CA4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2CD1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2CD1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2CD1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST POP PUSH2 0x2CDD SWAP3 SWAP2 POP PUSH2 0x2CE1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CDD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CE2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D28 DUP3 PUSH2 0x2CF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D90 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2D74 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2DA2 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2D28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D6A JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2DEF PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2D6A JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E1F DUP4 PUSH2 0x2CF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2D PUSH1 0x20 DUP5 ADD PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2EC3 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E53 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2F3E JUMPI PUSH2 0x2F3E PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2F66 JUMPI PUSH2 0x2F66 PUSH2 0x2ED0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2FC6 JUMPI PUSH2 0x2FC6 PUSH2 0x2FA1 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2FE2 JUMPI PUSH2 0x2FE2 PUSH2 0x2FA1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2FFB JUMPI PUSH2 0x2FFB PUSH2 0x2FA1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x303B JUMPI PUSH2 0x303B PUSH2 0x3016 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3054 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3075 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x308E JUMPI PUSH2 0x308E PUSH2 0x2FA1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x30A2 JUMPI PUSH2 0x30A2 PUSH2 0x3016 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x22 0xC0 0xEC MSIZE 0xD SWAP6 DELEGATECALL OR SWAP5 0xCA SWAP3 0xAE 0xBC 0xBE 0x4C 0xD7 0xB2 EXTCODESIZE 0xEE GASPRICE 0xBF 0xC SSTORE 0xB5 POP SWAP4 SIGNEXTEND 0x4C MULMOD GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"2058:2:24:-:0;2028:32;;2881:40;143:13827;2881:40;;143:13827;2881:40;;;-1:-1:-1;;;2881:40:24;;;;;;;;;;:::i;:::-;;2146:729;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1212:17:2;:30;;-1:-1:-1;;;;;;1212:30:2;-1:-1:-1;;;;;1212:30:2;;;;;2429:1:24;2412:7;:14;:18;2404:46;;;;-1:-1:-1;;;2404:46:24;;1810:2:27;2404:46:24;;;1792:21:27;1849:2;1829:18;;;1822:30;-1:-1:-1;;;1868:18:27;;;1861:45;1923:18;;2404:46:24;;;;;;;;;2480:1;2468:9;:13;:44;;;;;2498:7;:14;2485:9;:27;;2468:44;2460:90;;;;-1:-1:-1;;;2460:90:24;;2154:2:27;2460:90:24;;;2136:21:27;2193:2;2173:18;;;2166:30;2232:34;2212:18;;;2205:62;-1:-1:-1;;;2283:18:27;;;2276:31;2324:19;;2460:90:24;1952:397:27;2460:90:24;2566:6;2561:277;2578:7;:14;2574:1;:18;2561:277;;;2613:13;2629:7;2637:1;2629:10;;;;;;;;:::i;:::-;;;;;;;2613:26;;2678:1;-1:-1:-1;;;;;2661:19:24;:5;-1:-1:-1;;;;;2661:19:24;;;2653:45;;;;-1:-1:-1;;;2653:45:24;;2688:2:27;2653:45:24;;;2670:21:27;2727:2;2707:18;;;2700:30;-1:-1:-1;;;2746:18:27;;;2739:43;2799:18;;2653:45:24;2486:337:27;2653:45:24;-1:-1:-1;;;;;2721:14:24;;;;;;:7;:14;;;;;;;;2720:15;2712:47;;;;-1:-1:-1;;;2712:47:24;;3030:2:27;2712:47:24;;;3012:21:27;3069:2;3049:18;;;3042:30;3108:21;3088:18;;;3081:49;3147:18;;2712:47:24;2828:343:27;2712:47:24;-1:-1:-1;;;;;2774:14:24;;;;;:7;:14;;;;;:21;;-1:-1:-1;;2774:21:24;2791:4;2774:21;;;;;;2809:6;:18;;;;;;;;;;;;;;-1:-1:-1;;;;;;2809:18:24;;;;;;2594:3;;;;:::i;:::-;;;;2561:277;;;-1:-1:-1;2848:8:24;:20;-1:-1:-1;143:13827:24;;-1:-1:-1;143:13827:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;143:13827:24;;;-1:-1:-1;143:13827:24;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:27;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1275;441:6;449;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;549:40;579:9;549:40;:::i;:::-;608:2;639:18;;;633:25;539:50;;-1:-1:-1;608:2:27;-1:-1:-1;;;;;707:14:27;;;704:34;;;734:1;731;724:12;704:34;772:6;761:9;757:22;747:32;;817:7;810:4;806:2;802:13;798:27;788:55;;839:1;836;829:12;788:55;868:2;862:9;890:2;886;883:10;880:36;;;896:18;;:::i;:::-;942:2;939:1;935:10;974:2;968:9;1037:2;1033:7;1028:2;1024;1020:11;1016:25;1008:6;1004:38;1092:6;1080:10;1077:22;1072:2;1060:10;1057:18;1054:46;1051:72;;;1103:18;;:::i;:::-;1139:2;1132:22;1189:18;;;1223:15;;;;-1:-1:-1;1265:11:27;;;1261:20;;;1293:19;;;1290:39;;;1325:1;1322;1315:12;1290:39;1349:11;;;;1369:159;1385:6;1380:3;1377:15;1369:159;;;1451:34;1481:3;1451:34;:::i;:::-;1439:47;;1402:12;;;;1506;;;;1369:159;;;1547:6;1537:16;;;;;;;;1593:2;1582:9;1578:18;1572:25;1562:35;;328:1275;;;;;:::o;2354:127::-;2415:10;2410:3;2406:20;2403:1;2396:31;2446:4;2443:1;2436:15;2470:4;2467:1;2460:15;3176:232;3215:3;-1:-1:-1;;3236:17:27;;3233:140;;;3295:10;3290:3;3286:20;3283:1;3276:31;3330:4;3327:1;3320:15;3358:4;3355:1;3348:15;3233:140;-1:-1:-1;3400:1:27;3389:13;;3176:232::o;3413:380::-;3492:1;3488:12;;;;3535;;;3556:61;;3610:4;3602:6;3598:17;3588:27;;3556:61;3663:2;3655:6;3652:14;3632:18;3629:38;3626:161;;;3709:10;3704:3;3700:20;3697:1;3690:31;3744:4;3741:1;3734:15;3772:4;3769:1;3762:15;3626:161;;3413:380;;;:::o;:::-;143:13827:24;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ApprovedProsumers_3836":{"entryPoint":4722,"id":3836,"parameterSlots":0,"returnSlots":0},"@DisApproveProsumer_OwnerSpecific_4599":{"entryPoint":3396,"id":4599,"parameterSlots":1,"returnSlots":0},"@_msgSender_511":{"entryPoint":10653,"id":511,"parameterSlots":0,"returnSlots":1},"@approvalCount_3856":{"entryPoint":null,"id":3856,"parameterSlots":0,"returnSlots":0},"@approveProsumer_OwnerSpecific_4490":{"entryPoint":6444,"id":4490,"parameterSlots":1,"returnSlots":0},"@approved_3797":{"entryPoint":null,"id":3797,"parameterSlots":0,"returnSlots":0},"@complainCount_3881":{"entryPoint":null,"id":3881,"parameterSlots":0,"returnSlots":0},"@complains_3888":{"entryPoint":4513,"id":3888,"parameterSlots":0,"returnSlots":0},"@deleteElementFrom_UnApprovedProsumers_4279":{"entryPoint":10705,"id":4279,"parameterSlots":1,"returnSlots":0},"@disapprovalCount_3860":{"entryPoint":null,"id":3860,"parameterSlots":0,"returnSlots":0},"@disapproved_3803":{"entryPoint":null,"id":3803,"parameterSlots":0,"returnSlots":0},"@getTrustedForwarder_460":{"entryPoint":null,"id":460,"parameterSlots":0,"returnSlots":1},"@isOwner_3791":{"entryPoint":null,"id":3791,"parameterSlots":0,"returnSlots":0},"@isProsumer_3844":{"entryPoint":null,"id":3844,"parameterSlots":0,"returnSlots":0},"@isRequested_4011":{"entryPoint":11254,"id":4011,"parameterSlots":0,"returnSlots":1},"@isTrustedForwarder_484":{"entryPoint":null,"id":484,"parameterSlots":1,"returnSlots":1},"@maxComplains_3884":{"entryPoint":null,"id":3884,"parameterSlots":0,"returnSlots":0},"@owners_3787":{"entryPoint":2004,"id":3787,"parameterSlots":0,"returnSlots":0},"@prosumerAddress_3848":{"entryPoint":null,"id":3848,"parameterSlots":0,"returnSlots":0},"@prosumerID_3852":{"entryPoint":null,"id":3852,"parameterSlots":0,"returnSlots":0},"@raiseComplain_4221":{"entryPoint":7965,"id":4221,"parameterSlots":2,"returnSlots":0},"@regFee_3784":{"entryPoint":null,"id":3784,"parameterSlots":0,"returnSlots":0},"@req_Registration_4098":{"entryPoint":5436,"id":4098,"parameterSlots":1,"returnSlots":0},"@required_3782":{"entryPoint":null,"id":3782,"parameterSlots":0,"returnSlots":0},"@setRegFee_4233":{"entryPoint":10290,"id":4233,"parameterSlots":1,"returnSlots":0},"@showApprovalStatus_OwnerSpecific_4337":{"entryPoint":5014,"id":4337,"parameterSlots":1,"returnSlots":1},"@show_Approved_Prosumers_4301":{"entryPoint":4822,"id":4301,"parameterSlots":0,"returnSlots":1},"@show_Unapproved_Prosumers_4291":{"entryPoint":9322,"id":4291,"parameterSlots":0,"returnSlots":1},"@suspendProsumer_4699":{"entryPoint":9597,"id":4699,"parameterSlots":2,"returnSlots":0},"@suspended_3809":{"entryPoint":null,"id":3809,"parameterSlots":0,"returnSlots":0},"@suspensionCount_3864":{"entryPoint":null,"id":3864,"parameterSlots":0,"returnSlots":0},"@transferOwnership_4893":{"entryPoint":10392,"id":4893,"parameterSlots":1,"returnSlots":0},"@unApprovedProsumers_3840":{"entryPoint":5420,"id":3840,"parameterSlots":0,"returnSlots":0},"@unSuspendProsumer_4808":{"entryPoint":2046,"id":4808,"parameterSlots":2,"returnSlots":0},"@unSuspended_3815":{"entryPoint":null,"id":3815,"parameterSlots":0,"returnSlots":0},"@unSuspensionCount_3868":{"entryPoint":null,"id":3868,"parameterSlots":0,"returnSlots":0},"@versionRecipient_3978":{"entryPoint":3254,"id":3978,"parameterSlots":0,"returnSlots":0},"@withdrawFees_4857":{"entryPoint":2912,"id":4857,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":11510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11779,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":11567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":12006,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":11592,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":11626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":11722,"id":null,"parameterSlots":6,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12411,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":12332,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12265,"id":null,"parameterSlots":2,"returnSlots":1},"decrement_t_uint256":{"entryPoint":12215,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":12352,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":12238,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":12435,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12193,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12310,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":12455,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12288,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11984,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15629:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:27","statements":[{"nodeType":"YulAssignment","src":"73:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:27"},"nodeType":"YulFunctionCall","src":"82:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:27"}]},{"body":{"nodeType":"YulBlock","src":"188:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:27"},"nodeType":"YulFunctionCall","src":"190:12:27"},"nodeType":"YulExpressionStatement","src":"190:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:27"},"nodeType":"YulFunctionCall","src":"131:54:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:27"},"nodeType":"YulFunctionCall","src":"121:65:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:27"},"nodeType":"YulFunctionCall","src":"114:73:27"},"nodeType":"YulIf","src":"111:93:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:27","type":""}],"src":"14:196:27"},{"body":{"nodeType":"YulBlock","src":"285:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"331:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"340:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"343:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"333:6:27"},"nodeType":"YulFunctionCall","src":"333:12:27"},"nodeType":"YulExpressionStatement","src":"333:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"306:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"315:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"302:3:27"},"nodeType":"YulFunctionCall","src":"302:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"327:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"298:3:27"},"nodeType":"YulFunctionCall","src":"298:32:27"},"nodeType":"YulIf","src":"295:52:27"},{"nodeType":"YulAssignment","src":"356:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"385:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"366:18:27"},"nodeType":"YulFunctionCall","src":"366:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"356:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"251:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"262:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"274:6:27","type":""}],"src":"215:186:27"},{"body":{"nodeType":"YulBlock","src":"507:76:27","statements":[{"nodeType":"YulAssignment","src":"517:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"529:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:27"},"nodeType":"YulFunctionCall","src":"525:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"517:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"570:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"552:6:27"},"nodeType":"YulFunctionCall","src":"552:25:27"},"nodeType":"YulExpressionStatement","src":"552:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"476:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"487:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"498:4:27","type":""}],"src":"406:177:27"},{"body":{"nodeType":"YulBlock","src":"658:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"704:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"713:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"716:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"706:6:27"},"nodeType":"YulFunctionCall","src":"706:12:27"},"nodeType":"YulExpressionStatement","src":"706:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"679:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"688:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"675:3:27"},"nodeType":"YulFunctionCall","src":"675:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"700:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"671:3:27"},"nodeType":"YulFunctionCall","src":"671:32:27"},"nodeType":"YulIf","src":"668:52:27"},{"nodeType":"YulAssignment","src":"729:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"752:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"739:12:27"},"nodeType":"YulFunctionCall","src":"739:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"729:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"624:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"635:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"647:6:27","type":""}],"src":"588:180:27"},{"body":{"nodeType":"YulBlock","src":"874:125:27","statements":[{"nodeType":"YulAssignment","src":"884:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"896:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"907:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"892:3:27"},"nodeType":"YulFunctionCall","src":"892:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"884:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"926:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"941:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"949:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"937:3:27"},"nodeType":"YulFunctionCall","src":"937:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"919:6:27"},"nodeType":"YulFunctionCall","src":"919:74:27"},"nodeType":"YulExpressionStatement","src":"919:74:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"843:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"854:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"865:4:27","type":""}],"src":"773:226:27"},{"body":{"nodeType":"YulBlock","src":"1099:92:27","statements":[{"nodeType":"YulAssignment","src":"1109:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:27"},"nodeType":"YulFunctionCall","src":"1117:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:27"},"nodeType":"YulFunctionCall","src":"1169:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:27"},"nodeType":"YulFunctionCall","src":"1162:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:27"},"nodeType":"YulFunctionCall","src":"1144:41:27"},"nodeType":"YulExpressionStatement","src":"1144:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:27","type":""}],"src":"1004:187:27"},{"body":{"nodeType":"YulBlock","src":"1283:161:27","statements":[{"body":{"nodeType":"YulBlock","src":"1329:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1338:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1341:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1331:6:27"},"nodeType":"YulFunctionCall","src":"1331:12:27"},"nodeType":"YulExpressionStatement","src":"1331:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1304:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1313:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1300:3:27"},"nodeType":"YulFunctionCall","src":"1300:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1325:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1296:3:27"},"nodeType":"YulFunctionCall","src":"1296:32:27"},"nodeType":"YulIf","src":"1293:52:27"},{"nodeType":"YulAssignment","src":"1354:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1377:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1364:12:27"},"nodeType":"YulFunctionCall","src":"1364:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1354:6:27"}]},{"nodeType":"YulAssignment","src":"1396:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1423:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1434:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1419:3:27"},"nodeType":"YulFunctionCall","src":"1419:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1406:12:27"},"nodeType":"YulFunctionCall","src":"1406:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1396:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1241:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1252:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1264:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1272:6:27","type":""}],"src":"1196:248:27"},{"body":{"nodeType":"YulBlock","src":"1499:422:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1509:26:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1523:5:27"},"nodeType":"YulFunctionCall","src":"1523:12:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1513:6:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1551:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1556:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1544:6:27"},"nodeType":"YulFunctionCall","src":"1544:19:27"},"nodeType":"YulExpressionStatement","src":"1544:19:27"},{"nodeType":"YulVariableDeclaration","src":"1572:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1581:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1576:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1643:110:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1657:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1667:4:27","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1661:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1699:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1704:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1695:3:27"},"nodeType":"YulFunctionCall","src":"1695:11:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1708:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1691:3:27"},"nodeType":"YulFunctionCall","src":"1691:20:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1727:5:27"},{"name":"i","nodeType":"YulIdentifier","src":"1734:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1723:3:27"},"nodeType":"YulFunctionCall","src":"1723:13:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1738:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:27"},"nodeType":"YulFunctionCall","src":"1719:22:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1713:5:27"},"nodeType":"YulFunctionCall","src":"1713:29:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1684:6:27"},"nodeType":"YulFunctionCall","src":"1684:59:27"},"nodeType":"YulExpressionStatement","src":"1684:59:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1602:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1605:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1599:2:27"},"nodeType":"YulFunctionCall","src":"1599:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1613:21:27","statements":[{"nodeType":"YulAssignment","src":"1615:17:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1624:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1627:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1620:3:27"},"nodeType":"YulFunctionCall","src":"1620:12:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1615:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1595:3:27","statements":[]},"src":"1591:162:27"},{"body":{"nodeType":"YulBlock","src":"1787:62:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1816:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1821:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:27"},"nodeType":"YulFunctionCall","src":"1812:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1830:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:27"},"nodeType":"YulFunctionCall","src":"1808:27:27"},{"kind":"number","nodeType":"YulLiteral","src":"1837:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1801:6:27"},"nodeType":"YulFunctionCall","src":"1801:38:27"},"nodeType":"YulExpressionStatement","src":"1801:38:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1768:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1771:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1765:2:27"},"nodeType":"YulFunctionCall","src":"1765:13:27"},"nodeType":"YulIf","src":"1762:87:27"},{"nodeType":"YulAssignment","src":"1858:57:27","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1873:3:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1886:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1894:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1882:3:27"},"nodeType":"YulFunctionCall","src":"1882:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1899:3:27"},"nodeType":"YulFunctionCall","src":"1899:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1878:3:27"},"nodeType":"YulFunctionCall","src":"1878:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1869:3:27"},"nodeType":"YulFunctionCall","src":"1869:39:27"},{"kind":"number","nodeType":"YulLiteral","src":"1910:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:27"},"nodeType":"YulFunctionCall","src":"1865:50:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1858:3:27"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1476:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1483:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1491:3:27","type":""}],"src":"1449:472:27"},{"body":{"nodeType":"YulBlock","src":"2047:99:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2064:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2057:6:27"},"nodeType":"YulFunctionCall","src":"2057:21:27"},"nodeType":"YulExpressionStatement","src":"2057:21:27"},{"nodeType":"YulAssignment","src":"2087:53:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2113:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2125:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2136:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2121:3:27"},"nodeType":"YulFunctionCall","src":"2121:18:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2095:17:27"},"nodeType":"YulFunctionCall","src":"2095:45:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2087:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2016:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2027:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2038:4:27","type":""}],"src":"1926:220:27"},{"body":{"nodeType":"YulBlock","src":"2378:290:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"2406:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2388:6:27"},"nodeType":"YulFunctionCall","src":"2388:25:27"},"nodeType":"YulExpressionStatement","src":"2388:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2433:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2444:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2429:3:27"},"nodeType":"YulFunctionCall","src":"2429:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"2449:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2422:6:27"},"nodeType":"YulFunctionCall","src":"2422:34:27"},"nodeType":"YulExpressionStatement","src":"2422:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2476:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2487:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2472:3:27"},"nodeType":"YulFunctionCall","src":"2472:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"2492:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2465:6:27"},"nodeType":"YulFunctionCall","src":"2465:34:27"},"nodeType":"YulExpressionStatement","src":"2465:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2519:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2530:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2515:3:27"},"nodeType":"YulFunctionCall","src":"2515:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"2535:3:27","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2508:6:27"},"nodeType":"YulFunctionCall","src":"2508:31:27"},"nodeType":"YulExpressionStatement","src":"2508:31:27"},{"nodeType":"YulAssignment","src":"2548:54:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2574:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2586:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2597:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2582:3:27"},"nodeType":"YulFunctionCall","src":"2582:19:27"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2556:17:27"},"nodeType":"YulFunctionCall","src":"2556:46:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2548:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2622:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2633:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2618:3:27"},"nodeType":"YulFunctionCall","src":"2618:19:27"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2653:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2646:6:27"},"nodeType":"YulFunctionCall","src":"2646:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2639:6:27"},"nodeType":"YulFunctionCall","src":"2639:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2611:6:27"},"nodeType":"YulFunctionCall","src":"2611:51:27"},"nodeType":"YulExpressionStatement","src":"2611:51:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2315:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2326:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2334:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2342:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2350:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2358:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2369:4:27","type":""}],"src":"2151:517:27"},{"body":{"nodeType":"YulBlock","src":"2958:463:27","statements":[{"nodeType":"YulAssignment","src":"2968:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2980:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2991:3:27","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2976:3:27"},"nodeType":"YulFunctionCall","src":"2976:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2968:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3011:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"3022:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3004:6:27"},"nodeType":"YulFunctionCall","src":"3004:25:27"},"nodeType":"YulExpressionStatement","src":"3004:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3049:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3060:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3045:3:27"},"nodeType":"YulFunctionCall","src":"3045:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3069:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3077:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3065:3:27"},"nodeType":"YulFunctionCall","src":"3065:55:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3038:6:27"},"nodeType":"YulFunctionCall","src":"3038:83:27"},"nodeType":"YulExpressionStatement","src":"3038:83:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3141:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3152:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3137:3:27"},"nodeType":"YulFunctionCall","src":"3137:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"3157:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3130:6:27"},"nodeType":"YulFunctionCall","src":"3130:34:27"},"nodeType":"YulExpressionStatement","src":"3130:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3184:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3195:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3180:3:27"},"nodeType":"YulFunctionCall","src":"3180:18:27"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"3214:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3207:6:27"},"nodeType":"YulFunctionCall","src":"3207:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3200:6:27"},"nodeType":"YulFunctionCall","src":"3200:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:27"},"nodeType":"YulFunctionCall","src":"3173:50:27"},"nodeType":"YulExpressionStatement","src":"3173:50:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3243:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3254:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3239:3:27"},"nodeType":"YulFunctionCall","src":"3239:19:27"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3274:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3267:6:27"},"nodeType":"YulFunctionCall","src":"3267:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3260:6:27"},"nodeType":"YulFunctionCall","src":"3260:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:27"},"nodeType":"YulFunctionCall","src":"3232:51:27"},"nodeType":"YulExpressionStatement","src":"3232:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3314:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:27"},"nodeType":"YulFunctionCall","src":"3299:19:27"},{"name":"value5","nodeType":"YulIdentifier","src":"3320:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:27"},"nodeType":"YulFunctionCall","src":"3292:35:27"},"nodeType":"YulExpressionStatement","src":"3292:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3347:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3358:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3343:3:27"},"nodeType":"YulFunctionCall","src":"3343:19:27"},{"name":"value6","nodeType":"YulIdentifier","src":"3364:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3336:6:27"},"nodeType":"YulFunctionCall","src":"3336:35:27"},"nodeType":"YulExpressionStatement","src":"3336:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3391:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3402:3:27","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3387:3:27"},"nodeType":"YulFunctionCall","src":"3387:19:27"},{"name":"value7","nodeType":"YulIdentifier","src":"3408:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3380:6:27"},"nodeType":"YulFunctionCall","src":"3380:35:27"},"nodeType":"YulExpressionStatement","src":"3380:35:27"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2871:9:27","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2882:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2890:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2898:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2906:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2914:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2922:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2930:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2938:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2949:4:27","type":""}],"src":"2673:748:27"},{"body":{"nodeType":"YulBlock","src":"3513:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"3559:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3568:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3571:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3561:6:27"},"nodeType":"YulFunctionCall","src":"3561:12:27"},"nodeType":"YulExpressionStatement","src":"3561:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3534:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3543:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3530:3:27"},"nodeType":"YulFunctionCall","src":"3530:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3555:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3526:3:27"},"nodeType":"YulFunctionCall","src":"3526:32:27"},"nodeType":"YulIf","src":"3523:52:27"},{"nodeType":"YulAssignment","src":"3584:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3613:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3594:18:27"},"nodeType":"YulFunctionCall","src":"3594:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3584:6:27"}]},{"nodeType":"YulAssignment","src":"3632:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3665:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3676:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3661:3:27"},"nodeType":"YulFunctionCall","src":"3661:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3642:18:27"},"nodeType":"YulFunctionCall","src":"3642:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3632:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3471:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3482:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3494:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3502:6:27","type":""}],"src":"3426:260:27"},{"body":{"nodeType":"YulBlock","src":"3894:1125:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3904:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3914:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3908:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3925:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3943:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"3954:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:27"},"nodeType":"YulFunctionCall","src":"3939:18:27"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3929:6:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3973:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"3984:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3966:6:27"},"nodeType":"YulFunctionCall","src":"3966:21:27"},"nodeType":"YulExpressionStatement","src":"3966:21:27"},{"nodeType":"YulVariableDeclaration","src":"3996:17:27","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4007:6:27"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4000:3:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4022:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4042:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4036:5:27"},"nodeType":"YulFunctionCall","src":"4036:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4026:6:27","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4065:6:27"},{"name":"length","nodeType":"YulIdentifier","src":"4073:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4058:6:27"},"nodeType":"YulFunctionCall","src":"4058:22:27"},"nodeType":"YulExpressionStatement","src":"4058:22:27"},{"nodeType":"YulVariableDeclaration","src":"4089:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4099:2:27","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4093:2:27","type":""}]},{"nodeType":"YulAssignment","src":"4110:25:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4121:9:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4132:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4117:3:27"},"nodeType":"YulFunctionCall","src":"4117:18:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4110:3:27"}]},{"nodeType":"YulVariableDeclaration","src":"4144:29:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4162:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4170:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:27"},"nodeType":"YulFunctionCall","src":"4158:15:27"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4148:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4182:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4191:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4186:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4250:743:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4264:23:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4280:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4274:5:27"},"nodeType":"YulFunctionCall","src":"4274:13:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4268:2:27","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4307:3:27"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4318:2:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4312:5:27"},"nodeType":"YulFunctionCall","src":"4312:9:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4300:6:27"},"nodeType":"YulFunctionCall","src":"4300:22:27"},"nodeType":"YulExpressionStatement","src":"4300:22:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4346:3:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4351:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4342:3:27"},"nodeType":"YulFunctionCall","src":"4342:12:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4370:2:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4374:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4366:3:27"},"nodeType":"YulFunctionCall","src":"4366:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4360:5:27"},"nodeType":"YulFunctionCall","src":"4360:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4380:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4356:3:27"},"nodeType":"YulFunctionCall","src":"4356:67:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4335:6:27"},"nodeType":"YulFunctionCall","src":"4335:89:27"},"nodeType":"YulExpressionStatement","src":"4335:89:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4448:3:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4453:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4444:3:27"},"nodeType":"YulFunctionCall","src":"4444:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4468:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"4472:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4464:3:27"},"nodeType":"YulFunctionCall","src":"4464:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4458:5:27"},"nodeType":"YulFunctionCall","src":"4458:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4437:6:27"},"nodeType":"YulFunctionCall","src":"4437:40:27"},"nodeType":"YulExpressionStatement","src":"4437:40:27"},{"nodeType":"YulVariableDeclaration","src":"4490:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4500:4:27","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4494:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4528:3:27"},{"name":"_4","nodeType":"YulIdentifier","src":"4533:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:27"},"nodeType":"YulFunctionCall","src":"4524:12:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4562:2:27"},{"name":"_4","nodeType":"YulIdentifier","src":"4566:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4558:3:27"},"nodeType":"YulFunctionCall","src":"4558:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4552:5:27"},"nodeType":"YulFunctionCall","src":"4552:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4545:6:27"},"nodeType":"YulFunctionCall","src":"4545:26:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4538:6:27"},"nodeType":"YulFunctionCall","src":"4538:34:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4517:6:27"},"nodeType":"YulFunctionCall","src":"4517:56:27"},"nodeType":"YulExpressionStatement","src":"4517:56:27"},{"nodeType":"YulVariableDeclaration","src":"4586:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4596:4:27","type":"","value":"0x80"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"4590:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4624:3:27"},{"name":"_5","nodeType":"YulIdentifier","src":"4629:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4620:3:27"},"nodeType":"YulFunctionCall","src":"4620:12:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4658:2:27"},{"name":"_5","nodeType":"YulIdentifier","src":"4662:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4654:3:27"},"nodeType":"YulFunctionCall","src":"4654:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4648:5:27"},"nodeType":"YulFunctionCall","src":"4648:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4641:6:27"},"nodeType":"YulFunctionCall","src":"4641:26:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4634:6:27"},"nodeType":"YulFunctionCall","src":"4634:34:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4613:6:27"},"nodeType":"YulFunctionCall","src":"4613:56:27"},"nodeType":"YulExpressionStatement","src":"4613:56:27"},{"nodeType":"YulVariableDeclaration","src":"4682:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4692:4:27","type":"","value":"0xa0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"4686:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4720:3:27"},{"name":"_6","nodeType":"YulIdentifier","src":"4725:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:27"},"nodeType":"YulFunctionCall","src":"4716:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4740:2:27"},{"name":"_6","nodeType":"YulIdentifier","src":"4744:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4736:3:27"},"nodeType":"YulFunctionCall","src":"4736:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4730:5:27"},"nodeType":"YulFunctionCall","src":"4730:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4709:6:27"},"nodeType":"YulFunctionCall","src":"4709:40:27"},"nodeType":"YulExpressionStatement","src":"4709:40:27"},{"nodeType":"YulVariableDeclaration","src":"4762:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4772:4:27","type":"","value":"0xc0"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"4766:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4800:3:27"},{"name":"_7","nodeType":"YulIdentifier","src":"4805:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4796:3:27"},"nodeType":"YulFunctionCall","src":"4796:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4820:2:27"},{"name":"_7","nodeType":"YulIdentifier","src":"4824:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4816:3:27"},"nodeType":"YulFunctionCall","src":"4816:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4810:5:27"},"nodeType":"YulFunctionCall","src":"4810:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4789:6:27"},"nodeType":"YulFunctionCall","src":"4789:40:27"},"nodeType":"YulExpressionStatement","src":"4789:40:27"},{"nodeType":"YulVariableDeclaration","src":"4842:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4852:4:27","type":"","value":"0xe0"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"4846:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4880:3:27"},{"name":"_8","nodeType":"YulIdentifier","src":"4885:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4876:3:27"},"nodeType":"YulFunctionCall","src":"4876:12:27"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4900:2:27"},{"name":"_8","nodeType":"YulIdentifier","src":"4904:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4896:3:27"},"nodeType":"YulFunctionCall","src":"4896:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4890:5:27"},"nodeType":"YulFunctionCall","src":"4890:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4869:6:27"},"nodeType":"YulFunctionCall","src":"4869:40:27"},"nodeType":"YulExpressionStatement","src":"4869:40:27"},{"nodeType":"YulAssignment","src":"4922:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4933:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"4938:6:27","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4929:3:27"},"nodeType":"YulFunctionCall","src":"4929:16:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4922:3:27"}]},{"nodeType":"YulAssignment","src":"4958:25:27","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4972:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4980:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:27"},"nodeType":"YulFunctionCall","src":"4968:15:27"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4958:6:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4212:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"4215:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4209:2:27"},"nodeType":"YulFunctionCall","src":"4209:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4223:18:27","statements":[{"nodeType":"YulAssignment","src":"4225:14:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4234:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"4237:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4230:3:27"},"nodeType":"YulFunctionCall","src":"4230:9:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4225:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"4205:3:27","statements":[]},"src":"4201:792:27"},{"nodeType":"YulAssignment","src":"5002:11:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"5010:3:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5002:4:27"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3863:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3874:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3885:4:27","type":""}],"src":"3691:1328:27"},{"body":{"nodeType":"YulBlock","src":"5056:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5073:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5076:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5066:6:27"},"nodeType":"YulFunctionCall","src":"5066:88:27"},"nodeType":"YulExpressionStatement","src":"5066:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5170:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5173:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5163:6:27"},"nodeType":"YulFunctionCall","src":"5163:15:27"},"nodeType":"YulExpressionStatement","src":"5163:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5197:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5187:6:27"},"nodeType":"YulFunctionCall","src":"5187:15:27"},"nodeType":"YulExpressionStatement","src":"5187:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5024:184:27"},{"body":{"nodeType":"YulBlock","src":"5310:893:27","statements":[{"body":{"nodeType":"YulBlock","src":"5356:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5365:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5368:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5358:6:27"},"nodeType":"YulFunctionCall","src":"5358:12:27"},"nodeType":"YulExpressionStatement","src":"5358:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5331:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5340:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5327:3:27"},"nodeType":"YulFunctionCall","src":"5327:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5352:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5323:3:27"},"nodeType":"YulFunctionCall","src":"5323:32:27"},"nodeType":"YulIf","src":"5320:52:27"},{"nodeType":"YulAssignment","src":"5381:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5404:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5391:12:27"},"nodeType":"YulFunctionCall","src":"5391:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5381:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5423:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5454:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5465:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5450:3:27"},"nodeType":"YulFunctionCall","src":"5450:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5437:12:27"},"nodeType":"YulFunctionCall","src":"5437:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5427:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5478:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5488:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5482:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5533:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5542:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5545:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5535:6:27"},"nodeType":"YulFunctionCall","src":"5535:12:27"},"nodeType":"YulExpressionStatement","src":"5535:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5521:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5529:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5518:2:27"},"nodeType":"YulFunctionCall","src":"5518:14:27"},"nodeType":"YulIf","src":"5515:34:27"},{"nodeType":"YulVariableDeclaration","src":"5558:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:27"},"nodeType":"YulFunctionCall","src":"5568:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5562:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5638:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5647:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5650:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5640:6:27"},"nodeType":"YulFunctionCall","src":"5640:12:27"},"nodeType":"YulExpressionStatement","src":"5640:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5617:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5621:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:27"},"nodeType":"YulFunctionCall","src":"5613:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5628:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:27"},"nodeType":"YulFunctionCall","src":"5609:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5602:6:27"},"nodeType":"YulFunctionCall","src":"5602:35:27"},"nodeType":"YulIf","src":"5599:55:27"},{"nodeType":"YulVariableDeclaration","src":"5663:26:27","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5686:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5673:12:27"},"nodeType":"YulFunctionCall","src":"5673:16:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5667:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5712:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5714:16:27"},"nodeType":"YulFunctionCall","src":"5714:18:27"},"nodeType":"YulExpressionStatement","src":"5714:18:27"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5704:2:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5708:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5701:2:27"},"nodeType":"YulFunctionCall","src":"5701:10:27"},"nodeType":"YulIf","src":"5698:36:27"},{"nodeType":"YulVariableDeclaration","src":"5743:17:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5757:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5753:3:27"},"nodeType":"YulFunctionCall","src":"5753:7:27"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5747:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5769:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5789:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5783:5:27"},"nodeType":"YulFunctionCall","src":"5783:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5773:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5801:71:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5823:6:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5847:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5851:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:27"},"nodeType":"YulFunctionCall","src":"5843:13:27"},{"name":"_4","nodeType":"YulIdentifier","src":"5858:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5839:3:27"},"nodeType":"YulFunctionCall","src":"5839:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"5863:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5835:3:27"},"nodeType":"YulFunctionCall","src":"5835:31:27"},{"name":"_4","nodeType":"YulIdentifier","src":"5868:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5831:3:27"},"nodeType":"YulFunctionCall","src":"5831:40:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5819:3:27"},"nodeType":"YulFunctionCall","src":"5819:53:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5805:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5931:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5933:16:27"},"nodeType":"YulFunctionCall","src":"5933:18:27"},"nodeType":"YulExpressionStatement","src":"5933:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5890:10:27"},{"name":"_1","nodeType":"YulIdentifier","src":"5902:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5887:2:27"},"nodeType":"YulFunctionCall","src":"5887:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5910:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5922:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5907:2:27"},"nodeType":"YulFunctionCall","src":"5907:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5884:2:27"},"nodeType":"YulFunctionCall","src":"5884:46:27"},"nodeType":"YulIf","src":"5881:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5969:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5973:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5962:6:27"},"nodeType":"YulFunctionCall","src":"5962:22:27"},"nodeType":"YulExpressionStatement","src":"5962:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6000:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"6008:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5993:6:27"},"nodeType":"YulFunctionCall","src":"5993:18:27"},"nodeType":"YulExpressionStatement","src":"5993:18:27"},{"body":{"nodeType":"YulBlock","src":"6057:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6066:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6069:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6059:6:27"},"nodeType":"YulFunctionCall","src":"6059:12:27"},"nodeType":"YulExpressionStatement","src":"6059:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6034:2:27"},{"name":"_3","nodeType":"YulIdentifier","src":"6038:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6030:3:27"},"nodeType":"YulFunctionCall","src":"6030:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"6043:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6026:3:27"},"nodeType":"YulFunctionCall","src":"6026:20:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6048:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6023:2:27"},"nodeType":"YulFunctionCall","src":"6023:33:27"},"nodeType":"YulIf","src":"6020:53:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6099:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6107:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6095:3:27"},"nodeType":"YulFunctionCall","src":"6095:15:27"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6116:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"6120:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6112:3:27"},"nodeType":"YulFunctionCall","src":"6112:11:27"},{"name":"_3","nodeType":"YulIdentifier","src":"6125:2:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6082:12:27"},"nodeType":"YulFunctionCall","src":"6082:46:27"},"nodeType":"YulExpressionStatement","src":"6082:46:27"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6152:6:27"},{"name":"_3","nodeType":"YulIdentifier","src":"6160:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6148:3:27"},"nodeType":"YulFunctionCall","src":"6148:15:27"},{"kind":"number","nodeType":"YulLiteral","src":"6165:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6144:3:27"},"nodeType":"YulFunctionCall","src":"6144:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"6170:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6137:6:27"},"nodeType":"YulFunctionCall","src":"6137:35:27"},"nodeType":"YulExpressionStatement","src":"6137:35:27"},{"nodeType":"YulAssignment","src":"6181:16:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"6191:6:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6181:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5268:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5279:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5291:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5299:6:27","type":""}],"src":"5213:990:27"},{"body":{"nodeType":"YulBlock","src":"6382:158:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6399:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6410:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6392:6:27"},"nodeType":"YulFunctionCall","src":"6392:21:27"},"nodeType":"YulExpressionStatement","src":"6392:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6433:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6444:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6429:3:27"},"nodeType":"YulFunctionCall","src":"6429:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6449:1:27","type":"","value":"9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6422:6:27"},"nodeType":"YulFunctionCall","src":"6422:29:27"},"nodeType":"YulExpressionStatement","src":"6422:29:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6471:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6482:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6467:3:27"},"nodeType":"YulFunctionCall","src":"6467:18:27"},{"hexValue":"4e6f74204f776e6572","kind":"string","nodeType":"YulLiteral","src":"6487:11:27","type":"","value":"Not Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6460:6:27"},"nodeType":"YulFunctionCall","src":"6460:39:27"},"nodeType":"YulExpressionStatement","src":"6460:39:27"},{"nodeType":"YulAssignment","src":"6508:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6520:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6531:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6516:3:27"},"nodeType":"YulFunctionCall","src":"6516:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6508:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6359:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6373:4:27","type":""}],"src":"6208:332:27"},{"body":{"nodeType":"YulBlock","src":"6719:164:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6747:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6729:6:27"},"nodeType":"YulFunctionCall","src":"6729:21:27"},"nodeType":"YulExpressionStatement","src":"6729:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6770:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6781:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6766:3:27"},"nodeType":"YulFunctionCall","src":"6766:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6786:2:27","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6759:6:27"},"nodeType":"YulFunctionCall","src":"6759:30:27"},"nodeType":"YulExpressionStatement","src":"6759:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6820:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:27"},"nodeType":"YulFunctionCall","src":"6805:18:27"},{"hexValue":"4e6f7420612050726f73756d6572","kind":"string","nodeType":"YulLiteral","src":"6825:16:27","type":"","value":"Not a Prosumer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6798:6:27"},"nodeType":"YulFunctionCall","src":"6798:44:27"},"nodeType":"YulExpressionStatement","src":"6798:44:27"},{"nodeType":"YulAssignment","src":"6851:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6863:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6874:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6859:3:27"},"nodeType":"YulFunctionCall","src":"6859:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6851:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6696:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6710:4:27","type":""}],"src":"6545:338:27"},{"body":{"nodeType":"YulBlock","src":"7062:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7079:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7090:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7072:6:27"},"nodeType":"YulFunctionCall","src":"7072:21:27"},"nodeType":"YulExpressionStatement","src":"7072:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7113:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7124:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7109:3:27"},"nodeType":"YulFunctionCall","src":"7109:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7129:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7102:6:27"},"nodeType":"YulFunctionCall","src":"7102:30:27"},"nodeType":"YulExpressionStatement","src":"7102:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7152:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7163:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7148:3:27"},"nodeType":"YulFunctionCall","src":"7148:18:27"},{"hexValue":"416c726561647920556e73757370656e646564","kind":"string","nodeType":"YulLiteral","src":"7168:21:27","type":"","value":"Already Unsuspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7141:6:27"},"nodeType":"YulFunctionCall","src":"7141:49:27"},"nodeType":"YulExpressionStatement","src":"7141:49:27"},{"nodeType":"YulAssignment","src":"7199:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7211:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7222:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7207:3:27"},"nodeType":"YulFunctionCall","src":"7207:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7199:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7039:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7053:4:27","type":""}],"src":"6888:343:27"},{"body":{"nodeType":"YulBlock","src":"7268:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7285:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7288:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7278:6:27"},"nodeType":"YulFunctionCall","src":"7278:88:27"},"nodeType":"YulExpressionStatement","src":"7278:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7382:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7385:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7375:6:27"},"nodeType":"YulFunctionCall","src":"7375:15:27"},"nodeType":"YulExpressionStatement","src":"7375:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7406:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7409:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7399:6:27"},"nodeType":"YulFunctionCall","src":"7399:15:27"},"nodeType":"YulExpressionStatement","src":"7399:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7236:184:27"},{"body":{"nodeType":"YulBlock","src":"7472:89:27","statements":[{"body":{"nodeType":"YulBlock","src":"7499:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7501:16:27"},"nodeType":"YulFunctionCall","src":"7501:18:27"},"nodeType":"YulExpressionStatement","src":"7501:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7492:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7485:6:27"},"nodeType":"YulFunctionCall","src":"7485:13:27"},"nodeType":"YulIf","src":"7482:39:27"},{"nodeType":"YulAssignment","src":"7530:25:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7541:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7552:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7548:3:27"},"nodeType":"YulFunctionCall","src":"7548:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7537:3:27"},"nodeType":"YulFunctionCall","src":"7537:18:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7530:3:27"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7454:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7464:3:27","type":""}],"src":"7425:136:27"},{"body":{"nodeType":"YulBlock","src":"7613:88:27","statements":[{"body":{"nodeType":"YulBlock","src":"7644:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7646:16:27"},"nodeType":"YulFunctionCall","src":"7646:18:27"},"nodeType":"YulExpressionStatement","src":"7646:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7629:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7640:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7636:3:27"},"nodeType":"YulFunctionCall","src":"7636:6:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7626:2:27"},"nodeType":"YulFunctionCall","src":"7626:17:27"},"nodeType":"YulIf","src":"7623:43:27"},{"nodeType":"YulAssignment","src":"7675:20:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7686:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"7693:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7682:3:27"},"nodeType":"YulFunctionCall","src":"7682:13:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7675:3:27"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7595:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7605:3:27","type":""}],"src":"7566:135:27"},{"body":{"nodeType":"YulBlock","src":"7755:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"7777:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7779:16:27"},"nodeType":"YulFunctionCall","src":"7779:18:27"},"nodeType":"YulExpressionStatement","src":"7779:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7771:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7774:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7768:2:27"},"nodeType":"YulFunctionCall","src":"7768:8:27"},"nodeType":"YulIf","src":"7765:34:27"},{"nodeType":"YulAssignment","src":"7808:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7820:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7823:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7816:3:27"},"nodeType":"YulFunctionCall","src":"7816:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7808:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7737:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"7740:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7746:4:27","type":""}],"src":"7706:125:27"},{"body":{"nodeType":"YulBlock","src":"7868:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7885:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7888:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7878:6:27"},"nodeType":"YulFunctionCall","src":"7878:88:27"},"nodeType":"YulExpressionStatement","src":"7878:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7982:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7985:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7975:6:27"},"nodeType":"YulFunctionCall","src":"7975:15:27"},"nodeType":"YulExpressionStatement","src":"7975:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8006:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8009:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7999:6:27"},"nodeType":"YulFunctionCall","src":"7999:15:27"},"nodeType":"YulExpressionStatement","src":"7999:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7836:184:27"},{"body":{"nodeType":"YulBlock","src":"8057:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8074:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8077:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8067:6:27"},"nodeType":"YulFunctionCall","src":"8067:88:27"},"nodeType":"YulExpressionStatement","src":"8067:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8171:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8174:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8164:6:27"},"nodeType":"YulFunctionCall","src":"8164:15:27"},"nodeType":"YulExpressionStatement","src":"8164:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8195:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8198:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8188:6:27"},"nodeType":"YulFunctionCall","src":"8188:15:27"},"nodeType":"YulExpressionStatement","src":"8188:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"8025:184:27"},{"body":{"nodeType":"YulBlock","src":"8260:74:27","statements":[{"body":{"nodeType":"YulBlock","src":"8283:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"8285:16:27"},"nodeType":"YulFunctionCall","src":"8285:18:27"},"nodeType":"YulExpressionStatement","src":"8285:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8280:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8273:6:27"},"nodeType":"YulFunctionCall","src":"8273:9:27"},"nodeType":"YulIf","src":"8270:35:27"},{"nodeType":"YulAssignment","src":"8314:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8323:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8326:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8319:3:27"},"nodeType":"YulFunctionCall","src":"8319:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8314:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8245:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"8248:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8254:1:27","type":""}],"src":"8214:120:27"},{"body":{"nodeType":"YulBlock","src":"8530:14:27","statements":[{"nodeType":"YulAssignment","src":"8532:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"8539:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8532:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8514:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8522:3:27","type":""}],"src":"8339:205:27"},{"body":{"nodeType":"YulBlock","src":"8723:161:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8740:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8751:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:27"},"nodeType":"YulFunctionCall","src":"8733:21:27"},"nodeType":"YulExpressionStatement","src":"8733:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8774:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8785:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8770:3:27"},"nodeType":"YulFunctionCall","src":"8770:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8790:2:27","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8763:6:27"},"nodeType":"YulFunctionCall","src":"8763:30:27"},"nodeType":"YulExpressionStatement","src":"8763:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8813:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8824:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8809:3:27"},"nodeType":"YulFunctionCall","src":"8809:18:27"},{"hexValue":"43616c6c204661696c6564","kind":"string","nodeType":"YulLiteral","src":"8829:13:27","type":"","value":"Call Failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8802:6:27"},"nodeType":"YulFunctionCall","src":"8802:41:27"},"nodeType":"YulExpressionStatement","src":"8802:41:27"},{"nodeType":"YulAssignment","src":"8852:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8864:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8875:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8860:3:27"},"nodeType":"YulFunctionCall","src":"8860:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8852:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8700:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8714:4:27","type":""}],"src":"8549:335:27"},{"body":{"nodeType":"YulBlock","src":"8944:382:27","statements":[{"nodeType":"YulAssignment","src":"8954:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8968:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8971:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8964:3:27"},"nodeType":"YulFunctionCall","src":"8964:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8954:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"8985:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9015:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"9021:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9011:3:27"},"nodeType":"YulFunctionCall","src":"9011:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8989:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9062:31:27","statements":[{"nodeType":"YulAssignment","src":"9064:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9078:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9086:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9074:3:27"},"nodeType":"YulFunctionCall","src":"9074:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9064:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9042:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9035:6:27"},"nodeType":"YulFunctionCall","src":"9035:26:27"},"nodeType":"YulIf","src":"9032:61:27"},{"body":{"nodeType":"YulBlock","src":"9152:168:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9173:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9176:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9166:6:27"},"nodeType":"YulFunctionCall","src":"9166:88:27"},"nodeType":"YulExpressionStatement","src":"9166:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9274:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9277:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9267:6:27"},"nodeType":"YulFunctionCall","src":"9267:15:27"},"nodeType":"YulExpressionStatement","src":"9267:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9302:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9305:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9295:6:27"},"nodeType":"YulFunctionCall","src":"9295:15:27"},"nodeType":"YulExpressionStatement","src":"9295:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9108:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9131:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9139:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9128:2:27"},"nodeType":"YulFunctionCall","src":"9128:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9105:2:27"},"nodeType":"YulFunctionCall","src":"9105:38:27"},"nodeType":"YulIf","src":"9102:218:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8924:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8933:6:27","type":""}],"src":"8889:437:27"},{"body":{"nodeType":"YulBlock","src":"9505:180:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9522:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9533:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9515:6:27"},"nodeType":"YulFunctionCall","src":"9515:21:27"},"nodeType":"YulExpressionStatement","src":"9515:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9556:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9567:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9552:3:27"},"nodeType":"YulFunctionCall","src":"9552:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9572:2:27","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:27"},"nodeType":"YulFunctionCall","src":"9545:30:27"},"nodeType":"YulExpressionStatement","src":"9545:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9595:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9606:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9591:3:27"},"nodeType":"YulFunctionCall","src":"9591:18:27"},{"hexValue":"496e76616c696420556e617070726f7665642050726f73756d6572204944","kind":"string","nodeType":"YulLiteral","src":"9611:32:27","type":"","value":"Invalid Unapproved Prosumer ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9584:6:27"},"nodeType":"YulFunctionCall","src":"9584:60:27"},"nodeType":"YulExpressionStatement","src":"9584:60:27"},{"nodeType":"YulAssignment","src":"9653:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9665:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9676:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9661:3:27"},"nodeType":"YulFunctionCall","src":"9661:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9653:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9482:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9496:4:27","type":""}],"src":"9331:354:27"},{"body":{"nodeType":"YulBlock","src":"9864:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9881:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9892:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9874:6:27"},"nodeType":"YulFunctionCall","src":"9874:21:27"},"nodeType":"YulExpressionStatement","src":"9874:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9915:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9926:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9911:3:27"},"nodeType":"YulFunctionCall","src":"9911:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9931:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9904:6:27"},"nodeType":"YulFunctionCall","src":"9904:30:27"},"nodeType":"YulExpressionStatement","src":"9904:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9954:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9965:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9950:3:27"},"nodeType":"YulFunctionCall","src":"9950:18:27"},{"hexValue":"50726f73756d657220416c726561647920646973617070726f76656420627920","kind":"string","nodeType":"YulLiteral","src":"9970:34:27","type":"","value":"Prosumer Already disapproved by "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9943:6:27"},"nodeType":"YulFunctionCall","src":"9943:62:27"},"nodeType":"YulExpressionStatement","src":"9943:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10025:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10036:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10021:3:27"},"nodeType":"YulFunctionCall","src":"10021:18:27"},{"hexValue":"796f75","kind":"string","nodeType":"YulLiteral","src":"10041:5:27","type":"","value":"you"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10014:6:27"},"nodeType":"YulFunctionCall","src":"10014:33:27"},"nodeType":"YulExpressionStatement","src":"10014:33:27"},{"nodeType":"YulAssignment","src":"10056:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10068:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10079:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10064:3:27"},"nodeType":"YulFunctionCall","src":"10064:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10056:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9841:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9855:4:27","type":""}],"src":"9690:399:27"},{"body":{"nodeType":"YulBlock","src":"10268:166:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10285:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10296:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10278:6:27"},"nodeType":"YulFunctionCall","src":"10278:21:27"},"nodeType":"YulExpressionStatement","src":"10278:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10319:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10330:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10315:3:27"},"nodeType":"YulFunctionCall","src":"10315:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10335:2:27","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10308:6:27"},"nodeType":"YulFunctionCall","src":"10308:30:27"},"nodeType":"YulExpressionStatement","src":"10308:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10358:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10369:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10354:3:27"},"nodeType":"YulFunctionCall","src":"10354:18:27"},{"hexValue":"596f752061726520616e204f776e6572","kind":"string","nodeType":"YulLiteral","src":"10374:18:27","type":"","value":"You are an Owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10347:6:27"},"nodeType":"YulFunctionCall","src":"10347:46:27"},"nodeType":"YulExpressionStatement","src":"10347:46:27"},{"nodeType":"YulAssignment","src":"10402:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10414:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10425:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10410:3:27"},"nodeType":"YulFunctionCall","src":"10410:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10402:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10245:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10259:4:27","type":""}],"src":"10094:340:27"},{"body":{"nodeType":"YulBlock","src":"10613:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10630:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10641:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10623:6:27"},"nodeType":"YulFunctionCall","src":"10623:21:27"},"nodeType":"YulExpressionStatement","src":"10623:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10664:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10675:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10660:3:27"},"nodeType":"YulFunctionCall","src":"10660:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10680:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10653:6:27"},"nodeType":"YulFunctionCall","src":"10653:30:27"},"nodeType":"YulExpressionStatement","src":"10653:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10703:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10714:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10699:3:27"},"nodeType":"YulFunctionCall","src":"10699:18:27"},{"hexValue":"526567697374726174696f6e204661696c65642c20496e73756666696369656e","kind":"string","nodeType":"YulLiteral","src":"10719:34:27","type":"","value":"Registration Failed, Insufficien"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10692:6:27"},"nodeType":"YulFunctionCall","src":"10692:62:27"},"nodeType":"YulExpressionStatement","src":"10692:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10774:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10785:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10770:3:27"},"nodeType":"YulFunctionCall","src":"10770:18:27"},{"hexValue":"7420466565","kind":"string","nodeType":"YulLiteral","src":"10790:7:27","type":"","value":"t Fee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10763:6:27"},"nodeType":"YulFunctionCall","src":"10763:35:27"},"nodeType":"YulExpressionStatement","src":"10763:35:27"},{"nodeType":"YulAssignment","src":"10807:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10819:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10830:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10815:3:27"},"nodeType":"YulFunctionCall","src":"10815:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10807:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10590:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10604:4:27","type":""}],"src":"10439:401:27"},{"body":{"nodeType":"YulBlock","src":"11019:231:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11036:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11047:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11029:6:27"},"nodeType":"YulFunctionCall","src":"11029:21:27"},"nodeType":"YulExpressionStatement","src":"11029:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11070:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11081:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11066:3:27"},"nodeType":"YulFunctionCall","src":"11066:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11086:2:27","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11059:6:27"},"nodeType":"YulFunctionCall","src":"11059:30:27"},"nodeType":"YulExpressionStatement","src":"11059:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11109:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11120:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11105:3:27"},"nodeType":"YulFunctionCall","src":"11105:18:27"},{"hexValue":"596f752061726520616c726561647920612050726f73756d657220696e207468","kind":"string","nodeType":"YulLiteral","src":"11125:34:27","type":"","value":"You are already a Prosumer in th"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11098:6:27"},"nodeType":"YulFunctionCall","src":"11098:62:27"},"nodeType":"YulExpressionStatement","src":"11098:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11180:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11191:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11176:3:27"},"nodeType":"YulFunctionCall","src":"11176:18:27"},{"hexValue":"65204e6574776f726b","kind":"string","nodeType":"YulLiteral","src":"11196:11:27","type":"","value":"e Network"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11169:6:27"},"nodeType":"YulFunctionCall","src":"11169:39:27"},"nodeType":"YulExpressionStatement","src":"11169:39:27"},{"nodeType":"YulAssignment","src":"11217:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11229:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11240:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11225:3:27"},"nodeType":"YulFunctionCall","src":"11225:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11217:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10996:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11010:4:27","type":""}],"src":"10845:405:27"},{"body":{"nodeType":"YulBlock","src":"11429:233:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11446:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11457:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11439:6:27"},"nodeType":"YulFunctionCall","src":"11439:21:27"},"nodeType":"YulExpressionStatement","src":"11439:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11480:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11491:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11476:3:27"},"nodeType":"YulFunctionCall","src":"11476:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11496:2:27","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11469:6:27"},"nodeType":"YulFunctionCall","src":"11469:30:27"},"nodeType":"YulExpressionStatement","src":"11469:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11519:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11530:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11515:3:27"},"nodeType":"YulFunctionCall","src":"11515:18:27"},{"hexValue":"596f75206861766520616c72656164792072657175657374656420666f722052","kind":"string","nodeType":"YulLiteral","src":"11535:34:27","type":"","value":"You have already requested for R"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11508:6:27"},"nodeType":"YulFunctionCall","src":"11508:62:27"},"nodeType":"YulExpressionStatement","src":"11508:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11590:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11601:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11586:3:27"},"nodeType":"YulFunctionCall","src":"11586:18:27"},{"hexValue":"6567697374726174696f6e","kind":"string","nodeType":"YulLiteral","src":"11606:13:27","type":"","value":"egistration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11579:6:27"},"nodeType":"YulFunctionCall","src":"11579:41:27"},"nodeType":"YulExpressionStatement","src":"11579:41:27"},{"nodeType":"YulAssignment","src":"11629:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11641:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11652:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11637:3:27"},"nodeType":"YulFunctionCall","src":"11637:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11629:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11406:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11420:4:27","type":""}],"src":"11255:407:27"},{"body":{"nodeType":"YulBlock","src":"11841:177:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11858:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11869:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11851:6:27"},"nodeType":"YulFunctionCall","src":"11851:21:27"},"nodeType":"YulExpressionStatement","src":"11851:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11892:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11903:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11888:3:27"},"nodeType":"YulFunctionCall","src":"11888:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11908:2:27","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11881:6:27"},"nodeType":"YulFunctionCall","src":"11881:30:27"},"nodeType":"YulExpressionStatement","src":"11881:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11931:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11942:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11927:3:27"},"nodeType":"YulFunctionCall","src":"11927:18:27"},{"hexValue":"456e746572206120313220646967697420416164686172204e6f2e","kind":"string","nodeType":"YulLiteral","src":"11947:29:27","type":"","value":"Enter a 12 digit Aadhar No."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11920:6:27"},"nodeType":"YulFunctionCall","src":"11920:57:27"},"nodeType":"YulExpressionStatement","src":"11920:57:27"},{"nodeType":"YulAssignment","src":"11986:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11998:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12009:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11994:3:27"},"nodeType":"YulFunctionCall","src":"11994:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11986:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11818:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11832:4:27","type":""}],"src":"11667:351:27"},{"body":{"nodeType":"YulBlock","src":"12197:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12214:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12225:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12207:6:27"},"nodeType":"YulFunctionCall","src":"12207:21:27"},"nodeType":"YulExpressionStatement","src":"12207:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12248:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12259:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12244:3:27"},"nodeType":"YulFunctionCall","src":"12244:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"12264:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12237:6:27"},"nodeType":"YulFunctionCall","src":"12237:30:27"},"nodeType":"YulExpressionStatement","src":"12237:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12287:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12298:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12283:3:27"},"nodeType":"YulFunctionCall","src":"12283:18:27"},{"hexValue":"50726f73756d657220416c726561647920617070726f76656420627920796f75","kind":"string","nodeType":"YulLiteral","src":"12303:34:27","type":"","value":"Prosumer Already approved by you"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12276:6:27"},"nodeType":"YulFunctionCall","src":"12276:62:27"},"nodeType":"YulExpressionStatement","src":"12276:62:27"},{"nodeType":"YulAssignment","src":"12347:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12359:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12370:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12355:3:27"},"nodeType":"YulFunctionCall","src":"12355:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12347:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12174:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12188:4:27","type":""}],"src":"12023:356:27"},{"body":{"nodeType":"YulBlock","src":"12432:80:27","statements":[{"body":{"nodeType":"YulBlock","src":"12459:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12461:16:27"},"nodeType":"YulFunctionCall","src":"12461:18:27"},"nodeType":"YulExpressionStatement","src":"12461:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12448:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12455:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12451:3:27"},"nodeType":"YulFunctionCall","src":"12451:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12445:2:27"},"nodeType":"YulFunctionCall","src":"12445:13:27"},"nodeType":"YulIf","src":"12442:39:27"},{"nodeType":"YulAssignment","src":"12490:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12501:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"12504:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12497:3:27"},"nodeType":"YulFunctionCall","src":"12497:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12490:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12415:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"12418:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12424:3:27","type":""}],"src":"12384:128:27"},{"body":{"nodeType":"YulBlock","src":"12691:168:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12708:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12719:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12701:6:27"},"nodeType":"YulFunctionCall","src":"12701:21:27"},"nodeType":"YulExpressionStatement","src":"12701:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12742:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12753:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12738:3:27"},"nodeType":"YulFunctionCall","src":"12738:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"12758:2:27","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12731:6:27"},"nodeType":"YulFunctionCall","src":"12731:30:27"},"nodeType":"YulExpressionStatement","src":"12731:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12781:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12792:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12777:3:27"},"nodeType":"YulFunctionCall","src":"12777:18:27"},{"hexValue":"596f75206e6f7420612050726f73756d6572","kind":"string","nodeType":"YulLiteral","src":"12797:20:27","type":"","value":"You not a Prosumer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12770:6:27"},"nodeType":"YulFunctionCall","src":"12770:48:27"},"nodeType":"YulExpressionStatement","src":"12770:48:27"},{"nodeType":"YulAssignment","src":"12827:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12839:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12850:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12835:3:27"},"nodeType":"YulFunctionCall","src":"12835:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12827:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12668:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12682:4:27","type":""}],"src":"12517:342:27"},{"body":{"nodeType":"YulBlock","src":"13038:172:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13055:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13066:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13048:6:27"},"nodeType":"YulFunctionCall","src":"13048:21:27"},"nodeType":"YulExpressionStatement","src":"13048:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13089:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13100:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13085:3:27"},"nodeType":"YulFunctionCall","src":"13085:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13105:2:27","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13078:6:27"},"nodeType":"YulFunctionCall","src":"13078:30:27"},"nodeType":"YulExpressionStatement","src":"13078:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13128:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13139:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13124:3:27"},"nodeType":"YulFunctionCall","src":"13124:18:27"},{"hexValue":"41636375736564206e6f7420612050726f73756d6572","kind":"string","nodeType":"YulLiteral","src":"13144:24:27","type":"","value":"Accused not a Prosumer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13117:6:27"},"nodeType":"YulFunctionCall","src":"13117:52:27"},"nodeType":"YulExpressionStatement","src":"13117:52:27"},{"nodeType":"YulAssignment","src":"13178:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13190:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13201:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13186:3:27"},"nodeType":"YulFunctionCall","src":"13186:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13178:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13015:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13029:4:27","type":""}],"src":"12864:346:27"},{"body":{"nodeType":"YulBlock","src":"13389:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13406:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13417:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13399:6:27"},"nodeType":"YulFunctionCall","src":"13399:21:27"},"nodeType":"YulExpressionStatement","src":"13399:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13440:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13451:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13436:3:27"},"nodeType":"YulFunctionCall","src":"13436:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13456:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13429:6:27"},"nodeType":"YulFunctionCall","src":"13429:30:27"},"nodeType":"YulExpressionStatement","src":"13429:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13479:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13490:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13475:3:27"},"nodeType":"YulFunctionCall","src":"13475:18:27"},{"hexValue":"416363757365642050726f73756d65722069732053757370656e646564","kind":"string","nodeType":"YulLiteral","src":"13495:31:27","type":"","value":"Accused Prosumer is Suspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13468:6:27"},"nodeType":"YulFunctionCall","src":"13468:59:27"},"nodeType":"YulExpressionStatement","src":"13468:59:27"},{"nodeType":"YulAssignment","src":"13536:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13548:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13559:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13544:3:27"},"nodeType":"YulFunctionCall","src":"13544:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13536:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13366:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13380:4:27","type":""}],"src":"13215:353:27"},{"body":{"nodeType":"YulBlock","src":"13747:167:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13775:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13757:6:27"},"nodeType":"YulFunctionCall","src":"13757:21:27"},"nodeType":"YulExpressionStatement","src":"13757:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13798:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13809:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13794:3:27"},"nodeType":"YulFunctionCall","src":"13794:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13814:2:27","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13787:6:27"},"nodeType":"YulFunctionCall","src":"13787:30:27"},"nodeType":"YulExpressionStatement","src":"13787:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13837:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13848:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13833:3:27"},"nodeType":"YulFunctionCall","src":"13833:18:27"},{"hexValue":"596f75206172652053757370656e646564","kind":"string","nodeType":"YulLiteral","src":"13853:19:27","type":"","value":"You are Suspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13826:6:27"},"nodeType":"YulFunctionCall","src":"13826:47:27"},"nodeType":"YulExpressionStatement","src":"13826:47:27"},{"nodeType":"YulAssignment","src":"13882:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13894:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13905:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13890:3:27"},"nodeType":"YulFunctionCall","src":"13890:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13882:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13724:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13738:4:27","type":""}],"src":"13573:341:27"},{"body":{"nodeType":"YulBlock","src":"14093:173:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14110:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14121:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14103:6:27"},"nodeType":"YulFunctionCall","src":"14103:21:27"},"nodeType":"YulExpressionStatement","src":"14103:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14144:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14155:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14140:3:27"},"nodeType":"YulFunctionCall","src":"14140:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14160:2:27","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14133:6:27"},"nodeType":"YulFunctionCall","src":"14133:30:27"},"nodeType":"YulExpressionStatement","src":"14133:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14183:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14194:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14179:3:27"},"nodeType":"YulFunctionCall","src":"14179:18:27"},{"hexValue":"50726f73756d657220697320446973617070726f766564","kind":"string","nodeType":"YulLiteral","src":"14199:25:27","type":"","value":"Prosumer is Disapproved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14172:6:27"},"nodeType":"YulFunctionCall","src":"14172:53:27"},"nodeType":"YulExpressionStatement","src":"14172:53:27"},{"nodeType":"YulAssignment","src":"14234:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14246:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14257:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14242:3:27"},"nodeType":"YulFunctionCall","src":"14242:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14234:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14070:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14084:4:27","type":""}],"src":"13919:347:27"},{"body":{"nodeType":"YulBlock","src":"14445:169:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14462:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14473:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14455:6:27"},"nodeType":"YulFunctionCall","src":"14455:21:27"},"nodeType":"YulExpressionStatement","src":"14455:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14496:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14507:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14492:3:27"},"nodeType":"YulFunctionCall","src":"14492:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14512:2:27","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14485:6:27"},"nodeType":"YulFunctionCall","src":"14485:30:27"},"nodeType":"YulExpressionStatement","src":"14485:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14535:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14546:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14531:3:27"},"nodeType":"YulFunctionCall","src":"14531:18:27"},{"hexValue":"596f752061726520446973617070726f766564","kind":"string","nodeType":"YulLiteral","src":"14551:21:27","type":"","value":"You are Disapproved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14524:6:27"},"nodeType":"YulFunctionCall","src":"14524:49:27"},"nodeType":"YulExpressionStatement","src":"14524:49:27"},{"nodeType":"YulAssignment","src":"14582:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14594:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14605:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14590:3:27"},"nodeType":"YulFunctionCall","src":"14590:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14582:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14422:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14436:4:27","type":""}],"src":"14271:343:27"},{"body":{"nodeType":"YulBlock","src":"14657:74:27","statements":[{"body":{"nodeType":"YulBlock","src":"14680:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"14682:16:27"},"nodeType":"YulFunctionCall","src":"14682:18:27"},"nodeType":"YulExpressionStatement","src":"14682:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14677:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14670:6:27"},"nodeType":"YulFunctionCall","src":"14670:9:27"},"nodeType":"YulIf","src":"14667:35:27"},{"nodeType":"YulAssignment","src":"14711:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14720:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"14723:1:27"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"14716:3:27"},"nodeType":"YulFunctionCall","src":"14716:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14711:1:27"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14642:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"14645:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14651:1:27","type":""}],"src":"14619:112:27"},{"body":{"nodeType":"YulBlock","src":"14910:167:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14927:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14938:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14920:6:27"},"nodeType":"YulFunctionCall","src":"14920:21:27"},"nodeType":"YulExpressionStatement","src":"14920:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14961:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14972:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14957:3:27"},"nodeType":"YulFunctionCall","src":"14957:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14977:2:27","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14950:6:27"},"nodeType":"YulFunctionCall","src":"14950:30:27"},"nodeType":"YulExpressionStatement","src":"14950:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15000:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15011:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14996:3:27"},"nodeType":"YulFunctionCall","src":"14996:18:27"},{"hexValue":"416c72656164792053757370656e646564","kind":"string","nodeType":"YulLiteral","src":"15016:19:27","type":"","value":"Already Suspended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14989:6:27"},"nodeType":"YulFunctionCall","src":"14989:47:27"},"nodeType":"YulExpressionStatement","src":"14989:47:27"},{"nodeType":"YulAssignment","src":"15045:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15057:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15068:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15053:3:27"},"nodeType":"YulFunctionCall","src":"15053:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15045:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14887:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14901:4:27","type":""}],"src":"14736:341:27"},{"body":{"nodeType":"YulBlock","src":"15256:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15273:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15284:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15266:6:27"},"nodeType":"YulFunctionCall","src":"15266:21:27"},"nodeType":"YulExpressionStatement","src":"15266:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15307:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15318:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15303:3:27"},"nodeType":"YulFunctionCall","src":"15303:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"15323:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15296:6:27"},"nodeType":"YulFunctionCall","src":"15296:30:27"},"nodeType":"YulExpressionStatement","src":"15296:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15346:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15357:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15342:3:27"},"nodeType":"YulFunctionCall","src":"15342:18:27"},{"hexValue":"496e76616c696420756e617070726f76656450726f73756d657220496e646578","kind":"string","nodeType":"YulLiteral","src":"15362:34:27","type":"","value":"Invalid unapprovedProsumer Index"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15335:6:27"},"nodeType":"YulFunctionCall","src":"15335:62:27"},"nodeType":"YulExpressionStatement","src":"15335:62:27"},{"nodeType":"YulAssignment","src":"15406:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15418:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15429:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15414:3:27"},"nodeType":"YulFunctionCall","src":"15414:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15406:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15233:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15247:4:27","type":""}],"src":"15082:356:27"},{"body":{"nodeType":"YulBlock","src":"15475:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15492:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15495:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15485:6:27"},"nodeType":"YulFunctionCall","src":"15485:88:27"},"nodeType":"YulExpressionStatement","src":"15485:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15589:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15592:4:27","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15582:6:27"},"nodeType":"YulFunctionCall","src":"15582:15:27"},"nodeType":"YulExpressionStatement","src":"15582:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15613:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15606:6:27"},"nodeType":"YulFunctionCall","src":"15606:15:27"},"nodeType":"YulExpressionStatement","src":"15606:15:27"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"15443:184:27"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        tail := abi_encode_string(value3, add(headStart, 160))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_prosumer_$3832_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), iszero(iszero(mload(add(_3, _4)))))\n            let _5 := 0x80\n            mstore(add(pos, _5), iszero(iszero(mload(add(_3, _5)))))\n            let _6 := 0xa0\n            mstore(add(pos, _6), mload(add(_3, _6)))\n            let _7 := 0xc0\n            mstore(add(pos, _7), mload(add(_3, _7)))\n            let _8 := 0xe0\n            mstore(add(pos, _8), mload(add(_3, _8)))\n            pos := add(pos, 0x0100)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_4f65fe9d7547538bb668012f784430e858c0be19db44902a6d4892dc556aa6b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not Owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_675320639c9e3270925d96c070dcd94ddf3b2de4fc9aeb80cb4f76bd626948cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not a Prosumer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8b74246df4690ee7fb5a4eced78f5b705ad3a34470ff2c91dd83d8755344de0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already Unsuspended\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_df4b36f462e8845f11209535bb098e39912100cc7f82e9bb1c249c245b02f1fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Call Failed\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_aaf71183bc852b02f2012d27d578e8cd4333d60b58dec4263378ce35ebbf3a5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Invalid Unapproved Prosumer ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_20bcad3c36af7b13c024683ba7427e260395e78e90f873c8f6df6030f6eacb74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Prosumer Already disapproved by \")\n        mstore(add(headStart, 96), \"you\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f7eecc12822bd18dabad409371d457bd76edd4d523948c0a9c0d89752bc7c6a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"You are an Owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e31f483c3609f0a4a2bacb688ded0e94c1364eb93ca85628a86ecbbf75fbcf43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Registration Failed, Insufficien\")\n        mstore(add(headStart, 96), \"t Fee\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bf88eb26fd512b36c49b335ff0e5852a67c46ff527c82f725f5d3391fac46602__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are already a Prosumer in th\")\n        mstore(add(headStart, 96), \"e Network\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9c99287996c796b8f9bf1b5a984687788eaa28b399a1325f6067ca93d4eaa3e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"You have already requested for R\")\n        mstore(add(headStart, 96), \"egistration\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8dcead2439a6dd4c401bf297fc28b1526912606c0bf6194f7f6292a7847191c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Enter a 12 digit Aadhar No.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c8900037f154ddc43cd3b3dc674c897035b84b1dfa56e6e89784f85c29c0612f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Prosumer Already approved by you\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_33b0e93b11dbbba1ef36e3f78f450f32731db2b40882fe79bf53c89b7d51db75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You not a Prosumer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_92200e4063f210e3759f179957fd3875fb9b619e7200662656f51b1f40253be7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Accused not a Prosumer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e1a63b8bdc3e4fc515c9d69a4e936f55fbac6e3a1fc3b1c44a78255c94d792a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Accused Prosumer is Suspended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e733641046e36a80e3fc7c16652292bc9a524222d6df3614b55891a18d191682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"You are Suspended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_949d27c565209fd81e9402f37194be49dede75e56496627076a1d2394b85d104__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Prosumer is Disapproved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cb903a83ce72dc9dfd9788b1aa3b86ad9f9fe7fe8a4294ef9c9b42e022454bab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"You are Disapproved\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_4497431df999b670ac30ee2fba000714a3d571a5c0ab33a4994cca0e1dadcbbd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already Suspended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8d646ce479da209a473f34565638a034ae38cff52884bdd98b6f69c8f4ae0bea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Invalid unapprovedProsumer Index\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x233 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B78BC6B GT PUSH2 0x138 JUMPI DUP1 PUSH4 0xCE1B815F GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0xE814DB59 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xF4B16045 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF4B16045 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xF85BAE78 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xFDBD2E8B EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE814DB59 EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCE1B815F EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xDC8452CD EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xE706D568 EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xE7E4F9D9 EQ PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A9DDD16 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x9FF34115 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0x9FF34115 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0xC7A7275E EQ PUSH2 0x645 JUMPI DUP1 PUSH4 0xC8B6BA49 EQ PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A9DDD16 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x9C01A6DF EQ PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B78BC6B EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x8FAC6371 EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0x8FFF20F3 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0x90F8BA3C EQ PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EA30B2F GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x5F81B606 GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x66CC771F GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x66CC771F EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x73DE8CE8 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x75AE81B3 EQ PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F81B606 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x612536FC EQ PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EA30B2F EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x4EF8AB77 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x50A7AC25 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40CB3342 GT PUSH2 0x207 JUMPI DUP1 PUSH4 0x40CB3342 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x486FF0CD EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x4CA46D19 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x1CFDCE EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x25E7C27 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x143859EB EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D48 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xB60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x26F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2E36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH2 0x567 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST PUSH2 0x33D PUSH2 0x640 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x153C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x192C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x680 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE6 JUMP JUMPDEST PUSH2 0x1F1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1 PUSH2 0x246A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x6E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D48 JUMP JUMPDEST PUSH2 0x257D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x709 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x2832 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0x729 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x749 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x784 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x7BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x80A PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x905 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920556E73757370656E64656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x9A2 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x9E6 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA76 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0xA29 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA70 DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0xA9B DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x9 PUSH2 0xAE0 PUSH1 0x1 DUP8 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAF0 JUMPI PUSH2 0xAF0 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x7 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x14 PUSH2 0xB27 DUP3 DUP7 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0xB6C PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBD1 SWAP1 SELFBALANCE PUSH2 0x302C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST POP DUP1 PUSH2 0xCAA DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH2 0xCC3 SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCEF SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0xD50 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0xDF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE0D JUMPI PUSH2 0xE0D PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0xE43 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920646973617070726F76656420627920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x796F750000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEEC JUMPI PUSH2 0xEEC PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0xF22 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xF70 JUMPI PUSH2 0xF70 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0xFA6 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFE1 JUMPI PUSH2 0xFE1 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1017 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xE PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1065 JUMPI PUSH2 0x1065 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x109E DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10BD JUMPI PUSH2 0x10BD PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x10F6 DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xCB2 JUMPI PUSH2 0x110F DUP3 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1126 JUMPI PUSH2 0x1126 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xE SWAP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x116F JUMPI PUSH2 0x116F PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x14 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x11E6 SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1212 SWAP1 PUSH2 0x3040 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x125F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1234 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x125F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1242 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 PUSH2 0x100 SWAP1 SWAP4 DIV AND SWAP3 SWAP1 DUP9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 PUSH2 0x13A4 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x141A PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1475 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH32 0x50726F73756D657220417070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1496 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14F1 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH32 0x50726F73756D657220446973617070726F766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x50726F73756D6572204E6F742056657269666965642059657400000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616E204F776E657200000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E204661696C65642C20496E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7420466565000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x169A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C726561647920612050726F73756D657220696E207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65204E6574776F726B0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST PUSH2 0x16A2 PUSH2 0x2BF6 JUMP JUMPDEST ISZERO PUSH2 0x1715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C72656164792072657175657374656420666F722052 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6567697374726174696F6E000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x85B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x173E JUMPI PUSH2 0x172A PUSH1 0xA DUP4 PUSH2 0x302C JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1736 DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1719 JUMP JUMPDEST DUP1 PUSH1 0xC EQ PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E746572206120313220646967697420416164686172204E6F2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x60 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP5 DUP2 MSTORE PUSH1 0xE0 DUP8 ADD DUP6 DUP2 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP7 MSTORE SWAP7 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x7 SWAP1 SWAP7 MUL SWAP6 DUP7 ADD SSTORE SWAP7 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A9 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP7 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AA DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AB DUP4 ADD DUP1 SLOAD SWAP3 MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP2 ISZERO ISZERO SWAP1 SWAP4 MUL OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AC DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AD DUP4 ADD SSTORE MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2AE SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x1938 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x198D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0x19DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420556E617070726F7665642050726F73756D65722049440000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x19F5 JUMPI PUSH2 0x19F5 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1A2B PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220416C726561647920617070726F76656420627920796F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1AAE JUMPI PUSH2 0x1AAE PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1AE4 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1B32 JUMPI PUSH2 0x1B32 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1B68 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C66 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1BA3 JUMPI PUSH2 0x1BA3 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SWAP1 PUSH2 0x1BD9 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xF PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1C27 JUMPI PUSH2 0x1C27 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1C60 DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C7F JUMPI PUSH2 0x1C7F PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1CB8 DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x1 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1CDD JUMPI PUSH2 0x1CDD PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0x1D0D SWAP1 PUSH1 0x1 PUSH2 0x307B JUMP JUMPDEST PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1D20 JUMPI PUSH2 0x1D20 PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1D4E JUMPI PUSH2 0x1D4E PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x7 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x9 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1DA2 JUMPI PUSH2 0x1DA2 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP8 SSTORE SWAP6 DUP6 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 PUSH1 0x7 SWAP3 DUP4 MUL SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP2 DUP3 SSTORE DUP3 DUP2 ADD SLOAD SWAP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE PUSH2 0x1E67 DUP3 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x1E77 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1E87 JUMPI PUSH2 0x1E87 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD DUP3 ADD SLOAD PUSH1 0x9 DUP1 SLOAD DUP6 MSTORE PUSH1 0xC SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0xD SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1EDB SWAP1 DUP6 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1EEB JUMPI PUSH2 0x1EEB PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 PUSH2 0x1F29 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E6F7420612050726F73756D65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2006 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41636375736564206E6F7420612050726F73756D657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2033 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x209D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363757365642050726F73756D65722069732053757370656E646564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x20A9 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0xC DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x212E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206172652053757370656E646564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x215B PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x21C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F73756D657220697320446973617070726F766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0x21D1 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0xC DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520446973617070726F76656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP1 SLOAD SWAP1 POP PUSH1 0x1 PUSH2 0x2275 SWAP2 SWAP1 PUSH2 0x307B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD PUSH1 0x0 PUSH2 0x2286 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH1 0x13 SLOAD PUSH1 0x14 DUP1 SLOAD SWAP1 POP LT ISZERO PUSH2 0x23BB JUMPI PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x5 SWAP1 SWAP2 MUL PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC DUP2 ADD SWAP2 DUP3 SSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4ED DUP4 ADD SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EE DUP4 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH2 0x239A SWAP4 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EF SWAP1 SWAP2 ADD SWAP3 ADD SWAP1 PUSH2 0x2C5D JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2443 JUMP JUMPDEST DUP1 PUSH1 0x14 PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD PUSH2 0x23CE SWAP2 SWAP1 PUSH2 0x3093 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x23DE JUMPI PUSH2 0x23DE PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2426 SWAP3 SWAP2 SWAP1 PUSH2 0x2C5D JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD LT ISZERO PUSH2 0x2465 JUMPI PUSH1 0x12 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x245F DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 PUSH2 0x2478 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x24CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x7 DUP8 MUL SWAP1 SWAP4 ADD DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP8 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE SWAP5 SWAP1 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x2589 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x25DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP5 MSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420612050726F73756D6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x2675 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792053757370656E646564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 PUSH2 0x2702 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x2746 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x27D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x2789 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE DUP5 AND DUP4 MSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x27D0 DUP4 PUSH2 0x2FB7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x27FB DUP4 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x9 PUSH2 0xAE0 DUP3 DUP8 PUSH2 0x2FE9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x283E PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x28A4 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x28F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xCB2 JUMPI PUSH2 0x290E PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x292A JUMPI PUSH2 0x292A PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x298B JUMPI DUP2 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2959 JUMPI PUSH2 0x2959 PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2995 DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 CALLDATASIZE LT DUP1 ISZERO SWAP1 PUSH2 0x29BA JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0x29CC JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 PUSH2 0x29DD PUSH2 0x299D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2A32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1027BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 LT PUSH2 0x2A83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420756E617070726F76656450726F73756D657220496E646578 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x85B JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2A94 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2FE9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2B8F JUMPI PUSH1 0xA PUSH2 0x2AA8 DUP3 PUSH1 0x1 PUSH2 0x307B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2AB8 JUMPI PUSH2 0x2AB8 PUSH2 0x3000 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2AD9 JUMPI PUSH2 0x2AD9 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x7 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x5 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x6 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x2B87 DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A85 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x2BA1 JUMPI PUSH2 0x2BA1 PUSH2 0x30A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x7 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x6 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2C55 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C17 JUMPI PUSH2 0x2C17 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x2C43 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x2C4D DUP2 PUSH2 0x2FCE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BFA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2C69 SWAP1 PUSH2 0x3040 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2C8B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2CD1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2CA4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2CD1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2CD1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2CD1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST POP PUSH2 0x2CDD SWAP3 SWAP2 POP PUSH2 0x2CE1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CDD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CE2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D28 DUP3 PUSH2 0x2CF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D90 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2D74 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2DA2 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2D28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D6A JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2DEF PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2D6A JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E1F DUP4 PUSH2 0x2CF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2D PUSH1 0x20 DUP5 ADD PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2EC3 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E53 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2F3E JUMPI PUSH2 0x2F3E PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2F66 JUMPI PUSH2 0x2F66 PUSH2 0x2ED0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2FC6 JUMPI PUSH2 0x2FC6 PUSH2 0x2FA1 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2FE2 JUMPI PUSH2 0x2FE2 PUSH2 0x2FA1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2FFB JUMPI PUSH2 0x2FFB PUSH2 0x2FA1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x303B JUMPI PUSH2 0x303B PUSH2 0x3016 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3054 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3075 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x308E JUMPI PUSH2 0x308E PUSH2 0x2FA1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x30A2 JUMPI PUSH2 0x30A2 PUSH2 0x3016 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x22 0xC0 0xEC MSIZE 0xD SWAP6 DELEGATECALL OR SWAP5 0xCA SWAP3 0xAE 0xBC 0xBE 0x4C 0xD7 0xB2 EXTCODESIZE 0xEE GASPRICE 0xBF 0xC SSTORE 0xB5 POP SWAP4 SIGNEXTEND 0x4C MULMOD GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"143:13827:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:45;;;;;;;;;;-1:-1:-1;1462:45:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;552:25:27;;;540:2;525:18;1462:45:24;;;;;;;;293:23;;;;;;;;;;-1:-1:-1;293:23:24;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;937:55:27;;;919:74;;907:2;892:18;293:23:24;773:226:27;1702:52:24;;;;;;;;;;-1:-1:-1;1702:52:24;;;;;:::i;:::-;;;;;;;;;;;;;;323:39;;;;;;;;;;-1:-1:-1;323:39:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1169:14:27;;1162:22;1144:41;;1132:2;1117:18;323:39:24;1004:187:27;11968:1157:24;;;;;;;;;;-1:-1:-1;11968:1157:24;;;;;:::i;:::-;;:::i;:::-;;13266:315;;;;;;;;;;;;;:::i;2881:40::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;9392:1413::-;;;;;;;;;;-1:-1:-1;9392:1413:24;;;;;:::i;:::-;;:::i;2066:27::-;;;;;;;;;;-1:-1:-1;2066:27:24;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;1273:35::-;;;;;;;;;;-1:-1:-1;1273:35:24;;;;;:::i;:::-;;:::i;:::-;;;;3004:25:27;;;-1:-1:-1;;;;;3065:55:27;;;3060:2;3045:18;;3038:83;3137:18;;;3130:34;;;;3207:14;;3200:22;3195:2;3180:18;;3173:50;3267:14;3260:22;3254:3;3239:19;;3232:51;3314:3;3299:19;;3292:35;3358:3;3343:19;;3336:35;3402:3;3387:19;;3380:35;2991:3;2976:19;1273:35:24;2673:748:27;2028:32:24;;;;;;;;;;;;;;;;1293:144:2;;;;;;;;;;-1:-1:-1;1293:144:2;;;;;:::i;:::-;1377:4;1413:17;-1:-1:-1;;;;;1400:30:2;;;1413:17;;1400:30;;1293:144;653:61:24;;;;;;;;;;-1:-1:-1;653:61:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6682:159;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1589:51::-;;;;;;;;;;-1:-1:-1;1589:51:24;;;;;:::i;:::-;;;;;;;;;;;;;;1994:28;;;;;;;;;;;;;;;;795:63;;;;;;;;;;-1:-1:-1;795:63:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6894:451;;;;;;;;;;-1:-1:-1;6894:451:24;;;;;:::i;:::-;;:::i;1406:50::-;;;;;;;;;;-1:-1:-1;1406:50:24;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1406:50:24;;;265:21;;;;;;;;;;;;;;;;1646:50;;;;;;;;;;-1:-1:-1;1646:50:24;;;;;:::i;:::-;;;;;;;;;;;;;;1535:48;;;;;;;;;;-1:-1:-1;1535:48:24;;;;;:::i;:::-;;;;;;;;;;;;;;1314:37;;;;;;;;;;-1:-1:-1;1314:37:24;;;;;:::i;:::-;;:::i;3338:1071::-;;;;;;:::i;:::-;;:::i;7419:1934::-;;;;;;;;;;-1:-1:-1;7419:1934:24;;;;;:::i;:::-;;:::i;4415:1229::-;;;;;;;;;;-1:-1:-1;4415:1229:24;;;;;:::i;:::-;;:::i;1018:119:2:-;;;;;;;;;;-1:-1:-1;1078:17:2;1113;-1:-1:-1;;;;;1113:17:2;1018:119;;236:23:24;;;;;;;;;;;;;;;;6546:130;;;;;;;;;;;;;:::i;10879:1051::-;;;;;;;;;;-1:-1:-1;10879:1051:24;;;;;:::i;:::-;;:::i;5746:86::-;;;;;;;;;;-1:-1:-1;5746:86:24;;;;;:::i;:::-;;:::i;13617:253::-;;;;;;;;;;-1:-1:-1;13617:253:24;;;;;:::i;:::-;;:::i;368:60::-;;;;;;;;;;-1:-1:-1;368:60:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;509:63;;;;;;;;;;-1:-1:-1;509:63:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:42;;;;;;;;;;-1:-1:-1;1358:42:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;293:23;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;293:23:24;;-1:-1:-1;293:23:24;:::o;11968:1157::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;;;;;;;;;12072:40:::1;12083:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;12083:28:24::1;12072:40:::0;;:10:::1;:40:::0;;;;;;::::1;;12064:67;;;::::0;-1:-1:-1;;;12064:67:24;;6747:2:27;12064:67:24::1;::::0;::::1;6729:21:27::0;6786:2;6766:18;;;6759:30;6825:16;6805:18;;;6798:44;6859:18;;12064:67:24::1;6545:338:27::0;12064:67:24::1;12150:41;12162:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;12162:28:24::1;12150:41:::0;;:11:::1;:41:::0;;;;;;12192:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12150:55:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;12150:55:24;;::::1;;12149:56;12141:88;;;::::0;-1:-1:-1;;;12141:88:24;;7090:2:27;12141:88:24::1;::::0;::::1;7072:21:27::0;7129:2;7109:18;;;7102:30;7168:21;7148:18;;;7141:49;7207:18;;12141:88:24::1;6888:343:27::0;12141:88:24::1;12240:27;12270:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;12270:28:24::1;12309:32:::0;;;:11:::1;:32:::0;;;;;12270:28;;;;12309:32;12342:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12309:46:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;12309:46:24;;;:53;;-1:-1:-1;;12309:53:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;12424:30;::::1;::::0;;:9:::1;:30:::0;;;;;;12455:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12424:44:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;12424:44:24;;::::1;;12420:179;;;-1:-1:-1::0;;;;;12484:30:24;::::1;12531:5;12484:30:::0;;;:9:::1;:30;::::0;;;;12531:5;12515:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;12484:44:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;12484:44:24;;;:52;;-1:-1:-1;;12484:52:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;12550:36;::::1;::::0;;:15:::1;:36:::0;;;;;:38;;;::::1;::::0;::::1;:::i;:::-;;;;;;12420:179;-1:-1:-1::0;;;;;12640:38:24;::::1;12609:28;12640:38:::0;;;:17:::1;:38;::::0;;;;:40;;;12609:28;12640:40:::1;::::0;::::1;:::i;:::-;;;;;12609:71;;12762:8;;12739:20;:31;12735:384;;;-1:-1:-1::0;;;;;12889:38:24;::::1;;::::0;;;:17:::1;:38;::::0;;;;;;;12882:45;;;12948:15:::1;:36:::0;;;;;12941:43;;;12998:17:::1;13016:15;13030:1;13016:11:::0;:15:::1;:::i;:::-;12998:34;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:45:::1;:34;::::0;;::::1;;:45;:53:::0;;;::::1;;;;-1:-1:-1::0;;12998:53:24;;::::1;::::0;;;::::1;::::0;;:45:::1;13065:9;13075:15;12998:45:::0;13075:11;:15:::1;:::i;:::-;13065:26;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:36;;:43:::0;;-1:-1:-1;;13065:43:24::1;::::0;::::1;;::::0;;;::::1;::::0;;12735:384:::1;12054:1071;;11968:1157:::0;;:::o;13266:315::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;13363:6:::1;:13:::0;13317:19:::1;::::0;13339:37:::1;::::0;:21:::1;:37;:::i;:::-;13317:59;;13392:9;13387:188;13411:6;:13:::0;13407:17;::::1;13387:188;;;13446:16;13476:6;13483:1;13476:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;13468:47:::1;::::0;-1:-1:-1;;;;;13476:9:24;;::::1;::::0;13499:11;;13468:47;;13476:9;13468:47;13499:11;13476:9;13468:47:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13445:70;;;13537:11;13529:35;;;::::0;-1:-1:-1;;;13529:35:24;;8751:2:27;13529:35:24::1;::::0;::::1;8733:21:27::0;8790:2;8770:18;;;8763:30;8829:13;8809:18;;;8802:41;8860:18;;13529:35:24::1;8549:335:27::0;13529:35:24::1;-1:-1:-1::0;13426:3:24;::::1;::::0;::::1;:::i;:::-;;;;13387:188;;;;13307:274;13266:315::o:0;2881:40::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9392:1413::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;9537:19:::1;:26:::0;9513:50;::::1;9492:127;;;::::0;-1:-1:-1;;;9492:127:24;;9533:2:27;9492:127:24::1;::::0;::::1;9515:21:27::0;9572:2;9552:18;;;9545:30;9611:32;9591:18;;;9584:60;9661:18;;9492:127:24::1;9331:354:27::0;9492:127:24::1;9650:11;:64;9662:19;9682:21;9662:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;9662:51:24::1;9650:64:::0;;;::::1;::::0;;;;;;;;;9715:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;9650:78:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;9650:78:24;;::::1;;:87;9629:169;;;::::0;-1:-1:-1;;;9629:169:24;;9892:2:27;9629:169:24::1;::::0;::::1;9874:21:27::0;9931:2;9911:18;;;9904:30;9970:34;9950:18;;;9943:62;10041:5;10021:18;;;10014:33;10064:19;;9629:169:24::1;9690:399:27::0;9629:169:24::1;9890:4;9809:11;:64;9821:19;9841:21;9821:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;9821:51:24::1;9809:64:::0;;;::::1;::::0;;;;;;;;;9874:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;9809:78:24::1;-1:-1:-1::0;;;;;9809:78:24::1;;;;;;;;;;;;;:85;;;;;;;;;;;;;;;;;;9955:11;:64;9967:19;9987:21;9967:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;9967:51:24::1;9955:64:::0;;;::::1;::::0;;;;;;;;;10020:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;9955:78:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;9955:78:24;;::::1;;9951:274;;;10127:5;10049:8;:61;10058:19;10078:21;10058:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10058:51:24::1;10049:61:::0;;;::::1;::::0;;;;;;;;;10111:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;10049:75:24::1;-1:-1:-1::0;;;;;10049:75:24::1;;;;;;;;;;;;;:83;;;;;;;;;;;;;;;;;;10146:13;:66;10160:19;10180:21;10160:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10160:51:24::1;10146:66:::0;;;::::1;::::0;;;;;;;;:68;;;::::1;::::0;::::1;:::i;:::-;;;;;;9951:274;10235:27;10265:16;:91;10295:19;10315:21;10295:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10295:51:24::1;10265:91:::0;;;::::1;::::0;;;;;;;;:93;;;::::1;::::0;::::1;:::i;:::-;;;;;10235:123;;10437:8;;10415:19;:30;10411:388;;;10551:60;10589:21;10551:37;:60::i;:::-;10632:16;:69;10649:19;10669:21;10649:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10649:51:24::1;10632:69:::0;;;::::1;::::0;;;;;;;;10625:76;;;10736:19:::1;:42:::0;;10722:13:::1;::::0;10649:42;10736:19;10756:21;;10736:42;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;10736:51:24::1;10722:66:::0;;;::::1;::::0;;;;;;;;10715:73;9482:1323:::1;9392:1413:::0;:::o;2066:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2066:27:24;;;;;;;-1:-1:-1;;2066:27:24;;;:::o;1273:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1273:35:24;;;;;;;;;;;;;;;;;;;:::o;6682:159::-;6738:17;6817;6810:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6810:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6682:159;:::o;6894:451::-;7017:13;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;-1:-1:-1;;;;;7046:36:24;::::1;;::::0;;;:8:::1;:36;::::0;;;;;7083:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7046:50:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7046:50:24;;::::1;;7042:297;;;-1:-1:-1::0;;7112:28:24::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;;6894:451::o;7042:297::-:1;-1:-1:-1::0;;;;;7161:39:24;::::1;;::::0;;;:11:::1;:39;::::0;;;;;7201:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7161:53:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7161:53:24;;::::1;;7157:182;;;-1:-1:-1::0;;7230:31:24::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;;6894:451::o;7157:182::-:1;-1:-1:-1::0;7292:36:24::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;7157:182:::1;6894:451:::0;;;:::o;1314:37::-;;;;;;;;;;;;3338:1071;3425:10;3417:19;;;;:7;:19;;;;;;;;3416:20;3408:49;;;;-1:-1:-1;;;3408:49:24;;10296:2:27;3408:49:24;;;10278:21:27;10335:2;10315:18;;;10308:30;10374:18;10354;;;10347:46;10410:18;;3408:49:24;10094:340:27;3408:49:24;3488:6;;3475:9;:19;;3467:69;;;;-1:-1:-1;;;3467:69:24;;10641:2:27;3467:69:24;;;10623:21:27;10680:2;10660:18;;;10653:30;10719:34;10699:18;;;10692:62;10790:7;10770:18;;;10763:35;10815:19;;3467:69:24;10439:401:27;3467:69:24;3566:10;3555:22;;;;:10;:22;;;;;;;;3554:23;3546:77;;;;-1:-1:-1;;;3546:77:24;;11047:2:27;3546:77:24;;;11029:21:27;11086:2;11066:18;;;11059:30;11125:34;11105:18;;;11098:62;11196:11;11176:18;;;11169:39;11225:19;;3546:77:24;10845:405:27;3546:77:24;3642:13;:11;:13::i;:::-;3641:14;3633:70;;;;-1:-1:-1;;;3633:70:24;;11457:2:27;3633:70:24;;;11439:21:27;11496:2;11476:18;;;11469:30;11535:34;11515:18;;;11508:62;11606:13;11586:18;;;11579:41;11637:19;;3633:70:24;11255:407:27;3633:70:24;3735:9;3714:18;3783:87;3790:15;;3783:87;;3821:16;3835:2;3821:16;;:::i;:::-;;-1:-1:-1;3851:8:24;;;;:::i;:::-;;;;3783:87;;;3888:6;3898:2;3888:12;3880:52;;;;-1:-1:-1;;;3880:52:24;;11869:2:27;3880:52:24;;;11851:21:27;11908:2;11888:18;;;11881:30;11947:29;11927:18;;;11920:57;11994:18;;3880:52:24;11667:351:27;3880:52:24;-1:-1:-1;;4006:288:24;;;;;;;;;-1:-1:-1;4006:288:24;;;4067:10;4006:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4367:19;:35;;4006:288;4367:35;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4367:35:24;-1:-1:-1;;;;;4367:35:24;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4367:35:24;;;;;;-1:-1:-1;;4367:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3338:1071::o;7419:1934::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;7561:19:::1;:26:::0;7537:50;::::1;7516:127;;;::::0;-1:-1:-1;;;7516:127:24;;9533:2:27;7516:127:24::1;::::0;::::1;9515:21:27::0;9572:2;9552:18;;;9545:30;9611:32;9591:18;;;9584:60;9661:18;;7516:127:24::1;9331:354:27::0;7516:127:24::1;7674:8;:61;7683:19;7703:21;7683:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;7683:51:24::1;7674:61:::0;;;::::1;::::0;;;;;;;;;7736:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7674:75:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7674:75:24;;::::1;;:84;7653:163;;;::::0;-1:-1:-1;;;7653:163:24;;12225:2:27;7653:163:24::1;::::0;::::1;12207:21:27::0;;;12244:18;;;12237:30;12303:34;12283:18;;;12276:62;12355:18;;7653:163:24::1;12023:356:27::0;7653:163:24::1;7905:4;7827:8;:61;7836:19;7856:21;7836:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;7836:51:24::1;7827:61:::0;;;::::1;::::0;;;;;;;;;7889:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7827:75:24::1;-1:-1:-1::0;;;;;7827:75:24::1;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;7979:11;:64;7991:19;8011:21;7991:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;7991:51:24::1;7979:64:::0;;;::::1;::::0;;;;;;;;;8044:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;7979:78:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7979:78:24;;::::1;;7975:280;;;8154:5;8073:11;:64;8085:19;8105:21;8085:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;8085:51:24::1;8073:64:::0;;;::::1;::::0;;;;;;;;;8138:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;8073:78:24::1;-1:-1:-1::0;;;;;8073:78:24::1;;;;;;;;;;;;;:86;;;;;;;;;;;;;;;;;;8173:16;:69;8190:19;8210:21;8190:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;8190:51:24::1;8173:69:::0;;;::::1;::::0;;;;;;;;:71;;;::::1;::::0;::::1;:::i;:::-;;;;;;7975:280;8265:24;8292:13;:88;8319:19;8339:21;8319:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51:::1;:42;::::0;;::::1;;:51:::0;;;::::1;::::0;-1:-1:-1;;;;;8319:51:24::1;8292:88:::0;;;::::1;::::0;;;;;;;;:90;;;::::1;::::0;::::1;:::i;:::-;;;;;8265:117;;8455:8;;8436:16;:27;8432:915;;;8631:4;8576:19;8596:21;8576:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:52;;:59:::0;;-1:-1:-1;;8576:59:24::1;::::0;::::1;;::::0;;;::::1;::::0;;8733:17:::1;:24:::0;:28:::1;::::0;-1:-1:-1;8733:28:24::1;:::i;:::-;8676:19;8696:21;8676:42;;;;;;;;:::i;:::-;;;;;;;;;;;:54;;:85;;;;8859:4;8793:10;:63;8804:19;8824:21;8804:42;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:51;;::::0;-1:-1:-1;;;;;8804:51:24::1;8793:63:::0;;;::::1;::::0;;;;;;;;:70;;-1:-1:-1;;8793:70:24::1;::::0;::::1;;::::0;;;::::1;::::0;;8900:19:::1;:42:::0;;8877:17:::1;::::0;8900:19;8920:21;;8900:42;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;8877:66;;::::1;::::0;;::::1;::::0;;;;;;;;;8900:42:::1;::::0;;::::1;::::0;;::::1;8877:66:::0;;;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;8877:66:24::1;-1:-1:-1::0;;;;;8877:66:24;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;8877:66:24;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;-1:-1:-1::0;;8877:66:24;;;-1:-1:-1;;8877:66:24;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;8957:60:::1;8995:21:::0;8957:37:::1;:60::i;:::-;9124:17;9159:24:::0;;:28:::1;::::0;9186:1:::1;::::0;9159:28:::1;:::i;:::-;9124:77;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:86:::1;:77;::::0;;::::1;;:86:::0;::::1;::::0;9096:17:::1;:24:::0;;9080:41;;:15:::1;:41:::0;;;;;;:130;;-1:-1:-1;;;;;;9080:130:24::1;-1:-1:-1::0;;;;;9124:86:24;;::::1;9080:130:::0;;;::::1;::::0;;9295:41;;;9224:10:::1;::::0;9124:77;;9096:17;9253:28:::1;::::0;9295:41;9253:28:::1;:::i;:::-;9235:47;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:56:::1;:47;::::0;;::::1;;:56:::0;;;::::1;::::0;-1:-1:-1;;;;;9235:56:24::1;9224:68:::0;;;::::1;::::0;;;;;;;;:112;7506:1847:::1;7419:1934:::0;:::o;4415:1229::-;4513:10;:24;4524:12;:10;:12::i;:::-;-1:-1:-1;;;;;4513:24:24;;;;;;;;;;;;-1:-1:-1;4513:24:24;;;;4505:55;;;;-1:-1:-1;;;4505:55:24;;12719:2:27;4505:55:24;;;12701:21:27;12758:2;12738:18;;;12731:30;12797:20;12777:18;;;12770:48;12835:18;;4505:55:24;12517:342:27;4505:55:24;4578:40;4589:28;;;:15;:28;;;;;;;;;-1:-1:-1;;;;;4589:28:24;4578:40;;:10;:40;;;;;;;;4570:75;;;;-1:-1:-1;;;4570:75:24;;13066:2:27;4570:75:24;;;13048:21:27;13105:2;13085:18;;;13078:30;13144:24;13124:18;;;13117:52;13186:18;;4570:75:24;12864:346:27;4570:75:24;4677:39;4687:28;;;:15;:28;;;;;;;;;-1:-1:-1;;;;;4687:28:24;4677:39;;:9;:39;;;;;;4717:12;:10;:12::i;:::-;-1:-1:-1;;;;;4677:53:24;;;;;;;;;;;;-1:-1:-1;4677:53:24;;;;4676:54;4655:130;;;;-1:-1:-1;;;4655:130:24;;13417:2:27;4655:130:24;;;13399:21:27;13456:2;13436:18;;;13429:30;13495:31;13475:18;;;13468:59;13544:18;;4655:130:24;13215:353:27;4655:130:24;4804:9;:23;4814:12;:10;:12::i;:::-;-1:-1:-1;;;;;4804:23:24;;;;;;;;;;;;;;;;;-1:-1:-1;4804:23:24;;;4828:28;;;:15;:28;;;;;;;;;4804:53;;;;;;;;;4803:54;4795:84;;;;-1:-1:-1;;;4795:84:24;;13775:2:27;4795:84:24;;;13757:21:27;13814:2;13794:18;;;13787:30;13853:19;13833:18;;;13826:47;13890:18;;4795:84:24;13573:341:27;4795:84:24;4911:41;4923:28;;;:15;:28;;;;;;;;;-1:-1:-1;;;;;4923:28:24;4911:41;;:11;:41;;;;;;4953:12;:10;:12::i;:::-;-1:-1:-1;;;;;4911:55:24;;;;;;;;;;;;-1:-1:-1;4911:55:24;;;;4910:56;4889:126;;;;-1:-1:-1;;;4889:126:24;;14121:2:27;4889:126:24;;;14103:21:27;14160:2;14140:18;;;14133:30;14199:25;14179:18;;;14172:53;14242:18;;4889:126:24;13919:347:27;4889:126:24;5034:11;:25;5046:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:25:24;;;;;;;;;;;;;;;;;-1:-1:-1;5034:25:24;;;5060:28;;;:15;:28;;;;;;;;;5034:55;;;;;;;;;5033:56;5025:88;;;;-1:-1:-1;;;5025:88:24;;14473:2:27;5025:88:24;;;14455:21:27;14512:2;14492:18;;;14485:30;14551:21;14531:18;;;14524:49;14590:18;;5025:88:24;14271:343:27;5025:88:24;5124:25;5152:222;;;;;;;;5188:9;:16;;;;5207:1;5188:20;;;;:::i;:::-;5152:222;;;;5236:10;:24;5247:12;:10;:12::i;:::-;-1:-1:-1;;;;;5236:24:24;-1:-1:-1;;;;;5236:24:24;;;;;;;;;;;;;5152:222;;;;5284:11;5152:222;;;;5320:13;5152:222;;;;5358:5;5152:222;;;;;5124:250;;5408:12;;5389:9;:16;;;;:31;5385:169;;;5436:9;:25;;;;;;;-1:-1:-1;5436:25:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5451:9;;5436:25;;;;;;;;;;;:::i;:::-;-1:-1:-1;5436:25:24;;;;;;;;;;;;-1:-1:-1;;5436:25:24;;;;;;;;;;5385:169;;;5534:9;5492;5518:12;;5502:13;;:28;;;;:::i;:::-;5492:39;;;;;;;;:::i;:::-;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5492:51:24;;;;;;;;;;;;-1:-1:-1;;5492:51:24;;;;;;;;;;5385:169;5584:12;;5568:13;;:28;5564:74;;;5612:13;:15;;;:13;:15;;;:::i;:::-;;;;;;5564:74;4495:1149;4415:1229;;:::o;6546:130::-;6614:17;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;6650:19:::1;6643:26:::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;6650:19;6643:26;-1:-1:-1;;6643:26:24;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;6643:26:24::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;::::0;;;;;;::::1;::::0;;::::1;;;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;::::1;::::0;::::1;;;10879:1051:::0;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;10973:26:::1;11002:28:::0;;;:15:::1;:28;::::0;;;;;;;;-1:-1:-1;;;;;11002:28:24::1;11048:30:::0;;;:10:::1;:30:::0;;;;;;;::::1;;11040:57;;;::::0;-1:-1:-1;;;11040:57:24;;6747:2:27;11040:57:24::1;::::0;::::1;6729:21:27::0;6786:2;6766:18;;;6759:30;6825:16;6805:18;;;6798:44;6859:18;;11040:57:24::1;6545:338:27::0;11040:57:24::1;-1:-1:-1::0;;;;;11116:29:24;::::1;;::::0;;;:9:::1;:29;::::0;;;;;11146:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11116:43:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;11116:43:24;;::::1;;11115:44;11107:74;;;::::0;-1:-1:-1;;;11107:74:24;;14938:2:27;11107:74:24::1;::::0;::::1;14920:21:27::0;14977:2;14957:18;;;14950:30;15016:19;14996:18;;;14989:47;15053:18;;11107:74:24::1;14736:341:27::0;11107:74:24::1;-1:-1:-1::0;;;;;11192:29:24;::::1;;::::0;;;:9:::1;:29;::::0;;;;11238:4:::1;::::0;11222:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11192:43:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;11192:43:24;;;:50;;-1:-1:-1;;11192:50:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;11303:31;::::1;::::0;;:11:::1;:31:::0;;;;;;11335:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11303:45:24::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;11303:45:24;;::::1;;11299:182;;;-1:-1:-1::0;;;;;11364:31:24;::::1;11412:5;11364:31:::0;;;:11:::1;:31;::::0;;;;11412:5;11396:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;11364:45:24;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;11364:45:24;;;:53;;-1:-1:-1;;11364:53:24::1;::::0;::::1;;::::0;;;::::1;::::0;;;11431:37;::::1;::::0;;:17:::1;:37:::0;;;;;:39;;;::::1;::::0;::::1;:::i;:::-;;;;;;11299:182;-1:-1:-1::0;;;;;11520:35:24;::::1;11491:26;11520:35:::0;;;:15:::1;:35;::::0;;;;:37;;;11491:26;11520:37:::1;::::0;::::1;:::i;:::-;;;;;11491:66;;11634:8;;11613:18;:29;11609:315;;;-1:-1:-1::0;;;;;11755:35:24;::::1;;::::0;;;:15:::1;:35;::::0;;;;11748:42;11852:4:::1;11804:17;11822:15;11852:4:::0;11822:11;:15:::1;:::i;5746:86::-:0;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;5809:6:::1;:16:::0;5746:86::o;13617:253::-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;13694:9:::1;13689:175;13713:6;:13:::0;13709:17;::::1;13689:175;;;13764:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;13751:25:24::1;:6;13758:1;13751:9;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;13751:9:24::1;:25;13747:107;;;13808:8;13796:6;13803:1;13796:9;;;;;;;;:::i;:::-;;;;;;;;;:20;;;;;-1:-1:-1::0;;;;;13796:20:24::1;;;;;-1:-1:-1::0;;;;;13796:20:24::1;;;;;;13387:188;13307:274;13266:315::o:0;13747:107::-:1;13728:3:::0;::::1;::::0;::::1;:::i;:::-;;;;13689:175;;1481:547:2::0;1543:11;1589:2;1570:8;:21;;;;:55;;-1:-1:-1;1377:4:2;1413:17;-1:-1:-1;;;;;1413:17:2;1614:10;1400:30;1595;1566:456;;;-1:-1:-1;;;1931:14:2;1927:22;1914:36;1911:2;1907:44;6546:130:24;:::o;1566:456:2:-;-1:-1:-1;2001:10:2;1481:547;:::o;5922:458:24:-;13915:7;:21;13923:12;:10;:12::i;:::-;-1:-1:-1;;;;;13915:21:24;;;;;;;;;;;;-1:-1:-1;13915:21:24;;;;13907:43;;;;-1:-1:-1;;;13907:43:24;;6410:2:27;13907:43:24;;;6392:21:27;6449:1;6429:18;;;6422:29;-1:-1:-1;;;6467:18:27;;;6460:39;6516:18;;13907:43:24;6208:332:27;13907:43:24;6087:19:::1;:26:::0;6063:50;::::1;6042:129;;;::::0;-1:-1:-1;;;6042:129:24;;15284:2:27;6042:129:24::1;::::0;::::1;15266:21:27::0;;;15303:18;;;15296:30;15362:34;15342:18;;;15335:62;15414:18;;6042:129:24::1;15082:356:27::0;6042:129:24::1;6199:21:::0;6182:157:::1;6226:19;:26:::0;:30:::1;::::0;6255:1:::1;::::0;6226:30:::1;:::i;:::-;6222:1;:34;6182:157;;;6302:19;6322:5;:1:::0;6326::::1;6322:5;:::i;:::-;6302:26;;;;;;;;:::i;:::-;;;;;;;;;;;6277:19;6297:1;6277:22;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:51;;:22:::1;::::0;;::::1;;:51:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;6277:51:24::1;-1:-1:-1::0;;;;;6277:51:24;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;6277:51:24;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;-1:-1:-1::0;;6277:51:24;;;-1:-1:-1;;6277:51:24;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;6258:3;::::1;::::0;::::1;:::i;:::-;;;;6182:157;;;;6348:19;:25;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;6348:25:24;;;;;::::1;;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6348:25:24::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;6348:25:24;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;-1:-1:-1;5922:458:24:o;3034:265::-;3079:4;;3095:176;3119:19;:26;3115:30;;3095:176;;;3184:19;3204:1;3184:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:31;;;-1:-1:-1;;;;;3184:31:24;3170:10;:45;3166:95;;;3242:4;3235:11;;;3034:265;:::o;3166:95::-;3147:3;;;;:::i;:::-;;;;3095:176;;;;3287:5;3280:12;;3034:265;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:27;82:20;;-1:-1:-1;;;;;131:54:27;;121:65;;111:93;;200:1;197;190:12;215:186;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:27:o;588:180::-;647:6;700:2;688:9;679:7;675:23;671:32;668:52;;;716:1;713;706:12;668:52;-1:-1:-1;739:23:27;;588:180;-1:-1:-1;588:180:27:o;1196:248::-;1264:6;1272;1325:2;1313:9;1304:7;1300:23;1296:32;1293:52;;;1341:1;1338;1331:12;1293:52;-1:-1:-1;;1364:23:27;;;1434:2;1419:18;;;1406:32;;-1:-1:-1;1196:248:27:o;1449:472::-;1491:3;1529:5;1523:12;1556:6;1551:3;1544:19;1581:1;1591:162;1605:6;1602:1;1599:13;1591:162;;;1667:4;1723:13;;;1719:22;;1713:29;1695:11;;;1691:20;;1684:59;1620:12;1591:162;;;1771:6;1768:1;1765:13;1762:87;;;1837:1;1830:4;1821:6;1816:3;1812:16;1808:27;1801:38;1762:87;-1:-1:-1;1903:2:27;1882:15;-1:-1:-1;;1878:29:27;1869:39;;;;1910:4;1865:50;;1449:472;-1:-1:-1;;1449:472:27:o;1926:220::-;2075:2;2064:9;2057:21;2038:4;2095:45;2136:2;2125:9;2121:18;2113:6;2095:45;:::i;2151:517::-;2406:6;2395:9;2388:25;2449:6;2444:2;2433:9;2429:18;2422:34;2492:6;2487:2;2476:9;2472:18;2465:34;2535:3;2530:2;2519:9;2515:18;2508:31;2369:4;2556:46;2597:3;2586:9;2582:19;2574:6;2556:46;:::i;:::-;2548:54;;2653:6;2646:14;2639:22;2633:3;2622:9;2618:19;2611:51;2151:517;;;;;;;;:::o;3426:260::-;3494:6;3502;3555:2;3543:9;3534:7;3530:23;3526:32;3523:52;;;3571:1;3568;3561:12;3523:52;3594:29;3613:9;3594:29;:::i;:::-;3584:39;;3642:38;3676:2;3665:9;3661:18;3642:38;:::i;:::-;3632:48;;3426:260;;;;;:::o;3691:1328::-;3914:2;3966:21;;;4036:13;;3939:18;;;4058:22;;;3885:4;;3914:2;4099;;4117:18;;;;4158:15;;;3885:4;4201:792;4215:6;4212:1;4209:13;4201:792;;;4274:13;;4312:9;;4300:22;;4366:11;;;4360:18;-1:-1:-1;;;;;4356:67:27;4342:12;;;4335:89;4464:11;;;4458:18;4444:12;;;4437:40;4500:4;4558:11;;;4552:18;4545:26;4538:34;4524:12;;;4517:56;4596:4;4654:11;;;4648:18;4641:26;4634:34;4620:12;;;4613:56;4692:4;4736:11;;;4730:18;4716:12;;;4709:40;4772:4;4816:11;;;4810:18;4796:12;;;4789:40;4852:4;4896:11;;;4890:18;4876:12;;;4869:40;4938:6;4929:16;;;;4968:15;;;;4237:1;4230:9;4201:792;;;-1:-1:-1;5010:3:27;;3691:1328;-1:-1:-1;;;;;;;3691:1328:27:o;5024:184::-;-1:-1:-1;;;5073:1:27;5066:88;5173:4;5170:1;5163:15;5197:4;5194:1;5187:15;5213:990;5291:6;5299;5352:2;5340:9;5331:7;5327:23;5323:32;5320:52;;;5368:1;5365;5358:12;5320:52;5404:9;5391:23;5381:33;;5465:2;5454:9;5450:18;5437:32;5488:18;5529:2;5521:6;5518:14;5515:34;;;5545:1;5542;5535:12;5515:34;5583:6;5572:9;5568:22;5558:32;;5628:7;5621:4;5617:2;5613:13;5609:27;5599:55;;5650:1;5647;5640:12;5599:55;5686:2;5673:16;5708:2;5704;5701:10;5698:36;;;5714:18;;:::i;:::-;5789:2;5783:9;5757:2;5843:13;;-1:-1:-1;;5839:22:27;;;5863:2;5835:31;5831:40;5819:53;;;5887:18;;;5907:22;;;5884:46;5881:72;;;5933:18;;:::i;:::-;5973:10;5969:2;5962:22;6008:2;6000:6;5993:18;6048:7;6043:2;6038;6034;6030:11;6026:20;6023:33;6020:53;;;6069:1;6066;6059:12;6020:53;6125:2;6120;6116;6112:11;6107:2;6099:6;6095:15;6082:46;6170:1;6165:2;6160;6152:6;6148:15;6144:24;6137:35;6191:6;6181:16;;;;;;;5213:990;;;;;:::o;7236:184::-;-1:-1:-1;;;7285:1:27;7278:88;7385:4;7382:1;7375:15;7409:4;7406:1;7399:15;7425:136;7464:3;7492:5;7482:39;;7501:18;;:::i;:::-;-1:-1:-1;;;7537:18:27;;7425:136::o;7566:135::-;7605:3;-1:-1:-1;;7626:17:27;;7623:43;;;7646:18;;:::i;:::-;-1:-1:-1;7693:1:27;7682:13;;7566:135::o;7706:125::-;7746:4;7774:1;7771;7768:8;7765:34;;;7779:18;;:::i;:::-;-1:-1:-1;7816:9:27;;7706:125::o;7836:184::-;-1:-1:-1;;;7885:1:27;7878:88;7985:4;7982:1;7975:15;8009:4;8006:1;7999:15;8025:184;-1:-1:-1;;;8074:1:27;8067:88;8174:4;8171:1;8164:15;8198:4;8195:1;8188:15;8214:120;8254:1;8280;8270:35;;8285:18;;:::i;:::-;-1:-1:-1;8319:9:27;;8214:120::o;8889:437::-;8968:1;8964:12;;;;9011;;;9032:61;;9086:4;9078:6;9074:17;9064:27;;9032:61;9139:2;9131:6;9128:14;9108:18;9105:38;9102:218;;;-1:-1:-1;;;9173:1:27;9166:88;9277:4;9274:1;9267:15;9305:4;9302:1;9295:15;9102:218;;8889:437;;;:::o;12384:128::-;12424:3;12455:1;12451:6;12448:1;12445:13;12442:39;;;12461:18;;:::i;:::-;-1:-1:-1;12497:9:27;;12384:128::o;14619:112::-;14651:1;14677;14667:35;;14682:18;;:::i;:::-;-1:-1:-1;14716:9:27;;14619:112::o;15443:184::-;-1:-1:-1;;;15492:1:27;15485:88;15592:4;15589:1;15582:15;15616:4;15613:1;15606:15"},"gasEstimates":{"creation":{"codeDepositCost":"2506200","executionCost":"infinite","totalCost":"infinite"},"external":{"ApprovedProsumers(uint256)":"17547","DisApproveProsumer_OwnerSpecific(uint256)":"infinite","approvalCount(address)":"2576","approveProsumer_OwnerSpecific(uint256)":"infinite","approved(address,address)":"infinite","complainCount()":"2373","complains(uint256)":"infinite","disapprovalCount(address)":"2575","disapproved(address,address)":"infinite","getTrustedForwarder()":"2376","isOwner(address)":"2644","isProsumer(address)":"2641","isTrustedForwarder(address)":"2604","maxComplains()":"2374","owners(uint256)":"4683","prosumerAddress(uint256)":"2545","prosumerID(address)":"2555","raiseComplain(uint256,string)":"infinite","regFee()":"2374","req_Registration(uint256)":"infinite","required()":"2351","setRegFee(uint256)":"26840","showApprovalStatus_OwnerSpecific(address)":"infinite","show_Approved_Prosumers()":"infinite","show_Unapproved_Prosumers()":"infinite","suspendProsumer(uint256,uint256)":"infinite","suspended(address,address)":"infinite","suspensionCount(address)":"2620","transferOwnership(address)":"infinite","unApprovedProsumers(uint256)":"17569","unSuspendProsumer(uint256,uint256)":"infinite","unSuspended(address,address)":"infinite","unSuspensionCount(address)":"2599","versionRecipient()":"infinite","withdrawFees()":"infinite"},"internal":{"deleteElementFrom_UnApprovedProsumers(uint256)":"infinite","isRequested()":"infinite"}},"methodIdentifiers":{"ApprovedProsumers(uint256)":"4ef8ab77","DisApproveProsumer_OwnerSpecific(uint256)":"4ca46d19","approvalCount(address)":"9a9ddd16","approveProsumer_OwnerSpecific(uint256)":"c7a7275e","approved(address,address)":"f4b16045","complainCount()":"73de8ce8","complains(uint256)":"4ea30b2f","disapprovalCount(address)":"66cc771f","disapproved(address,address)":"f85bae78","getTrustedForwarder()":"ce1b815f","isOwner(address)":"2f54bf6e","isProsumer(address)":"fdbd2e8b","isTrustedForwarder(address)":"572b6c05","maxComplains()":"50a7ac25","owners(uint256)":"025e7c27","prosumerAddress(uint256)":"8fac6371","prosumerID(address)":"001cfdce","raiseComplain(uint256,string)":"c8b6ba49","regFee()":"8fff20f3","req_Registration(uint256)":"9ff34115","required()":"dc8452cd","setRegFee(uint256)":"e814db59","showApprovalStatus_OwnerSpecific(address)":"7b78bc6b","show_Approved_Prosumers()":"612536fc","show_Unapproved_Prosumers()":"e706d568","suspendProsumer(uint256,uint256)":"e7e4f9d9","suspended(address,address)":"5f81b606","suspensionCount(address)":"90f8ba3c","transferOwnership(address)":"f2fde38b","unApprovedProsumers(uint256)":"9c01a6df","unSuspendProsumer(uint256,uint256)":"40cb3342","unSuspended(address,address)":"75ae81b3","unSuspensionCount(address)":"143859eb","versionRecipient()":"486ff0cd","withdrawFees()":"476343ee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_required\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ApprovedProsumers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unApprovedProsumerID\",\"type\":\"uint256\"}],\"name\":\"DisApproveProsumer_OwnerSpecific\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unApprovedProsumerID\",\"type\":\"uint256\"}],\"name\":\"approveProsumer_OwnerSpecific\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"complainCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"complains\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_complainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_complainant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accused\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_complain\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disapprovalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disapproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isProsumer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxComplains\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prosumerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prosumerID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_complainBody\",\"type\":\"string\"}],\"name\":\"raiseComplain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_aadharNo\",\"type\":\"uint256\"}],\"name\":\"req_Registration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_regFee\",\"type\":\"uint256\"}],\"name\":\"setRegFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unapprovedProsumerAddress\",\"type\":\"address\"}],\"name\":\"showApprovalStatus_OwnerSpecific\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"show_Approved_Prosumers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MultiSig.prosumer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"show_Unapproved_Prosumers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MultiSig.prosumer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_complainId\",\"type\":\"uint256\"}],\"name\":\"suspendProsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"suspended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"suspensionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unApprovedProsumers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aadharId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_suspended\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_energyUnitPriceMatic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakedEnergyBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prosumerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_complainId\",\"type\":\"uint256\"}],\"name\":\"unSuspendProsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unSuspended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unSuspensionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiSig.sol\":\"MultiSig\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable no-inline-assembly\\npragma solidity >=0.6.9;\\n\\nimport \\\"./interfaces/IERC2771Recipient.sol\\\";\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\\n *\\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\\n *\\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\\n *\\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\\n */\\nabstract contract ERC2771Recipient is IERC2771Recipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address private _trustedForwarder;\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\\n     * @return forwarder The address of the Forwarder contract that is being used.\\n     */\\n    function getTrustedForwarder() public virtual view returns (address forwarder){\\n        return _trustedForwarder;\\n    }\\n\\n    function _setTrustedForwarder(address _forwarder) internal {\\n        _trustedForwarder = _forwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            ret = msg.sender;\\n        }\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            return msg.data[0:msg.data.length-20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"contracts/MultiSig.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.7;\\nimport \\\"@opengsn/contracts/src/ERC2771Recipient.sol\\\";\\n\\n//GSN ENABLED CONTRACT\\n\\ncontract MultiSig is ERC2771Recipient {\\n    /*************Global Variables************/\\n\\n    uint256 public required;\\n    uint256 public regFee;\\n\\n    address[] public owners;\\n\\n    mapping(address => bool) public isOwner;\\n    mapping(address => mapping(address => bool)) public approved; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n    mapping(address => mapping(address => bool)) public disapproved; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n    mapping(address => mapping(address => bool)) public suspended; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n    mapping(address => mapping(address => bool)) public unSuspended; //address1 = unapprovedProsumer address, address2 = address Of Owner, bool\\n\\n    /*-------Prosumer Variables-------------------------*/\\n    struct prosumer {\\n        uint256 _prosumerID;\\n        address _address;\\n        uint256 _aadharId;\\n        bool _approved;\\n        bool _suspended;\\n        uint256 _energyUnitPriceUSD;\\n        uint256 _energyUnitPriceMatic;\\n        uint256 _stakedEnergyBalance;\\n    }\\n\\n    prosumer[] public ApprovedProsumers;\\n    prosumer[] public unApprovedProsumers;\\n\\n    mapping(address => bool) public isProsumer;\\n    mapping(uint256 => address) public prosumerAddress;\\n    mapping(address => uint256) public prosumerID;\\n\\n    //Prosumer Stats\\n    mapping(address => uint256) public approvalCount;\\n    mapping(address => uint256) public disapprovalCount;\\n    mapping(address => uint256) public suspensionCount;\\n    mapping(address => uint256) public unSuspensionCount;\\n\\n    /****************Complain**************************************/\\n    struct Complain {\\n        uint256 _complainID;\\n        uint256 _complainant;\\n        uint256 _accused;\\n        string _complain;\\n        bool _resolved;\\n    }\\n\\n    uint256 public complainCount;\\n    uint256 public maxComplains = 10;\\n    Complain[] public complains;\\n\\n    /****************Constructor************/\\n    constructor(address forwarder, address[] memory _owners, uint _required) {\\n        //Set the trusted forwarder\\n        _setTrustedForwarder(forwarder);\\n\\n        //We will pass multiple owners & set a particular requirement number of apporvals needed\\n        require(_owners.length > 0, \\\"Owners Required\\\");\\n        require(_required > 0 && _required <= _owners.length, \\\"Invalid required number of owners\\\");\\n\\n        for (uint i; i < _owners.length; i++) {\\n            address owner = _owners[i];\\n            require(owner != address(0), \\\"invalid owner\\\");\\n            require(!isOwner[owner], \\\"Owner is not unique\\\");\\n\\n            isOwner[owner] = true;\\n            owners.push(owner);\\n        }\\n\\n        required = _required;\\n    }\\n\\n    string public versionRecipient = \\\"3.0.0\\\";\\n\\n    // Request for Registration as Prosumer\\n\\n    /**Unverified User Function***/\\n\\n    //Internal Function\\n    function isRequested() private view returns (bool) {\\n        for (uint256 i = 0; i < unApprovedProsumers.length; i++) {\\n            if (msg.sender == unApprovedProsumers[i]._address) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    //-->1. Register as Prosumer\\n    function req_Registration(uint256 _aadharNo) public payable {\\n        require(!isOwner[msg.sender], \\\"You are an Owner\\\");\\n        require(msg.value >= regFee, \\\"Registration Failed, Insufficient Fee\\\");\\n        require(!isProsumer[msg.sender], \\\"You are already a Prosumer in the Network\\\");\\n        require(!isRequested(), \\\"You have already requested for Registration\\\");\\n\\n        uint256 digitCheck = _aadharNo;\\n        uint256 digits = 0;\\n\\n        while (digitCheck != 0) {\\n            digitCheck /= 10;\\n            digits++;\\n        }\\n\\n        require(digits == 12, \\\"Enter a 12 digit Aadhar No.\\\");\\n\\n        //Create a prosumer object\\n        prosumer memory _prosumer = prosumer({\\n            _prosumerID: 0,\\n            _address: msg.sender,\\n            _aadharId: _aadharNo,\\n            _approved: false,\\n            _suspended: false,\\n            _energyUnitPriceUSD: 0,\\n            _energyUnitPriceMatic: 0,\\n            _stakedEnergyBalance: 0\\n        });\\n\\n        //Push the prosumer object to unApprovedProsumerArray\\n        unApprovedProsumers.push(_prosumer);\\n    }\\n\\n    function raiseComplain(uint256 _prosumerId, string memory _complainBody) public {\\n        require(isProsumer[_msgSender()], \\\"You not a Prosumer\\\");\\n        require(isProsumer[prosumerAddress[_prosumerId]], \\\"Accused not a Prosumer\\\");\\n        require(\\n            !suspended[prosumerAddress[_prosumerId]][_msgSender()],\\n            \\\"Accused Prosumer is Suspended\\\"\\n        );\\n        require(!suspended[_msgSender()][prosumerAddress[_prosumerId]], \\\"You are Suspended\\\");\\n        require(\\n            !disapproved[prosumerAddress[_prosumerId]][_msgSender()],\\n            \\\"Prosumer is Disapproved\\\"\\n        );\\n        require(!disapproved[_msgSender()][prosumerAddress[_prosumerId]], \\\"You are Disapproved\\\");\\n\\n        Complain memory _complain = Complain({\\n            _complainID: complains.length + 1,\\n            _complainant: prosumerID[_msgSender()],\\n            _accused: _prosumerId,\\n            _complain: _complainBody,\\n            _resolved: false\\n        });\\n\\n        if (complains.length < maxComplains) {\\n            complains.push(_complain);\\n        } else {\\n            complains[complainCount % maxComplains] = _complain;\\n        }\\n\\n        if (complainCount < maxComplains) {\\n            complainCount++;\\n        }\\n    }\\n\\n    /***************Owner Functions***********************/\\n\\n    //--> 1. Set Registration Fee\\n\\n    function setRegFee(uint256 _regFee) public onlyOwner {\\n        regFee = _regFee;\\n    }\\n\\n    //--> 2. Verify Details of Unapproved Prosumer\\n\\n    //-->2.1 Internal Function\\n\\n    function deleteElementFrom_UnApprovedProsumers(\\n        uint256 _unApprovedProsumerID\\n    ) private onlyOwner {\\n        require(\\n            _unApprovedProsumerID < unApprovedProsumers.length,\\n            \\\"Invalid unapprovedProsumer Index\\\"\\n        );\\n\\n        for (uint256 i = _unApprovedProsumerID; i < unApprovedProsumers.length - 1; i++) {\\n            unApprovedProsumers[i] = unApprovedProsumers[i + 1];\\n        }\\n        unApprovedProsumers.pop();\\n    }\\n\\n    /*-----------------------------------------------------------------------------------------------*/\\n\\n    //-->2.2 Show all Approved or Unapproved Prosumer\\n\\n    function show_Unapproved_Prosumers() public view onlyOwner returns (prosumer[] memory) {\\n        return unApprovedProsumers;\\n    }\\n\\n    function show_Approved_Prosumers() public view returns (prosumer[] memory) {\\n        //Public Function anybody can call\\n        return ApprovedProsumers;\\n    }\\n\\n    //-->2.3 Approval Status [Owner Specific]\\n\\n    function showApprovalStatus_OwnerSpecific(\\n        address _unapprovedProsumerAddress\\n    ) public view onlyOwner returns (string memory) {\\n        if (approved[_unapprovedProsumerAddress][_msgSender()]) {\\n            return (\\\"Prosumer Approved\\\");\\n        } else if (disapproved[_unapprovedProsumerAddress][_msgSender()]) {\\n            return (\\\"Prosumer Disapproved\\\");\\n        } else {\\n            return (\\\"Prosumer Not Verified Yet\\\");\\n        }\\n    }\\n\\n    /*** Admission of Prosumer ***/\\n\\n    //--> 3. Approve Prosumer\\n\\n    function approveProsumer_OwnerSpecific(uint256 _unApprovedProsumerID) public onlyOwner {\\n        require(\\n            _unApprovedProsumerID < unApprovedProsumers.length,\\n            \\\"Invalid Unapproved Prosumer ID\\\"\\n        );\\n        require(\\n            approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] == false,\\n            \\\"Prosumer Already approved by you\\\"\\n        );\\n\\n        approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = true;\\n\\n        //If disapproved earlier then wants to approve\\n        if (disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()]) {\\n            disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = false;\\n            disapprovalCount[unApprovedProsumers[_unApprovedProsumerID]._address]--;\\n        }\\n\\n        uint256 getApprovalCount = approvalCount[\\n            unApprovedProsumers[_unApprovedProsumerID]._address\\n        ]++;\\n\\n        //check if approval > required\\n        if (getApprovalCount > required) {\\n            //if yes then remove him from unapprove array and add him to approved prosumer array\\n            unApprovedProsumers[_unApprovedProsumerID]._approved = true; //Set approved Flag = true\\n            unApprovedProsumers[_unApprovedProsumerID]._prosumerID = ApprovedProsumers.length + 1; //Set Prosumer ID\\n            isProsumer[unApprovedProsumers[_unApprovedProsumerID]._address] = true;\\n            ApprovedProsumers.push(unApprovedProsumers[_unApprovedProsumerID]);\\n            deleteElementFrom_UnApprovedProsumers(_unApprovedProsumerID);\\n\\n            /*Store the prosumers in the Maps*/\\n            prosumerAddress[ApprovedProsumers.length] = ApprovedProsumers[\\n                ApprovedProsumers.length - 1\\n            ]._address;\\n            prosumerID[ApprovedProsumers[ApprovedProsumers.length - 1]._address] = ApprovedProsumers\\n                .length;\\n        }\\n    }\\n\\n    //--> 4. Disapprove Prosumer\\n    function DisApproveProsumer_OwnerSpecific(uint256 _unApprovedProsumerID) public onlyOwner {\\n        require(\\n            _unApprovedProsumerID < unApprovedProsumers.length,\\n            \\\"Invalid Unapproved Prosumer ID\\\"\\n        );\\n        require(\\n            disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] == false,\\n            \\\"Prosumer Already disapproved by you\\\"\\n        );\\n\\n        disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = true;\\n\\n        //If approved earlier then disapprove\\n        if (disapproved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()]) {\\n            approved[unApprovedProsumers[_unApprovedProsumerID]._address][_msgSender()] = false;\\n            approvalCount[unApprovedProsumers[_unApprovedProsumerID]._address]--;\\n        }\\n\\n        uint256 getDisApprovalCount = disapprovalCount[\\n            unApprovedProsumers[_unApprovedProsumerID]._address\\n        ]++;\\n\\n        //check if disapproval > required\\n        if (getDisApprovalCount > required) {\\n            //if yes then remove him from unapprove array & don't store in approved array\\n            deleteElementFrom_UnApprovedProsumers(_unApprovedProsumerID);\\n            delete disapprovalCount[unApprovedProsumers[_unApprovedProsumerID]._address];\\n            delete approvalCount[unApprovedProsumers[_unApprovedProsumerID]._address];\\n        }\\n    }\\n\\n    /*** Suspension of Prosumer ***/\\n\\n    //--> 5. Suspend Prosumer\\n    function suspendProsumer(uint256 _prosumerId, uint256 _complainId) public onlyOwner {\\n        address getProsumerAddress = prosumerAddress[_prosumerId];\\n        require(isProsumer[getProsumerAddress], \\\"Not a Prosumer\\\");\\n        require(!suspended[getProsumerAddress][_msgSender()], \\\"Already Suspended\\\");\\n\\n        suspended[getProsumerAddress][_msgSender()] = true;\\n\\n        //If unsuspended earlier then suspend\\n        if (unSuspended[getProsumerAddress][_msgSender()]) {\\n            unSuspended[getProsumerAddress][_msgSender()] = false;\\n            unSuspensionCount[getProsumerAddress]--;\\n        }\\n\\n        uint256 getSuspensionCount = suspensionCount[getProsumerAddress]++;\\n\\n        //check if suspension > required\\n        if (getSuspensionCount > required) {\\n            //if yes then remove him from unapprove array & don't store in approved array\\n            delete suspensionCount[getProsumerAddress];\\n            ApprovedProsumers[_prosumerId - 1]._suspended = true;\\n            complains[_complainId - 1]._resolved = true;\\n        }\\n    }\\n\\n    //--> 6. Unsuspend Prosumer\\n    function unSuspendProsumer(uint256 _prosumerId, uint256 _complainId) public onlyOwner {\\n        require(isProsumer[prosumerAddress[_prosumerId]], \\\"Not a Prosumer\\\");\\n        require(!unSuspended[prosumerAddress[_prosumerId]][_msgSender()], \\\"Already Unsuspended\\\");\\n\\n        address prosumerToUnsuspend = prosumerAddress[_prosumerId];\\n\\n        unSuspended[prosumerToUnsuspend][_msgSender()] = true;\\n\\n        // If suspended earlier then unsuspend\\n        if (suspended[prosumerToUnsuspend][_msgSender()]) {\\n            suspended[prosumerToUnsuspend][_msgSender()] = false;\\n            suspensionCount[prosumerToUnsuspend]--;\\n        }\\n\\n        uint256 getUnSuspensionCount = unSuspensionCount[prosumerToUnsuspend]++;\\n\\n        // Check if unsuspension > required\\n        if (getUnSuspensionCount > required) {\\n            // If yes, then remove him from unapprove array & don't store in the approved array\\n            delete unSuspensionCount[prosumerToUnsuspend];\\n            delete suspensionCount[prosumerToUnsuspend];\\n            ApprovedProsumers[_prosumerId - 1]._suspended = false;\\n            complains[_complainId - 1]._resolved = true;\\n        }\\n    }\\n\\n    //-->6.3. Witdhraw Funds (Pending , send funds equally to all prosumer)  //Can only be called when Transaction array will be zero.\\n    function withdrawFees() public onlyOwner {\\n        uint256 euqiBalance = address(this).balance / owners.length;\\n\\n        for (uint256 i = 0; i < owners.length; i++) {\\n            (bool callSuccess, ) = payable(owners[i]).call{value: euqiBalance}(\\\"\\\");\\n            require(callSuccess, \\\"Call Failed\\\");\\n        }\\n    }\\n\\n    //6.4. Transfer Ownership\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        for (uint256 i = 0; i < owners.length; i++) {\\n            if (owners[i] == _msgSender()) {\\n                owners[i] = newOwner;\\n                break;\\n            }\\n        }\\n    }\\n\\n    modifier onlyOwner() {\\n        require(isOwner[_msgSender()], \\\"Not Owner\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x85e42e2abe8aa319279b7d159eb374af7eb76b8ed595a66bc2e9cca12ab3987a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":451,"contract":"contracts/MultiSig.sol:MultiSig","label":"_trustedForwarder","offset":0,"slot":"0","type":"t_address"},{"astId":3782,"contract":"contracts/MultiSig.sol:MultiSig","label":"required","offset":0,"slot":"1","type":"t_uint256"},{"astId":3784,"contract":"contracts/MultiSig.sol:MultiSig","label":"regFee","offset":0,"slot":"2","type":"t_uint256"},{"astId":3787,"contract":"contracts/MultiSig.sol:MultiSig","label":"owners","offset":0,"slot":"3","type":"t_array(t_address)dyn_storage"},{"astId":3791,"contract":"contracts/MultiSig.sol:MultiSig","label":"isOwner","offset":0,"slot":"4","type":"t_mapping(t_address,t_bool)"},{"astId":3797,"contract":"contracts/MultiSig.sol:MultiSig","label":"approved","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3803,"contract":"contracts/MultiSig.sol:MultiSig","label":"disapproved","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3809,"contract":"contracts/MultiSig.sol:MultiSig","label":"suspended","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3815,"contract":"contracts/MultiSig.sol:MultiSig","label":"unSuspended","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3836,"contract":"contracts/MultiSig.sol:MultiSig","label":"ApprovedProsumers","offset":0,"slot":"9","type":"t_array(t_struct(prosumer)3832_storage)dyn_storage"},{"astId":3840,"contract":"contracts/MultiSig.sol:MultiSig","label":"unApprovedProsumers","offset":0,"slot":"10","type":"t_array(t_struct(prosumer)3832_storage)dyn_storage"},{"astId":3844,"contract":"contracts/MultiSig.sol:MultiSig","label":"isProsumer","offset":0,"slot":"11","type":"t_mapping(t_address,t_bool)"},{"astId":3848,"contract":"contracts/MultiSig.sol:MultiSig","label":"prosumerAddress","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_address)"},{"astId":3852,"contract":"contracts/MultiSig.sol:MultiSig","label":"prosumerID","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"},{"astId":3856,"contract":"contracts/MultiSig.sol:MultiSig","label":"approvalCount","offset":0,"slot":"14","type":"t_mapping(t_address,t_uint256)"},{"astId":3860,"contract":"contracts/MultiSig.sol:MultiSig","label":"disapprovalCount","offset":0,"slot":"15","type":"t_mapping(t_address,t_uint256)"},{"astId":3864,"contract":"contracts/MultiSig.sol:MultiSig","label":"suspensionCount","offset":0,"slot":"16","type":"t_mapping(t_address,t_uint256)"},{"astId":3868,"contract":"contracts/MultiSig.sol:MultiSig","label":"unSuspensionCount","offset":0,"slot":"17","type":"t_mapping(t_address,t_uint256)"},{"astId":3881,"contract":"contracts/MultiSig.sol:MultiSig","label":"complainCount","offset":0,"slot":"18","type":"t_uint256"},{"astId":3884,"contract":"contracts/MultiSig.sol:MultiSig","label":"maxComplains","offset":0,"slot":"19","type":"t_uint256"},{"astId":3888,"contract":"contracts/MultiSig.sol:MultiSig","label":"complains","offset":0,"slot":"20","type":"t_array(t_struct(Complain)3879_storage)dyn_storage"},{"astId":3978,"contract":"contracts/MultiSig.sol:MultiSig","label":"versionRecipient","offset":0,"slot":"21","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(Complain)3879_storage)dyn_storage":{"base":"t_struct(Complain)3879_storage","encoding":"dynamic_array","label":"struct MultiSig.Complain[]","numberOfBytes":"32"},"t_array(t_struct(prosumer)3832_storage)dyn_storage":{"base":"t_struct(prosumer)3832_storage","encoding":"dynamic_array","label":"struct MultiSig.prosumer[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Complain)3879_storage":{"encoding":"inplace","label":"struct MultiSig.Complain","members":[{"astId":3870,"contract":"contracts/MultiSig.sol:MultiSig","label":"_complainID","offset":0,"slot":"0","type":"t_uint256"},{"astId":3872,"contract":"contracts/MultiSig.sol:MultiSig","label":"_complainant","offset":0,"slot":"1","type":"t_uint256"},{"astId":3874,"contract":"contracts/MultiSig.sol:MultiSig","label":"_accused","offset":0,"slot":"2","type":"t_uint256"},{"astId":3876,"contract":"contracts/MultiSig.sol:MultiSig","label":"_complain","offset":0,"slot":"3","type":"t_string_storage"},{"astId":3878,"contract":"contracts/MultiSig.sol:MultiSig","label":"_resolved","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_struct(prosumer)3832_storage":{"encoding":"inplace","label":"struct MultiSig.prosumer","members":[{"astId":3817,"contract":"contracts/MultiSig.sol:MultiSig","label":"_prosumerID","offset":0,"slot":"0","type":"t_uint256"},{"astId":3819,"contract":"contracts/MultiSig.sol:MultiSig","label":"_address","offset":0,"slot":"1","type":"t_address"},{"astId":3821,"contract":"contracts/MultiSig.sol:MultiSig","label":"_aadharId","offset":0,"slot":"2","type":"t_uint256"},{"astId":3823,"contract":"contracts/MultiSig.sol:MultiSig","label":"_approved","offset":0,"slot":"3","type":"t_bool"},{"astId":3825,"contract":"contracts/MultiSig.sol:MultiSig","label":"_suspended","offset":1,"slot":"3","type":"t_bool"},{"astId":3827,"contract":"contracts/MultiSig.sol:MultiSig","label":"_energyUnitPriceUSD","offset":0,"slot":"4","type":"t_uint256"},{"astId":3829,"contract":"contracts/MultiSig.sol:MultiSig","label":"_energyUnitPriceMatic","offset":0,"slot":"5","type":"t_uint256"},{"astId":3831,"contract":"contracts/MultiSig.sol:MultiSig","label":"_stakedEnergyBalance","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"getTrustedForwarder()":{"notice":":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."},"isTrustedForwarder(address)":{"notice":":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."}},"version":1}}},"contracts/PriceConverter.sol":{"PriceConverter":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_4923":{"entryPoint":null,"id":4923,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b03191673d0d5e3db44de05e9f294bb0a3beeaf030de24ada17905561019d806100466000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004a565b60405190815260200160405180910390f35b60008054604080517ffeaf968c0000000000000000000000000000000000000000000000000000000081529051839273ffffffffffffffffffffffffffffffffffffffff169163feaf968c9160048083019260a0929190829003018186803b1580156100b557600080fd5b505afa1580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed9190610117565b509195945050505050565b805169ffffffffffffffffffff8116811461011257600080fd5b919050565b600080600080600060a0868803121561012f57600080fd5b610138866100f8565b945060208601519350604086015192506060860151915061015b608087016100f8565b9050929550929590935056fea2646970667358221220c2ebac61d862c534615a497a9e4bdfc967f31076ec7c1f733df452ee0091536764736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xD0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA OR SWAP1 SSTORE PUSH2 0x19D DUP1 PUSH2 0x46 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x117 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 DUP7 PUSH2 0xF8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x15B PUSH1 0x80 DUP8 ADD PUSH2 0xF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xEB 0xAC PUSH2 0xD862 0xC5 CALLVALUE PUSH2 0x5A49 PUSH27 0x9E4BDFC967F31076EC7C1F733DF452EE0091536764736F6C634300 ADDMOD ADDMOD STOP CALLER ","sourceMap":"140:683:25:-:0;;;360:110;;;;;;;;;-1:-1:-1;385:9:25;:77;;-1:-1:-1;;;;;;385:77:25;419:42;385:77;;;140:683;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getLatestPrice_4938":{"entryPoint":74,"id":4938,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":279,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint80_fromMemory":{"entryPoint":248,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:853:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"113:76:27","statements":[{"nodeType":"YulAssignment","src":"123:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"135:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"146:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"131:3:27"},"nodeType":"YulFunctionCall","src":"131:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"123:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"165:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"176:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"158:6:27"},"nodeType":"YulFunctionCall","src":"158:25:27"},"nodeType":"YulExpressionStatement","src":"158:25:27"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"82:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"93:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"104:4:27","type":""}],"src":"14:175:27"},{"body":{"nodeType":"YulBlock","src":"253:120:27","statements":[{"nodeType":"YulAssignment","src":"263:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"278:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"272:5:27"},"nodeType":"YulFunctionCall","src":"272:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"263:5:27"}]},{"body":{"nodeType":"YulBlock","src":"351:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"360:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"353:6:27"},"nodeType":"YulFunctionCall","src":"353:12:27"},"nodeType":"YulExpressionStatement","src":"353:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"307:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"318:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"325:22:27","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"314:3:27"},"nodeType":"YulFunctionCall","src":"314:34:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"304:2:27"},"nodeType":"YulFunctionCall","src":"304:45:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"297:6:27"},"nodeType":"YulFunctionCall","src":"297:53:27"},"nodeType":"YulIf","src":"294:73:27"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"232:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"243:5:27","type":""}],"src":"194:179:27"},{"body":{"nodeType":"YulBlock","src":"524:327:27","statements":[{"body":{"nodeType":"YulBlock","src":"571:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"580:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"583:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"573:6:27"},"nodeType":"YulFunctionCall","src":"573:12:27"},"nodeType":"YulExpressionStatement","src":"573:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"545:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"554:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"541:3:27"},"nodeType":"YulFunctionCall","src":"541:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"566:3:27","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"537:3:27"},"nodeType":"YulFunctionCall","src":"537:33:27"},"nodeType":"YulIf","src":"534:53:27"},{"nodeType":"YulAssignment","src":"596:49:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"606:28:27"},"nodeType":"YulFunctionCall","src":"606:39:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"596:6:27"}]},{"nodeType":"YulAssignment","src":"654:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"674:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"685:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"670:3:27"},"nodeType":"YulFunctionCall","src":"670:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"664:5:27"},"nodeType":"YulFunctionCall","src":"664:25:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"654:6:27"}]},{"nodeType":"YulAssignment","src":"698:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"729:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:27"},"nodeType":"YulFunctionCall","src":"714:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"708:5:27"},"nodeType":"YulFunctionCall","src":"708:25:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"698:6:27"}]},{"nodeType":"YulAssignment","src":"742:35:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"773:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:27"},"nodeType":"YulFunctionCall","src":"758:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"752:5:27"},"nodeType":"YulFunctionCall","src":"752:25:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"742:6:27"}]},{"nodeType":"YulAssignment","src":"786:59:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"829:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"840:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"825:3:27"},"nodeType":"YulFunctionCall","src":"825:19:27"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"796:28:27"},"nodeType":"YulFunctionCall","src":"796:49:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"786:6:27"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"458:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"469:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"481:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"489:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"497:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"505:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"513:6:27","type":""}],"src":"378:473:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004a565b60405190815260200160405180910390f35b60008054604080517ffeaf968c0000000000000000000000000000000000000000000000000000000081529051839273ffffffffffffffffffffffffffffffffffffffff169163feaf968c9160048083019260a0929190829003018186803b1580156100b557600080fd5b505afa1580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed9190610117565b509195945050505050565b805169ffffffffffffffffffff8116811461011257600080fd5b919050565b600080600080600060a0868803121561012f57600080fd5b610138866100f8565b945060208601519350604086015192506060860151915061015b608087016100f8565b9050929550929590935056fea2646970667358221220c2ebac61d862c534615a497a9e4bdfc967f31076ec7c1f733df452ee0091536764736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFEAF968C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x117 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 DUP7 PUSH2 0xF8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x15B PUSH1 0x80 DUP8 ADD PUSH2 0xF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xEB 0xAC PUSH2 0xD862 0xC5 CALLVALUE PUSH2 0x5A49 PUSH27 0x9E4BDFC967F31076EC7C1F733DF452EE0091536764736F6C634300 ADDMOD ADDMOD STOP CALLER ","sourceMap":"140:683:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:291;;;:::i;:::-;;;158:25:27;;;146:2;131:18;529:291:25;;;;;;;;576:3;762:9;;:27;;;;;;;;576:3;;762:9;;;:25;;:27;;;;;;;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;592:197:25;;529:291;-1:-1:-1;;;;;529:291:25:o;194:179:27:-;272:13;;325:22;314:34;;304:45;;294:73;;363:1;360;353:12;294:73;194:179;;;:::o;378:473::-;481:6;489;497;505;513;566:3;554:9;545:7;541:23;537:33;534:53;;;583:1;580;573:12;534:53;606:39;635:9;606:39;:::i;:::-;596:49;;685:2;674:9;670:18;664:25;654:35;;729:2;718:9;714:18;708:25;698:35;;773:2;762:9;758:18;752:25;742:35;;796:49;840:3;829:9;825:19;796:49;:::i;:::-;786:59;;378:473;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"82600","executionCost":"24365","totalCost":"106965"},"external":{"getLatestPrice()":"infinite"}},"methodIdentifiers":{"getLatestPrice()":"8e15f473"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Network: Polygon Mumbai Aggregator: MATIC/USD Address: 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada\"},\"getLatestPrice()\":{\"notice\":\"Returns the latest price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceConverter.sol\":\"PriceConverter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract PriceConverter {\\r\\n    AggregatorV3Interface internal priceFeed;\\r\\n\\r\\n    /**\\r\\n     * Network: Polygon Mumbai\\r\\n     * Aggregator: MATIC/USD\\r\\n     * Address: 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada\\r\\n     */\\r\\n    constructor() {\\r\\n        priceFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the latest price\\r\\n     */\\r\\n    function getLatestPrice() public view returns (int) {\\r\\n        (\\r\\n            ,\\r\\n            /*uint80 roundID*/ int price /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/,\\r\\n            ,\\r\\n            ,\\r\\n\\r\\n        ) = priceFeed.latestRoundData();\\r\\n        return price;\\r\\n    }\\r\\n}\\r\\n\\r\\n// $ 1.14973259\\r\\n\",\"keccak256\":\"0x09d0ff105733ae98f85fd50568b9b9e97de5d6bfa3f67d5f44047cb18a5c2515\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4912,"contract":"contracts/PriceConverter.sol:PriceConverter","label":"priceFeed","offset":0,"slot":"0","type":"t_contract(AggregatorV3Interface)45"}],"types":{"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Network: Polygon Mumbai Aggregator: MATIC/USD Address: 0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"},"getLatestPrice()":{"notice":"Returns the latest price"}},"version":1}}}}}}